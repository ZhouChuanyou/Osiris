#include "Functions.h"

#include <petscsnes.h>
#include <petscsys.h>
#include <mpi.h>
#include <cstdlib>



PetscErrorCode IteratorFunction(Vec Petsc_x, Vec Petsc_f, AppCtx *actx) {



#pragma region Defs
	int Ix, Iy, Iz;
	FType Al, Bl, Zl, Zg, Ag, Bg;
	FType tl, tg, d1, d2, t1l, t1g;
	FType Cal, Cbl, Cag, Cbg;
	FType phiL, phiG;
	FType DDl, DDg, EEl, EEg, FFl, FFg, DeltaX, dCoefl, dCoefg, fporpor;
		
	register int i, j;
	int BNo, BLNo, BENo;	//Block N.O.
	int CSRrowIndex;
	FType LSide, RSide, S1, SSw, SSo, SSg, Vb, porpor, Re;

	FType Surat, Makhraj;
	FType tempdx;

	FType tempSQR;
	FType Sxl, Sxg;
	int jacCol;
	FType PIw, PIo, PIg;
	FType S2, SSo1, QoP;
	FType gComp, oComp;
	int iWell;
	FType Mporpor;
	//static int tss = 0;
	//FType relPermO;
	
	FType porpor2, DupStream, DTran;
	char Coef;
	FType MMd, NNd, AAd, BBd, Pwf;
		
	int FracEq;
	FType iOF, iGF, iOD, iGD, iOV, iGV;


	//int MPIIndex;
	int itemp1;
	FType simTime;
	PetscErrorCode ierr;
	PetscScalar *LocalX, *LocalF;
	bool IsFracture;


	simTime = actx->SimulationTime;

	for (i = 1; i < (2 * Nx*Ny*Nz); i++) if ((actx->GlobalIndex) < preConRow[i]) break;
	BNo = i - 1;
	BENo = actx->GlobalIndex - preConRow[BNo];
	if (BNo >= (Nx*Ny*Nz)) {
		BNo -= Nx * Ny*Nz;
		IsFracture = true;
	}
	else IsFracture = false;
	

	Iz = BNo / (Nx*Ny);
	itemp1 = BNo % (Nx*Ny);
	Iy = itemp1 / Nx;
	Ix = itemp1 % Nx;

#ifndef USE_MKL_SOLVER
	ierr = VecGetArrayRead(Petsc_x, (const PetscScalar **)(&LocalX));
	//ierr = VecGetArray(Petsc_x, &LocalX);
	CHKERRQ(ierr);
	ierr = VecGetArray(Petsc_f, &LocalF);
	CHKERRQ(ierr);
#endif
	
	




	//BNo = Iz * (Nx*Ny) + Iy * Nx + Ix;
	BLNo = BNo * (2 * Nc + 4);
	//jacIndex = pJHolder[Ix][Iy][Iz];
	//CSRrowIndex=BLNo;
	CSRrowIndex = preConRow[Iz*(Nx*Ny) + Iy * Nx + Ix];
	jacCol = CSRrowIndex;
	FracEq = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + Iy * Nx + Ix];
	if ((ZERO_DIFF) && (ZERO_CONV) && (ShapeFactor_1(Ix, Iy, Iz)) && (ShapeFactor_3(Ix, Iy, Iz)) && (fphaseStat[Ix][Iy][Iz]!=phaseStat[Ix][Iy][Iz])) Equilibrium_Concentrations(Ix, Iy, Iz);
	for (i = 0; i < Nc; i++) {
		EdgeComp[i][0] = 0;			
		EdgeComp[i][1] = 0;
	}

	
#pragma  endregion
	if (IsFracture) {
		switch (fphaseStat[Ix][Iy][Iz]) {
		case 1:
			if (BENo < (Nc + 1)) {
#pragma region sadeq

				
				Mporpor = porosity[Ix][Iy][Iz] * (1 + cpor * (P[Ix + 1][Iy + 1][Iz + 1][1] - refP) + dcpor * (P[Ix + 1][Iy + 1][Iz + 1][1] - refP)*(P[Ix + 1][Iy + 1][Iz + 1][1] - refP));
				
				if (P[Ix + 1][Iy + 1][Iz + 1][1] >= fP[Ix + 1][Iy + 1][Iz + 1][1])
				{
					f_m_relperm[1] = relPerm[Ix][Iy][Iz][1];//oil relperm between matrix and fracture
					f_m_drelperm[1][1] = dRelPerm[Ix][Iy][Iz][1];//dkrodsw
					f_m_drelperm[1][2] = dRelPerm[Ix][Iy][Iz][2];//dkrodsg
					f_m_drelperm[1][4] = dRelPerm[Ix][Iy][Iz][4];//dkrodso

					f_m_drelperm[1][9] = 0;
					f_m_drelperm[1][7] = 0;
					f_m_drelperm[1][6] = 0;
				}
				else
				{
					f_m_relperm[1] = frelPerm[Ix][Iy][Iz][1];
					f_m_drelperm[1][6] = fdRelPerm[Ix][Iy][Iz][1];//fdkrofdsw
					f_m_drelperm[1][7] = fdRelPerm[Ix][Iy][Iz][2];//fdkrofdsg
					f_m_drelperm[1][9] = fdRelPerm[Ix][Iy][Iz][4];//fdkrofdso

					f_m_drelperm[1][4] = 0;
					f_m_drelperm[1][2] = 0;
					f_m_drelperm[1][1] = 0;
				}
				if (P[Ix + 1][Iy + 1][Iz + 1][2] >= fP[Ix + 1][Iy + 1][Iz + 1][2])
				{
					f_m_relperm[2] = relPerm[Ix][Iy][Iz][2];//gas relperm between matrix and fracture
					f_m_drelperm[2][3] = dRelPerm[Ix][Iy][Iz][3];//dkrgdsg

					f_m_drelperm[2][8] = 0;
				}
				else
				{
					f_m_relperm[2] = frelPerm[Ix][Iy][Iz][2];
					f_m_drelperm[2][8] = fdRelPerm[Ix][Iy][Iz][3];//fdkrgfdsg

					f_m_drelperm[2][3] = 0;
				}

				if (P[Ix + 1][Iy + 1][Iz + 1][0] >= fP[Ix + 1][Iy + 1][Iz + 1][0])
				{
					f_m_relperm[0] = relPerm[Ix][Iy][Iz][0];
					f_m_drelperm[1][0] = dRelPerm[Ix][Iy][Iz][0];//dkrwdsw

					f_m_drelperm[1][5] = 0;
				}
				else
				{
					f_m_relperm[0] = frelPerm[Ix][Iy][Iz][0];//water relperm between matrix and fracture
					f_m_drelperm[1][5] = fdRelPerm[Ix][Iy][Iz][0];//fdkrwfdsw

					f_m_drelperm[1][0] = 0;
				}
#pragma endregion

#pragma region Wells&Commons For Fracture 
				porpor = fporosity[Ix][Iy][Iz] * (1 + cpor * (fP[Ix + 1][Iy + 1][Iz + 1][1] - refP) + dcpor * (fP[Ix + 1][Iy + 1][Iz + 1][1] - refP)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - refP));
				




				Qw = 0;
				Qo = 0;
				Qg = 0;

				PIw = 0;
				PIo = 0;
				PIg = 0;

				Vb = gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz];

				iWell = -1;
				for (i = 0; i < wellNO; i++) {
					if ((Ix == welli[i][1]) && (Iy == welli[i][2]) && (Iz >= welli[i][3]) && (Iz <= welli[i][4])) {
						//Re = Calc_Re(Ix, Iy, Iz, i);
						Re = Re_f;
						if (welli[i][0] == 0) BMethQF = 1;
						if ((welli[i][0] == 0) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {
							//if ((welli[i][0] == 0) && ((fabs(simTime - wellf[i][4]) <= TSTEPIF) && (fabs(simTime - wellf[i][5]) <= TSTEPIF))) {		//Constant Pwf Pressure - Production

							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][1] * fperm[Ix][Iy][Iz][0]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);

							PIw = S1 * watRo*WAT_M_RO*frelPerm[Ix][Iy][Iz][0] / watMu;
							PIo = S1 * fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / fblockFProps[Ix][Iy][Iz][BMU][0];
							PIg = S1 * fblockFProps[Ix][Iy][Iz][RO][1] * frelPerm[Ix][Iy][Iz][2] / fblockFProps[Ix][Iy][Iz][BMU][1];

							Qw = PIw * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][0]);
							Qo = PIo * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
							Qg = PIg * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

							

							/*if ((wellf[i][1]) && ((-Qo) > wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								SSo1 = 0;
								for (j = welli[i][3]; j <= welli[i][4]; j++) {
									S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
									SSo1 += fblockFProps[Ix][Iy][j][RO][0] * S2*frelPerm[Ix][Iy][j][1] / fblockFProps[Ix][Iy][Iz][BMU][0];
									S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
									SSo1 += blockFProps[Ix][Iy][j][RO][0] * S2*relPerm[Ix][Iy][j][1] / blockFProps[Ix][Iy][Iz][BMU][0];
								}
								S1 = gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][0] * fperm[Ix][Iy][Iz][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);

								if (SSo1) {
									if (SURFACE_RATES) Qo = -S1 * oilRateCh(Ix, Iy, Iz, frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fblockFProps[Ix][Iy][Iz][BMU][0] / (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fblockFProps[Ix][Iy][Iz][BMU][1]))*wellf[i][1] * fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / (fblockFProps[Ix][Iy][Iz][BMU][0] * SSo1);
									else Qo = -S1 * wellf[i][1] * fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / (fblockFProps[Ix][Iy][Iz][BMU][0] * SSo1);
								}
								Qw = Qo * frelPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*fblockFProps[Ix][Iy][Iz][BMU][0] / (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * watMu);
								Qg = Qo * frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fblockFProps[Ix][Iy][Iz][BMU][0] / (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fblockFProps[Ix][Iy][Iz][BMU][1]);

							}*/

							if (fP[Ix + 1][Iy + 1][Iz + 1][1] < WELL_MIN_P) {
								Qw = 0;
								Qo = 0;
								Qg = 0;

								PIw = 0;
								PIo = 0;
								PIg = 0;
							}
							else if ((wellf[i][1]) && ((-Qo) > wellf[i][1])) {
								Qo = -wellf[i][1];
								Qw = Qo * frelPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*fblockFProps[Ix][Iy][Iz][BMU][0] / (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * watMu);
								Qg = Qo * frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fblockFProps[Ix][Iy][Iz][BMU][0] / (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fblockFProps[Ix][Iy][Iz][BMU][1]);
								PIw = 0;
								PIo = 0;
								PIg = 0;
							}
							if ((Qw > 0) || ((Qw - Qw) != 0)) {
								Qw = 0;
								PIw = 0;
							}
							if ((Qo > 0) || ((Qo - Qo) != 0)) {
								Qo = 0;
								PIo = 0;
							}
							if ((Qg > 0) || ((Qg - Qg) != 0)) {
								Qg = 0;
								PIg = 0;
							}

							QoProduced = Qo;
							Qoprod += Qo + Qg;
							//Qoprod = Qo*(1 - fcomp[Ix][Iy][Iz][0][0])+ Qg*(1 - fcomp[Ix][Iy][Iz][0][1]);
							MethQM += Qo * (1 - fcomp[Ix][Iy][Iz][0][0]) + Qg * (1 - fcomp[Ix][Iy][Iz][0][1]);
							
							WellCompSadeq[0] += Qo * (fcomp[Ix][Iy][Iz][0][0]) + Qg * (fcomp[Ix][Iy][Iz][0][1]);
							WellCompSadeq[1] += Qo * (fcomp[Ix][Iy][Iz][1][0]) + Qg * (fcomp[Ix][Iy][Iz][1][1]);
							WellCompSadeq[2] += Qo * (fcomp[Ix][Iy][Iz][2][0]) + Qg * (fcomp[Ix][Iy][Iz][2][1]);
							WellCompSadeq2[0] += (Qo*(fcomp[Ix][Iy][Iz][0][0]) + Qg * (fcomp[Ix][Iy][Iz][0][1]));
							WellCompSadeq2[1] += (Qo*(fcomp[Ix][Iy][Iz][1][0]) + Qg * (fcomp[Ix][Iy][Iz][1][1]));
							WellCompSadeq2[2] += (Qo*(fcomp[Ix][Iy][Iz][2][0]) + Qg * (fcomp[Ix][Iy][Iz][2][1]));
						}

						else if ((welli[i][0] == 1) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {		//Constant Pwf- Gas Production
																																																					//Re = Re_f;
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][1] * fperm[Ix][Iy][Iz][0]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);

							PIw = S1 * watRo*WAT_M_RO*frelPerm[Ix][Iy][Iz][0] / watMu;
							PIo = S1 * fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / fblockFProps[Ix][Iy][Iz][BMU][0];
							PIg = S1 * fblockFProps[Ix][Iy][Iz][RO][1] * frelPerm[Ix][Iy][Iz][2] / fblockFProps[Ix][Iy][Iz][BMU][1];

							Qw = PIw * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][0]);
							Qo = PIo * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
							Qg = PIg * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

							if ((Qw > 0) || ((Qw - Qw) != 0)) {
								Qw = 0;
								PIw = 0;
							}
							if ((Qo > 0) || ((Qo - Qo) != 0)) {
								Qo = 0;
								PIo = 0;
							}
							if ((Qg > 0) || ((Qg - Qg) != 0)) {
								Qg = 0;
								PIg = 0;
							}

							if ((wellf[i][1]) && ((-Qg) > wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								SSo1 = 0;
								for (j = welli[i][3]; j <= welli[i][4]; j++) {
									S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
									SSo1 += fblockFProps[Ix][Iy][j][RO][1] * S2*frelPerm[Ix][Iy][j][2] / fblockFProps[Ix][Iy][Iz][BMU][1];
									S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
									SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][Iz][BMU][1];
								}
								S1 = gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][0] * fperm[Ix][Iy][Iz][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);

								if (SSo1) {
									if (SURFACE_RATES) Qg = -S1 * gasRateCh(Ix, Iy, Iz, (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fblockFProps[Ix][Iy][Iz][BMU][1]) / (frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fblockFProps[Ix][Iy][Iz][BMU][0]))*wellf[i][1] * fblockFProps[Ix][Iy][Iz][RO][1] * frelPerm[Ix][Iy][Iz][2] / (fblockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
									else Qg = -S1 * wellf[i][1] * fblockFProps[Ix][Iy][Iz][RO][1] * frelPerm[Ix][Iy][Iz][2] / (fblockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
								}
								Qw = Qg * frelPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*fblockFProps[Ix][Iy][Iz][BMU][1] / (frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * watMu);
								Qo = Qg * frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fblockFProps[Ix][Iy][Iz][BMU][1] / (frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fblockFProps[Ix][Iy][Iz][BMU][0]);

							}

							//QoProd=oilRateCh2(Ix, Iy, Iz, -Qo, -Qg);
							QoProduced = Qo;
						}

						else if ((welli[i][0] == 2) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {			//Constant Pwf Pressure - Water Injection
																																																						//Re = Re_f;
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][1] * fperm[Ix][Iy][Iz][0]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);

							PIw = S1 * watRo*WAT_M_RO*frelPerm[Ix][Iy][Iz][0] / watMu;
							Qw = PIw * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][0]);


							if ((Qw < 0) || ((Qw - Qw) != 0)) {
								Qw = 0;
								PIw = 0;
							}

							if ((wellf[i][1]) && (Qw > wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								SSo1 = 0;
								for (j = welli[i][3]; j <= welli[i][4]; j++) {
									S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
									SSo1 += watRo * S2*frelPerm[Ix][Iy][j][0] / watMu;
									S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
									SSo1 += watRo * S2*relPerm[Ix][Iy][j][0] / watMu;
								}
								S1 = gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][0] * fperm[Ix][Iy][Iz][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);

								if (SSo1) Qw = S1 * wellf[i][1] * watRo*WAT_M_RO * frelPerm[Ix][Iy][Iz][0] / (watMu * SSo1);
							}
						}

						else if ((welli[i][0] == 3) && (((fabs(simTime - wellf[i][Nc + 4]) <= TSTEPIF) || (fabs(simTime - wellf[i][Nc + 5]) <= TSTEPIF)) || ((simTime >= wellf[i][Nc + 4]) && (simTime <= wellf[i][Nc + 5])))) {		//Constant Pwf Pressure - Gas Injection
																																																										//Re = Re_f;

							for (j = 0; j < Nc; j++) IComp[j] = wellf[i][4 + j];
							FlashInjection(IComp, wellf[i][0], IOComp, IGComp, iOF, iGF, iOD, iGD, iOV, iGV);
							//Re = Calc_Re(Ix, Iy, Iz, i);
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][1] * fperm[Ix][Iy][Iz][0]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
							//S2 = sgt[Nsgt-1][1] / iGV;
							//S2 = relPerm[Ix][Iy][Iz][2] / blockFProps[Ix][Iy][Iz][BMU][1];

							PIg = S1 * iGD * sgt[Nsgt - 1][1] * iGF / iGV;
							Qg = PIg * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
							//PIo = S1*iOD * swt[0][2]*iOF / iOV;
							PIo = PIg * iOF / iGF;
							Qo = PIo * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

							if ((Qo < 0) || ((Qo - Qo) != 0)) {
								Qo = 0;
								PIo = 0;
							}
							if ((Qg < 0) || ((Qg - Qg) != 0)) {
								Qg = 0;
								PIg = 0;
							}

							iWell = i;

							if ((wellf[i][1]) && (Qg > wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								SSo1 = 0;
								for (j = welli[i][3]; j <= welli[i][4]; j++) {
									S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
									//SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][Iz][BMU][1];
									SSo1 += S2;
									S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
									//SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][Iz][BMU][1];
									SSo1 += S2;
								}
								S1 = gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][0] * fperm[Ix][Iy][Iz][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);

								//if (SSo1) Qg = S1*wellf[i][1] * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / (blockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
								if (SSo1) Qg = S1 * wellf[i][1] / SSo1;
								if (SSo1) Qo = Qg * iOF / iGF;
							}

							Qginj = Qg + Qo;
						}

						else if ((welli[i][0] == 4) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {		//Constant Oil Rate
							SSo1 = 0;
							for (j = welli[i][3]; j <= welli[i][4]; j++) {
								S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
								SSo1 += fblockFProps[Ix][Iy][j][RO][0] * S2*frelPerm[Ix][Iy][j][1] / fblockFProps[Ix][Iy][Iz][BMU][0];
								S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
								SSo1 += blockFProps[Ix][Iy][j][RO][0] * S2*relPerm[Ix][Iy][j][1] / blockFProps[Ix][Iy][Iz][BMU][0];
							}
							S1 = gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][0] * fperm[Ix][Iy][Iz][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);

							if (SSo1) {
								if (SURFACE_RATES) Qo = -S1 * oilRateCh(Ix, Iy, Iz, frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fblockFProps[Ix][Iy][Iz][BMU][0] / (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fblockFProps[Ix][Iy][Iz][BMU][1]))*wellf[i][0] * fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / (fblockFProps[Ix][Iy][Iz][BMU][0] * SSo1);
								else Qo = -S1 * wellf[i][0] * fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / (fblockFProps[Ix][Iy][Iz][BMU][0] * SSo1);
							}
							Qw = Qo * frelPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*fblockFProps[Ix][Iy][Iz][BMU][0] / (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * watMu);
							Qg = Qo * frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fblockFProps[Ix][Iy][Iz][BMU][0] / (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fblockFProps[Ix][Iy][Iz][BMU][1]);

							//Re = Re_f;
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][1] * fperm[Ix][Iy][Iz][0]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
							Pwf = fP[Ix + 1][Iy + 1][Iz + 1][1] - Qo / (S1*fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / fblockFProps[Ix][Iy][Iz][BMU][0]);

							if ((wellf[i][1]) && (Pwf < wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								PIw = S1 * watRo*WAT_M_RO*frelPerm[Ix][Iy][Iz][0] / watMu;
								PIo = S1 * fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / fblockFProps[Ix][Iy][Iz][BMU][0];
								PIg = S1 * fblockFProps[Ix][Iy][Iz][RO][1] * frelPerm[Ix][Iy][Iz][2] / fblockFProps[Ix][Iy][Iz][BMU][1];

								Qw = PIw * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][0]);
								Qo = PIo * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
								Qg = PIg * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

								if ((Qw > 0) || ((Qw - Qw) != 0)) {
									Qw = 0;
									PIw = 0;
								}
								if ((Qo > 0) || ((Qo - Qo) != 0)) {
									Qo = 0;
									PIo = 0;
								}
								if ((Qg > 0) || ((Qg - Qg) != 0)) {
									Qg = 0;
									PIg = 0;
								}
							}
							if (fP[Ix + 1][Iy + 1][Iz + 1][1] < WELL_MIN_P) {
								Qw = 0;
								Qo = 0;
								Qg = 0;
								
								PIw = 0;
								PIo = 0;
								PIg = 0;
							}

							QoProduced = Qo;
							Qoprod = Qo + Qg;
						}

						else if ((welli[i][0] == 5) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {		//Constant Gas Rate
							SSo1 = 0;
							for (j = welli[i][3]; j <= welli[i][4]; j++) {
								S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
								SSo1 += fblockFProps[Ix][Iy][j][RO][1] * S2*frelPerm[Ix][Iy][j][2] / fblockFProps[Ix][Iy][Iz][BMU][1];
								S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
								SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][Iz][BMU][1];
							}
							S1 = gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][0] * fperm[Ix][Iy][Iz][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);

							if (SSo1) {
								if (SURFACE_RATES) Qg = -S1 * gasRateCh(Ix, Iy, Iz, (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fblockFProps[Ix][Iy][Iz][BMU][1]) / (frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fblockFProps[Ix][Iy][Iz][BMU][0]))*wellf[i][1] * fblockFProps[Ix][Iy][Iz][RO][1] * frelPerm[Ix][Iy][Iz][2] / (fblockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
								else Qg = -S1 * wellf[i][1] * fblockFProps[Ix][Iy][Iz][RO][1] * frelPerm[Ix][Iy][Iz][2] / (fblockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
							}
							Qw = Qg * frelPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*fblockFProps[Ix][Iy][Iz][BMU][1] / (frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * watMu);
							Qo = Qg * frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fblockFProps[Ix][Iy][Iz][BMU][1] / (frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fblockFProps[Ix][Iy][Iz][BMU][0]);

							//Re = Re_f;
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][1] * fperm[Ix][Iy][Iz][0]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
							Pwf = fP[Ix + 1][Iy + 1][Iz + 1][2] - Qg / (S1*fblockFProps[Ix][Iy][Iz][RO][1] * frelPerm[Ix][Iy][Iz][2] / fblockFProps[Ix][Iy][Iz][BMU][1]);

							if ((wellf[i][1]) && (Pwf < wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								PIw = S1 * watRo*WAT_M_RO*frelPerm[Ix][Iy][Iz][0] / watMu;
								PIo = S1 * fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / fblockFProps[Ix][Iy][Iz][BMU][0];
								PIg = S1 * fblockFProps[Ix][Iy][Iz][RO][1] * frelPerm[Ix][Iy][Iz][2] / fblockFProps[Ix][Iy][Iz][BMU][1];

								Qw = PIw * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][0]);
								Qo = PIo * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
								Qg = PIg * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

								if ((Qw > 0) || ((Qw - Qw) != 0)) {
									Qw = 0;
									PIw = 0;
								}
								if ((Qo > 0) || ((Qo - Qo) != 0)) {
									Qo = 0;
									PIo = 0;
								}
								if ((Qg > 0) || ((Qg - Qg) != 0)) {
									Qg = 0;
									PIg = 0;
								}
							}
						}

						else if ((welli[i][0] == 6) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {		//Constant Total Production Rate
							SSw = 0;
							SSo = 0;
							SSg = 0;
							SSo1 = 0;
							for (j = welli[i][3]; j <= welli[i][4]; j++) {
								S1 = (frelPerm[Ix][Iy][j][0] / watMu) + (frelPerm[Ix][Iy][j][1] / fblockFProps[Ix][Iy][j][BMU][0]) + (frelPerm[Ix][Iy][j][2] / fblockFProps[Ix][Iy][j][BMU][1]);
								SSw += (frelPerm[Ix][Iy][j][0] / watMu) / S1;
								SSo += (frelPerm[Ix][Iy][j][1] / fblockFProps[Ix][Iy][j][BMU][0]) / S1;
								SSg += (frelPerm[Ix][Iy][j][2] / fblockFProps[Ix][Iy][j][BMU][1]) / S1;

								S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
								SSo1 += fblockFProps[Ix][Iy][j][RO][0] * S2*frelPerm[Ix][Iy][j][1] / fblockFProps[Ix][Iy][Iz][BMU][0];

								S1 = (relPerm[Ix][Iy][j][0] / watMu) + (relPerm[Ix][Iy][j][1] / blockFProps[Ix][Iy][j][BMU][0]) + (relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][j][BMU][1]);
								SSw += (relPerm[Ix][Iy][j][0] / watMu) / S1;
								SSo += (relPerm[Ix][Iy][j][1] / blockFProps[Ix][Iy][j][BMU][0]) / S1;
								SSg += (relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][j][BMU][1]) / S1;

								S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
								SSo1 += blockFProps[Ix][Iy][j][RO][0] * S2*relPerm[Ix][Iy][j][1] / blockFProps[Ix][Iy][Iz][BMU][0];

							}
							QoP = SSo * wellf[i][0] / (SSw + SSo + SSg);

							S1 = gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][0] * fperm[Ix][Iy][Iz][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
							if (SSo1) Qo = -S1 * QoP*fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / (fblockFProps[Ix][Iy][Iz][BMU][0] * SSo1);
							Qw = Qo * frelPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*fblockFProps[Ix][Iy][Iz][BMU][0] / (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * watMu);
							Qg = Qo * frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fblockFProps[Ix][Iy][Iz][BMU][0] / (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fblockFProps[Ix][Iy][Iz][BMU][1]);


							//Re = Re_f;
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][1] * fperm[Ix][Iy][Iz][0]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
							Pwf = fP[Ix + 1][Iy + 1][Iz + 1][1] - (Qw + Qo + Qg) / (S1*(watRo*WAT_M_RO*frelPerm[Ix][Iy][Iz][0] / watMu + fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / fblockFProps[Ix][Iy][Iz][BMU][0] + fblockFProps[Ix][Iy][Iz][RO][1] * frelPerm[Ix][Iy][Iz][2] / fblockFProps[Ix][Iy][Iz][BMU][1]));

							if ((wellf[i][1]) && (Pwf < wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								PIw = S1 * watRo*WAT_M_RO*frelPerm[Ix][Iy][Iz][0] / watMu;
								PIo = S1 * fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / fblockFProps[Ix][Iy][Iz][BMU][0];
								PIg = S1 * fblockFProps[Ix][Iy][Iz][RO][1] * frelPerm[Ix][Iy][Iz][2] / fblockFProps[Ix][Iy][Iz][BMU][1];

								Qw = PIw * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][0]);
								Qo = PIo * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
								Qg = PIg * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

								if ((Qw > 0) || ((Qw - Qw) != 0)) {
									Qw = 0;
									PIw = 0;
								}
								if ((Qo > 0) || ((Qo - Qo) != 0)) {
									Qo = 0;
									PIo = 0;
								}
								if ((Qg > 0) || ((Qg - Qg) != 0)) {
									Qg = 0;
									PIg = 0;
								}
							}
						}

						else if ((welli[i][0] == 7) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {			//Constant Water Injection Rate
							SSw = 0;
							for (j = welli[i][3]; j <= welli[i][4]; j++) {
								S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
								SSo1 += S2 * frelPerm[Ix][Iy][j][0];
								S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
								SSo1 += S2 * relPerm[Ix][Iy][j][0];
							}
							S1 = gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][0] * fperm[Ix][Iy][Iz][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
							if (SSw) Qw = S1 * wellf[i][0] * frelPerm[Ix][Iy][Iz][1] / SSw;

							//Re = Re_f;
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][1] * fperm[Ix][Iy][Iz][0]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
							Pwf = fP[Ix + 1][Iy + 1][Iz + 1][0] - Qw / (S1*watRo*WAT_M_RO * frelPerm[Ix][Iy][Iz][1] / watMu);
							if ((wellf[i][1]) && (Pwf > wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								PIw = S1 * watRo*WAT_M_RO*frelPerm[Ix][Iy][Iz][0] / watMu;
								Qw = PIw * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][0]);

								if ((Qw < 0) || ((Qw - Qw) != 0)) {
									Qw = 0;
									PIw = 0;
								}
							}
						}

						else if ((welli[i][0] == 8) && (((fabs(simTime - wellf[i][Nc + 4]) <= TSTEPIF) || (fabs(simTime - wellf[i][Nc + 5]) <= TSTEPIF)) || ((simTime >= wellf[i][Nc + 4]) && (simTime <= wellf[i][Nc + 5])))) {			//Constant Gas Injection Rate
							for (j = 0; j < Nc; j++) IComp[j] = wellf[i][4 + j];
							FlashInjection(IComp, wellf[i][1], IOComp, IGComp, iOF, iGF, iOD, iGD, iOV, iGV);

							SSo1 = 0;
							for (j = welli[i][3]; j <= welli[i][4]; j++) {
								S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
								//SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][Iz][BMU][1];
								//SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*sgt[Nsgt-1][1] / blockFProps[Ix][Iy][Iz][BMU][1];
								SSo1 += S2;

								S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
								//SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][Iz][BMU][1];
								//SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*sgt[Nsgt-1][1] / blockFProps[Ix][Iy][Iz][BMU][1];
								SSo1 += S2;
							}
							S1 = gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][0] * fperm[Ix][Iy][Iz][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);

							//if (SSo1) Qg = S1*wellf[i][0] * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / (blockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
							//if (SSo1) Qg = S1*wellf[i][0] * blockFProps[Ix][Iy][Iz][RO][1] * sgt[Nsgt - 1][1] / (blockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
							if (SSo1) Qg = S1 * wellf[i][0] / SSo1;
							if (SSo1) Qo = Qg * iOF / iGF;
							//Re = 0.14*sqrt(sqrt(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0])*gridDim[Ix] * gridDim[Ix] + sqrt(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1])*gridDim[Nx + Iy] * gridDim[Nx + Iy]);
							//Re /= 0.5*(pow(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0], 0.25) + pow(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1], 0.25));



							//Re = Calc_Re(Ix, Iy, Iz, i);
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][1] * fperm[Ix][Iy][Iz][0]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
							//Pwf = P[Ix + 1][Iy + 1][Iz + 1][2] - Qg / (S1*blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / blockFProps[Ix][Iy][Iz][BMU][1]);
							//Pwf = P[Ix + 1][Iy + 1][Iz + 1][2] - Qg / (S1*blockFProps[Ix][Iy][Iz][RO][1] * sgt[Nsgt - 1][1] / blockFProps[Ix][Iy][Iz][BMU][1]);
							Pwf = fP[Ix + 1][Iy + 1][Iz + 1][2] - Qg / (S1*iGD * sgt[Nsgt - 1][1] / iGV);

							if ((wellf[i][1]) && (Pwf > wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								PIg = S1 * iGD * sgt[Nsgt - 1][1] * iGF / iGV;
								Qg = PIg * (wellf[i][1] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
								//PIo = S1*iOD * swt[0][2]*iOF / iOV;
								PIo = PIg * iOF / iGF;
								Qo = PIo * (wellf[i][1] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

								if ((Qo < 0) || ((Qo - Qo) != 0)) {
									Qo = 0;
									PIo = 0;
								}
								if ((Qg < 0) || ((Qg - Qg) != 0)) {
									Qg = 0;
									PIg = 0;
								}
							}

							/*Qw = 0;
							Qo = 6.553168256220581e-07 / Nz;
							Qg = 0;
							IOComp[0] = 1;
							IOComp[1] = 0;
							IGComp[0] = 1;
							IGComp[1] = 0;
							PIw = 0;
							PIo = 0;
							PIg = 0;*/
							if (fP[Ix + 1][Iy + 1][Iz + 1][1] > WELL_MAX_P) {
								Qw = 0;
								Qo = 0;
								Qg = 0;
								IOComp[0] = 0;
								IOComp[1] = 0;
								IGComp[0] = 0;
								IGComp[1] = 0;
								PIw = 0;
								PIo = 0;
								PIg = 0;
							}


							QgInjected = Qg;


							QgInj = Qg;

							iWell = i;
							gasInjStat = -1;

							Qginj += Qg + Qo;
						}


					}
					QwT += Qw;
					QoT += Qo;
					QgT += Qg;
				}



#pragma endregion

				if (BENo < (Nc - 1)) {
					i = BENo;

					LSide = (Vb / Dt)*(porpor*(fcomp[Ix][Iy][Iz][i][0] * fblockFProps[Ix][Iy][Iz][RO][0] * fsat[Ix][Iy][Iz][1] + fcomp[Ix][Iy][Iz][i][1] * fblockFProps[Ix][Iy][Iz][RO][1] * fsat[Ix][Iy][Iz][2]) - fpreProp[Ix][Iy][Iz][i]);
					RSide = fcomp[(Ix + ftransS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][0][0] * (fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) - fcomp[(Ix - 1 + ftransS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix][Iy + 1][Iz + 1][0][0] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);
					RSide += fcomp[Ix][(Iy + ftransS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][0][1] * (fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) - fcomp[Ix][(Iy - 1 + ftransS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy][Iz + 1][0][1] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);
					RSide += fcomp[Ix][Iy][(Iz + ftransS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][0][2] * (fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) - fcomp[Ix][Iy][(Iz - 1 + ftransS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz][0][2] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);
					RSide += fcomp[(Ix + ftransS[Ix + 1][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][1][0] * (fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]) - fcomp[(Ix - 1 + ftransS[Ix][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * ftrans[Ix][Iy + 1][Iz + 1][1][0] * (fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);
					RSide += fcomp[Ix][(Iy + ftransS[Ix + 1][Iy + 1][Iz + 1][1][1])][Iz][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][1][1] * (fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]) - fcomp[Ix][(Iy - 1 + ftransS[Ix + 1][Iy][Iz + 1][1][1])][Iz][i][1] * ftrans[Ix + 1][Iy][Iz + 1][1][1] * (fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);
					RSide += fcomp[Ix][Iy][(Iz + ftransS[Ix + 1][Iy + 1][Iz + 1][1][2])][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][1][2] * (fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]) - fcomp[Ix][Iy][(Iz - 1 + ftransS[Ix + 1][Iy + 1][Iz][1][2])][i][1] * ftrans[Ix + 1][Iy + 1][Iz][1][2] * (fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);

					RSide += fcomp[(Ix + ftransS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][2][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - fcomp[(Ix - 1 + ftransS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix][Iy + 1][Iz + 1][2][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
					RSide += fcomp[Ix][(Iy + ftransS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][2][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - fcomp[Ix][(Iy - 1 + ftransS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy][Iz + 1][2][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
					RSide += fcomp[Ix][Iy][(Iz + ftransS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][2][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]) - fcomp[Ix][Iy][(Iz - 1 + ftransS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz][2][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
					RSide += fcomp[(Ix + ftransS[Ix + 1][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][3][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - fcomp[(Ix - 1 + ftransS[Ix][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * ftrans[Ix][Iy + 1][Iz + 1][3][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
					RSide += fcomp[Ix][(Iy + ftransS[Ix + 1][Iy + 1][Iz + 1][1][1])][Iz][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][3][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - fcomp[Ix][(Iy - 1 + ftransS[Ix + 1][Iy][Iz + 1][1][1])][Iz][i][1] * ftrans[Ix + 1][Iy][Iz + 1][3][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
					RSide += fcomp[Ix][Iy][(Iz + ftransS[Ix + 1][Iy + 1][Iz + 1][1][2])][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][3][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]) - fcomp[Ix][Iy][(Iz - 1 + ftransS[Ix + 1][Iy + 1][Iz][1][2])][i][1] * ftrans[Ix + 1][Iy + 1][Iz][3][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);


					////////////////////////////Transfer Function

					//	if (comp[Ix][Iy][Iz][i][0] > fcomp[Ix][Iy][Iz][i][0]) f_m_diffusion[0] = diffusion[Ix][Iy][Iz][i][0];
					//else f_m_diffusion[0] = fdiffusion[Ix][Iy][Iz][i][0];

					//		if (comp[Ix][Iy][Iz][i][1] > fcomp[Ix][Iy][Iz][i][1]) f_m_diffusion[1] = diffusion[Ix][Iy][Iz][i][1];
					//	else f_m_diffusion[1] = fdiffusion[Ix][Iy][Iz][i][1];
					//Transfer function Rside 
					RSide -= ZERO_CONV * SI_C *comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
					RSide -= ZERO_CONV * SI_C * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor) / (porpor + Mporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (1))//only Liq in Fracture & Matrix
						RSide -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (-1))//only Gas in Fracture & Matrix
						RSide -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0)) {
						RSide -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);

						RSide -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

					}

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
						//RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);

						RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
					}

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (1)) {
						//RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);

						RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
					}

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1)) {
						//RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);

						RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);

						RSide -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
					}

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1)) {
						RSide -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

						//RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);

						RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
					}

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0)) {
						//RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);

						RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);

						RSide -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
					}

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0)) {
						RSide -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

						//RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);

						RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
					}
					//	
					/////////////////////////////////////////
					if (iWell == (-1)) {
						gComp = fcomp[Ix][Iy][Iz][i][1];
						oComp = fcomp[Ix][Iy][Iz][i][0];
					}
					else {
						if (welli[iWell][0] == 3) {
							gComp = IGComp[i];
							oComp = IOComp[i];
						}
						else if (welli[iWell][0] == 8) {
							//gComp = wellf[iWell][i + 4];
							gComp = IGComp[i];
							oComp = IOComp[i];
						}
					}

					RSide += oComp * Qo + gComp * Qg;


					if (fphaseStat[Ix][Iy][Iz] == (-1)) dCoefl = 0;
					else dCoefl = 1;
					if (fphaseStat[Ix][Iy][Iz] == 1) dCoefg = 0;
					else dCoefg = 1;



					if (Ix < (Nx - 1)) {
						if (fphaseStat[Ix + 1][Iy][Iz] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][RO][0] * gridDim[Ix + 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][BMU][0] * gridDim[Ix + 1] * Coef;
						porpor2 = fporosity[Ix + 1][Iy][Iz] * (1 + cpor * (fP[Ix + 2][Iy + 1][Iz + 1][1] - refP) + dcpor * (fP[Ix + 2][Iy + 1][Iz + 1][1] - refP)*(fP[Ix + 2][Iy + 1][Iz + 1][1] - refP));
						if (fcomp[Ix + 1][Iy][Iz][i][0] > fcomp[Ix][Iy][Iz][i][0]) {
							DupStream = fdiffusion[Ix + 1][Iy][Iz][i][0];
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][0];
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix + 1][Iy][Iz] < 1e-10)) DupStream = 0;
						AAd = fblockFProps[Ix + 1][Iy][Iz][RO][0] * gridDim[Ix + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] * dCoefl;
						AAd *= (fsat[Ix + 1][Iy][Iz][1] * gridDim[Ix + 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Ix] * dCoefl) / (gridDim[Ix + 1] + gridDim[Ix]);
						BBd = gridDim[Ix + 1] * Coef / porpor2 + gridDim[Ix] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz] / (gridDim[Ix + 1] + gridDim[Ix]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = fcomp[Ix + 1][Iy][Iz][i][0] - fcomp[Ix][Iy][Iz][i][0];
						RSide += DTran * DeltaX;


						if (fphaseStat[Ix + 1][Iy][Iz] == 1) Coef = 0;
						else Coef = 1;
						Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][RO][1] * gridDim[Ix + 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][BMU][1] * gridDim[Ix + 1] * Coef;
						//////////////////////////////////////////////////////
						if (fcomp[Ix + 1][Iy][Iz][i][1] > fcomp[Ix][Iy][Iz][i][1]) {
							DupStream = fdiffusion[Ix + 1][Iy][Iz][i][1];
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][1];
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix + 1][Iy][Iz] < 1e-10)) DupStream = 0;
						AAd = fblockFProps[Ix + 1][Iy][Iz][RO][1] * gridDim[Ix + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] * dCoefg;
						AAd *= (fsat[Ix + 1][Iy][Iz][2] * gridDim[Ix + 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Ix] * dCoefg) / (gridDim[Ix + 1] + gridDim[Ix]);
						BBd = gridDim[Ix + 1] * Coef / porpor2 + gridDim[Ix] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Nx+Iy]*gridDim[Nx+Ny+Iz]/(gridDim[Ix+1]+gridDim[Ix]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = fcomp[Ix + 1][Iy][Iz][i][1] - fcomp[Ix][Iy][Iz][i][1];
						RSide += DTran * DeltaX;
					}

					if (Ix > 0) {
						if (fphaseStat[Ix - 1][Iy][Iz] == (-1)) Coef = 0;
						else Coef = 1;
						Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][RO][0] * gridDim[Ix - 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][BMU][0] * gridDim[Ix - 1] * Coef;

						porpor2 = fporosity[Ix - 1][Iy][Iz] * (1 + cpor * (fP[Ix][Iy + 1][Iz + 1][1] - refP) + dcpor * (fP[Ix][Iy + 1][Iz + 1][1] - refP)*(fP[Ix][Iy + 1][Iz + 1][1] - refP));
						if (fcomp[Ix - 1][Iy][Iz][i][0] > fcomp[Ix][Iy][Iz][i][0]) {
							DupStream = fdiffusion[Ix - 1][Iy][Iz][i][0];
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][0];
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix - 1][Iy][Iz] < 1e-10)) DupStream = 0;
						AAd = fblockFProps[Ix - 1][Iy][Iz][RO][0] * gridDim[Ix - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] * dCoefl;
						AAd *= (fsat[Ix - 1][Iy][Iz][1] * gridDim[Ix - 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Ix] * dCoefl) / (gridDim[Ix - 1] + gridDim[Ix]);
						BBd = gridDim[Ix - 1] * Coef / porpor2 + gridDim[Ix] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz] / (gridDim[Ix - 1] + gridDim[Ix]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = fcomp[Ix][Iy][Iz][i][0] - fcomp[Ix - 1][Iy][Iz][i][0];
						RSide -= DTran * DeltaX;

						if (fphaseStat[Ix - 1][Iy][Iz] == 1) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][RO][1] * gridDim[Ix - 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][BMU][1] * gridDim[Ix - 1] * Coef;

						if (fcomp[Ix - 1][Iy][Iz][i][1] > fcomp[Ix][Iy][Iz][i][1]) {
							DupStream = fdiffusion[Ix - 1][Iy][Iz][i][1];
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][1];
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix - 1][Iy][Iz] < 1e-10)) DupStream = 0;
						AAd = fblockFProps[Ix - 1][Iy][Iz][RO][1] * gridDim[Ix - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] * dCoefg;
						AAd *= (fsat[Ix - 1][Iy][Iz][2] * gridDim[Ix - 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Ix] * dCoefg) / (gridDim[Ix - 1] + gridDim[Ix]);
						BBd = gridDim[Ix - 1] * Coef / porpor2 + gridDim[Ix] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Nx+Iy]*gridDim[Nx+Ny+Iz]/(gridDim[Ix-1]+gridDim[Ix]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = fcomp[Ix][Iy][Iz][i][1] - fcomp[Ix - 1][Iy][Iz][i][1];
						RSide -= DTran * DeltaX;
					}

					if (Iy < (Ny - 1)) {
						if (fphaseStat[Ix][Iy + 1][Iz] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][RO][0] * gridDim[Nx + Iy + 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][BMU][0] * gridDim[Nx + Iy + 1] * Coef;

						porpor2 = fporosity[Ix][Iy + 1][Iz] * (1 + cpor * (fP[Ix + 1][Iy + 2][Iz + 1][1] - refP) + dcpor * (fP[Ix + 1][Iy + 2][Iz + 1][1] - refP)*(fP[Ix + 1][Iy + 2][Iz + 1][1] - refP));
						if (fcomp[Ix][Iy + 1][Iz][i][0] > fcomp[Ix][Iy][Iz][i][0]) {
							DupStream = fdiffusion[Ix][Iy + 1][Iz][i][0];
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][0];
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix][Iy + 1][Iz] < 1e-10)) DupStream = 0;
						AAd = fblockFProps[Ix][Iy + 1][Iz][RO][0] * gridDim[Nx + Iy + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] * dCoefl;
						AAd *= (fsat[Ix][Iy + 1][Iz][1] * gridDim[Nx + Iy + 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Nx + Iy] * dCoefl) / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
						BBd = gridDim[Nx + Iy + 1] * Coef / porpor2 + gridDim[Nx + Iy] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Ix] * gridDim[Nx + Ny + Iz] / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = fcomp[Ix][Iy + 1][Iz][i][0] - fcomp[Ix][Iy][Iz][i][0];
						RSide += DTran * DeltaX;

						if (fphaseStat[Ix][Iy + 1][Iz] == 1) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][RO][1] * gridDim[Nx + Iy + 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][BMU][1] * gridDim[Nx + Iy + 1] * Coef;

						/////////////////////////////////////////////////////////////////////////////
						if (fcomp[Ix][Iy + 1][Iz][i][1] > fcomp[Ix][Iy][Iz][i][1]) {
							DupStream = fdiffusion[Ix][Iy + 1][Iz][i][1];
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][1];
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix][Iy + 1][Iz] < 1e-10)) DupStream = 0;
						AAd = fblockFProps[Ix][Iy + 1][Iz][RO][1] * gridDim[Nx + Iy + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] * dCoefg;
						AAd *= (fsat[Ix][Iy + 1][Iz][2] * gridDim[Nx + Iy + 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Nx + Iy] * dCoefg) / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
						BBd = gridDim[Nx + Iy + 1] * Coef / porpor2 + gridDim[Nx + Iy] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Ix]*gridDim[Nx+Ny+Iz]/(gridDim[Nx+Iy+1]+gridDim[Nx+Iy]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = fcomp[Ix][Iy + 1][Iz][i][1] - fcomp[Ix][Iy][Iz][i][1];
						RSide += DTran * DeltaX;
					}

					if (Iy > 0) {
						if (fphaseStat[Ix][Iy - 1][Iz] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][RO][0] * gridDim[Nx + Iy - 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][BMU][0] * gridDim[Nx + Iy - 1] * Coef;

						porpor2 = fporosity[Ix][Iy - 1][Iz] * (1 + cpor * (fP[Ix + 1][Iy][Iz + 1][1] - refP) + dcpor * (fP[Ix + 1][Iy][Iz + 1][1] - refP)*(fP[Ix + 1][Iy][Iz + 1][1] - refP));

						if (fcomp[Ix][Iy - 1][Iz][i][0] > fcomp[Ix][Iy][Iz][i][0]) {
							DupStream = fdiffusion[Ix][Iy - 1][Iz][i][0];
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][0];
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix][Iy - 1][Iz] < 1e-10)) DupStream = 0;
						AAd = fblockFProps[Ix][Iy - 1][Iz][RO][0] * gridDim[Nx + Iy - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] * dCoefl;
						AAd *= (fsat[Ix][Iy - 1][Iz][1] * gridDim[Nx + Iy - 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Nx + Iy] * dCoefl) / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
						BBd = gridDim[Nx + Iy - 1] * Coef / porpor2 + gridDim[Nx + Iy] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Ix] * gridDim[Nx + Ny + Iz] / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = fcomp[Ix][Iy][Iz][i][0] - fcomp[Ix][Iy - 1][Iz][i][0];
						RSide -= DTran * DeltaX;

						if (fphaseStat[Ix][Iy - 1][Iz] == 1) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][RO][1] * gridDim[Nx + Iy - 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][BMU][1] * gridDim[Nx + Iy - 1] * Coef;

						///////////////////////////////////////////////////////////////////
						if (fcomp[Ix][Iy - 1][Iz][i][1] > fcomp[Ix][Iy][Iz][i][1]) {
							DupStream = fdiffusion[Ix][Iy - 1][Iz][i][1];
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][1];
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix][Iy - 1][Iz] < 1e-10)) DupStream = 0;
						AAd = fblockFProps[Ix][Iy - 1][Iz][RO][1] * gridDim[Nx + Iy - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] * dCoefg;
						AAd *= (fsat[Ix][Iy - 1][Iz][2] * gridDim[Nx + Iy - 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Nx + Iy] * dCoefg) / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
						BBd = gridDim[Nx + Iy - 1] * Coef / porpor2 + gridDim[Nx + Iy] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Ix]*gridDim[Nx+Ny+Iz]/(gridDim[Nx+Iy-1]+gridDim[Nx+Iy]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = fcomp[Ix][Iy][Iz][i][1] - fcomp[Ix][Iy - 1][Iz][i][1];
						RSide -= DTran * DeltaX;
					}

					if (Iz < (Nz - 1)) {
						if (fphaseStat[Ix][Iy][Iz + 1] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][RO][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][BMU][0] * gridDim[Nx + Ny + Iz + 1] * Coef;

						porpor2 = fporosity[Ix][Iy][Iz + 1] * (1 + cpor * (fP[Ix + 1][Iy + 1][Iz + 2][1] - refP) + dcpor * (fP[Ix + 1][Iy + 1][Iz + 2][1] - refP)*(fP[Ix + 1][Iy + 1][Iz + 2][1] - refP));
						if (fcomp[Ix][Iy][Iz + 1][i][0] > fcomp[Ix][Iy][Iz][i][0]) {
							DupStream = fdiffusion[Ix][Iy][Iz + 1][i][0];
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][0];
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix][Iy][Iz + 1] < 1e-10)) DupStream = 0;
						AAd = fblockFProps[Ix][Iy][Iz + 1][RO][0] * gridDim[Nx + Ny + Iz + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] * dCoefl;
						AAd *= (fsat[Ix][Iy][Iz + 1][1] * gridDim[Nx + Ny + Iz + 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Nx + Ny + Iz] * dCoefl) / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
						BBd = gridDim[Nx + Ny + Iz + 1] * Coef / porpor2 + gridDim[Nx + Ny + Iz] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Ix] * gridDim[Nx + Iy] / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = fcomp[Ix][Iy][Iz + 1][i][0] - fcomp[Ix][Iy][Iz][i][0];
						RSide += DTran * DeltaX;

						if (fphaseStat[Ix][Iy][Iz + 1] == 1) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][RO][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][BMU][1] * gridDim[Nx + Ny + Iz + 1] * Coef;

						if (fcomp[Ix][Iy][Iz + 1][i][1] > fcomp[Ix][Iy][Iz][i][1]) {
							DupStream = fdiffusion[Ix][Iy][Iz + 1][i][1];
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][1];
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix][Iy][Iz + 1] < 1e-10)) DupStream = 0;
						AAd = fblockFProps[Ix][Iy][Iz + 1][RO][1] * gridDim[Nx + Ny + Iz + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] * dCoefg;
						AAd *= (fsat[Ix][Iy][Iz + 1][2] * gridDim[Nx + Ny + Iz + 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Nx + Ny + Iz] * dCoefg) / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
						BBd = gridDim[Nx + Ny + Iz + 1] * Coef / porpor2 + gridDim[Nx + Ny + Iz] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Ix]*gridDim[Nx+Iy]/(gridDim[Nx+Ny+Iz+1]+gridDim[Nx+Ny+Iz]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = fcomp[Ix][Iy][Iz + 1][i][1] - fcomp[Ix][Iy][Iz][i][1];
						RSide += DTran * DeltaX;
					}

					if (Iz > 0) {
						if (fphaseStat[Ix][Iy][Iz - 1] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][RO][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][BMU][0] * gridDim[Nx + Ny + Iz - 1] * Coef;

						porpor2 = fporosity[Ix][Iy][Iz - 1] * (1 + cpor * (fP[Ix + 1][Iy + 1][Iz][1] - refP) + dcpor * (fP[Ix + 1][Iy + 1][Iz][1] - refP)*(fP[Ix + 1][Iy + 1][Iz][1] - refP));
						if (fcomp[Ix][Iy][Iz - 1][i][0] > fcomp[Ix][Iy][Iz][i][0]) {
							DupStream = fdiffusion[Ix][Iy][Iz - 1][i][0];
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][0];
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix][Iy][Iz - 1] < 1e-10)) DupStream = 0;
						AAd = fblockFProps[Ix][Iy][Iz - 1][RO][0] * gridDim[Nx + Ny + Iz - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] * dCoefl;
						AAd *= (fsat[Ix][Iy][Iz - 1][1] * gridDim[Nx + Ny + Iz - 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Nx + Ny + Iz] * dCoefl) / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
						BBd = gridDim[Nx + Ny + Iz - 1] * Coef / porpor2 + gridDim[Nx + Ny + Iz] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Ix] * gridDim[Nx + Iy] / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = fcomp[Ix][Iy][Iz][i][0] - fcomp[Ix][Iy][Iz - 1][i][0];
						RSide -= DTran * DeltaX;

						if (fphaseStat[Ix][Iy][Iz - 1] == 1) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][RO][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][BMU][1] * gridDim[Nx + Ny + Iz - 1] * Coef;

						if (fcomp[Ix][Iy][Iz - 1][i][1] > fcomp[Ix][Iy][Iz][i][1]) {
							DupStream = fdiffusion[Ix][Iy][Iz - 1][i][1];
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][1];
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix][Iy][Iz - 1] < 1e-10)) DupStream = 0;
						AAd = fblockFProps[Ix][Iy][Iz - 1][RO][1] * gridDim[Nx + Ny + Iz - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] * dCoefg;
						AAd *= (fsat[Ix][Iy][Iz - 1][2] * gridDim[Nx + Ny + Iz - 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Nx + Ny + Iz] * dCoefg) / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
						BBd = gridDim[Nx + Ny + Iz - 1] * Coef / porpor2 + gridDim[Nx + Ny + Iz] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Ix]*gridDim[Nx+Iy]/(gridDim[Nx+Ny+Iz-1]+gridDim[Nx+Ny+Iz]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = fcomp[Ix][Iy][Iz][i][1] - fcomp[Ix][Iy][Iz - 1][i][1];
						RSide -= DTran * DeltaX;
					}

					
#ifdef USE_MKL_SOLVER
					MKLRHSVector[actx->LocalIndex] = RSide - LSide;
#else
					LocalF[actx->LocalIndex] = LSide - RSide;
#endif
				}
				else if (BENo < (Nc)) {

					LSide = (Vb / Dt)*(porpor*(fblockFProps[Ix][Iy][Iz][RO][0] * fsat[Ix][Iy][Iz][1] + fblockFProps[Ix][Iy][Iz][RO][1] * fsat[Ix][Iy][Iz][2]) - fpreProp[Ix][Iy][Iz][Nc - 1]);
					RSide = ftrans[Ix + 1][Iy + 1][Iz + 1][0][0] * (fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) - ftrans[Ix][Iy + 1][Iz + 1][0][0] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);
					RSide += ftrans[Ix + 1][Iy + 1][Iz + 1][0][1] * (fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) - ftrans[Ix + 1][Iy][Iz + 1][0][1] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);
					RSide += ftrans[Ix + 1][Iy + 1][Iz + 1][0][2] * (fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) - ftrans[Ix + 1][Iy + 1][Iz][0][2] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);
					RSide += ftrans[Ix + 1][Iy + 1][Iz + 1][1][0] * (fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]) - ftrans[Ix][Iy + 1][Iz + 1][1][0] * (fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);
					RSide += ftrans[Ix + 1][Iy + 1][Iz + 1][1][1] * (fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]) - ftrans[Ix + 1][Iy][Iz + 1][1][1] * (fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);
					RSide += ftrans[Ix + 1][Iy + 1][Iz + 1][1][2] * (fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]) - ftrans[Ix + 1][Iy + 1][Iz][1][2] * (fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);

					RSide += ftrans[Ix + 1][Iy + 1][Iz + 1][2][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - ftrans[Ix][Iy + 1][Iz + 1][2][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
					RSide += ftrans[Ix + 1][Iy + 1][Iz + 1][2][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - ftrans[Ix + 1][Iy][Iz + 1][2][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
					RSide += ftrans[Ix + 1][Iy + 1][Iz + 1][2][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]) - ftrans[Ix + 1][Iy + 1][Iz][2][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
					RSide += ftrans[Ix + 1][Iy + 1][Iz + 1][3][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - ftrans[Ix][Iy + 1][Iz + 1][3][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
					RSide += ftrans[Ix + 1][Iy + 1][Iz + 1][3][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - ftrans[Ix + 1][Iy][Iz + 1][3][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
					RSide += ftrans[Ix + 1][Iy + 1][Iz + 1][3][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]) - ftrans[Ix + 1][Iy + 1][Iz][3][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);

					///////////////////////////////////Transfer Function 

					RSide -= ZERO_CONV * SI_C *blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
					RSide -= ZERO_CONV * SI_C *blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor) / (porpor + Mporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));

					/////////////////////////////////////
					RSide += Qo + Qg;
#ifdef USE_MKL_SOLVER
					MKLRHSVector[actx->LocalIndex] = RSide - LSide;
#else
					LocalF[actx->LocalIndex] = LSide - RSide;
#endif
					

				}
				else {
					LSide = (Vb / Dt)*(porpor*watRo*WAT_M_RO*fsat[Ix][Iy][Iz][0] - fpreProp[Ix][Iy][Iz][Nc]);
					RSide = fWtran[Ix + 1][Iy + 1][Iz + 1][0] * (fP[Ix + 2][Iy + 1][Iz + 1][0] - fP[Ix + 1][Iy + 1][Iz + 1][0]) - fWtran[Ix][Iy + 1][Iz + 1][0] * (fP[Ix + 1][Iy + 1][Iz + 1][0] - fP[Ix][Iy + 1][Iz + 1][0]);
					RSide += fWtran[Ix + 1][Iy + 1][Iz + 1][1] * (fP[Ix + 1][Iy + 2][Iz + 1][0] - fP[Ix + 1][Iy + 1][Iz + 1][0]) - fWtran[Ix + 1][Iy][Iz + 1][1] * (fP[Ix + 1][Iy + 1][Iz + 1][0] - fP[Ix + 1][Iy][Iz + 1][0]);
					RSide += fWtran[Ix + 1][Iy + 1][Iz + 1][2] * (fP[Ix + 1][Iy + 1][Iz + 2][0] - fP[Ix + 1][Iy + 1][Iz + 1][0]) - fWtran[Ix + 1][Iy + 1][Iz][2] * (fP[Ix + 1][Iy + 1][Iz + 1][0] - fP[Ix + 1][Iy + 1][Iz][0]);

					RSide += G_ACC * watRo*fWtran[Ix + 1][Iy + 1][Iz + 1][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - G_ACC * watRo*fWtran[Ix][Iy + 1][Iz + 1][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
					RSide += G_ACC * watRo*fWtran[Ix + 1][Iy + 1][Iz + 1][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - G_ACC * watRo*fWtran[Ix + 1][Iy][Iz + 1][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
					RSide += G_ACC * watRo*fWtran[Ix + 1][Iy + 1][Iz + 1][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]) - G_ACC * watRo*fWtran[Ix + 1][Iy + 1][Iz][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);

					/////////////////////////////Transfer Function


					RSide -= ZERO_CONV * SI_C* watRo *WAT_M_RO * ShapeFactor_2(Ix, Iy, Iz) * f_m_relperm[0] / watMu * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) *((fP[Ix + 1][Iy + 1][Iz + 1][0] - P[Ix + 1][Iy + 1][Iz + 1][0]) + (blockFProps[Ix][Iy][Iz][BLOCK_PC][0] - fblockFProps[Ix][Iy][Iz][BLOCK_PC][0]));

					////////////////////////////////////////////
					RSide += Qw;
#ifdef USE_MKL_SOLVER
					MKLRHSVector[actx->LocalIndex] = RSide - LSide;
#else
					LocalF[actx->LocalIndex] = LSide - RSide;
#endif					
				}
			}
			else if (BENo < (Nc + 2)) {
				Sxl = 0;
				for (i = 0; i < Nc; i++) Sxl += fcomp[Ix][Iy][Iz][i][0];
#ifdef USE_MKL_SOLVER
				MKLRHSVector[actx->LocalIndex] = 1 - Sxl;
#else
				LocalF[actx->LocalIndex] = Sxl - 1;
#endif
			}
			else if (BENo < (Nc + 3)) {

#ifdef USE_MKL_SOLVER
			MKLRHSVector[actx->LocalIndex] = 1 - fsat[Ix][Iy][Iz][0] - fsat[Ix][Iy][Iz][1] - fsat[Ix][Iy][Iz][2];
#else
			LocalF[actx->LocalIndex] = fsat[Ix][Iy][Iz][0] + fsat[Ix][Iy][Iz][1] + fsat[Ix][Iy][Iz][2] - 1;
#endif				
			}
			else {
				std::cout << Ix << '\t' << Iy << '\t' << Iz << '\t' << BENo << "\tFracture phase stat: " << fphaseStat[Ix][Iy][Iz] << std::endl;
				TerM("Global Index Error!");
			}

			break;

		case 0:
			if (BENo < Nc) {
				Al = 0;
				Bl = 0;
				Ag = 0;
				Bg = 0;
				for (i = 0; i < Nc; i++) {
					Bl += fcomp[Ix][Iy][Iz][i][0] * fluidProp[i][EOS_B];
					Bg += fcomp[Ix][Iy][Iz][i][1] * fluidProp[i][EOS_B];
					for (j = 0; j < Nc; j++) {
						tempSQR = sqrt(fluidProp[i][EOS_A] * fluidProp[j][EOS_A])*bic[i][j];
						Al += fcomp[Ix][Iy][Iz][i][0] * fcomp[Ix][Iy][Iz][j][0] * tempSQR;
						Ag += fcomp[Ix][Iy][Iz][i][1] * fcomp[Ix][Iy][Iz][j][1] * tempSQR;
					}
				}

				Cal = Al;
				Cbl = Bl;
				Cag = Ag;
				Cbg = Bg;
				Al *= fP[Ix + 1][Iy + 1][Iz + 1][1] / (RGAS*RGAS*resTemp*resTemp);
				Bl *= fP[Ix + 1][Iy + 1][Iz + 1][1] / (RGAS*resTemp);
				Ag *= fP[Ix + 1][Iy + 1][Iz + 1][2] / (RGAS*RGAS*resTemp*resTemp);
				Bg *= fP[Ix + 1][Iy + 1][Iz + 1][2] / (RGAS*resTemp);			


				Zl = fP[Ix + 1][Iy + 1][Iz + 1][1] / (fblockFProps[Ix][Iy][Iz][RO][0] * RGAS*resTemp);
				Zg = fP[Ix + 1][Iy + 1][Iz + 1][2] / (fblockFProps[Ix][Iy][Iz][RO][1] * RGAS*resTemp);

				if (SRK) {
					d1 = 1;
					d2 = 0;
				}
				else if (PR) {
					d1 = 1 + SQRT2;
					d2 = 1 - SQRT2;
				}

				i = BENo;			

				tl = 0;
				tg = 0;
				for (j = 0; j < Nc; j++) {	//FFSS
					tempSQR = sqrt(fluidProp[i][EOS_A] * fluidProp[j][EOS_A])*bic[i][j];
					tl += fcomp[Ix][Iy][Iz][j][0] * tempSQR;
					tg += fcomp[Ix][Iy][Iz][j][1] * tempSQR;
				}
				t1l = fluidProp[i][EOS_B] / Cbl;
				t1g = fluidProp[i][EOS_B] / Cbg;

				EEl = 2 * tl / Cal - t1l;
				EEg = 2 * tg / Cag - t1g;

				DDl = Al / (Bl*(d1 - d2));
				DDg = Ag / (Bg*(d1 - d2));

				FFl = log((Zl + d2 * Bl) / (Zl + d1 * Bl));
				FFg = log((Zg + d2 * Bg) / (Zg + d1 * Bg));

				phiL = exp(t1l*(Zl - 1) - log(Zl - Bl) + DDl * EEl*FFl);
				phiG = exp(t1g*(Zg - 1) - log(Zg - Bg) + DDg * EEg*FFg);

#ifdef USE_MKL_SOLVER
				MKLRHSVector[actx->LocalIndex] = -fcomp[Ix][Iy][Iz][i][0] * fP[Ix + 1][Iy + 1][Iz + 1][1] * phiL + fcomp[Ix][Iy][Iz][i][1] * fP[Ix + 1][Iy + 1][Iz + 1][2] * phiG;
#else
				LocalF[actx->LocalIndex] = fcomp[Ix][Iy][Iz][i][0] * fP[Ix + 1][Iy + 1][Iz + 1][1] * phiL - fcomp[Ix][Iy][Iz][i][1] * fP[Ix + 1][Iy + 1][Iz + 1][2] * phiG;
#endif
				
			}
			else if (BENo < (2 * Nc + 1)) {

#pragma region sadeq

				Mporpor = porosity[Ix][Iy][Iz] * (1 + cpor * (P[Ix + 1][Iy + 1][Iz + 1][1] - refP) + dcpor * (P[Ix + 1][Iy + 1][Iz + 1][1] - refP)*(P[Ix + 1][Iy + 1][Iz + 1][1] - refP));
				

				if (P[Ix + 1][Iy + 1][Iz + 1][1] >= fP[Ix + 1][Iy + 1][Iz + 1][1])
				{
					f_m_relperm[1] = relPerm[Ix][Iy][Iz][1];//oil relperm between matrix and fracture
					f_m_drelperm[1][1] = dRelPerm[Ix][Iy][Iz][1];//dkrodsw
					f_m_drelperm[1][2] = dRelPerm[Ix][Iy][Iz][2];//dkrodsg
					f_m_drelperm[1][4] = dRelPerm[Ix][Iy][Iz][4];//dkrodso

					f_m_drelperm[1][9] = 0;
					f_m_drelperm[1][7] = 0;
					f_m_drelperm[1][6] = 0;
				}
				else
				{
					f_m_relperm[1] = frelPerm[Ix][Iy][Iz][1];
					f_m_drelperm[1][6] = fdRelPerm[Ix][Iy][Iz][1];//fdkrofdsw
					f_m_drelperm[1][7] = fdRelPerm[Ix][Iy][Iz][2];//fdkrofdsg
					f_m_drelperm[1][9] = fdRelPerm[Ix][Iy][Iz][4];//fdkrofdso

					f_m_drelperm[1][4] = 0;
					f_m_drelperm[1][2] = 0;
					f_m_drelperm[1][1] = 0;
				}
				if (P[Ix + 1][Iy + 1][Iz + 1][2] >= fP[Ix + 1][Iy + 1][Iz + 1][2])
				{
					f_m_relperm[2] = relPerm[Ix][Iy][Iz][2];//gas relperm between matrix and fracture
					f_m_drelperm[2][3] = dRelPerm[Ix][Iy][Iz][3];//dkrgdsg

					f_m_drelperm[2][8] = 0;
				}
				else
				{
					f_m_relperm[2] = frelPerm[Ix][Iy][Iz][2];
					f_m_drelperm[2][8] = fdRelPerm[Ix][Iy][Iz][3];//fdkrgfdsg

					f_m_drelperm[2][3] = 0;
				}

				if (P[Ix + 1][Iy + 1][Iz + 1][0] >= fP[Ix + 1][Iy + 1][Iz + 1][0])
				{
					f_m_relperm[0] = relPerm[Ix][Iy][Iz][0];
					f_m_drelperm[1][0] = dRelPerm[Ix][Iy][Iz][0];//dkrwdsw

					f_m_drelperm[1][5] = 0;
				}
				else
				{
					f_m_relperm[0] = frelPerm[Ix][Iy][Iz][0];//water relperm between matrix and fracture
					f_m_drelperm[1][5] = fdRelPerm[Ix][Iy][Iz][0];//fdkrwfdsw

					f_m_drelperm[1][0] = 0;
				}
#pragma endregion

#pragma region Wells&Commons For Fracture 
				porpor = fporosity[Ix][Iy][Iz] * (1 + cpor * (fP[Ix + 1][Iy + 1][Iz + 1][1] - refP) + dcpor * (fP[Ix + 1][Iy + 1][Iz + 1][1] - refP)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - refP));
				

				Qw = 0;
				Qo = 0;
				Qg = 0;

				PIw = 0;
				PIo = 0;
				PIg = 0;

				Vb = gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz];

				iWell = -1;
				for (i = 0; i < wellNO; i++) {
					if ((Ix == welli[i][1]) && (Iy == welli[i][2]) && (Iz >= welli[i][3]) && (Iz <= welli[i][4])) {
						//Re = Calc_Re(Ix, Iy, Iz, i);
						Re = Re_f;
						if (welli[i][0] == 0) BMethQF = 1;
						if ((welli[i][0] == 0) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {
							//if ((welli[i][0] == 0) && ((fabs(simTime - wellf[i][4]) <= TSTEPIF) && (fabs(simTime - wellf[i][5]) <= TSTEPIF))) {		//Constant Pwf Pressure - Production

							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][1] * fperm[Ix][Iy][Iz][0]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);

							PIw = S1 * watRo*WAT_M_RO*frelPerm[Ix][Iy][Iz][0] / watMu;
							PIo = S1 * fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / fblockFProps[Ix][Iy][Iz][BMU][0];
							PIg = S1 * fblockFProps[Ix][Iy][Iz][RO][1] * frelPerm[Ix][Iy][Iz][2] / fblockFProps[Ix][Iy][Iz][BMU][1];

							Qw = PIw * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][0]);
							Qo = PIo * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
							Qg = PIg * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

							

							/*if ((wellf[i][1]) && ((-Qo) > wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								SSo1 = 0;
								for (j = welli[i][3]; j <= welli[i][4]; j++) {
									S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
									SSo1 += fblockFProps[Ix][Iy][j][RO][0] * S2*frelPerm[Ix][Iy][j][1] / fblockFProps[Ix][Iy][Iz][BMU][0];
									S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
									SSo1 += blockFProps[Ix][Iy][j][RO][0] * S2*relPerm[Ix][Iy][j][1] / blockFProps[Ix][Iy][Iz][BMU][0];
								}
								S1 = gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][0] * fperm[Ix][Iy][Iz][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);

								if (SSo1) {
									if (SURFACE_RATES) Qo = -S1 * oilRateCh(Ix, Iy, Iz, frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fblockFProps[Ix][Iy][Iz][BMU][0] / (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fblockFProps[Ix][Iy][Iz][BMU][1]))*wellf[i][1] * fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / (fblockFProps[Ix][Iy][Iz][BMU][0] * SSo1);
									else Qo = -S1 * wellf[i][1] * fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / (fblockFProps[Ix][Iy][Iz][BMU][0] * SSo1);
								}
								Qw = Qo * frelPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*fblockFProps[Ix][Iy][Iz][BMU][0] / (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * watMu);
								Qg = Qo * frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fblockFProps[Ix][Iy][Iz][BMU][0] / (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fblockFProps[Ix][Iy][Iz][BMU][1]);

							}*/

							if (fP[Ix + 1][Iy + 1][Iz + 1][1] < WELL_MIN_P) {
								Qw = 0;
								Qo = 0;
								Qg = 0;

								PIw = 0;
								PIo = 0;
								PIg = 0;
							}
							else if ((wellf[i][1]) && ((-Qo) > wellf[i][1])) {
								Qo = -wellf[i][1];
								Qw = Qo * frelPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*fblockFProps[Ix][Iy][Iz][BMU][0] / (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * watMu);
								Qg = Qo * frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fblockFProps[Ix][Iy][Iz][BMU][0] / (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fblockFProps[Ix][Iy][Iz][BMU][1]);
								PIw = 0;
								PIo = 0;
								PIg = 0;
							}
							if ((Qw > 0) || ((Qw - Qw) != 0)) {
								Qw = 0;
								PIw = 0;
							}
							if ((Qo > 0) || ((Qo - Qo) != 0)) {
								Qo = 0;
								PIo = 0;
							}
							if ((Qg > 0) || ((Qg - Qg) != 0)) {
								Qg = 0;
								PIg = 0;
							}

							QoProduced = Qo;
							Qoprod += Qo + Qg;
							//Qoprod = Qo*(1 - fcomp[Ix][Iy][Iz][0][0])+ Qg*(1 - fcomp[Ix][Iy][Iz][0][1]);
							MethQM += Qo * (1 - fcomp[Ix][Iy][Iz][0][0]) + Qg * (1 - fcomp[Ix][Iy][Iz][0][1]);
							
							WellCompSadeq[0] += Qo * (fcomp[Ix][Iy][Iz][0][0]) + Qg * (fcomp[Ix][Iy][Iz][0][1]);
							WellCompSadeq[1] += Qo * (fcomp[Ix][Iy][Iz][1][0]) + Qg * (fcomp[Ix][Iy][Iz][1][1]);
							WellCompSadeq[2] += Qo * (fcomp[Ix][Iy][Iz][2][0]) + Qg * (fcomp[Ix][Iy][Iz][2][1]);
							WellCompSadeq2[0] += (Qo*(fcomp[Ix][Iy][Iz][0][0]) + Qg * (fcomp[Ix][Iy][Iz][0][1]));
							WellCompSadeq2[1] += (Qo*(fcomp[Ix][Iy][Iz][1][0]) + Qg * (fcomp[Ix][Iy][Iz][1][1]));
							WellCompSadeq2[2] += (Qo*(fcomp[Ix][Iy][Iz][2][0]) + Qg * (fcomp[Ix][Iy][Iz][2][1]));
						}

						else if ((welli[i][0] == 1) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {		//Constant Pwf- Gas Production
																																																					//Re = Re_f;
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][1] * fperm[Ix][Iy][Iz][0]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);

							PIw = S1 * watRo*WAT_M_RO*frelPerm[Ix][Iy][Iz][0] / watMu;
							PIo = S1 * fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / fblockFProps[Ix][Iy][Iz][BMU][0];
							PIg = S1 * fblockFProps[Ix][Iy][Iz][RO][1] * frelPerm[Ix][Iy][Iz][2] / fblockFProps[Ix][Iy][Iz][BMU][1];

							Qw = PIw * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][0]);
							Qo = PIo * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
							Qg = PIg * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

							if ((Qw > 0) || ((Qw - Qw) != 0)) {
								Qw = 0;
								PIw = 0;
							}
							if ((Qo > 0) || ((Qo - Qo) != 0)) {
								Qo = 0;
								PIo = 0;
							}
							if ((Qg > 0) || ((Qg - Qg) != 0)) {
								Qg = 0;
								PIg = 0;
							}

							if ((wellf[i][1]) && ((-Qg) > wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								SSo1 = 0;
								for (j = welli[i][3]; j <= welli[i][4]; j++) {
									S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
									SSo1 += fblockFProps[Ix][Iy][j][RO][1] * S2*frelPerm[Ix][Iy][j][2] / fblockFProps[Ix][Iy][Iz][BMU][1];
									S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
									SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][Iz][BMU][1];
								}
								S1 = gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][0] * fperm[Ix][Iy][Iz][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);

								if (SSo1) {
									if (SURFACE_RATES) Qg = -S1 * gasRateCh(Ix, Iy, Iz, (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fblockFProps[Ix][Iy][Iz][BMU][1]) / (frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fblockFProps[Ix][Iy][Iz][BMU][0]))*wellf[i][1] * fblockFProps[Ix][Iy][Iz][RO][1] * frelPerm[Ix][Iy][Iz][2] / (fblockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
									else Qg = -S1 * wellf[i][1] * fblockFProps[Ix][Iy][Iz][RO][1] * frelPerm[Ix][Iy][Iz][2] / (fblockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
								}
								Qw = Qg * frelPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*fblockFProps[Ix][Iy][Iz][BMU][1] / (frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * watMu);
								Qo = Qg * frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fblockFProps[Ix][Iy][Iz][BMU][1] / (frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fblockFProps[Ix][Iy][Iz][BMU][0]);

							}

							//QoProd=oilRateCh2(Ix, Iy, Iz, -Qo, -Qg);
							QoProduced = Qo;
						}

						else if ((welli[i][0] == 2) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {			//Constant Pwf Pressure - Water Injection
																																																						//Re = Re_f;
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][1] * fperm[Ix][Iy][Iz][0]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);

							PIw = S1 * watRo*WAT_M_RO*frelPerm[Ix][Iy][Iz][0] / watMu;
							Qw = PIw * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][0]);


							if ((Qw < 0) || ((Qw - Qw) != 0)) {
								Qw = 0;
								PIw = 0;
							}

							if ((wellf[i][1]) && (Qw > wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								SSo1 = 0;
								for (j = welli[i][3]; j <= welli[i][4]; j++) {
									S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
									SSo1 += watRo * S2*frelPerm[Ix][Iy][j][0] / watMu;
									S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
									SSo1 += watRo * S2*relPerm[Ix][Iy][j][0] / watMu;
								}
								S1 = gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][0] * fperm[Ix][Iy][Iz][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);

								if (SSo1) Qw = S1 * wellf[i][1] * watRo*WAT_M_RO * frelPerm[Ix][Iy][Iz][0] / (watMu * SSo1);
							}
						}

						else if ((welli[i][0] == 3) && (((fabs(simTime - wellf[i][Nc + 4]) <= TSTEPIF) || (fabs(simTime - wellf[i][Nc + 5]) <= TSTEPIF)) || ((simTime >= wellf[i][Nc + 4]) && (simTime <= wellf[i][Nc + 5])))) {		//Constant Pwf Pressure - Gas Injection
																																																										//Re = Re_f;

							for (j = 0; j < Nc; j++) IComp[j] = wellf[i][4 + j];
							FlashInjection(IComp, wellf[i][0], IOComp, IGComp, iOF, iGF, iOD, iGD, iOV, iGV);
							//Re = Calc_Re(Ix, Iy, Iz, i);
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][1] * fperm[Ix][Iy][Iz][0]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
							//S2 = sgt[Nsgt-1][1] / iGV;
							//S2 = relPerm[Ix][Iy][Iz][2] / blockFProps[Ix][Iy][Iz][BMU][1];

							PIg = S1 * iGD * sgt[Nsgt - 1][1] * iGF / iGV;
							Qg = PIg * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
							//PIo = S1*iOD * swt[0][2]*iOF / iOV;
							PIo = PIg * iOF / iGF;
							Qo = PIo * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

							if ((Qo < 0) || ((Qo - Qo) != 0)) {
								Qo = 0;
								PIo = 0;
							}
							if ((Qg < 0) || ((Qg - Qg) != 0)) {
								Qg = 0;
								PIg = 0;
							}

							iWell = i;

							if ((wellf[i][1]) && (Qg > wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								SSo1 = 0;
								for (j = welli[i][3]; j <= welli[i][4]; j++) {
									S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
									//SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][Iz][BMU][1];
									SSo1 += S2;
									S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
									//SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][Iz][BMU][1];
									SSo1 += S2;
								}
								S1 = gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][0] * fperm[Ix][Iy][Iz][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);

								//if (SSo1) Qg = S1*wellf[i][1] * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / (blockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
								if (SSo1) Qg = S1 * wellf[i][1] / SSo1;
								if (SSo1) Qo = Qg * iOF / iGF;
							}

							Qginj = Qg + Qo;
						}

						else if ((welli[i][0] == 4) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {		//Constant Oil Rate
							SSo1 = 0;
							for (j = welli[i][3]; j <= welli[i][4]; j++) {
								S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
								SSo1 += fblockFProps[Ix][Iy][j][RO][0] * S2*frelPerm[Ix][Iy][j][1] / fblockFProps[Ix][Iy][Iz][BMU][0];
								S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
								SSo1 += blockFProps[Ix][Iy][j][RO][0] * S2*relPerm[Ix][Iy][j][1] / blockFProps[Ix][Iy][Iz][BMU][0];
							}
							S1 = gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][0] * fperm[Ix][Iy][Iz][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);

							if (SSo1) {
								if (SURFACE_RATES) Qo = -S1 * oilRateCh(Ix, Iy, Iz, frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fblockFProps[Ix][Iy][Iz][BMU][0] / (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fblockFProps[Ix][Iy][Iz][BMU][1]))*wellf[i][0] * fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / (fblockFProps[Ix][Iy][Iz][BMU][0] * SSo1);
								else Qo = -S1 * wellf[i][0] * fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / (fblockFProps[Ix][Iy][Iz][BMU][0] * SSo1);
							}
							Qw = Qo * frelPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*fblockFProps[Ix][Iy][Iz][BMU][0] / (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * watMu);
							Qg = Qo * frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fblockFProps[Ix][Iy][Iz][BMU][0] / (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fblockFProps[Ix][Iy][Iz][BMU][1]);

							//Re = Re_f;
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][1] * fperm[Ix][Iy][Iz][0]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
							Pwf = fP[Ix + 1][Iy + 1][Iz + 1][1] - Qo / (S1*fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / fblockFProps[Ix][Iy][Iz][BMU][0]);

							if ((wellf[i][1]) && (Pwf < wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								PIw = S1 * watRo*WAT_M_RO*frelPerm[Ix][Iy][Iz][0] / watMu;
								PIo = S1 * fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / fblockFProps[Ix][Iy][Iz][BMU][0];
								PIg = S1 * fblockFProps[Ix][Iy][Iz][RO][1] * frelPerm[Ix][Iy][Iz][2] / fblockFProps[Ix][Iy][Iz][BMU][1];

								Qw = PIw * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][0]);
								Qo = PIo * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
								Qg = PIg * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

								if ((Qw > 0) || ((Qw - Qw) != 0)) {
									Qw = 0;
									PIw = 0;
								}
								if ((Qo > 0) || ((Qo - Qo) != 0)) {
									Qo = 0;
									PIo = 0;
								}
								if ((Qg > 0) || ((Qg - Qg) != 0)) {
									Qg = 0;
									PIg = 0;
								}
							}

							if (fP[Ix + 1][Iy + 1][Iz + 1][1] < WELL_MIN_P) {
								Qw = 0;
								Qo = 0;
								Qg = 0;
								
								PIw = 0;
								PIo = 0;
								PIg = 0;
							}

							QoProduced = Qo;
							Qoprod = Qo + Qg;
						}

						else if ((welli[i][0] == 5) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {		//Constant Gas Rate
							SSo1 = 0;
							for (j = welli[i][3]; j <= welli[i][4]; j++) {
								S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
								SSo1 += fblockFProps[Ix][Iy][j][RO][1] * S2*frelPerm[Ix][Iy][j][2] / fblockFProps[Ix][Iy][Iz][BMU][1];
								S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
								SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][Iz][BMU][1];
							}
							S1 = gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][0] * fperm[Ix][Iy][Iz][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);

							if (SSo1) {
								if (SURFACE_RATES) Qg = -S1 * gasRateCh(Ix, Iy, Iz, (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fblockFProps[Ix][Iy][Iz][BMU][1]) / (frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fblockFProps[Ix][Iy][Iz][BMU][0]))*wellf[i][1] * fblockFProps[Ix][Iy][Iz][RO][1] * frelPerm[Ix][Iy][Iz][2] / (fblockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
								else Qg = -S1 * wellf[i][1] * fblockFProps[Ix][Iy][Iz][RO][1] * frelPerm[Ix][Iy][Iz][2] / (fblockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
							}
							Qw = Qg * frelPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*fblockFProps[Ix][Iy][Iz][BMU][1] / (frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * watMu);
							Qo = Qg * frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fblockFProps[Ix][Iy][Iz][BMU][1] / (frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fblockFProps[Ix][Iy][Iz][BMU][0]);

							//Re = Re_f;
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][1] * fperm[Ix][Iy][Iz][0]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
							Pwf = fP[Ix + 1][Iy + 1][Iz + 1][2] - Qg / (S1*fblockFProps[Ix][Iy][Iz][RO][1] * frelPerm[Ix][Iy][Iz][2] / fblockFProps[Ix][Iy][Iz][BMU][1]);

							if ((wellf[i][1]) && (Pwf < wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								PIw = S1 * watRo*WAT_M_RO*frelPerm[Ix][Iy][Iz][0] / watMu;
								PIo = S1 * fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / fblockFProps[Ix][Iy][Iz][BMU][0];
								PIg = S1 * fblockFProps[Ix][Iy][Iz][RO][1] * frelPerm[Ix][Iy][Iz][2] / fblockFProps[Ix][Iy][Iz][BMU][1];

								Qw = PIw * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][0]);
								Qo = PIo * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
								Qg = PIg * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

								if ((Qw > 0) || ((Qw - Qw) != 0)) {
									Qw = 0;
									PIw = 0;
								}
								if ((Qo > 0) || ((Qo - Qo) != 0)) {
									Qo = 0;
									PIo = 0;
								}
								if ((Qg > 0) || ((Qg - Qg) != 0)) {
									Qg = 0;
									PIg = 0;
								}
							}
						}

						else if ((welli[i][0] == 6) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {		//Constant Total Production Rate
							SSw = 0;
							SSo = 0;
							SSg = 0;
							SSo1 = 0;
							for (j = welli[i][3]; j <= welli[i][4]; j++) {
								S1 = (frelPerm[Ix][Iy][j][0] / watMu) + (frelPerm[Ix][Iy][j][1] / fblockFProps[Ix][Iy][j][BMU][0]) + (frelPerm[Ix][Iy][j][2] / fblockFProps[Ix][Iy][j][BMU][1]);
								SSw += (frelPerm[Ix][Iy][j][0] / watMu) / S1;
								SSo += (frelPerm[Ix][Iy][j][1] / fblockFProps[Ix][Iy][j][BMU][0]) / S1;
								SSg += (frelPerm[Ix][Iy][j][2] / fblockFProps[Ix][Iy][j][BMU][1]) / S1;

								S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
								SSo1 += fblockFProps[Ix][Iy][j][RO][0] * S2*frelPerm[Ix][Iy][j][1] / fblockFProps[Ix][Iy][Iz][BMU][0];

								S1 = (relPerm[Ix][Iy][j][0] / watMu) + (relPerm[Ix][Iy][j][1] / blockFProps[Ix][Iy][j][BMU][0]) + (relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][j][BMU][1]);
								SSw += (relPerm[Ix][Iy][j][0] / watMu) / S1;
								SSo += (relPerm[Ix][Iy][j][1] / blockFProps[Ix][Iy][j][BMU][0]) / S1;
								SSg += (relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][j][BMU][1]) / S1;

								S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
								SSo1 += blockFProps[Ix][Iy][j][RO][0] * S2*relPerm[Ix][Iy][j][1] / blockFProps[Ix][Iy][Iz][BMU][0];

							}
							QoP = SSo * wellf[i][0] / (SSw + SSo + SSg);

							S1 = gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][0] * fperm[Ix][Iy][Iz][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
							if (SSo1) Qo = -S1 * QoP*fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / (fblockFProps[Ix][Iy][Iz][BMU][0] * SSo1);
							Qw = Qo * frelPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*fblockFProps[Ix][Iy][Iz][BMU][0] / (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * watMu);
							Qg = Qo * frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fblockFProps[Ix][Iy][Iz][BMU][0] / (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fblockFProps[Ix][Iy][Iz][BMU][1]);


							//Re = Re_f;
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][1] * fperm[Ix][Iy][Iz][0]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
							Pwf = fP[Ix + 1][Iy + 1][Iz + 1][1] - (Qw + Qo + Qg) / (S1*(watRo*WAT_M_RO*frelPerm[Ix][Iy][Iz][0] / watMu + fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / fblockFProps[Ix][Iy][Iz][BMU][0] + fblockFProps[Ix][Iy][Iz][RO][1] * frelPerm[Ix][Iy][Iz][2] / fblockFProps[Ix][Iy][Iz][BMU][1]));

							if ((wellf[i][1]) && (Pwf < wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								PIw = S1 * watRo*WAT_M_RO*frelPerm[Ix][Iy][Iz][0] / watMu;
								PIo = S1 * fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / fblockFProps[Ix][Iy][Iz][BMU][0];
								PIg = S1 * fblockFProps[Ix][Iy][Iz][RO][1] * frelPerm[Ix][Iy][Iz][2] / fblockFProps[Ix][Iy][Iz][BMU][1];

								Qw = PIw * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][0]);
								Qo = PIo * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
								Qg = PIg * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

								if ((Qw > 0) || ((Qw - Qw) != 0)) {
									Qw = 0;
									PIw = 0;
								}
								if ((Qo > 0) || ((Qo - Qo) != 0)) {
									Qo = 0;
									PIo = 0;
								}
								if ((Qg > 0) || ((Qg - Qg) != 0)) {
									Qg = 0;
									PIg = 0;
								}
							}
						}

						else if ((welli[i][0] == 7) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {			//Constant Water Injection Rate
							SSw = 0;
							for (j = welli[i][3]; j <= welli[i][4]; j++) {
								S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
								SSo1 += S2 * frelPerm[Ix][Iy][j][0];
								S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
								SSo1 += S2 * relPerm[Ix][Iy][j][0];
							}
							S1 = gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][0] * fperm[Ix][Iy][Iz][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
							if (SSw) Qw = S1 * wellf[i][0] * frelPerm[Ix][Iy][Iz][1] / SSw;

							//Re = Re_f;
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][1] * fperm[Ix][Iy][Iz][0]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
							Pwf = fP[Ix + 1][Iy + 1][Iz + 1][0] - Qw / (S1*watRo*WAT_M_RO * frelPerm[Ix][Iy][Iz][1] / watMu);
							if ((wellf[i][1]) && (Pwf > wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								PIw = S1 * watRo*WAT_M_RO*frelPerm[Ix][Iy][Iz][0] / watMu;
								Qw = PIw * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][0]);

								if ((Qw < 0) || ((Qw - Qw) != 0)) {
									Qw = 0;
									PIw = 0;
								}
							}
						}

						else if ((welli[i][0] == 8) && (((fabs(simTime - wellf[i][Nc + 4]) <= TSTEPIF) || (fabs(simTime - wellf[i][Nc + 5]) <= TSTEPIF)) || ((simTime >= wellf[i][Nc + 4]) && (simTime <= wellf[i][Nc + 5])))) {			//Constant Gas Injection Rate
							for (j = 0; j < Nc; j++) IComp[j] = wellf[i][4 + j];
							FlashInjection(IComp, wellf[i][1], IOComp, IGComp, iOF, iGF, iOD, iGD, iOV, iGV);

							SSo1 = 0;
							for (j = welli[i][3]; j <= welli[i][4]; j++) {
								S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
								//SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][Iz][BMU][1];
								//SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*sgt[Nsgt-1][1] / blockFProps[Ix][Iy][Iz][BMU][1];
								SSo1 += S2;

								S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
								//SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][Iz][BMU][1];
								//SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*sgt[Nsgt-1][1] / blockFProps[Ix][Iy][Iz][BMU][1];
								SSo1 += S2;
							}
							S1 = gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][0] * fperm[Ix][Iy][Iz][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);

							//if (SSo1) Qg = S1*wellf[i][0] * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / (blockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
							//if (SSo1) Qg = S1*wellf[i][0] * blockFProps[Ix][Iy][Iz][RO][1] * sgt[Nsgt - 1][1] / (blockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
							if (SSo1) Qg = S1 * wellf[i][0] / SSo1;
							if (SSo1) Qo = Qg * iOF / iGF;
							//Re = 0.14*sqrt(sqrt(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0])*gridDim[Ix] * gridDim[Ix] + sqrt(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1])*gridDim[Nx + Iy] * gridDim[Nx + Iy]);
							//Re /= 0.5*(pow(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0], 0.25) + pow(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1], 0.25));



							//Re = Calc_Re(Ix, Iy, Iz, i);
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][1] * fperm[Ix][Iy][Iz][0]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
							//Pwf = P[Ix + 1][Iy + 1][Iz + 1][2] - Qg / (S1*blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / blockFProps[Ix][Iy][Iz][BMU][1]);
							//Pwf = P[Ix + 1][Iy + 1][Iz + 1][2] - Qg / (S1*blockFProps[Ix][Iy][Iz][RO][1] * sgt[Nsgt - 1][1] / blockFProps[Ix][Iy][Iz][BMU][1]);
							Pwf = fP[Ix + 1][Iy + 1][Iz + 1][2] - Qg / (S1*iGD * sgt[Nsgt - 1][1] / iGV);

							if ((wellf[i][1]) && (Pwf > wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								PIg = S1 * iGD * sgt[Nsgt - 1][1] * iGF / iGV;
								Qg = PIg * (wellf[i][1] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
								//PIo = S1*iOD * swt[0][2]*iOF / iOV;
								PIo = PIg * iOF / iGF;
								Qo = PIo * (wellf[i][1] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

								if ((Qo < 0) || ((Qo - Qo) != 0)) {
									Qo = 0;
									PIo = 0;
								}
								if ((Qg < 0) || ((Qg - Qg) != 0)) {
									Qg = 0;
									PIg = 0;
								}
							}

							if (fP[Ix + 1][Iy + 1][Iz + 1][1] > WELL_MAX_P) {
								Qw = 0;
								Qo = 0;
								Qg = 0;
								IOComp[0] = 0;
								IOComp[1] = 0;
								IGComp[0] = 0;
								IGComp[1] = 0;
								PIw = 0;
								PIo = 0;
								PIg = 0;
							}


							QgInjected = Qg;


							QgInj = Qg;

							iWell = i;
							gasInjStat = -1;

							Qginj += Qg + Qo;
						}


					}
					QwT += Qw;
					QoT += Qo;
					QgT += Qg;
				}



#pragma endregion

				if (BENo < (2 * Nc - 1)) {
					i = BENo - Nc;

					LSide = (Vb / Dt)*(porpor*(fcomp[Ix][Iy][Iz][i][0] * fblockFProps[Ix][Iy][Iz][RO][0] * fsat[Ix][Iy][Iz][1] + fcomp[Ix][Iy][Iz][i][1] * fblockFProps[Ix][Iy][Iz][RO][1] * fsat[Ix][Iy][Iz][2]) - fpreProp[Ix][Iy][Iz][i]);
					RSide = fcomp[(Ix + ftransS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][0][0] * (fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) - fcomp[(Ix - 1 + ftransS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix][Iy + 1][Iz + 1][0][0] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);
					RSide += fcomp[Ix][(Iy + ftransS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][0][1] * (fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) - fcomp[Ix][(Iy - 1 + ftransS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy][Iz + 1][0][1] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);
					RSide += fcomp[Ix][Iy][(Iz + ftransS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][0][2] * (fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) - fcomp[Ix][Iy][(Iz - 1 + ftransS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz][0][2] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);
					RSide += fcomp[(Ix + ftransS[Ix + 1][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][1][0] * (fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]) - fcomp[(Ix - 1 + ftransS[Ix][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * ftrans[Ix][Iy + 1][Iz + 1][1][0] * (fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);
					RSide += fcomp[Ix][(Iy + ftransS[Ix + 1][Iy + 1][Iz + 1][1][1])][Iz][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][1][1] * (fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]) - fcomp[Ix][(Iy - 1 + ftransS[Ix + 1][Iy][Iz + 1][1][1])][Iz][i][1] * ftrans[Ix + 1][Iy][Iz + 1][1][1] * (fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);
					RSide += fcomp[Ix][Iy][(Iz + ftransS[Ix + 1][Iy + 1][Iz + 1][1][2])][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][1][2] * (fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]) - fcomp[Ix][Iy][(Iz - 1 + ftransS[Ix + 1][Iy + 1][Iz][1][2])][i][1] * ftrans[Ix + 1][Iy + 1][Iz][1][2] * (fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);

					RSide += fcomp[(Ix + ftransS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][2][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - fcomp[(Ix - 1 + ftransS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix][Iy + 1][Iz + 1][2][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
					RSide += fcomp[Ix][(Iy + ftransS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][2][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - fcomp[Ix][(Iy - 1 + ftransS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy][Iz + 1][2][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
					RSide += fcomp[Ix][Iy][(Iz + ftransS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][2][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]) - fcomp[Ix][Iy][(Iz - 1 + ftransS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz][2][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
					RSide += fcomp[(Ix + ftransS[Ix + 1][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][3][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - fcomp[(Ix - 1 + ftransS[Ix][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * ftrans[Ix][Iy + 1][Iz + 1][3][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
					RSide += fcomp[Ix][(Iy + ftransS[Ix + 1][Iy + 1][Iz + 1][1][1])][Iz][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][3][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - fcomp[Ix][(Iy - 1 + ftransS[Ix + 1][Iy][Iz + 1][1][1])][Iz][i][1] * ftrans[Ix + 1][Iy][Iz + 1][3][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
					RSide += fcomp[Ix][Iy][(Iz + ftransS[Ix + 1][Iy + 1][Iz + 1][1][2])][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][3][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]) - fcomp[Ix][Iy][(Iz - 1 + ftransS[Ix + 1][Iy + 1][Iz][1][2])][i][1] * ftrans[Ix + 1][Iy + 1][Iz][3][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);


					////////////////////////////Transfer Function

					//	if (comp[Ix][Iy][Iz][i][0] > fcomp[Ix][Iy][Iz][i][0]) f_m_diffusion[0] = diffusion[Ix][Iy][Iz][i][0];
					//else f_m_diffusion[0] = fdiffusion[Ix][Iy][Iz][i][0];

					//		if (comp[Ix][Iy][Iz][i][1] > fcomp[Ix][Iy][Iz][i][1]) f_m_diffusion[1] = diffusion[Ix][Iy][Iz][i][1];
					//	else f_m_diffusion[1] = fdiffusion[Ix][Iy][Iz][i][1];
					//Transfer function Rside 
					RSide -= ZERO_CONV * SI_C *comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
					RSide -= ZERO_CONV * SI_C * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor) / (porpor + Mporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (1))//only Liq in Fracture & Matrix
						RSide -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (-1))//only Gas in Fracture & Matrix
						RSide -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0)) {
						RSide -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);

						RSide -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

					}

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
						//RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);

						RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
					}

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (1)) {
						//RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);

						RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
					}

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1)) {
						//RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);

						RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);

						RSide -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
					}

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1)) {
						RSide -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

						//RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);

						RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
					}

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0)) {
						//RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);

						RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);

						RSide -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
					}

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0)) {
						RSide -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

						//RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);

						RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
					}
					//	
					/////////////////////////////////////////
					if (iWell == (-1)) {
						gComp = fcomp[Ix][Iy][Iz][i][1];
						oComp = fcomp[Ix][Iy][Iz][i][0];
					}
					else {
						if (welli[iWell][0] == 3) {
							gComp = IGComp[i];
							oComp = IOComp[i];
						}
						else if (welli[iWell][0] == 8) {
							//gComp = wellf[iWell][i + 4];
							gComp = IGComp[i];
							oComp = IOComp[i];
						}
					}

					RSide += oComp * Qo + gComp * Qg;


					if (fphaseStat[Ix][Iy][Iz] == (-1)) dCoefl = 0;
					else dCoefl = 1;
					if (fphaseStat[Ix][Iy][Iz] == 1) dCoefg = 0;
					else dCoefg = 1;



					if (Ix < (Nx - 1)) {
						if (fphaseStat[Ix + 1][Iy][Iz] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][RO][0] * gridDim[Ix + 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][BMU][0] * gridDim[Ix + 1] * Coef;
						porpor2 = fporosity[Ix + 1][Iy][Iz] * (1 + cpor * (fP[Ix + 2][Iy + 1][Iz + 1][1] - refP) + dcpor * (fP[Ix + 2][Iy + 1][Iz + 1][1] - refP)*(fP[Ix + 2][Iy + 1][Iz + 1][1] - refP));
						if (fcomp[Ix + 1][Iy][Iz][i][0] > fcomp[Ix][Iy][Iz][i][0]) {
							DupStream = fdiffusion[Ix + 1][Iy][Iz][i][0];
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][0];
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix + 1][Iy][Iz] < 1e-10)) DupStream = 0;
						AAd = fblockFProps[Ix + 1][Iy][Iz][RO][0] * gridDim[Ix + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] * dCoefl;
						AAd *= (fsat[Ix + 1][Iy][Iz][1] * gridDim[Ix + 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Ix] * dCoefl) / (gridDim[Ix + 1] + gridDim[Ix]);
						BBd = gridDim[Ix + 1] * Coef / porpor2 + gridDim[Ix] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz] / (gridDim[Ix + 1] + gridDim[Ix]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = fcomp[Ix + 1][Iy][Iz][i][0] - fcomp[Ix][Iy][Iz][i][0];
						RSide += DTran * DeltaX;


						if (fphaseStat[Ix + 1][Iy][Iz] == 1) Coef = 0;
						else Coef = 1;
						Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][RO][1] * gridDim[Ix + 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][BMU][1] * gridDim[Ix + 1] * Coef;
						//////////////////////////////////////////////////////
						if (fcomp[Ix + 1][Iy][Iz][i][1] > fcomp[Ix][Iy][Iz][i][1]) {
							DupStream = fdiffusion[Ix + 1][Iy][Iz][i][1];
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][1];
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix + 1][Iy][Iz] < 1e-10)) DupStream = 0;
						AAd = fblockFProps[Ix + 1][Iy][Iz][RO][1] * gridDim[Ix + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] * dCoefg;
						AAd *= (fsat[Ix + 1][Iy][Iz][2] * gridDim[Ix + 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Ix] * dCoefg) / (gridDim[Ix + 1] + gridDim[Ix]);
						BBd = gridDim[Ix + 1] * Coef / porpor2 + gridDim[Ix] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Nx+Iy]*gridDim[Nx+Ny+Iz]/(gridDim[Ix+1]+gridDim[Ix]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = fcomp[Ix + 1][Iy][Iz][i][1] - fcomp[Ix][Iy][Iz][i][1];
						RSide += DTran * DeltaX;
					}

					if (Ix > 0) {
						if (fphaseStat[Ix - 1][Iy][Iz] == (-1)) Coef = 0;
						else Coef = 1;
						Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][RO][0] * gridDim[Ix - 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][BMU][0] * gridDim[Ix - 1] * Coef;

						porpor2 = fporosity[Ix - 1][Iy][Iz] * (1 + cpor * (fP[Ix][Iy + 1][Iz + 1][1] - refP) + dcpor * (fP[Ix][Iy + 1][Iz + 1][1] - refP)*(fP[Ix][Iy + 1][Iz + 1][1] - refP));
						if (fcomp[Ix - 1][Iy][Iz][i][0] > fcomp[Ix][Iy][Iz][i][0]) {
							DupStream = fdiffusion[Ix - 1][Iy][Iz][i][0];
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][0];
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix - 1][Iy][Iz] < 1e-10)) DupStream = 0;
						AAd = fblockFProps[Ix - 1][Iy][Iz][RO][0] * gridDim[Ix - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] * dCoefl;
						AAd *= (fsat[Ix - 1][Iy][Iz][1] * gridDim[Ix - 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Ix] * dCoefl) / (gridDim[Ix - 1] + gridDim[Ix]);
						BBd = gridDim[Ix - 1] * Coef / porpor2 + gridDim[Ix] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz] / (gridDim[Ix - 1] + gridDim[Ix]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = fcomp[Ix][Iy][Iz][i][0] - fcomp[Ix - 1][Iy][Iz][i][0];
						RSide -= DTran * DeltaX;

						if (fphaseStat[Ix - 1][Iy][Iz] == 1) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][RO][1] * gridDim[Ix - 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][BMU][1] * gridDim[Ix - 1] * Coef;

						if (fcomp[Ix - 1][Iy][Iz][i][1] > fcomp[Ix][Iy][Iz][i][1]) {
							DupStream = fdiffusion[Ix - 1][Iy][Iz][i][1];
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][1];
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix - 1][Iy][Iz] < 1e-10)) DupStream = 0;
						AAd = fblockFProps[Ix - 1][Iy][Iz][RO][1] * gridDim[Ix - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] * dCoefg;
						AAd *= (fsat[Ix - 1][Iy][Iz][2] * gridDim[Ix - 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Ix] * dCoefg) / (gridDim[Ix - 1] + gridDim[Ix]);
						BBd = gridDim[Ix - 1] * Coef / porpor2 + gridDim[Ix] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Nx+Iy]*gridDim[Nx+Ny+Iz]/(gridDim[Ix-1]+gridDim[Ix]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = fcomp[Ix][Iy][Iz][i][1] - fcomp[Ix - 1][Iy][Iz][i][1];
						RSide -= DTran * DeltaX;
					}

					if (Iy < (Ny - 1)) {
						if (fphaseStat[Ix][Iy + 1][Iz] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][RO][0] * gridDim[Nx + Iy + 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][BMU][0] * gridDim[Nx + Iy + 1] * Coef;

						porpor2 = fporosity[Ix][Iy + 1][Iz] * (1 + cpor * (fP[Ix + 1][Iy + 2][Iz + 1][1] - refP) + dcpor * (fP[Ix + 1][Iy + 2][Iz + 1][1] - refP)*(fP[Ix + 1][Iy + 2][Iz + 1][1] - refP));
						if (fcomp[Ix][Iy + 1][Iz][i][0] > fcomp[Ix][Iy][Iz][i][0]) {
							DupStream = fdiffusion[Ix][Iy + 1][Iz][i][0];
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][0];
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix][Iy + 1][Iz] < 1e-10)) DupStream = 0;
						AAd = fblockFProps[Ix][Iy + 1][Iz][RO][0] * gridDim[Nx + Iy + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] * dCoefl;
						AAd *= (fsat[Ix][Iy + 1][Iz][1] * gridDim[Nx + Iy + 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Nx + Iy] * dCoefl) / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
						BBd = gridDim[Nx + Iy + 1] * Coef / porpor2 + gridDim[Nx + Iy] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Ix] * gridDim[Nx + Ny + Iz] / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = fcomp[Ix][Iy + 1][Iz][i][0] - fcomp[Ix][Iy][Iz][i][0];
						RSide += DTran * DeltaX;

						if (fphaseStat[Ix][Iy + 1][Iz] == 1) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][RO][1] * gridDim[Nx + Iy + 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][BMU][1] * gridDim[Nx + Iy + 1] * Coef;

						/////////////////////////////////////////////////////////////////////////////
						if (fcomp[Ix][Iy + 1][Iz][i][1] > fcomp[Ix][Iy][Iz][i][1]) {
							DupStream = fdiffusion[Ix][Iy + 1][Iz][i][1];
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][1];
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix][Iy + 1][Iz] < 1e-10)) DupStream = 0;
						AAd = fblockFProps[Ix][Iy + 1][Iz][RO][1] * gridDim[Nx + Iy + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] * dCoefg;
						AAd *= (fsat[Ix][Iy + 1][Iz][2] * gridDim[Nx + Iy + 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Nx + Iy] * dCoefg) / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
						BBd = gridDim[Nx + Iy + 1] * Coef / porpor2 + gridDim[Nx + Iy] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Ix]*gridDim[Nx+Ny+Iz]/(gridDim[Nx+Iy+1]+gridDim[Nx+Iy]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = fcomp[Ix][Iy + 1][Iz][i][1] - fcomp[Ix][Iy][Iz][i][1];
						RSide += DTran * DeltaX;
					}

					if (Iy > 0) {
						if (fphaseStat[Ix][Iy - 1][Iz] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][RO][0] * gridDim[Nx + Iy - 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][BMU][0] * gridDim[Nx + Iy - 1] * Coef;

						porpor2 = fporosity[Ix][Iy - 1][Iz] * (1 + cpor * (fP[Ix + 1][Iy][Iz + 1][1] - refP) + dcpor * (fP[Ix + 1][Iy][Iz + 1][1] - refP)*(fP[Ix + 1][Iy][Iz + 1][1] - refP));

						if (fcomp[Ix][Iy - 1][Iz][i][0] > fcomp[Ix][Iy][Iz][i][0]) {
							DupStream = fdiffusion[Ix][Iy - 1][Iz][i][0];
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][0];
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix][Iy - 1][Iz] < 1e-10)) DupStream = 0;
						AAd = fblockFProps[Ix][Iy - 1][Iz][RO][0] * gridDim[Nx + Iy - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] * dCoefl;
						AAd *= (fsat[Ix][Iy - 1][Iz][1] * gridDim[Nx + Iy - 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Nx + Iy] * dCoefl) / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
						BBd = gridDim[Nx + Iy - 1] * Coef / porpor2 + gridDim[Nx + Iy] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Ix] * gridDim[Nx + Ny + Iz] / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = fcomp[Ix][Iy][Iz][i][0] - fcomp[Ix][Iy - 1][Iz][i][0];
						RSide -= DTran * DeltaX;

						if (fphaseStat[Ix][Iy - 1][Iz] == 1) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][RO][1] * gridDim[Nx + Iy - 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][BMU][1] * gridDim[Nx + Iy - 1] * Coef;

						///////////////////////////////////////////////////////////////////
						if (fcomp[Ix][Iy - 1][Iz][i][1] > fcomp[Ix][Iy][Iz][i][1]) {
							DupStream = fdiffusion[Ix][Iy - 1][Iz][i][1];
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][1];
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix][Iy - 1][Iz] < 1e-10)) DupStream = 0;
						AAd = fblockFProps[Ix][Iy - 1][Iz][RO][1] * gridDim[Nx + Iy - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] * dCoefg;
						AAd *= (fsat[Ix][Iy - 1][Iz][2] * gridDim[Nx + Iy - 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Nx + Iy] * dCoefg) / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
						BBd = gridDim[Nx + Iy - 1] * Coef / porpor2 + gridDim[Nx + Iy] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Ix]*gridDim[Nx+Ny+Iz]/(gridDim[Nx+Iy-1]+gridDim[Nx+Iy]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = fcomp[Ix][Iy][Iz][i][1] - fcomp[Ix][Iy - 1][Iz][i][1];
						RSide -= DTran * DeltaX;
					}

					if (Iz < (Nz - 1)) {
						if (fphaseStat[Ix][Iy][Iz + 1] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][RO][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][BMU][0] * gridDim[Nx + Ny + Iz + 1] * Coef;

						porpor2 = fporosity[Ix][Iy][Iz + 1] * (1 + cpor * (fP[Ix + 1][Iy + 1][Iz + 2][1] - refP) + dcpor * (fP[Ix + 1][Iy + 1][Iz + 2][1] - refP)*(fP[Ix + 1][Iy + 1][Iz + 2][1] - refP));
						if (fcomp[Ix][Iy][Iz + 1][i][0] > fcomp[Ix][Iy][Iz][i][0]) {
							DupStream = fdiffusion[Ix][Iy][Iz + 1][i][0];
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][0];
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix][Iy][Iz + 1] < 1e-10)) DupStream = 0;
						AAd = fblockFProps[Ix][Iy][Iz + 1][RO][0] * gridDim[Nx + Ny + Iz + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] * dCoefl;
						AAd *= (fsat[Ix][Iy][Iz + 1][1] * gridDim[Nx + Ny + Iz + 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Nx + Ny + Iz] * dCoefl) / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
						BBd = gridDim[Nx + Ny + Iz + 1] * Coef / porpor2 + gridDim[Nx + Ny + Iz] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Ix] * gridDim[Nx + Iy] / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = fcomp[Ix][Iy][Iz + 1][i][0] - fcomp[Ix][Iy][Iz][i][0];
						RSide += DTran * DeltaX;

						if (fphaseStat[Ix][Iy][Iz + 1] == 1) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][RO][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][BMU][1] * gridDim[Nx + Ny + Iz + 1] * Coef;

						if (fcomp[Ix][Iy][Iz + 1][i][1] > fcomp[Ix][Iy][Iz][i][1]) {
							DupStream = fdiffusion[Ix][Iy][Iz + 1][i][1];
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][1];
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix][Iy][Iz + 1] < 1e-10)) DupStream = 0;
						AAd = fblockFProps[Ix][Iy][Iz + 1][RO][1] * gridDim[Nx + Ny + Iz + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] * dCoefg;
						AAd *= (fsat[Ix][Iy][Iz + 1][2] * gridDim[Nx + Ny + Iz + 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Nx + Ny + Iz] * dCoefg) / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
						BBd = gridDim[Nx + Ny + Iz + 1] * Coef / porpor2 + gridDim[Nx + Ny + Iz] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Ix]*gridDim[Nx+Iy]/(gridDim[Nx+Ny+Iz+1]+gridDim[Nx+Ny+Iz]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = fcomp[Ix][Iy][Iz + 1][i][1] - fcomp[Ix][Iy][Iz][i][1];
						RSide += DTran * DeltaX;
					}

					if (Iz > 0) {
						if (fphaseStat[Ix][Iy][Iz - 1] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][RO][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][BMU][0] * gridDim[Nx + Ny + Iz - 1] * Coef;

						porpor2 = fporosity[Ix][Iy][Iz - 1] * (1 + cpor * (fP[Ix + 1][Iy + 1][Iz][1] - refP) + dcpor * (fP[Ix + 1][Iy + 1][Iz][1] - refP)*(fP[Ix + 1][Iy + 1][Iz][1] - refP));
						if (fcomp[Ix][Iy][Iz - 1][i][0] > fcomp[Ix][Iy][Iz][i][0]) {
							DupStream = fdiffusion[Ix][Iy][Iz - 1][i][0];
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][0];
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix][Iy][Iz - 1] < 1e-10)) DupStream = 0;
						AAd = fblockFProps[Ix][Iy][Iz - 1][RO][0] * gridDim[Nx + Ny + Iz - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] * dCoefl;
						AAd *= (fsat[Ix][Iy][Iz - 1][1] * gridDim[Nx + Ny + Iz - 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Nx + Ny + Iz] * dCoefl) / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
						BBd = gridDim[Nx + Ny + Iz - 1] * Coef / porpor2 + gridDim[Nx + Ny + Iz] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Ix] * gridDim[Nx + Iy] / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = fcomp[Ix][Iy][Iz][i][0] - fcomp[Ix][Iy][Iz - 1][i][0];
						RSide -= DTran * DeltaX;

						if (fphaseStat[Ix][Iy][Iz - 1] == 1) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][RO][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][BMU][1] * gridDim[Nx + Ny + Iz - 1] * Coef;

						if (fcomp[Ix][Iy][Iz - 1][i][1] > fcomp[Ix][Iy][Iz][i][1]) {
							DupStream = fdiffusion[Ix][Iy][Iz - 1][i][1];
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][1];
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix][Iy][Iz - 1] < 1e-10)) DupStream = 0;
						AAd = fblockFProps[Ix][Iy][Iz - 1][RO][1] * gridDim[Nx + Ny + Iz - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] * dCoefg;
						AAd *= (fsat[Ix][Iy][Iz - 1][2] * gridDim[Nx + Ny + Iz - 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Nx + Ny + Iz] * dCoefg) / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
						BBd = gridDim[Nx + Ny + Iz - 1] * Coef / porpor2 + gridDim[Nx + Ny + Iz] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Ix]*gridDim[Nx+Iy]/(gridDim[Nx+Ny+Iz-1]+gridDim[Nx+Ny+Iz]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = fcomp[Ix][Iy][Iz][i][1] - fcomp[Ix][Iy][Iz - 1][i][1];
						RSide -= DTran * DeltaX;
					}
#ifdef USE_MKL_SOLVER
					MKLRHSVector[actx->LocalIndex] = RSide - LSide;
#else
					LocalF[actx->LocalIndex] = LSide - RSide;
#endif
				}
					

					
				else if (BENo < (2 * Nc)) {

					LSide = (Vb / Dt)*(porpor*(fblockFProps[Ix][Iy][Iz][RO][0] * fsat[Ix][Iy][Iz][1] + fblockFProps[Ix][Iy][Iz][RO][1] * fsat[Ix][Iy][Iz][2]) - fpreProp[Ix][Iy][Iz][Nc - 1]);
					RSide = ftrans[Ix + 1][Iy + 1][Iz + 1][0][0] * (fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) - ftrans[Ix][Iy + 1][Iz + 1][0][0] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);
					RSide += ftrans[Ix + 1][Iy + 1][Iz + 1][0][1] * (fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) - ftrans[Ix + 1][Iy][Iz + 1][0][1] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);
					RSide += ftrans[Ix + 1][Iy + 1][Iz + 1][0][2] * (fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) - ftrans[Ix + 1][Iy + 1][Iz][0][2] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);
					RSide += ftrans[Ix + 1][Iy + 1][Iz + 1][1][0] * (fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]) - ftrans[Ix][Iy + 1][Iz + 1][1][0] * (fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);
					RSide += ftrans[Ix + 1][Iy + 1][Iz + 1][1][1] * (fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]) - ftrans[Ix + 1][Iy][Iz + 1][1][1] * (fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);
					RSide += ftrans[Ix + 1][Iy + 1][Iz + 1][1][2] * (fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]) - ftrans[Ix + 1][Iy + 1][Iz][1][2] * (fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);

					RSide += ftrans[Ix + 1][Iy + 1][Iz + 1][2][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - ftrans[Ix][Iy + 1][Iz + 1][2][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
					RSide += ftrans[Ix + 1][Iy + 1][Iz + 1][2][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - ftrans[Ix + 1][Iy][Iz + 1][2][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
					RSide += ftrans[Ix + 1][Iy + 1][Iz + 1][2][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]) - ftrans[Ix + 1][Iy + 1][Iz][2][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
					RSide += ftrans[Ix + 1][Iy + 1][Iz + 1][3][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - ftrans[Ix][Iy + 1][Iz + 1][3][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
					RSide += ftrans[Ix + 1][Iy + 1][Iz + 1][3][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - ftrans[Ix + 1][Iy][Iz + 1][3][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
					RSide += ftrans[Ix + 1][Iy + 1][Iz + 1][3][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]) - ftrans[Ix + 1][Iy + 1][Iz][3][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);

					///////////////////////////////////Transfer Function 

					RSide -= ZERO_CONV * SI_C *blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
					RSide -= ZERO_CONV * SI_C *blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor) / (porpor + Mporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));

					/////////////////////////////////////
					RSide += Qo + Qg;
#ifdef USE_MKL_SOLVER
					MKLRHSVector[actx->LocalIndex] = RSide - LSide;
#else
					LocalF[actx->LocalIndex] = LSide - RSide;
#endif

				}
				else {
					LSide = (Vb / Dt)*(porpor*watRo*WAT_M_RO*fsat[Ix][Iy][Iz][0] - fpreProp[Ix][Iy][Iz][Nc]);
					RSide = fWtran[Ix + 1][Iy + 1][Iz + 1][0] * (fP[Ix + 2][Iy + 1][Iz + 1][0] - fP[Ix + 1][Iy + 1][Iz + 1][0]) - fWtran[Ix][Iy + 1][Iz + 1][0] * (fP[Ix + 1][Iy + 1][Iz + 1][0] - fP[Ix][Iy + 1][Iz + 1][0]);
					RSide += fWtran[Ix + 1][Iy + 1][Iz + 1][1] * (fP[Ix + 1][Iy + 2][Iz + 1][0] - fP[Ix + 1][Iy + 1][Iz + 1][0]) - fWtran[Ix + 1][Iy][Iz + 1][1] * (fP[Ix + 1][Iy + 1][Iz + 1][0] - fP[Ix + 1][Iy][Iz + 1][0]);
					RSide += fWtran[Ix + 1][Iy + 1][Iz + 1][2] * (fP[Ix + 1][Iy + 1][Iz + 2][0] - fP[Ix + 1][Iy + 1][Iz + 1][0]) - fWtran[Ix + 1][Iy + 1][Iz][2] * (fP[Ix + 1][Iy + 1][Iz + 1][0] - fP[Ix + 1][Iy + 1][Iz][0]);

					RSide += G_ACC * watRo*fWtran[Ix + 1][Iy + 1][Iz + 1][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - G_ACC * watRo*fWtran[Ix][Iy + 1][Iz + 1][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
					RSide += G_ACC * watRo*fWtran[Ix + 1][Iy + 1][Iz + 1][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - G_ACC * watRo*fWtran[Ix + 1][Iy][Iz + 1][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
					RSide += G_ACC * watRo*fWtran[Ix + 1][Iy + 1][Iz + 1][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]) - G_ACC * watRo*fWtran[Ix + 1][Iy + 1][Iz][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);

					/////////////////////////////Transfer Function


					RSide -= ZERO_CONV * SI_C* watRo *WAT_M_RO * ShapeFactor_2(Ix, Iy, Iz) * f_m_relperm[0] / watMu * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) *((fP[Ix + 1][Iy + 1][Iz + 1][0] - P[Ix + 1][Iy + 1][Iz + 1][0]) + (blockFProps[Ix][Iy][Iz][BLOCK_PC][0] - fblockFProps[Ix][Iy][Iz][BLOCK_PC][0]));

					////////////////////////////////////////////
					RSide += Qw;

#ifdef USE_MKL_SOLVER
					MKLRHSVector[actx->LocalIndex] = RSide - LSide;
#else
					LocalF[actx->LocalIndex] = LSide - RSide;
#endif
				}
			}
			else if (BENo < (2 * Nc + 2)) {
				Sxl = 0;
				for (i = 0; i < Nc; i++) Sxl += fcomp[Ix][Iy][Iz][i][0];
#ifdef USE_MKL_SOLVER
				MKLRHSVector[actx->LocalIndex] = 1- Sxl;
#else
				LocalF[actx->LocalIndex] = Sxl - 1;
#endif
			}
			else if (BENo < (2 * Nc + 3)) {
				Sxg = 0;
				for (i = 0; i<Nc; i++) Sxg += fcomp[Ix][Iy][Iz][i][1];
#ifdef USE_MKL_SOLVER
				MKLRHSVector[actx->LocalIndex] = 1 - Sxg;
#else
				LocalF[actx->LocalIndex] = Sxg - 1;
#endif
			}
			else if (BENo < (2 * Nc + 4)) {
#ifdef USE_MKL_SOLVER
				MKLRHSVector[actx->LocalIndex] = 1 - fsat[Ix][Iy][Iz][0] - fsat[Ix][Iy][Iz][1] - fsat[Ix][Iy][Iz][2];
#else
				LocalF[actx->LocalIndex] = fsat[Ix][Iy][Iz][0] + fsat[Ix][Iy][Iz][1] + fsat[Ix][Iy][Iz][2] - 1;
#endif
			}
			else {
				std::cout << Ix << '\t' << Iy << '\t' << Iz << '\t' << BENo << "\tFracture phase stat: " << fphaseStat[Ix][Iy][Iz] << std::endl;
				TerM("Global Index Error!");
			}

			break;

		case (-1):
			if (BENo < (Nc + 1)) {
#pragma region sadeq

				Mporpor = porosity[Ix][Iy][Iz] * (1 + cpor * (P[Ix + 1][Iy + 1][Iz + 1][1] - refP) + dcpor * (P[Ix + 1][Iy + 1][Iz + 1][1] - refP)*(P[Ix + 1][Iy + 1][Iz + 1][1] - refP));
				
				if (P[Ix + 1][Iy + 1][Iz + 1][1] >= fP[Ix + 1][Iy + 1][Iz + 1][1])
				{
					f_m_relperm[1] = relPerm[Ix][Iy][Iz][1];//oil relperm between matrix and fracture
					f_m_drelperm[1][1] = dRelPerm[Ix][Iy][Iz][1];//dkrodsw
					f_m_drelperm[1][2] = dRelPerm[Ix][Iy][Iz][2];//dkrodsg
					f_m_drelperm[1][4] = dRelPerm[Ix][Iy][Iz][4];//dkrodso

					f_m_drelperm[1][9] = 0;
					f_m_drelperm[1][7] = 0;
					f_m_drelperm[1][6] = 0;
				}
				else
				{
					f_m_relperm[1] = frelPerm[Ix][Iy][Iz][1];
					f_m_drelperm[1][6] = fdRelPerm[Ix][Iy][Iz][1];//fdkrofdsw
					f_m_drelperm[1][7] = fdRelPerm[Ix][Iy][Iz][2];//fdkrofdsg
					f_m_drelperm[1][9] = fdRelPerm[Ix][Iy][Iz][4];//fdkrofdso

					f_m_drelperm[1][4] = 0;
					f_m_drelperm[1][2] = 0;
					f_m_drelperm[1][1] = 0;
				}
				if (P[Ix + 1][Iy + 1][Iz + 1][2] >= fP[Ix + 1][Iy + 1][Iz + 1][2])
				{
					f_m_relperm[2] = relPerm[Ix][Iy][Iz][2];//gas relperm between matrix and fracture
					f_m_drelperm[2][3] = dRelPerm[Ix][Iy][Iz][3];//dkrgdsg

					f_m_drelperm[2][8] = 0;
				}
				else
				{
					f_m_relperm[2] = frelPerm[Ix][Iy][Iz][2];
					f_m_drelperm[2][8] = fdRelPerm[Ix][Iy][Iz][3];//fdkrgfdsg

					f_m_drelperm[2][3] = 0;
				}

				if (P[Ix + 1][Iy + 1][Iz + 1][0] >= fP[Ix + 1][Iy + 1][Iz + 1][0])
				{
					f_m_relperm[0] = relPerm[Ix][Iy][Iz][0];
					f_m_drelperm[1][0] = dRelPerm[Ix][Iy][Iz][0];//dkrwdsw

					f_m_drelperm[1][5] = 0;
				}
				else
				{
					f_m_relperm[0] = frelPerm[Ix][Iy][Iz][0];//water relperm between matrix and fracture
					f_m_drelperm[1][5] = fdRelPerm[Ix][Iy][Iz][0];//fdkrwfdsw

					f_m_drelperm[1][0] = 0;
				}
#pragma endregion

#pragma region Wells&Commons For Fracture 
				porpor = fporosity[Ix][Iy][Iz] * (1 + cpor * (fP[Ix + 1][Iy + 1][Iz + 1][1] - refP) + dcpor * (fP[Ix + 1][Iy + 1][Iz + 1][1] - refP)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - refP));
				

				Qw = 0;
				Qo = 0;
				Qg = 0;

				PIw = 0;
				PIo = 0;
				PIg = 0;

				Vb = gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz];

				iWell = -1;
				for (i = 0; i < wellNO; i++) {
					if ((Ix == welli[i][1]) && (Iy == welli[i][2]) && (Iz >= welli[i][3]) && (Iz <= welli[i][4])) {
						//Re = Calc_Re(Ix, Iy, Iz, i);
						Re = Re_f;
						if (welli[i][0] == 0) BMethQF = 1;
						if ((welli[i][0] == 0) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {
							//if ((welli[i][0] == 0) && ((fabs(simTime - wellf[i][4]) <= TSTEPIF) && (fabs(simTime - wellf[i][5]) <= TSTEPIF))) {		//Constant Pwf Pressure - Production

							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][1] * fperm[Ix][Iy][Iz][0]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);

							PIw = S1 * watRo*WAT_M_RO*frelPerm[Ix][Iy][Iz][0] / watMu;
							PIo = S1 * fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / fblockFProps[Ix][Iy][Iz][BMU][0];
							PIg = S1 * fblockFProps[Ix][Iy][Iz][RO][1] * frelPerm[Ix][Iy][Iz][2] / fblockFProps[Ix][Iy][Iz][BMU][1];

							Qw = PIw * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][0]);
							Qo = PIo * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
							Qg = PIg * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

							

							/*if ((wellf[i][1]) && ((-Qo) > wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								SSo1 = 0;
								for (j = welli[i][3]; j <= welli[i][4]; j++) {
									S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
									SSo1 += fblockFProps[Ix][Iy][j][RO][0] * S2*frelPerm[Ix][Iy][j][1] / fblockFProps[Ix][Iy][Iz][BMU][0];
									S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
									SSo1 += blockFProps[Ix][Iy][j][RO][0] * S2*relPerm[Ix][Iy][j][1] / blockFProps[Ix][Iy][Iz][BMU][0];
								}
								S1 = gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][0] * fperm[Ix][Iy][Iz][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);

								if (SSo1) {
									if (SURFACE_RATES) Qo = -S1 * oilRateCh(Ix, Iy, Iz, frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fblockFProps[Ix][Iy][Iz][BMU][0] / (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fblockFProps[Ix][Iy][Iz][BMU][1]))*wellf[i][1] * fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / (fblockFProps[Ix][Iy][Iz][BMU][0] * SSo1);
									else Qo = -S1 * wellf[i][1] * fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / (fblockFProps[Ix][Iy][Iz][BMU][0] * SSo1);
								}
								Qw = Qo * frelPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*fblockFProps[Ix][Iy][Iz][BMU][0] / (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * watMu);
								Qg = Qo * frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fblockFProps[Ix][Iy][Iz][BMU][0] / (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fblockFProps[Ix][Iy][Iz][BMU][1]);

							}*/

							if (fP[Ix + 1][Iy + 1][Iz + 1][1] < WELL_MIN_P) {
								Qw = 0;
								Qo = 0;
								Qg = 0;

								PIw = 0;
								PIo = 0;
								PIg = 0;
							}
							else if ((wellf[i][1]) && ((-Qo) > wellf[i][1])) {
								Qo = -wellf[i][1];
								Qw = Qo * frelPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*fblockFProps[Ix][Iy][Iz][BMU][0] / (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * watMu);
								Qg = Qo * frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fblockFProps[Ix][Iy][Iz][BMU][0] / (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fblockFProps[Ix][Iy][Iz][BMU][1]);
								PIw = 0;
								PIo = 0;
								PIg = 0;
							}
							if ((Qw > 0) || ((Qw - Qw) != 0)) {
								Qw = 0;
								PIw = 0;
							}
							if ((Qo > 0) || ((Qo - Qo) != 0)) {
								Qo = 0;
								PIo = 0;
							}
							if ((Qg > 0) || ((Qg - Qg) != 0)) {
								Qg = 0;
								PIg = 0;
							}

							QoProduced = Qo;
							Qoprod += Qo + Qg;
							MethQM += Qo * (1 - fcomp[Ix][Iy][Iz][0][0]) + Qg * (1 - fcomp[Ix][Iy][Iz][0][1]);
							
							//Qoprod = Qo*(1 - fcomp[Ix][Iy][Iz][0][0])+ Qg*(1 - fcomp[Ix][Iy][Iz][0][1]);
							WellCompSadeq[0] += Qo * (fcomp[Ix][Iy][Iz][0][0]) + Qg * (fcomp[Ix][Iy][Iz][0][1]);
							WellCompSadeq[1] += Qo * (fcomp[Ix][Iy][Iz][1][0]) + Qg * (fcomp[Ix][Iy][Iz][1][1]);
							WellCompSadeq[2] += Qo * (fcomp[Ix][Iy][Iz][2][0]) + Qg * (fcomp[Ix][Iy][Iz][2][1]);
							WellCompSadeq2[0] += (Qo*(fcomp[Ix][Iy][Iz][0][0]) + Qg * (fcomp[Ix][Iy][Iz][0][1]));
							WellCompSadeq2[1] += (Qo*(fcomp[Ix][Iy][Iz][1][0]) + Qg * (fcomp[Ix][Iy][Iz][1][1]));
							WellCompSadeq2[2] += (Qo*(fcomp[Ix][Iy][Iz][2][0]) + Qg * (fcomp[Ix][Iy][Iz][2][1]));
						}

						else if ((welli[i][0] == 1) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {		//Constant Pwf- Gas Production
																																																					//Re = Re_f;
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][1] * fperm[Ix][Iy][Iz][0]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);

							PIw = S1 * watRo*WAT_M_RO*frelPerm[Ix][Iy][Iz][0] / watMu;
							PIo = S1 * fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / fblockFProps[Ix][Iy][Iz][BMU][0];
							PIg = S1 * fblockFProps[Ix][Iy][Iz][RO][1] * frelPerm[Ix][Iy][Iz][2] / fblockFProps[Ix][Iy][Iz][BMU][1];

							Qw = PIw * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][0]);
							Qo = PIo * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
							Qg = PIg * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

							if ((Qw > 0) || ((Qw - Qw) != 0)) {
								Qw = 0;
								PIw = 0;
							}
							if ((Qo > 0) || ((Qo - Qo) != 0)) {
								Qo = 0;
								PIo = 0;
							}
							if ((Qg > 0) || ((Qg - Qg) != 0)) {
								Qg = 0;
								PIg = 0;
							}

							if ((wellf[i][1]) && ((-Qg) > wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								SSo1 = 0;
								for (j = welli[i][3]; j <= welli[i][4]; j++) {
									S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
									SSo1 += fblockFProps[Ix][Iy][j][RO][1] * S2*frelPerm[Ix][Iy][j][2] / fblockFProps[Ix][Iy][Iz][BMU][1];
									S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
									SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][Iz][BMU][1];
								}
								S1 = gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][0] * fperm[Ix][Iy][Iz][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);

								if (SSo1) {
									if (SURFACE_RATES) Qg = -S1 * gasRateCh(Ix, Iy, Iz, (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fblockFProps[Ix][Iy][Iz][BMU][1]) / (frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fblockFProps[Ix][Iy][Iz][BMU][0]))*wellf[i][1] * fblockFProps[Ix][Iy][Iz][RO][1] * frelPerm[Ix][Iy][Iz][2] / (fblockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
									else Qg = -S1 * wellf[i][1] * fblockFProps[Ix][Iy][Iz][RO][1] * frelPerm[Ix][Iy][Iz][2] / (fblockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
								}
								Qw = Qg * frelPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*fblockFProps[Ix][Iy][Iz][BMU][1] / (frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * watMu);
								Qo = Qg * frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fblockFProps[Ix][Iy][Iz][BMU][1] / (frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fblockFProps[Ix][Iy][Iz][BMU][0]);

							}

							//QoProd=oilRateCh2(Ix, Iy, Iz, -Qo, -Qg);
							QoProduced = Qo;
						}

						else if ((welli[i][0] == 2) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {			//Constant Pwf Pressure - Water Injection
																																																						//Re = Re_f;
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][1] * fperm[Ix][Iy][Iz][0]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);

							PIw = S1 * watRo*WAT_M_RO*frelPerm[Ix][Iy][Iz][0] / watMu;
							Qw = PIw * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][0]);


							if ((Qw < 0) || ((Qw - Qw) != 0)) {
								Qw = 0;
								PIw = 0;
							}

							if ((wellf[i][1]) && (Qw > wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								SSo1 = 0;
								for (j = welli[i][3]; j <= welli[i][4]; j++) {
									S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
									SSo1 += watRo * S2*frelPerm[Ix][Iy][j][0] / watMu;
									S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
									SSo1 += watRo * S2*relPerm[Ix][Iy][j][0] / watMu;
								}
								S1 = gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][0] * fperm[Ix][Iy][Iz][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);

								if (SSo1) Qw = S1 * wellf[i][1] * watRo*WAT_M_RO * frelPerm[Ix][Iy][Iz][0] / (watMu * SSo1);
							}
						}

						else if ((welli[i][0] == 3) && (((fabs(simTime - wellf[i][Nc + 4]) <= TSTEPIF) || (fabs(simTime - wellf[i][Nc + 5]) <= TSTEPIF)) || ((simTime >= wellf[i][Nc + 4]) && (simTime <= wellf[i][Nc + 5])))) {		//Constant Pwf Pressure - Gas Injection
																																																										//Re = Re_f;

							for (j = 0; j < Nc; j++) IComp[j] = wellf[i][4 + j];
							FlashInjection(IComp, wellf[i][0], IOComp, IGComp, iOF, iGF, iOD, iGD, iOV, iGV);
							//Re = Calc_Re(Ix, Iy, Iz, i);
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][1] * fperm[Ix][Iy][Iz][0]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
							//S2 = sgt[Nsgt-1][1] / iGV;
							//S2 = relPerm[Ix][Iy][Iz][2] / blockFProps[Ix][Iy][Iz][BMU][1];

							PIg = S1 * iGD * sgt[Nsgt - 1][1] * iGF / iGV;
							Qg = PIg * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
							//PIo = S1*iOD * swt[0][2]*iOF / iOV;
							PIo = PIg * iOF / iGF;
							Qo = PIo * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

							if ((Qo < 0) || ((Qo - Qo) != 0)) {
								Qo = 0;
								PIo = 0;
							}
							if ((Qg < 0) || ((Qg - Qg) != 0)) {
								Qg = 0;
								PIg = 0;
							}

							iWell = i;

							if ((wellf[i][1]) && (Qg > wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								SSo1 = 0;
								for (j = welli[i][3]; j <= welli[i][4]; j++) {
									S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
									//SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][Iz][BMU][1];
									SSo1 += S2;
									S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
									//SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][Iz][BMU][1];
									SSo1 += S2;
								}
								S1 = gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][0] * fperm[Ix][Iy][Iz][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);

								//if (SSo1) Qg = S1*wellf[i][1] * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / (blockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
								if (SSo1) Qg = S1 * wellf[i][1] / SSo1;
								if (SSo1) Qo = Qg * iOF / iGF;
							}

							Qginj = Qg + Qo;
						}

						else if ((welli[i][0] == 4) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {		//Constant Oil Rate
							SSo1 = 0;
							for (j = welli[i][3]; j <= welli[i][4]; j++) {
								S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
								SSo1 += fblockFProps[Ix][Iy][j][RO][0] * S2*frelPerm[Ix][Iy][j][1] / fblockFProps[Ix][Iy][Iz][BMU][0];
								S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
								SSo1 += blockFProps[Ix][Iy][j][RO][0] * S2*relPerm[Ix][Iy][j][1] / blockFProps[Ix][Iy][Iz][BMU][0];
							}
							S1 = gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][0] * fperm[Ix][Iy][Iz][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);

							if (SSo1) {
								if (SURFACE_RATES) Qo = -S1 * oilRateCh(Ix, Iy, Iz, frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fblockFProps[Ix][Iy][Iz][BMU][0] / (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fblockFProps[Ix][Iy][Iz][BMU][1]))*wellf[i][0] * fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / (fblockFProps[Ix][Iy][Iz][BMU][0] * SSo1);
								else Qo = -S1 * wellf[i][0] * fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / (fblockFProps[Ix][Iy][Iz][BMU][0] * SSo1);
							}
							Qw = Qo * frelPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*fblockFProps[Ix][Iy][Iz][BMU][0] / (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * watMu);
							Qg = Qo * frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fblockFProps[Ix][Iy][Iz][BMU][0] / (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fblockFProps[Ix][Iy][Iz][BMU][1]);

							//Re = Re_f;
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][1] * fperm[Ix][Iy][Iz][0]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
							Pwf = fP[Ix + 1][Iy + 1][Iz + 1][1] - Qo / (S1*fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / fblockFProps[Ix][Iy][Iz][BMU][0]);

							if ((wellf[i][1]) && (Pwf < wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								PIw = S1 * watRo*WAT_M_RO*frelPerm[Ix][Iy][Iz][0] / watMu;
								PIo = S1 * fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / fblockFProps[Ix][Iy][Iz][BMU][0];
								PIg = S1 * fblockFProps[Ix][Iy][Iz][RO][1] * frelPerm[Ix][Iy][Iz][2] / fblockFProps[Ix][Iy][Iz][BMU][1];

								Qw = PIw * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][0]);
								Qo = PIo * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
								Qg = PIg * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

								if ((Qw > 0) || ((Qw - Qw) != 0)) {
									Qw = 0;
									PIw = 0;
								}
								if ((Qo > 0) || ((Qo - Qo) != 0)) {
									Qo = 0;
									PIo = 0;
								}
								if ((Qg > 0) || ((Qg - Qg) != 0)) {
									Qg = 0;
									PIg = 0;
								}
							}

							if (fP[Ix + 1][Iy + 1][Iz + 1][1] < WELL_MIN_P) {
								Qw = 0;
								Qo = 0;
								Qg = 0;
								
								PIw = 0;
								PIo = 0;
								PIg = 0;
							}

							QoProduced = Qo;
							Qoprod = Qo + Qg;
						}

						else if ((welli[i][0] == 5) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {		//Constant Gas Rate
							SSo1 = 0;
							for (j = welli[i][3]; j <= welli[i][4]; j++) {
								S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
								SSo1 += fblockFProps[Ix][Iy][j][RO][1] * S2*frelPerm[Ix][Iy][j][2] / fblockFProps[Ix][Iy][Iz][BMU][1];
								S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
								SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][Iz][BMU][1];
							}
							S1 = gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][0] * fperm[Ix][Iy][Iz][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);

							if (SSo1) {
								if (SURFACE_RATES) Qg = -S1 * gasRateCh(Ix, Iy, Iz, (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fblockFProps[Ix][Iy][Iz][BMU][1]) / (frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fblockFProps[Ix][Iy][Iz][BMU][0]))*wellf[i][1] * fblockFProps[Ix][Iy][Iz][RO][1] * frelPerm[Ix][Iy][Iz][2] / (fblockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
								else Qg = -S1 * wellf[i][1] * fblockFProps[Ix][Iy][Iz][RO][1] * frelPerm[Ix][Iy][Iz][2] / (fblockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
							}
							Qw = Qg * frelPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*fblockFProps[Ix][Iy][Iz][BMU][1] / (frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * watMu);
							Qo = Qg * frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fblockFProps[Ix][Iy][Iz][BMU][1] / (frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fblockFProps[Ix][Iy][Iz][BMU][0]);

							//Re = Re_f;
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][1] * fperm[Ix][Iy][Iz][0]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
							Pwf = fP[Ix + 1][Iy + 1][Iz + 1][2] - Qg / (S1*fblockFProps[Ix][Iy][Iz][RO][1] * frelPerm[Ix][Iy][Iz][2] / fblockFProps[Ix][Iy][Iz][BMU][1]);

							if ((wellf[i][1]) && (Pwf < wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								PIw = S1 * watRo*WAT_M_RO*frelPerm[Ix][Iy][Iz][0] / watMu;
								PIo = S1 * fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / fblockFProps[Ix][Iy][Iz][BMU][0];
								PIg = S1 * fblockFProps[Ix][Iy][Iz][RO][1] * frelPerm[Ix][Iy][Iz][2] / fblockFProps[Ix][Iy][Iz][BMU][1];

								Qw = PIw * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][0]);
								Qo = PIo * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
								Qg = PIg * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

								if ((Qw > 0) || ((Qw - Qw) != 0)) {
									Qw = 0;
									PIw = 0;
								}
								if ((Qo > 0) || ((Qo - Qo) != 0)) {
									Qo = 0;
									PIo = 0;
								}
								if ((Qg > 0) || ((Qg - Qg) != 0)) {
									Qg = 0;
									PIg = 0;
								}
							}
						}

						else if ((welli[i][0] == 6) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {		//Constant Total Production Rate
							SSw = 0;
							SSo = 0;
							SSg = 0;
							SSo1 = 0;
							for (j = welli[i][3]; j <= welli[i][4]; j++) {
								S1 = (frelPerm[Ix][Iy][j][0] / watMu) + (frelPerm[Ix][Iy][j][1] / fblockFProps[Ix][Iy][j][BMU][0]) + (frelPerm[Ix][Iy][j][2] / fblockFProps[Ix][Iy][j][BMU][1]);
								SSw += (frelPerm[Ix][Iy][j][0] / watMu) / S1;
								SSo += (frelPerm[Ix][Iy][j][1] / fblockFProps[Ix][Iy][j][BMU][0]) / S1;
								SSg += (frelPerm[Ix][Iy][j][2] / fblockFProps[Ix][Iy][j][BMU][1]) / S1;

								S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
								SSo1 += fblockFProps[Ix][Iy][j][RO][0] * S2*frelPerm[Ix][Iy][j][1] / fblockFProps[Ix][Iy][Iz][BMU][0];

								S1 = (relPerm[Ix][Iy][j][0] / watMu) + (relPerm[Ix][Iy][j][1] / blockFProps[Ix][Iy][j][BMU][0]) + (relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][j][BMU][1]);
								SSw += (relPerm[Ix][Iy][j][0] / watMu) / S1;
								SSo += (relPerm[Ix][Iy][j][1] / blockFProps[Ix][Iy][j][BMU][0]) / S1;
								SSg += (relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][j][BMU][1]) / S1;

								S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
								SSo1 += blockFProps[Ix][Iy][j][RO][0] * S2*relPerm[Ix][Iy][j][1] / blockFProps[Ix][Iy][Iz][BMU][0];

							}
							QoP = SSo * wellf[i][0] / (SSw + SSo + SSg);

							S1 = gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][0] * fperm[Ix][Iy][Iz][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
							if (SSo1) Qo = -S1 * QoP*fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / (fblockFProps[Ix][Iy][Iz][BMU][0] * SSo1);
							Qw = Qo * frelPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*fblockFProps[Ix][Iy][Iz][BMU][0] / (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * watMu);
							Qg = Qo * frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fblockFProps[Ix][Iy][Iz][BMU][0] / (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fblockFProps[Ix][Iy][Iz][BMU][1]);


							//Re = Re_f;
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][1] * fperm[Ix][Iy][Iz][0]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
							Pwf = fP[Ix + 1][Iy + 1][Iz + 1][1] - (Qw + Qo + Qg) / (S1*(watRo*WAT_M_RO*frelPerm[Ix][Iy][Iz][0] / watMu + fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / fblockFProps[Ix][Iy][Iz][BMU][0] + fblockFProps[Ix][Iy][Iz][RO][1] * frelPerm[Ix][Iy][Iz][2] / fblockFProps[Ix][Iy][Iz][BMU][1]));

							if ((wellf[i][1]) && (Pwf < wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								PIw = S1 * watRo*WAT_M_RO*frelPerm[Ix][Iy][Iz][0] / watMu;
								PIo = S1 * fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / fblockFProps[Ix][Iy][Iz][BMU][0];
								PIg = S1 * fblockFProps[Ix][Iy][Iz][RO][1] * frelPerm[Ix][Iy][Iz][2] / fblockFProps[Ix][Iy][Iz][BMU][1];

								Qw = PIw * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][0]);
								Qo = PIo * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
								Qg = PIg * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

								if ((Qw > 0) || ((Qw - Qw) != 0)) {
									Qw = 0;
									PIw = 0;
								}
								if ((Qo > 0) || ((Qo - Qo) != 0)) {
									Qo = 0;
									PIo = 0;
								}
								if ((Qg > 0) || ((Qg - Qg) != 0)) {
									Qg = 0;
									PIg = 0;
								}
							}
						}

						else if ((welli[i][0] == 7) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {			//Constant Water Injection Rate
							SSw = 0;
							for (j = welli[i][3]; j <= welli[i][4]; j++) {
								S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
								SSo1 += S2 * frelPerm[Ix][Iy][j][0];
								S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
								SSo1 += S2 * relPerm[Ix][Iy][j][0];
							}
							S1 = gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][0] * fperm[Ix][Iy][Iz][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
							if (SSw) Qw = S1 * wellf[i][0] * frelPerm[Ix][Iy][Iz][1] / SSw;

							//Re = Re_f;
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][1] * fperm[Ix][Iy][Iz][0]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
							Pwf = fP[Ix + 1][Iy + 1][Iz + 1][0] - Qw / (S1*watRo*WAT_M_RO * frelPerm[Ix][Iy][Iz][1] / watMu);
							if ((wellf[i][1]) && (Pwf > wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								PIw = S1 * watRo*WAT_M_RO*frelPerm[Ix][Iy][Iz][0] / watMu;
								Qw = PIw * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][0]);

								if ((Qw < 0) || ((Qw - Qw) != 0)) {
									Qw = 0;
									PIw = 0;
								}
							}
						}

						else if ((welli[i][0] == 8) && (((fabs(simTime - wellf[i][Nc + 4]) <= TSTEPIF) || (fabs(simTime - wellf[i][Nc + 5]) <= TSTEPIF)) || ((simTime >= wellf[i][Nc + 4]) && (simTime <= wellf[i][Nc + 5])))) {			//Constant Gas Injection Rate
							for (j = 0; j < Nc; j++) IComp[j] = wellf[i][4 + j];
							FlashInjection(IComp, wellf[i][1], IOComp, IGComp, iOF, iGF, iOD, iGD, iOV, iGV);

							SSo1 = 0;
							for (j = welli[i][3]; j <= welli[i][4]; j++) {
								S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
								//SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][Iz][BMU][1];
								//SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*sgt[Nsgt-1][1] / blockFProps[Ix][Iy][Iz][BMU][1];
								SSo1 += S2;

								S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
								//SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][Iz][BMU][1];
								//SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*sgt[Nsgt-1][1] / blockFProps[Ix][Iy][Iz][BMU][1];
								SSo1 += S2;
							}
							S1 = gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][0] * fperm[Ix][Iy][Iz][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);

							//if (SSo1) Qg = S1*wellf[i][0] * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / (blockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
							//if (SSo1) Qg = S1*wellf[i][0] * blockFProps[Ix][Iy][Iz][RO][1] * sgt[Nsgt - 1][1] / (blockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
							if (SSo1) Qg = S1 * wellf[i][0] / SSo1;
							if (SSo1) Qo = Qg * iOF / iGF;
							//Re = 0.14*sqrt(sqrt(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0])*gridDim[Ix] * gridDim[Ix] + sqrt(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1])*gridDim[Nx + Iy] * gridDim[Nx + Iy]);
							//Re /= 0.5*(pow(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0], 0.25) + pow(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1], 0.25));



							//Re = Calc_Re(Ix, Iy, Iz, i);
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][1] * fperm[Ix][Iy][Iz][0]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
							//Pwf = P[Ix + 1][Iy + 1][Iz + 1][2] - Qg / (S1*blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / blockFProps[Ix][Iy][Iz][BMU][1]);
							//Pwf = P[Ix + 1][Iy + 1][Iz + 1][2] - Qg / (S1*blockFProps[Ix][Iy][Iz][RO][1] * sgt[Nsgt - 1][1] / blockFProps[Ix][Iy][Iz][BMU][1]);
							Pwf = fP[Ix + 1][Iy + 1][Iz + 1][2] - Qg / (S1*iGD * sgt[Nsgt - 1][1] / iGV);

							if ((wellf[i][1]) && (Pwf > wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								PIg = S1 * iGD * sgt[Nsgt - 1][1] * iGF / iGV;
								Qg = PIg * (wellf[i][1] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
								//PIo = S1*iOD * swt[0][2]*iOF / iOV;
								PIo = PIg * iOF / iGF;
								Qo = PIo * (wellf[i][1] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

								if ((Qo < 0) || ((Qo - Qo) != 0)) {
									Qo = 0;
									PIo = 0;
								}
								if ((Qg < 0) || ((Qg - Qg) != 0)) {
									Qg = 0;
									PIg = 0;
								}
							}

							if (fP[Ix + 1][Iy + 1][Iz + 1][1] > WELL_MAX_P) {
								Qw = 0;
								Qo = 0;
								Qg = 0;
								IOComp[0] = 0;
								IOComp[1] = 0;
								IGComp[0] = 0;
								IGComp[1] = 0;
								PIw = 0;
								PIo = 0;
								PIg = 0;
							}

							QgInjected = Qg;


							QgInj = Qg;

							iWell = i;
							gasInjStat = -1;

							Qginj += Qg + Qo;
						}


					}
					QwT += Qw;
					QoT += Qo;
					QgT += Qg;
				}



#pragma endregion

				if (BENo < (Nc - 1)) {
					i = BENo;

					LSide = (Vb / Dt)*(porpor*(fcomp[Ix][Iy][Iz][i][0] * fblockFProps[Ix][Iy][Iz][RO][0] * fsat[Ix][Iy][Iz][1] + fcomp[Ix][Iy][Iz][i][1] * fblockFProps[Ix][Iy][Iz][RO][1] * fsat[Ix][Iy][Iz][2]) - fpreProp[Ix][Iy][Iz][i]);
					RSide = fcomp[(Ix + ftransS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][0][0] * (fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) - fcomp[(Ix - 1 + ftransS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix][Iy + 1][Iz + 1][0][0] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);
					RSide += fcomp[Ix][(Iy + ftransS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][0][1] * (fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) - fcomp[Ix][(Iy - 1 + ftransS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy][Iz + 1][0][1] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);
					RSide += fcomp[Ix][Iy][(Iz + ftransS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][0][2] * (fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) - fcomp[Ix][Iy][(Iz - 1 + ftransS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz][0][2] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);
					RSide += fcomp[(Ix + ftransS[Ix + 1][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][1][0] * (fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]) - fcomp[(Ix - 1 + ftransS[Ix][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * ftrans[Ix][Iy + 1][Iz + 1][1][0] * (fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);
					RSide += fcomp[Ix][(Iy + ftransS[Ix + 1][Iy + 1][Iz + 1][1][1])][Iz][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][1][1] * (fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]) - fcomp[Ix][(Iy - 1 + ftransS[Ix + 1][Iy][Iz + 1][1][1])][Iz][i][1] * ftrans[Ix + 1][Iy][Iz + 1][1][1] * (fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);
					RSide += fcomp[Ix][Iy][(Iz + ftransS[Ix + 1][Iy + 1][Iz + 1][1][2])][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][1][2] * (fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]) - fcomp[Ix][Iy][(Iz - 1 + ftransS[Ix + 1][Iy + 1][Iz][1][2])][i][1] * ftrans[Ix + 1][Iy + 1][Iz][1][2] * (fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);

					RSide += fcomp[(Ix + ftransS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][2][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - fcomp[(Ix - 1 + ftransS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix][Iy + 1][Iz + 1][2][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
					RSide += fcomp[Ix][(Iy + ftransS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][2][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - fcomp[Ix][(Iy - 1 + ftransS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy][Iz + 1][2][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
					RSide += fcomp[Ix][Iy][(Iz + ftransS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][2][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]) - fcomp[Ix][Iy][(Iz - 1 + ftransS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz][2][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
					RSide += fcomp[(Ix + ftransS[Ix + 1][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][3][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - fcomp[(Ix - 1 + ftransS[Ix][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * ftrans[Ix][Iy + 1][Iz + 1][3][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
					RSide += fcomp[Ix][(Iy + ftransS[Ix + 1][Iy + 1][Iz + 1][1][1])][Iz][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][3][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - fcomp[Ix][(Iy - 1 + ftransS[Ix + 1][Iy][Iz + 1][1][1])][Iz][i][1] * ftrans[Ix + 1][Iy][Iz + 1][3][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
					RSide += fcomp[Ix][Iy][(Iz + ftransS[Ix + 1][Iy + 1][Iz + 1][1][2])][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][3][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]) - fcomp[Ix][Iy][(Iz - 1 + ftransS[Ix + 1][Iy + 1][Iz][1][2])][i][1] * ftrans[Ix + 1][Iy + 1][Iz][3][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);


					////////////////////////////Transfer Function

					//	if (comp[Ix][Iy][Iz][i][0] > fcomp[Ix][Iy][Iz][i][0]) f_m_diffusion[0] = diffusion[Ix][Iy][Iz][i][0];
					//else f_m_diffusion[0] = fdiffusion[Ix][Iy][Iz][i][0];

					//		if (comp[Ix][Iy][Iz][i][1] > fcomp[Ix][Iy][Iz][i][1]) f_m_diffusion[1] = diffusion[Ix][Iy][Iz][i][1];
					//	else f_m_diffusion[1] = fdiffusion[Ix][Iy][Iz][i][1];
					//Transfer function Rside 
					RSide -= ZERO_CONV * SI_C *comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
					RSide -= ZERO_CONV * SI_C * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor) / (porpor + Mporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (1))//only Liq in Fracture & Matrix
						RSide -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (-1))//only Gas in Fracture & Matrix
						RSide -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0)) {
						RSide -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);

						RSide -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

					}

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
						//RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);

						RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
					}

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (1)) {
						//RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);

						RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
					}

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1)) {
						//RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);

						RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);

						RSide -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
					}

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1)) {
						RSide -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

						//RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);

						RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
					}

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0)) {
						//RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);

						RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);

						RSide -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
					}

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0)) {
						RSide -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

						//RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);

						RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
					}
					//	
					/////////////////////////////////////////
					if (iWell == (-1)) {
						gComp = fcomp[Ix][Iy][Iz][i][1];
						oComp = fcomp[Ix][Iy][Iz][i][0];
					}
					else {
						if (welli[iWell][0] == 3) {
							gComp = IGComp[i];
							oComp = IOComp[i];
						}
						else if (welli[iWell][0] == 8) {
							//gComp = wellf[iWell][i + 4];
							gComp = IGComp[i];
							oComp = IOComp[i];
						}
					}

					RSide += oComp * Qo + gComp * Qg;


					if (fphaseStat[Ix][Iy][Iz] == (-1)) dCoefl = 0;
					else dCoefl = 1;
					if (fphaseStat[Ix][Iy][Iz] == 1) dCoefg = 0;
					else dCoefg = 1;



					if (Ix < (Nx - 1)) {
						if (fphaseStat[Ix + 1][Iy][Iz] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][RO][0] * gridDim[Ix + 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][BMU][0] * gridDim[Ix + 1] * Coef;
						porpor2 = fporosity[Ix + 1][Iy][Iz] * (1 + cpor * (fP[Ix + 2][Iy + 1][Iz + 1][1] - refP) + dcpor * (fP[Ix + 2][Iy + 1][Iz + 1][1] - refP)*(fP[Ix + 2][Iy + 1][Iz + 1][1] - refP));
						if (fcomp[Ix + 1][Iy][Iz][i][0] > fcomp[Ix][Iy][Iz][i][0]) {
							DupStream = fdiffusion[Ix + 1][Iy][Iz][i][0];
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][0];
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix + 1][Iy][Iz] < 1e-10)) DupStream = 0;
						AAd = fblockFProps[Ix + 1][Iy][Iz][RO][0] * gridDim[Ix + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] * dCoefl;
						AAd *= (fsat[Ix + 1][Iy][Iz][1] * gridDim[Ix + 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Ix] * dCoefl) / (gridDim[Ix + 1] + gridDim[Ix]);
						BBd = gridDim[Ix + 1] * Coef / porpor2 + gridDim[Ix] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz] / (gridDim[Ix + 1] + gridDim[Ix]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = fcomp[Ix + 1][Iy][Iz][i][0] - fcomp[Ix][Iy][Iz][i][0];
						RSide += DTran * DeltaX;


						if (fphaseStat[Ix + 1][Iy][Iz] == 1) Coef = 0;
						else Coef = 1;
						Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][RO][1] * gridDim[Ix + 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][BMU][1] * gridDim[Ix + 1] * Coef;
						//////////////////////////////////////////////////////
						if (fcomp[Ix + 1][Iy][Iz][i][1] > fcomp[Ix][Iy][Iz][i][1]) {
							DupStream = fdiffusion[Ix + 1][Iy][Iz][i][1];
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][1];
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix + 1][Iy][Iz] < 1e-10)) DupStream = 0;
						AAd = fblockFProps[Ix + 1][Iy][Iz][RO][1] * gridDim[Ix + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] * dCoefg;
						AAd *= (fsat[Ix + 1][Iy][Iz][2] * gridDim[Ix + 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Ix] * dCoefg) / (gridDim[Ix + 1] + gridDim[Ix]);
						BBd = gridDim[Ix + 1] * Coef / porpor2 + gridDim[Ix] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Nx+Iy]*gridDim[Nx+Ny+Iz]/(gridDim[Ix+1]+gridDim[Ix]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = fcomp[Ix + 1][Iy][Iz][i][1] - fcomp[Ix][Iy][Iz][i][1];
						RSide += DTran * DeltaX;
					}

					if (Ix > 0) {
						if (fphaseStat[Ix - 1][Iy][Iz] == (-1)) Coef = 0;
						else Coef = 1;
						Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][RO][0] * gridDim[Ix - 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][BMU][0] * gridDim[Ix - 1] * Coef;

						porpor2 = fporosity[Ix - 1][Iy][Iz] * (1 + cpor * (fP[Ix][Iy + 1][Iz + 1][1] - refP) + dcpor * (fP[Ix][Iy + 1][Iz + 1][1] - refP)*(fP[Ix][Iy + 1][Iz + 1][1] - refP));
						if (fcomp[Ix - 1][Iy][Iz][i][0] > fcomp[Ix][Iy][Iz][i][0]) {
							DupStream = fdiffusion[Ix - 1][Iy][Iz][i][0];
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][0];
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix - 1][Iy][Iz] < 1e-10)) DupStream = 0;
						AAd = fblockFProps[Ix - 1][Iy][Iz][RO][0] * gridDim[Ix - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] * dCoefl;
						AAd *= (fsat[Ix - 1][Iy][Iz][1] * gridDim[Ix - 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Ix] * dCoefl) / (gridDim[Ix - 1] + gridDim[Ix]);
						BBd = gridDim[Ix - 1] * Coef / porpor2 + gridDim[Ix] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz] / (gridDim[Ix - 1] + gridDim[Ix]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = fcomp[Ix][Iy][Iz][i][0] - fcomp[Ix - 1][Iy][Iz][i][0];
						RSide -= DTran * DeltaX;

						if (fphaseStat[Ix - 1][Iy][Iz] == 1) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][RO][1] * gridDim[Ix - 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][BMU][1] * gridDim[Ix - 1] * Coef;

						if (fcomp[Ix - 1][Iy][Iz][i][1] > fcomp[Ix][Iy][Iz][i][1]) {
							DupStream = fdiffusion[Ix - 1][Iy][Iz][i][1];
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][1];
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix - 1][Iy][Iz] < 1e-10)) DupStream = 0;
						AAd = fblockFProps[Ix - 1][Iy][Iz][RO][1] * gridDim[Ix - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] * dCoefg;
						AAd *= (fsat[Ix - 1][Iy][Iz][2] * gridDim[Ix - 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Ix] * dCoefg) / (gridDim[Ix - 1] + gridDim[Ix]);
						BBd = gridDim[Ix - 1] * Coef / porpor2 + gridDim[Ix] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Nx+Iy]*gridDim[Nx+Ny+Iz]/(gridDim[Ix-1]+gridDim[Ix]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = fcomp[Ix][Iy][Iz][i][1] - fcomp[Ix - 1][Iy][Iz][i][1];
						RSide -= DTran * DeltaX;
					}

					if (Iy < (Ny - 1)) {
						if (fphaseStat[Ix][Iy + 1][Iz] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][RO][0] * gridDim[Nx + Iy + 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][BMU][0] * gridDim[Nx + Iy + 1] * Coef;

						porpor2 = fporosity[Ix][Iy + 1][Iz] * (1 + cpor * (fP[Ix + 1][Iy + 2][Iz + 1][1] - refP) + dcpor * (fP[Ix + 1][Iy + 2][Iz + 1][1] - refP)*(fP[Ix + 1][Iy + 2][Iz + 1][1] - refP));
						if (fcomp[Ix][Iy + 1][Iz][i][0] > fcomp[Ix][Iy][Iz][i][0]) {
							DupStream = fdiffusion[Ix][Iy + 1][Iz][i][0];
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][0];
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix][Iy + 1][Iz] < 1e-10)) DupStream = 0;
						AAd = fblockFProps[Ix][Iy + 1][Iz][RO][0] * gridDim[Nx + Iy + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] * dCoefl;
						AAd *= (fsat[Ix][Iy + 1][Iz][1] * gridDim[Nx + Iy + 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Nx + Iy] * dCoefl) / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
						BBd = gridDim[Nx + Iy + 1] * Coef / porpor2 + gridDim[Nx + Iy] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Ix] * gridDim[Nx + Ny + Iz] / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = fcomp[Ix][Iy + 1][Iz][i][0] - fcomp[Ix][Iy][Iz][i][0];
						//DeltaX = fCalcDiffIntegral(Ix, Iy, Iz, i, 2, 0);
						RSide += DTran * DeltaX;

						if (fphaseStat[Ix][Iy + 1][Iz] == 1) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][RO][1] * gridDim[Nx + Iy + 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][BMU][1] * gridDim[Nx + Iy + 1] * Coef;

						/////////////////////////////////////////////////////////////////////////////
						if (fcomp[Ix][Iy + 1][Iz][i][1] > fcomp[Ix][Iy][Iz][i][1]) {
							DupStream = fdiffusion[Ix][Iy + 1][Iz][i][1];
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][1];
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix][Iy + 1][Iz] < 1e-10)) DupStream = 0;
						AAd = fblockFProps[Ix][Iy + 1][Iz][RO][1] * gridDim[Nx + Iy + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] * dCoefg;
						AAd *= (fsat[Ix][Iy + 1][Iz][2] * gridDim[Nx + Iy + 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Nx + Iy] * dCoefg) / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
						BBd = gridDim[Nx + Iy + 1] * Coef / porpor2 + gridDim[Nx + Iy] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Ix]*gridDim[Nx+Ny+Iz]/(gridDim[Nx+Iy+1]+gridDim[Nx+Iy]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = fcomp[Ix][Iy + 1][Iz][i][1] - fcomp[Ix][Iy][Iz][i][1];
						RSide += DTran * DeltaX;
					}

					if (Iy > 0) {
						if (fphaseStat[Ix][Iy - 1][Iz] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][RO][0] * gridDim[Nx + Iy - 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][BMU][0] * gridDim[Nx + Iy - 1] * Coef;

						porpor2 = fporosity[Ix][Iy - 1][Iz] * (1 + cpor * (fP[Ix + 1][Iy][Iz + 1][1] - refP) + dcpor * (fP[Ix + 1][Iy][Iz + 1][1] - refP)*(fP[Ix + 1][Iy][Iz + 1][1] - refP));

						if (fcomp[Ix][Iy - 1][Iz][i][0] > fcomp[Ix][Iy][Iz][i][0]) {
							DupStream = fdiffusion[Ix][Iy - 1][Iz][i][0];
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][0];
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix][Iy - 1][Iz] < 1e-10)) DupStream = 0;
						AAd = fblockFProps[Ix][Iy - 1][Iz][RO][0] * gridDim[Nx + Iy - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] * dCoefl;
						AAd *= (fsat[Ix][Iy - 1][Iz][1] * gridDim[Nx + Iy - 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Nx + Iy] * dCoefl) / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
						BBd = gridDim[Nx + Iy - 1] * Coef / porpor2 + gridDim[Nx + Iy] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Ix] * gridDim[Nx + Ny + Iz] / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = fcomp[Ix][Iy][Iz][i][0] - fcomp[Ix][Iy - 1][Iz][i][0];
						//DeltaX = fCalcDiffIntegral(Ix, Iy, Iz, i, -2, 0);
						RSide -= DTran * DeltaX;

						if (fphaseStat[Ix][Iy - 1][Iz] == 1) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][RO][1] * gridDim[Nx + Iy - 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][BMU][1] * gridDim[Nx + Iy - 1] * Coef;

						///////////////////////////////////////////////////////////////////
						if (fcomp[Ix][Iy - 1][Iz][i][1] > fcomp[Ix][Iy][Iz][i][1]) {
							DupStream = fdiffusion[Ix][Iy - 1][Iz][i][1];
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][1];
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix][Iy - 1][Iz] < 1e-10)) DupStream = 0;
						AAd = fblockFProps[Ix][Iy - 1][Iz][RO][1] * gridDim[Nx + Iy - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] * dCoefg;
						AAd *= (fsat[Ix][Iy - 1][Iz][2] * gridDim[Nx + Iy - 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Nx + Iy] * dCoefg) / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
						BBd = gridDim[Nx + Iy - 1] * Coef / porpor2 + gridDim[Nx + Iy] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Ix]*gridDim[Nx+Ny+Iz]/(gridDim[Nx+Iy-1]+gridDim[Nx+Iy]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = fcomp[Ix][Iy][Iz][i][1] - fcomp[Ix][Iy - 1][Iz][i][1];
						RSide -= DTran * DeltaX;
					}

					if (Iz < (Nz - 1)) {
						if (fphaseStat[Ix][Iy][Iz + 1] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][RO][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][BMU][0] * gridDim[Nx + Ny + Iz + 1] * Coef;

						porpor2 = fporosity[Ix][Iy][Iz + 1] * (1 + cpor * (fP[Ix + 1][Iy + 1][Iz + 2][1] - refP) + dcpor * (fP[Ix + 1][Iy + 1][Iz + 2][1] - refP)*(fP[Ix + 1][Iy + 1][Iz + 2][1] - refP));
						if (fcomp[Ix][Iy][Iz + 1][i][0] > fcomp[Ix][Iy][Iz][i][0]) {
							DupStream = fdiffusion[Ix][Iy][Iz + 1][i][0];
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][0];
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix][Iy][Iz + 1] < 1e-10)) DupStream = 0;
						AAd = fblockFProps[Ix][Iy][Iz + 1][RO][0] * gridDim[Nx + Ny + Iz + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] * dCoefl;
						AAd *= (fsat[Ix][Iy][Iz + 1][1] * gridDim[Nx + Ny + Iz + 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Nx + Ny + Iz] * dCoefl) / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
						BBd = gridDim[Nx + Ny + Iz + 1] * Coef / porpor2 + gridDim[Nx + Ny + Iz] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Ix] * gridDim[Nx + Iy] / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = fcomp[Ix][Iy][Iz + 1][i][0] - fcomp[Ix][Iy][Iz][i][0];
						RSide += DTran * DeltaX;

						if (fphaseStat[Ix][Iy][Iz + 1] == 1) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][RO][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][BMU][1] * gridDim[Nx + Ny + Iz + 1] * Coef;

						if (fcomp[Ix][Iy][Iz + 1][i][1] > fcomp[Ix][Iy][Iz][i][1]) {
							DupStream = fdiffusion[Ix][Iy][Iz + 1][i][1];
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][1];
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix][Iy][Iz + 1] < 1e-10)) DupStream = 0;
						AAd = fblockFProps[Ix][Iy][Iz + 1][RO][1] * gridDim[Nx + Ny + Iz + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] * dCoefg;
						AAd *= (fsat[Ix][Iy][Iz + 1][2] * gridDim[Nx + Ny + Iz + 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Nx + Ny + Iz] * dCoefg) / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
						BBd = gridDim[Nx + Ny + Iz + 1] * Coef / porpor2 + gridDim[Nx + Ny + Iz] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Ix]*gridDim[Nx+Iy]/(gridDim[Nx+Ny+Iz+1]+gridDim[Nx+Ny+Iz]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = fcomp[Ix][Iy][Iz + 1][i][1] - fcomp[Ix][Iy][Iz][i][1];
						RSide += DTran * DeltaX;
					}

					if (Iz > 0) {
						if (fphaseStat[Ix][Iy][Iz - 1] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][RO][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][BMU][0] * gridDim[Nx + Ny + Iz - 1] * Coef;

						porpor2 = fporosity[Ix][Iy][Iz - 1] * (1 + cpor * (fP[Ix + 1][Iy + 1][Iz][1] - refP) + dcpor * (fP[Ix + 1][Iy + 1][Iz][1] - refP)*(fP[Ix + 1][Iy + 1][Iz][1] - refP));
						if (fcomp[Ix][Iy][Iz - 1][i][0] > fcomp[Ix][Iy][Iz][i][0]) {
							DupStream = fdiffusion[Ix][Iy][Iz - 1][i][0];
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][0];
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix][Iy][Iz - 1] < 1e-10)) DupStream = 0;
						AAd = fblockFProps[Ix][Iy][Iz - 1][RO][0] * gridDim[Nx + Ny + Iz - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] * dCoefl;
						AAd *= (fsat[Ix][Iy][Iz - 1][1] * gridDim[Nx + Ny + Iz - 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Nx + Ny + Iz] * dCoefl) / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
						BBd = gridDim[Nx + Ny + Iz - 1] * Coef / porpor2 + gridDim[Nx + Ny + Iz] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Ix] * gridDim[Nx + Iy] / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = fcomp[Ix][Iy][Iz][i][0] - fcomp[Ix][Iy][Iz - 1][i][0];
						RSide -= DTran * DeltaX;

						if (fphaseStat[Ix][Iy][Iz - 1] == 1) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][RO][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][BMU][1] * gridDim[Nx + Ny + Iz - 1] * Coef;

						if (fcomp[Ix][Iy][Iz - 1][i][1] > fcomp[Ix][Iy][Iz][i][1]) {
							DupStream = fdiffusion[Ix][Iy][Iz - 1][i][1];
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][1];
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix][Iy][Iz - 1] < 1e-10)) DupStream = 0;
						AAd = fblockFProps[Ix][Iy][Iz - 1][RO][1] * gridDim[Nx + Ny + Iz - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] * dCoefg;
						AAd *= (fsat[Ix][Iy][Iz - 1][2] * gridDim[Nx + Ny + Iz - 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Nx + Ny + Iz] * dCoefg) / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
						BBd = gridDim[Nx + Ny + Iz - 1] * Coef / porpor2 + gridDim[Nx + Ny + Iz] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Ix]*gridDim[Nx+Iy]/(gridDim[Nx+Ny+Iz-1]+gridDim[Nx+Ny+Iz]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = fcomp[Ix][Iy][Iz][i][1] - fcomp[Ix][Iy][Iz - 1][i][1];
						RSide -= DTran * DeltaX;
					}
#ifdef USE_MKL_SOLVER
					MKLRHSVector[actx->LocalIndex] = RSide - LSide;
#else
					LocalF[actx->LocalIndex] = LSide - RSide;
#endif
				}
				else if (BENo < (Nc)) {

					LSide = (Vb / Dt)*(porpor*(fblockFProps[Ix][Iy][Iz][RO][0] * fsat[Ix][Iy][Iz][1] + fblockFProps[Ix][Iy][Iz][RO][1] * fsat[Ix][Iy][Iz][2]) - fpreProp[Ix][Iy][Iz][Nc - 1]);
					RSide = ftrans[Ix + 1][Iy + 1][Iz + 1][0][0] * (fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) - ftrans[Ix][Iy + 1][Iz + 1][0][0] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);
					RSide += ftrans[Ix + 1][Iy + 1][Iz + 1][0][1] * (fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) - ftrans[Ix + 1][Iy][Iz + 1][0][1] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);
					RSide += ftrans[Ix + 1][Iy + 1][Iz + 1][0][2] * (fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) - ftrans[Ix + 1][Iy + 1][Iz][0][2] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);
					RSide += ftrans[Ix + 1][Iy + 1][Iz + 1][1][0] * (fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]) - ftrans[Ix][Iy + 1][Iz + 1][1][0] * (fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);
					RSide += ftrans[Ix + 1][Iy + 1][Iz + 1][1][1] * (fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]) - ftrans[Ix + 1][Iy][Iz + 1][1][1] * (fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);
					RSide += ftrans[Ix + 1][Iy + 1][Iz + 1][1][2] * (fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]) - ftrans[Ix + 1][Iy + 1][Iz][1][2] * (fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);

					RSide += ftrans[Ix + 1][Iy + 1][Iz + 1][2][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - ftrans[Ix][Iy + 1][Iz + 1][2][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
					RSide += ftrans[Ix + 1][Iy + 1][Iz + 1][2][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - ftrans[Ix + 1][Iy][Iz + 1][2][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
					RSide += ftrans[Ix + 1][Iy + 1][Iz + 1][2][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]) - ftrans[Ix + 1][Iy + 1][Iz][2][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
					RSide += ftrans[Ix + 1][Iy + 1][Iz + 1][3][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - ftrans[Ix][Iy + 1][Iz + 1][3][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
					RSide += ftrans[Ix + 1][Iy + 1][Iz + 1][3][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - ftrans[Ix + 1][Iy][Iz + 1][3][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
					RSide += ftrans[Ix + 1][Iy + 1][Iz + 1][3][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]) - ftrans[Ix + 1][Iy + 1][Iz][3][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);

					///////////////////////////////////Transfer Function 

					RSide -= ZERO_CONV * SI_C *blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
					RSide -= ZERO_CONV * SI_C *blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor) / (porpor + Mporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));

					/////////////////////////////////////
					RSide += Qo + Qg;
#ifdef USE_MKL_SOLVER
					MKLRHSVector[actx->LocalIndex] = RSide - LSide;
#else
					LocalF[actx->LocalIndex] = LSide - RSide;
#endif

				}
				else {
					LSide = (Vb / Dt)*(porpor*watRo*WAT_M_RO*fsat[Ix][Iy][Iz][0] - fpreProp[Ix][Iy][Iz][Nc]);
					RSide = fWtran[Ix + 1][Iy + 1][Iz + 1][0] * (fP[Ix + 2][Iy + 1][Iz + 1][0] - fP[Ix + 1][Iy + 1][Iz + 1][0]) - fWtran[Ix][Iy + 1][Iz + 1][0] * (fP[Ix + 1][Iy + 1][Iz + 1][0] - fP[Ix][Iy + 1][Iz + 1][0]);
					RSide += fWtran[Ix + 1][Iy + 1][Iz + 1][1] * (fP[Ix + 1][Iy + 2][Iz + 1][0] - fP[Ix + 1][Iy + 1][Iz + 1][0]) - fWtran[Ix + 1][Iy][Iz + 1][1] * (fP[Ix + 1][Iy + 1][Iz + 1][0] - fP[Ix + 1][Iy][Iz + 1][0]);
					RSide += fWtran[Ix + 1][Iy + 1][Iz + 1][2] * (fP[Ix + 1][Iy + 1][Iz + 2][0] - fP[Ix + 1][Iy + 1][Iz + 1][0]) - fWtran[Ix + 1][Iy + 1][Iz][2] * (fP[Ix + 1][Iy + 1][Iz + 1][0] - fP[Ix + 1][Iy + 1][Iz][0]);

					RSide += G_ACC * watRo*fWtran[Ix + 1][Iy + 1][Iz + 1][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - G_ACC * watRo*fWtran[Ix][Iy + 1][Iz + 1][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
					RSide += G_ACC * watRo*fWtran[Ix + 1][Iy + 1][Iz + 1][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - G_ACC * watRo*fWtran[Ix + 1][Iy][Iz + 1][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
					RSide += G_ACC * watRo*fWtran[Ix + 1][Iy + 1][Iz + 1][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]) - G_ACC * watRo*fWtran[Ix + 1][Iy + 1][Iz][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);

					/////////////////////////////Transfer Function


					RSide -= ZERO_CONV * SI_C* watRo *WAT_M_RO * ShapeFactor_2(Ix, Iy, Iz) * f_m_relperm[0] / watMu * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) *((fP[Ix + 1][Iy + 1][Iz + 1][0] - P[Ix + 1][Iy + 1][Iz + 1][0]) + (blockFProps[Ix][Iy][Iz][BLOCK_PC][0] - fblockFProps[Ix][Iy][Iz][BLOCK_PC][0]));

					////////////////////////////////////////////
					RSide += Qw;
#ifdef USE_MKL_SOLVER
					MKLRHSVector[actx->LocalIndex] = RSide - LSide;
#else
					LocalF[actx->LocalIndex] = LSide - RSide;
#endif
				}
			}
			else if (BENo < (Nc + 2)) {
				Sxg = 0;
				for (i = 0; i < Nc; i++) Sxg += fcomp[Ix][Iy][Iz][i][1];
#ifdef USE_MKL_SOLVER
				MKLRHSVector[actx->LocalIndex] = 1 - Sxg;
#else
				LocalF[actx->LocalIndex] = Sxg - 1;
#endif
			}
			else if (BENo < (Nc + 3)) {
#ifdef USE_MKL_SOLVER
			MKLRHSVector[actx->LocalIndex] = 1 - fsat[Ix][Iy][Iz][0] - fsat[Ix][Iy][Iz][1] - fsat[Ix][Iy][Iz][2];
#else
			LocalF[actx->LocalIndex] = fsat[Ix][Iy][Iz][0] + fsat[Ix][Iy][Iz][1] + fsat[Ix][Iy][Iz][2] - 1;
#endif
			}
			else {
				std::cout << Ix << '\t' << Iy << '\t' << Iz << '\t' << BENo << "\tFracture phase stat: " << fphaseStat[Ix][Iy][Iz] << std::endl;
				TerM("Global Index Error!");
			}

			break;
		}

	}
	else {
		switch (phaseStat[Ix][Iy][Iz]) {
		case 1:			
			if (BENo < (Nc + 1)) {
#pragma region sadeq

				fporpor = fporosity[Ix][Iy][Iz] * (1 + cpor * (fP[Ix + 1][Iy + 1][Iz + 1][1] - refP) + dcpor * (fP[Ix + 1][Iy + 1][Iz + 1][1] - refP)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - refP));
				
				if (P[Ix + 1][Iy + 1][Iz + 1][1] >= fP[Ix + 1][Iy + 1][Iz + 1][1])
				{
					f_m_relperm[1] = relPerm[Ix][Iy][Iz][1];//oil relperm between matrix and fracture
					f_m_drelperm[1][1] = dRelPerm[Ix][Iy][Iz][1];//dkrodsw
					f_m_drelperm[1][2] = dRelPerm[Ix][Iy][Iz][2];//dkrodsg
					f_m_drelperm[1][4] = dRelPerm[Ix][Iy][Iz][4];//dkrodso

					f_m_drelperm[1][9] = 0;
					f_m_drelperm[1][7] = 0;
					f_m_drelperm[1][6] = 0;
				}
				else
				{
					f_m_relperm[1] = frelPerm[Ix][Iy][Iz][1];
					f_m_drelperm[1][6] = fdRelPerm[Ix][Iy][Iz][1];//fdkrofdsw
					f_m_drelperm[1][7] = fdRelPerm[Ix][Iy][Iz][2];//fdkrofdsg
					f_m_drelperm[1][9] = fdRelPerm[Ix][Iy][Iz][4];//fdkrofdso

					f_m_drelperm[1][4] = 0;
					f_m_drelperm[1][2] = 0;
					f_m_drelperm[1][1] = 0;
				}
				if (P[Ix + 1][Iy + 1][Iz + 1][2] >= fP[Ix + 1][Iy + 1][Iz + 1][2])
				{
					f_m_relperm[2] = relPerm[Ix][Iy][Iz][2];//gas relperm between matrix and fracture
					f_m_drelperm[2][3] = dRelPerm[Ix][Iy][Iz][3];//dkrgdsg

					f_m_drelperm[2][8] = 0;
				}
				else
				{
					f_m_relperm[2] = frelPerm[Ix][Iy][Iz][2];
					f_m_drelperm[2][8] = fdRelPerm[Ix][Iy][Iz][3];//fdkrgfdsg

					f_m_drelperm[2][3] = 0;
				}

				if (P[Ix + 1][Iy + 1][Iz + 1][0] >= fP[Ix + 1][Iy + 1][Iz + 1][0])
				{
					f_m_relperm[0] = relPerm[Ix][Iy][Iz][0];
					f_m_drelperm[1][0] = dRelPerm[Ix][Iy][Iz][0];//dkrwdsw

					f_m_drelperm[1][5] = 0;
				}
				else
				{
					f_m_relperm[0] = frelPerm[Ix][Iy][Iz][0];//water relperm between matrix and fracture
					f_m_drelperm[1][5] = fdRelPerm[Ix][Iy][Iz][0];//fdkrwfdsw

					f_m_drelperm[1][0] = 0;
				}
#pragma endregion

#pragma region Wells&Commons
				porpor = porosity[Ix][Iy][Iz] * (1 + cpor * (P[Ix + 1][Iy + 1][Iz + 1][1] - refP) + dcpor * (P[Ix + 1][Iy + 1][Iz + 1][1] - refP)*(P[Ix + 1][Iy + 1][Iz + 1][1] - refP));
				


				Qw = 0;
				Qo = 0;
				Qg = 0;

				PIw = 0;
				PIo = 0;
				PIg = 0;

				Vb = gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz];

				iWell = -1;
				for (i = 0; i < wellNO; i++) {
					if ((Ix == welli[i][1]) && (Iy == welli[i][2]) && (Iz >= welli[i][3]) && (Iz <= welli[i][4])) {
						Re = Calc_Re(Ix, Iy, Iz, i);
						if (welli[i][0] == 0) BMethQM = 1;
						if ((welli[i][0] == 0) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {		//Constant Pwf Pressure - Production
																																																			//Re = 0.14*sqrt(sqrt(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0])*gridDim[Ix] * gridDim[Ix] + sqrt(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1])*gridDim[Nx + Iy] * gridDim[Nx + Iy]);
																																																			//Re /= 0.5*(pow(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0], 0.25) + pow(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1], 0.25));
							if (Re <= wellf[i][3])
								Re += wellf[i][3];

							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][1] * perm[Ix][Iy][Iz][0]) / (log(Re / wellf[i][3]) + wellf[i][2]);

							PIw = S1 * watRo*WAT_M_RO*relPerm[Ix][Iy][Iz][0] / watMu;
							PIo = S1 * blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / blockFProps[Ix][Iy][Iz][BMU][0];
							PIg = S1 * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / blockFProps[Ix][Iy][Iz][BMU][1];

							Qw = PIw * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][0]);
							Qo = PIo * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][1]);
							Qg = PIg * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][2]);

							

							/*if ((wellf[i][1]) && ((-Qo) > wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								//std::cout << "HIT!\n";
								SSo1 = 0;
								for (j = welli[i][3]; j <= welli[i][4]; j++) {
									S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
									SSo1 += blockFProps[Ix][Iy][j][RO][0] * S2*relPerm[Ix][Iy][j][1] / blockFProps[Ix][Iy][Iz][BMU][0];
									S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
									SSo1 += fblockFProps[Ix][Iy][j][RO][0] * S2*frelPerm[Ix][Iy][j][1] / fblockFProps[Ix][Iy][Iz][BMU][0];
								}
								S1 = gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][0] * perm[Ix][Iy][Iz][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);

								if (SSo1) {
									if (SURFACE_RATES) Qo = -S1 * oilRateCh(Ix, Iy, Iz, relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * blockFProps[Ix][Iy][Iz][BMU][0] / (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * blockFProps[Ix][Iy][Iz][BMU][1]))*wellf[i][1] * blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / (blockFProps[Ix][Iy][Iz][BMU][0] * SSo1);
									else Qo = -S1 * wellf[i][1] * blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / (blockFProps[Ix][Iy][Iz][BMU][0] * SSo1);
								}
								Qw = Qo * relPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*blockFProps[Ix][Iy][Iz][BMU][0] / (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * watMu);
								Qg = Qo * relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * blockFProps[Ix][Iy][Iz][BMU][0] / (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * blockFProps[Ix][Iy][Iz][BMU][1]);

							}*/

							if (P[Ix + 1][Iy + 1][Iz + 1][1] < WELL_MIN_P) {
								Qw = 0;
								Qo = 0;
								Qg = 0;

								PIw = 0;
								PIo = 0;
								PIg = 0;
							}
							else if ((wellf[i][1]) && ((-Qo) > wellf[i][1])) {
								Qo = -wellf[i][1];
								Qw = Qo * relPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*blockFProps[Ix][Iy][Iz][BMU][0] / (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * watMu);
								Qg = Qo * relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * blockFProps[Ix][Iy][Iz][BMU][0] / (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * blockFProps[Ix][Iy][Iz][BMU][1]);
								PIw = 0;
								PIo = 0;
								PIg = 0;
							}
							if ((Qw > 0) || ((Qw - Qw) != 0)) {
								Qw = 0;
								PIw = 0;
							}
							if ((Qo > 0) || ((Qo - Qo) != 0)) {
								Qo = 0;
								PIo = 0;
							}
							if ((Qg > 0) || ((Qg - Qg) != 0)) {
								Qg = 0;
								PIg = 0;
							}

							QoProduced = Qo;
							Qoprod += Qo + Qg;
							MethQM += Qo * (1 - comp[Ix][Iy][Iz][0][0]) + Qg * (1 - comp[Ix][Iy][Iz][0][1]);
							
							//Qoprod = Qo*(1 - comp[Ix][Iy][Iz][0][0])+ Qg*(1 - comp[Ix][Iy][Iz][0][1]);
							WellCompSadeq[0] += Qo * (comp[Ix][Iy][Iz][0][0]) + Qg * (comp[Ix][Iy][Iz][0][1]);
							WellCompSadeq[1] += Qo * (comp[Ix][Iy][Iz][1][0]) + Qg * (comp[Ix][Iy][Iz][1][1]);
							WellCompSadeq[2] += Qo * (comp[Ix][Iy][Iz][2][0]) + Qg * (comp[Ix][Iy][Iz][2][1]);
							WellCompSadeq2[0] += (Qo*(comp[Ix][Iy][Iz][0][0]) + Qg * (comp[Ix][Iy][Iz][0][1]));
							WellCompSadeq2[1] += (Qo*(comp[Ix][Iy][Iz][1][0]) + Qg * (comp[Ix][Iy][Iz][1][1]));
							WellCompSadeq2[2] += (Qo*(comp[Ix][Iy][Iz][2][0]) + Qg * (comp[Ix][Iy][Iz][2][1]));
						}

						else if ((welli[i][0] == 1) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {			//Constant Pwf- Gas Production
																																																						//Re = 0.14*sqrt(sqrt(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0])*gridDim[Ix] * gridDim[Ix] + sqrt(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1])*gridDim[Nx + Iy] * gridDim[Nx + Iy]);
																																																						//Re /= 0.5*(pow(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0], 0.25) + pow(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1], 0.25));
																																																						//Re = Calc_Re(Ix, Iy, Iz, i);
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][1] * perm[Ix][Iy][Iz][0]) / (log(Re / wellf[i][3]) + wellf[i][2]);

							PIw = S1 * watRo*WAT_M_RO*relPerm[Ix][Iy][Iz][0] / watMu;
							PIo = S1 * blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / blockFProps[Ix][Iy][Iz][BMU][0];
							PIg = S1 * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / blockFProps[Ix][Iy][Iz][BMU][1];

							Qw = PIw * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][0]);
							Qo = PIo * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][1]);
							Qg = PIg * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][2]);

							if ((Qw > 0) || ((Qw - Qw) != 0)) {
								Qw = 0;
								PIw = 0;
							}
							if ((Qo > 0) || ((Qo - Qo) != 0)) {
								Qo = 0;
								PIo = 0;
							}
							if ((Qg > 0) || ((Qg - Qg) != 0)) {
								Qg = 0;
								PIg = 0;
							}

							if ((wellf[i][1]) && ((-Qg) > wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								SSo1 = 0;
								for (j = welli[i][3]; j <= welli[i][4]; j++) {
									S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
									SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][Iz][BMU][1];
									S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
									SSo1 += fblockFProps[Ix][Iy][j][RO][1] * S2*frelPerm[Ix][Iy][j][2] / fblockFProps[Ix][Iy][Iz][BMU][1];
								}
								S1 = gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][0] * perm[Ix][Iy][Iz][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);

								if (SSo1) {
									if (SURFACE_RATES) Qg = -S1 * gasRateCh(Ix, Iy, Iz, (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * blockFProps[Ix][Iy][Iz][BMU][1]) / (relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * blockFProps[Ix][Iy][Iz][BMU][0]))*wellf[i][1] * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / (blockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
									else Qg = -S1 * wellf[i][1] * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / (blockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
								}
								Qw = Qg * relPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*blockFProps[Ix][Iy][Iz][BMU][1] / (relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * watMu);
								Qo = Qg * relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * blockFProps[Ix][Iy][Iz][BMU][1] / (relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * blockFProps[Ix][Iy][Iz][BMU][0]);

							}

							//QoProd=oilRateCh2(Ix, Iy, Iz, -Qo, -Qg);
							QoProduced = Qo;
						}

						else if ((welli[i][0] == 2) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {			//Constant Pwf Pressure - Water Injection
																																																						//Re = 0.14*sqrt(sqrt(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0])*gridDim[Ix] * gridDim[Ix] + sqrt(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1])*gridDim[Nx + Iy] * gridDim[Nx + Iy]);
																																																						//Re /= 0.5*(pow(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0], 0.25) + pow(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1], 0.25));
																																																						//Re = Calc_Re(Ix, Iy, Iz, i);
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][1] * perm[Ix][Iy][Iz][0]) / (log(Re / wellf[i][3]) + wellf[i][2]);

							PIw = S1 * watRo*WAT_M_RO*relPerm[Ix][Iy][Iz][0] / watMu;
							Qw = PIw * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][0]);


							if ((Qw < 0) || ((Qw - Qw) != 0)) {
								Qw = 0;
								PIw = 0;
							}

							if ((wellf[i][1]) && (Qw > wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								SSo1 = 0;
								for (j = welli[i][3]; j <= welli[i][4]; j++) {
									S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
									SSo1 += watRo * S2*relPerm[Ix][Iy][j][0] / watMu;
									S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
									SSo1 += watRo * S2*frelPerm[Ix][Iy][j][0] / watMu;
								}
								S1 = gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][0] * perm[Ix][Iy][Iz][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);

								if (SSo1) Qw = S1 * wellf[i][1] * watRo*WAT_M_RO * relPerm[Ix][Iy][Iz][0] / (watMu * SSo1);
							}
						}

						else if ((welli[i][0] == 3) && (((fabs(simTime - wellf[i][Nc + 4]) <= TSTEPIF) || (fabs(simTime - wellf[i][Nc + 5]) <= TSTEPIF)) || ((simTime >= wellf[i][Nc + 4]) && (simTime <= wellf[i][Nc + 5])))) {			//Constant Pwf Pressure - Gas Injection
																																																											//Re = 0.14*sqrt(sqrt(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0])*gridDim[Ix] * gridDim[Ix] + sqrt(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1])*gridDim[Nx + Iy] * gridDim[Nx + Iy]);
																																																											//Re /= 0.5*(pow(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0], 0.25) + pow(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1], 0.25));
							for (j = 0; j < Nc; j++) IComp[j] = wellf[i][4 + j];
							FlashInjection(IComp, wellf[i][0], IOComp, IGComp, iOF, iGF, iOD, iGD, iOV, iGV);
							//Re = Calc_Re(Ix, Iy, Iz, i);
							if (Re <= wellf[i][3])
								Re += wellf[i][3];

							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][1] * perm[Ix][Iy][Iz][0]) / (log(Re / wellf[i][3]) + wellf[i][2]);
							//S2 = sgt[Nsgt-1][1] / iGV;
							//S2 = relPerm[Ix][Iy][Iz][2] / blockFProps[Ix][Iy][Iz][BMU][1];

							PIg = S1 * iGD * sgt[Nsgt - 1][1] * iGF / iGV;
							Qg = PIg * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][2]);
							//PIo = S1*iOD * swt[0][2]*iOF / iOV;
							PIo = PIg * iOF / iGF;
							Qo = PIo * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][2]);

							if ((Qo < 0) || ((Qo - Qo) != 0)) {
								Qo = 0;
								PIo = 0;
							}
							if ((Qg < 0) || ((Qg - Qg) != 0)) {
								Qg = 0;
								PIg = 0;
							}

							iWell = i;

							if ((wellf[i][1]) && (Qg > wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								SSo1 = 0;
								for (j = welli[i][3]; j <= welli[i][4]; j++) {
									S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
									//SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][Iz][BMU][1];
									SSo1 += S2;
									S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
									//SSo1 += fblockFProps[Ix][Iy][j][RO][1] * S2*frelPerm[Ix][Iy][j][2] / fblockFProps[Ix][Iy][Iz][BMU][1];
									SSo1 += S2;
								}
								S1 = gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][0] * perm[Ix][Iy][Iz][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);

								//if (SSo1) Qg = S1*wellf[i][1] * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / (blockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
								if (SSo1) Qg = S1 * wellf[i][1] / SSo1;
								if (SSo1) Qo = Qg * iOF / iGF;
							}
							Qginj = Qg + Qo;
						}

						else if ((welli[i][0] == 4) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {		//Constant Oil Rate
							SSo1 = 0;
							for (j = welli[i][3]; j <= welli[i][4]; j++) {
								S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
								SSo1 += blockFProps[Ix][Iy][j][RO][0] * S2*relPerm[Ix][Iy][j][1] / blockFProps[Ix][Iy][Iz][BMU][0];
								S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
								SSo1 += fblockFProps[Ix][Iy][j][RO][0] * S2*frelPerm[Ix][Iy][j][1] / fblockFProps[Ix][Iy][Iz][BMU][0];
							}
							S1 = gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][0] * perm[Ix][Iy][Iz][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);

							if (SSo1) {
								if (SURFACE_RATES) Qo = -S1 * oilRateCh(Ix, Iy, Iz, relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * blockFProps[Ix][Iy][Iz][BMU][0] / (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * blockFProps[Ix][Iy][Iz][BMU][1]))*wellf[i][0] * blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / (blockFProps[Ix][Iy][Iz][BMU][0] * SSo1);
								else Qo = -S1 * wellf[i][0] * blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / (blockFProps[Ix][Iy][Iz][BMU][0] * SSo1);
							}
							Qw = Qo * relPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*blockFProps[Ix][Iy][Iz][BMU][0] / (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * watMu);
							Qg = Qo * relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * blockFProps[Ix][Iy][Iz][BMU][0] / (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * blockFProps[Ix][Iy][Iz][BMU][1]);

							//Re = 0.14*sqrt(sqrt(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0])*gridDim[Ix] * gridDim[Ix] + sqrt(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1])*gridDim[Nx + Iy] * gridDim[Nx + Iy]);
							//Re /= 0.5*(pow(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0], 0.25) + pow(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1], 0.25));
							//Re = Calc_Re(Ix, Iy, Iz, i);
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][1] * perm[Ix][Iy][Iz][0]) / (log(Re / wellf[i][3]) + wellf[i][2]);
							Pwf = P[Ix + 1][Iy + 1][Iz + 1][1] - Qo / (S1*blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / blockFProps[Ix][Iy][Iz][BMU][0]);

							if ((wellf[i][1]) && (Pwf < wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								PIw = S1 * watRo*WAT_M_RO*relPerm[Ix][Iy][Iz][0] / watMu;
								PIo = S1 * blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / blockFProps[Ix][Iy][Iz][BMU][0];
								PIg = S1 * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / blockFProps[Ix][Iy][Iz][BMU][1];

								Qw = PIw * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][0]);
								Qo = PIo * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][1]);
								Qg = PIg * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][2]);

								if ((Qw > 0) || ((Qw - Qw) != 0)) {
									Qw = 0;
									PIw = 0;
								}
								if ((Qo > 0) || ((Qo - Qo) != 0)) {
									Qo = 0;
									PIo = 0;
								}
								if ((Qg > 0) || ((Qg - Qg) != 0)) {
									Qg = 0;
									PIg = 0;
								}
							}

							

							Qoprod = Qo + Qg;
							QoProduced = Qo;
						}

						else if ((welli[i][0] == 5) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {		//Constant Gas Rate
							SSo1 = 0;
							for (j = welli[i][3]; j <= welli[i][4]; j++) {
								S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
								SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][Iz][BMU][1];
								S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
								SSo1 += fblockFProps[Ix][Iy][j][RO][1] * S2*frelPerm[Ix][Iy][j][2] / fblockFProps[Ix][Iy][Iz][BMU][1];
							}
							S1 = gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][0] * perm[Ix][Iy][Iz][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);

							if (SSo1) {
								if (SURFACE_RATES) Qg = -S1 * gasRateCh(Ix, Iy, Iz, (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * blockFProps[Ix][Iy][Iz][BMU][1]) / (relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * blockFProps[Ix][Iy][Iz][BMU][0]))*wellf[i][1] * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / (blockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
								else Qg = -S1 * wellf[i][1] * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / (blockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
							}
							Qw = Qg * relPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*blockFProps[Ix][Iy][Iz][BMU][1] / (relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * watMu);
							Qo = Qg * relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * blockFProps[Ix][Iy][Iz][BMU][1] / (relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * blockFProps[Ix][Iy][Iz][BMU][0]);

							//Re = 0.14*sqrt(sqrt(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0])*gridDim[Ix] * gridDim[Ix] + sqrt(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1])*gridDim[Nx + Iy] * gridDim[Nx + Iy]);
							//Re /= 0.5*(pow(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0], 0.25) + pow(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1], 0.25));
							//Re = Calc_Re(Ix, Iy, Iz, i);
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][1] * perm[Ix][Iy][Iz][0]) / (log(Re / wellf[i][3]) + wellf[i][2]);
							Pwf = P[Ix + 1][Iy + 1][Iz + 1][2] - Qg / (S1*blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / blockFProps[Ix][Iy][Iz][BMU][1]);

							if ((wellf[i][1]) && (Pwf < wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								PIw = S1 * watRo*WAT_M_RO*relPerm[Ix][Iy][Iz][0] / watMu;
								PIo = S1 * blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / blockFProps[Ix][Iy][Iz][BMU][0];
								PIg = S1 * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / blockFProps[Ix][Iy][Iz][BMU][1];

								Qw = PIw * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][0]);
								Qo = PIo * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][1]);
								Qg = PIg * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][2]);

								if ((Qw > 0) || ((Qw - Qw) != 0)) {
									Qw = 0;
									PIw = 0;
								}
								if ((Qo > 0) || ((Qo - Qo) != 0)) {
									Qo = 0;
									PIo = 0;
								}
								if ((Qg > 0) || ((Qg - Qg) != 0)) {
									Qg = 0;
									PIg = 0;
								}
							}
						}

						else if ((welli[i][0] == 6) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {		//Constant Total Production Rate
							SSw = 0;
							SSo = 0;
							SSg = 0;
							SSo1 = 0;
							for (j = welli[i][3]; j <= welli[i][4]; j++) {
								S1 = ((relPerm[Ix][Iy][j][0] / watMu) + (relPerm[Ix][Iy][j][1] / blockFProps[Ix][Iy][j][BMU][0]) + (relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][j][BMU][1]));
								SSw += (relPerm[Ix][Iy][j][0] / watMu) / S1;
								SSo += (relPerm[Ix][Iy][j][1] / blockFProps[Ix][Iy][j][BMU][0]) / S1;
								SSg += (relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][j][BMU][1]) / S1;

								S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
								SSo1 += blockFProps[Ix][Iy][j][RO][0] * S2*relPerm[Ix][Iy][j][1] / blockFProps[Ix][Iy][Iz][BMU][0];

								S1 = ((frelPerm[Ix][Iy][j][0] / watMu) + (frelPerm[Ix][Iy][j][1] / fblockFProps[Ix][Iy][j][BMU][0]) + (frelPerm[Ix][Iy][j][2] / fblockFProps[Ix][Iy][j][BMU][1]));
								SSw += (frelPerm[Ix][Iy][j][0] / watMu) / S1;
								SSo += (frelPerm[Ix][Iy][j][1] / fblockFProps[Ix][Iy][j][BMU][0]) / S1;
								SSg += (frelPerm[Ix][Iy][j][2] / fblockFProps[Ix][Iy][j][BMU][1]) / S1;

								S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
								SSo1 += fblockFProps[Ix][Iy][j][RO][0] * S2*frelPerm[Ix][Iy][j][1] / fblockFProps[Ix][Iy][Iz][BMU][0];

							}
							QoP = SSo * wellf[i][0] / (SSw + SSo + SSg);

							S1 = gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][0] * perm[Ix][Iy][Iz][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
							if (SSo1) Qo = -S1 * QoP*blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / (blockFProps[Ix][Iy][Iz][BMU][0] * SSo1);
							Qw = Qo * relPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*blockFProps[Ix][Iy][Iz][BMU][0] / (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * watMu);
							Qg = Qo * relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * blockFProps[Ix][Iy][Iz][BMU][0] / (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * blockFProps[Ix][Iy][Iz][BMU][1]);


							//Re = 0.14*sqrt(sqrt(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0])*gridDim[Ix] * gridDim[Ix] + sqrt(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1])*gridDim[Nx + Iy] * gridDim[Nx + Iy]);
							//Re /= 0.5*(pow(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0], 0.25) + pow(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1], 0.25));
							//Re = Calc_Re(Ix, Iy, Iz, i);
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][1] * perm[Ix][Iy][Iz][0]) / (log(Re / wellf[i][3]) + wellf[i][2]);
							Pwf = P[Ix + 1][Iy + 1][Iz + 1][1] - (Qw + Qo + Qg) / (S1*(watRo*WAT_M_RO*relPerm[Ix][Iy][Iz][0] / watMu + blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / blockFProps[Ix][Iy][Iz][BMU][0] + blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / blockFProps[Ix][Iy][Iz][BMU][1]));

							if ((wellf[i][1]) && (Pwf < wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								PIw = S1 * watRo*WAT_M_RO*relPerm[Ix][Iy][Iz][0] / watMu;
								PIo = S1 * blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / blockFProps[Ix][Iy][Iz][BMU][0];
								PIg = S1 * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / blockFProps[Ix][Iy][Iz][BMU][1];

								Qw = PIw * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][0]);
								Qo = PIo * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][1]);
								Qg = PIg * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][2]);

								if ((Qw > 0) || ((Qw - Qw) != 0)) {
									Qw = 0;
									PIw = 0;
								}
								if ((Qo > 0) || ((Qo - Qo) != 0)) {
									Qo = 0;
									PIo = 0;
								}
								if ((Qg > 0) || ((Qg - Qg) != 0)) {
									Qg = 0;
									PIg = 0;
								}
							}
						}

						else if ((welli[i][0] == 7) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {			//Constant Water Injection Rate
							SSw = 0;
							for (j = welli[i][3]; j <= welli[i][4]; j++) {
								S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
								SSo1 += S2 * relPerm[Ix][Iy][j][0];
								S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
								SSo1 += S2 * frelPerm[Ix][Iy][j][0];
							}
							S1 = gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][0] * perm[Ix][Iy][Iz][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
							if (SSw) Qw = S1 * wellf[i][0] * relPerm[Ix][Iy][Iz][1] / SSw;

							//Re = 0.14*sqrt(sqrt(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0])*gridDim[Ix] * gridDim[Ix] + sqrt(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1])*gridDim[Nx + Iy] * gridDim[Nx + Iy]);
							//Re /= 0.5*(pow(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0], 0.25) + pow(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1], 0.25));
							//Re = Calc_Re(Ix, Iy, Iz, i);
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][1] * perm[Ix][Iy][Iz][0]) / (log(Re / wellf[i][3]) + wellf[i][2]);
							Pwf = P[Ix + 1][Iy + 1][Iz + 1][0] - Qw / (S1*watRo*WAT_M_RO * relPerm[Ix][Iy][Iz][1] / watMu);

							if ((wellf[i][1]) && (Pwf > wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								PIw = S1 * watRo*WAT_M_RO*relPerm[Ix][Iy][Iz][0] / watMu;
								Qw = PIw * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][0]);

								if ((Qw < 0) || ((Qw - Qw) != 0)) {
									Qw = 0;
									PIw = 0;
								}
							}
						}

						else if ((welli[i][0] == 8) && (((fabs(simTime - wellf[i][Nc + 4]) <= TSTEPIF) || (fabs(simTime - wellf[i][Nc + 5]) <= TSTEPIF)) || ((simTime >= wellf[i][Nc + 4]) && (simTime <= wellf[i][Nc + 5])))) {			//Constant Gas Injection Rate
							for (j = 0; j < Nc; j++) IComp[j] = wellf[i][4 + j];
							FlashInjection(IComp, wellf[i][1], IOComp, IGComp, iOF, iGF, iOD, iGD, iOV, iGV);
							//S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][1] * perm[Ix][Iy][Iz][0]) / (log(Re / wellf[i][3]) + wellf[i][2]);
							if (Re <= wellf[i][3])
								Re += wellf[i][3];

							SSo1 = 0;
							for (j = welli[i][3]; j <= welli[i][4]; j++) {
								S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
								//SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][Iz][BMU][1];
								//SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*sgt[Nsgt-1][1] / blockFProps[Ix][Iy][Iz][BMU][1];
								SSo1 += S2;
								S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
								//SSo1 += fblockFProps[Ix][Iy][j][RO][1] * S2*frelPerm[Ix][Iy][j][2] / fblockFProps[Ix][Iy][Iz][BMU][1];
								//SSo1 += fblockFProps[Ix][Iy][j][RO][1] * S2*sgt[Nsgt-1][1] / fblockFProps[Ix][Iy][Iz][BMU][1];
								SSo1 += S2;
							}
							S1 = gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][0] * perm[Ix][Iy][Iz][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);

							//if (SSo1) Qg = S1*wellf[i][0] * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / (blockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
							//if (SSo1) Qg = S1*wellf[i][0] * blockFProps[Ix][Iy][Iz][RO][1] * sgt[Nsgt - 1][1] / (blockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
							if (SSo1) Qg = S1 * wellf[i][0] / SSo1;
							if (SSo1) Qo = Qg * iOF / iGF;
							//Re = 0.14*sqrt(sqrt(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0])*gridDim[Ix] * gridDim[Ix] + sqrt(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1])*gridDim[Nx + Iy] * gridDim[Nx + Iy]);
							//Re /= 0.5*(pow(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0], 0.25) + pow(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1], 0.25));



							//Re = Calc_Re(Ix, Iy, Iz, i);

							//Pwf = P[Ix + 1][Iy + 1][Iz + 1][2] - Qg / (S1*blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / blockFProps[Ix][Iy][Iz][BMU][1]);
							//Pwf = P[Ix + 1][Iy + 1][Iz + 1][2] - Qg / (S1*blockFProps[Ix][Iy][Iz][RO][1] * sgt[Nsgt - 1][1] / blockFProps[Ix][Iy][Iz][BMU][1]);
							Pwf = P[Ix + 1][Iy + 1][Iz + 1][2] - Qg / (S1*iGD * sgt[Nsgt - 1][1] / iGV);

							if ((wellf[i][1]) && (Pwf > wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								PIg = S1 * iGD * sgt[Nsgt - 1][1] * iGF / iGV;
								Qg = PIg * (wellf[i][1] - P[Ix + 1][Iy + 1][Iz + 1][2]);
								//PIo = S1*iOD * swt[0][2]*iOF / iOV;
								PIo = PIg * iOF / iGF;
								Qo = PIo * (wellf[i][1] - P[Ix + 1][Iy + 1][Iz + 1][2]);

								if ((Qo < 0) || ((Qo - Qo) != 0)) {
									Qo = 0;
									PIo = 0;
								}
								if ((Qg < 0) || ((Qg - Qg) != 0)) {
									Qg = 0;
									PIg = 0;
								}
							}
							
							if (P[Ix + 1][Iy + 1][Iz + 1][1] > WELL_MAX_P) {
								Qw = 0;
								Qo = 0;
								Qg = 0;
								IOComp[0] = 0;
								IOComp[1] = 0;
								IGComp[0] = 0;
								IGComp[1] = 0;
								PIw = 0;
								PIo = 0;
								PIg = 0;
							}

							QgInjected = Qg;


							QgInj = Qg;

							iWell = i;
							gasInjStat = -1;

							Qginj += Qg + Qo;
						}


					}
					QwT += Qw;
					QoT += Qo;
					QgT += Qg;
				}




#pragma endregion

				if (BENo < (Nc - 1)) {
					i = BENo;

					LSide = (Vb / Dt)*(porpor*(comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * sat[Ix][Iy][Iz][1] + comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * sat[Ix][Iy][Iz][2]) - preProp[Ix][Iy][Iz][i]);
					RSide = comp[(Ix + transS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][0][0] * (P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) - comp[(Ix - 1 + transS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix][Iy + 1][Iz + 1][0][0] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);
					RSide += comp[Ix][(Iy + transS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][0][1] * (P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) - comp[Ix][(Iy - 1 + transS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy][Iz + 1][0][1] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);
					RSide += comp[Ix][Iy][(Iz + transS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][0][2] * (P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) - comp[Ix][Iy][(Iz - 1 + transS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz][0][2] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);
					RSide += comp[(Ix + transS[Ix + 1][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][1][0] * (P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) - comp[(Ix - 1 + transS[Ix][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * trans[Ix][Iy + 1][Iz + 1][1][0] * (P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);
					RSide += comp[Ix][(Iy + transS[Ix + 1][Iy + 1][Iz + 1][1][1])][Iz][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][1][1] * (P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) - comp[Ix][(Iy - 1 + transS[Ix + 1][Iy][Iz + 1][1][1])][Iz][i][1] * trans[Ix + 1][Iy][Iz + 1][1][1] * (P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);
					RSide += comp[Ix][Iy][(Iz + transS[Ix + 1][Iy + 1][Iz + 1][1][2])][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][1][2] * (P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) - comp[Ix][Iy][(Iz - 1 + transS[Ix + 1][Iy + 1][Iz][1][2])][i][1] * trans[Ix + 1][Iy + 1][Iz][1][2] * (P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);

					RSide += comp[(Ix + transS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][2][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - comp[(Ix - 1 + transS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix][Iy + 1][Iz + 1][2][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
					RSide += comp[Ix][(Iy + transS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][2][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - comp[Ix][(Iy - 1 + transS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy][Iz + 1][2][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
					RSide += comp[Ix][Iy][(Iz + transS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][2][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]) - comp[Ix][Iy][(Iz - 1 + transS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz][2][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
					RSide += comp[(Ix + transS[Ix + 1][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][3][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - comp[(Ix - 1 + transS[Ix][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * trans[Ix][Iy + 1][Iz + 1][3][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
					RSide += comp[Ix][(Iy + transS[Ix + 1][Iy + 1][Iz + 1][1][1])][Iz][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][3][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - comp[Ix][(Iy - 1 + transS[Ix + 1][Iy][Iz + 1][1][1])][Iz][i][1] * trans[Ix + 1][Iy][Iz + 1][3][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
					RSide += comp[Ix][Iy][(Iz + transS[Ix + 1][Iy + 1][Iz + 1][1][2])][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][3][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]) - comp[Ix][Iy][(Iz - 1 + transS[Ix + 1][Iy + 1][Iz][1][2])][i][1] * trans[Ix + 1][Iy + 1][Iz][3][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);

					////////////////////////////Transfer Function 

					//	if (comp[Ix][Iy][Iz][i][0] > fcomp[Ix][Iy][Iz][i][0]) f_m_diffusion[0] = diffusion[Ix][Iy][Iz][i][0];
					//else f_m_diffusion[0] = fdiffusion[Ix][Iy][Iz][i][0];

					//		if (comp[Ix][Iy][Iz][i][1] > fcomp[Ix][Iy][Iz][i][1]) f_m_diffusion[1] = diffusion[Ix][Iy][Iz][i][1];
					//	else f_m_diffusion[1] = fdiffusion[Ix][Iy][Iz][i][1];

					// Rside Tran func
					RSide += ZERO_CONV * SI_C *comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
					RSide += ZERO_CONV * SI_C *comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor) / (porpor + fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (1))//only Liq in Fracture & Matrix
						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (-1))//only Gas in Fracture & Matrix
						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0)) {
						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);

						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

					}

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);

						//RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * fporpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
					}

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (1)) {
						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);

						//RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * fporpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
					}

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1)) {
						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);

						//RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * fporpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);

						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
					}

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1)) {
						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);

						//RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * fporpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
					}

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0)) {
						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);

						//RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * fporpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);

						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
					}

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0)) {
						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);

						//RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * fporpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
					}





					if (iWell == (-1)) {
						gComp = comp[Ix][Iy][Iz][i][1];
						oComp = comp[Ix][Iy][Iz][i][0];
					}
					else {
						if (welli[iWell][0] == 3) {
							gComp = IGComp[i];
							oComp = IOComp[i];
						}
						else if (welli[iWell][0] == 8) {
							//gComp = wellf[iWell][i + 4];
							gComp = IGComp[i];
							oComp = IOComp[i];
						}
					}

					RSide += oComp * Qo + gComp * Qg;


					//jac[BLNo+Nc+i][BLNo+(2*Nc+2)]=dLsidedSo;
					if (phaseStat[Ix][Iy][Iz] == (-1)) dCoefl = 0;
					else dCoefl = 1;
					if (phaseStat[Ix][Iy][Iz] == 1) dCoefg = 0;
					else dCoefg = 1;





					if (Ix<(Nx - 1)) {

						//////////////////////////////////////////////////////////
						/////////////////////////////////////////////////////////
						if (phaseStat[Ix + 1][Iy][Iz] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][RO][0] * gridDim[Ix + 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BMU][0] * gridDim[Ix + 1] * Coef;


						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BGAM][0] * gridDim[Ix + 1] * Coef) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

						porpor2 = porosity[Ix + 1][Iy][Iz] * (1 + cpor * (P[Ix + 2][Iy + 1][Iz + 1][1] - refP) + dcpor * (P[Ix + 2][Iy + 1][Iz + 1][1] - refP)*(P[Ix + 2][Iy + 1][Iz + 1][1] - refP));

						if (comp[Ix + 1][Iy][Iz][i][0]>comp[Ix][Iy][Iz][i][0]) {
							DupStream = diffusion[Ix + 1][Iy][Iz][i][0];
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][0];
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix + 1][Iy][Iz] < 1e-10)) DupStream = 0;
						AAd = blockFProps[Ix + 1][Iy][Iz][RO][0] * gridDim[Ix + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] * dCoefl;
						AAd *= (sat[Ix + 1][Iy][Iz][1] * gridDim[Ix + 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Ix] * dCoefl) / (gridDim[Ix + 1] + gridDim[Ix]);
						BBd = tor[Ix + 1][Iy][Iz] * gridDim[Ix + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Ix] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz] / (gridDim[Ix + 1] + gridDim[Ix]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = comp[Ix + 1][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0];
						RSide += DTran * DeltaX;


						if (phaseStat[Ix + 1][Iy][Iz] == 1) Coef = 0;
						else Coef = 1;
						Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][RO][1] * gridDim[Ix + 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BMU][1] * gridDim[Ix + 1] * Coef;
						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BGAM][1] * gridDim[Ix + 1] * Coef) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

						//////////////////////////////////////////////////////
						if (comp[Ix + 1][Iy][Iz][i][1]>comp[Ix][Iy][Iz][i][1]) {
							DupStream = diffusion[Ix + 1][Iy][Iz][i][1];
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][1];
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix + 1][Iy][Iz] < 1e-10)) DupStream = 0;
						AAd = blockFProps[Ix + 1][Iy][Iz][RO][1] * gridDim[Ix + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] * dCoefg;
						AAd *= (sat[Ix + 1][Iy][Iz][2] * gridDim[Ix + 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Ix] * dCoefg) / (gridDim[Ix + 1] + gridDim[Ix]);
						BBd = tor[Ix + 1][Iy][Iz] * gridDim[Ix + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Ix] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Nx+Iy]*gridDim[Nx+Ny+Iz]/(gridDim[Ix+1]+gridDim[Ix]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = comp[Ix + 1][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1];
						RSide += DTran * DeltaX;

						//////////////////////////////////////////////////////


					}

					if (Ix>0) {
						if (phaseStat[Ix - 1][Iy][Iz] == (-1)) Coef = 0;
						else Coef = 1;
						Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][RO][0] * gridDim[Ix - 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][BMU][0] * gridDim[Ix - 1] * Coef;

						porpor2 = porosity[Ix - 1][Iy][Iz] * (1 + cpor * (P[Ix][Iy + 1][Iz + 1][1] - refP) + dcpor * (P[Ix][Iy + 1][Iz + 1][1] - refP)*(P[Ix][Iy + 1][Iz + 1][1] - refP));

						if (comp[Ix - 1][Iy][Iz][i][0]>comp[Ix][Iy][Iz][i][0]) {
							DupStream = diffusion[Ix - 1][Iy][Iz][i][0];
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][0];
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix - 1][Iy][Iz] < 1e-10)) DupStream = 0;
						AAd = blockFProps[Ix - 1][Iy][Iz][RO][0] * gridDim[Ix - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] * dCoefl;
						AAd *= (sat[Ix - 1][Iy][Iz][1] * gridDim[Ix - 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Ix] * dCoefl) / (gridDim[Ix - 1] + gridDim[Ix]);
						BBd = tor[Ix - 1][Iy][Iz] * gridDim[Ix - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Ix] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz] / (gridDim[Ix - 1] + gridDim[Ix]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = comp[Ix][Iy][Iz][i][0] - comp[Ix - 1][Iy][Iz][i][0];
						RSide -= DTran * DeltaX;

						if (phaseStat[Ix - 1][Iy][Iz] == 1) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][RO][1] * gridDim[Ix - 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][BMU][1] * gridDim[Ix - 1] * Coef;

						if (comp[Ix - 1][Iy][Iz][i][1]>comp[Ix][Iy][Iz][i][1]) {
							DupStream = diffusion[Ix - 1][Iy][Iz][i][1];
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][1];
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix - 1][Iy][Iz] < 1e-10)) DupStream = 0;
						AAd = blockFProps[Ix - 1][Iy][Iz][RO][1] * gridDim[Ix - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] * dCoefg;
						AAd *= (sat[Ix - 1][Iy][Iz][2] * gridDim[Ix - 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Ix] * dCoefg) / (gridDim[Ix - 1] + gridDim[Ix]);
						BBd = tor[Ix - 1][Iy][Iz] * gridDim[Ix - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Ix] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Nx+Iy]*gridDim[Nx+Ny+Iz]/(gridDim[Ix-1]+gridDim[Ix]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = comp[Ix][Iy][Iz][i][1] - comp[Ix - 1][Iy][Iz][i][1];
						RSide -= DTran * DeltaX;
					}

					if (Iy<(Ny - 1)) {
						if (phaseStat[Ix][Iy + 1][Iz] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][RO][0] * gridDim[Nx + Iy + 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][BMU][0] * gridDim[Nx + Iy + 1] * Coef;
						porpor2 = porosity[Ix][Iy + 1][Iz] * (1 + cpor * (P[Ix + 1][Iy + 2][Iz + 1][1] - refP) + dcpor * (P[Ix + 1][Iy + 2][Iz + 1][1] - refP)*(P[Ix + 1][Iy + 2][Iz + 1][1] - refP));

						if (comp[Ix][Iy + 1][Iz][i][0]>comp[Ix][Iy][Iz][i][0]) {
							DupStream = diffusion[Ix][Iy + 1][Iz][i][0];
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][0];
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix][Iy + 1][Iz] < 1e-10)) DupStream = 0;
						AAd = blockFProps[Ix][Iy + 1][Iz][RO][0] * gridDim[Nx + Iy + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] * dCoefl;
						AAd *= (sat[Ix][Iy + 1][Iz][1] * gridDim[Nx + Iy + 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Nx + Iy] * dCoefl) / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
						BBd = tor[Ix][Iy + 1][Iz] * gridDim[Nx + Iy + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Iy] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Ix] * gridDim[Nx + Ny + Iz] / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = comp[Ix][Iy + 1][Iz][i][0] - comp[Ix][Iy][Iz][i][0];
						RSide += DTran * DeltaX;

						if (phaseStat[Ix][Iy + 1][Iz] == 1) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][RO][1] * gridDim[Nx + Iy + 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][BMU][1] * gridDim[Nx + Iy + 1] * Coef;

						/////////////////////////////////////////////////////////////////////////////
						if (comp[Ix][Iy + 1][Iz][i][1]>comp[Ix][Iy][Iz][i][1]) {
							DupStream = diffusion[Ix][Iy + 1][Iz][i][1];
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][1];
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix][Iy + 1][Iz] < 1e-10)) DupStream = 0;
						AAd = blockFProps[Ix][Iy + 1][Iz][RO][1] * gridDim[Nx + Iy + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] * dCoefg;
						AAd *= (sat[Ix][Iy + 1][Iz][2] * gridDim[Nx + Iy + 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Nx + Iy] * dCoefg) / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
						BBd = tor[Ix][Iy + 1][Iz] * gridDim[Nx + Iy + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Iy] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Ix]*gridDim[Nx+Ny+Iz]/(gridDim[Nx+Iy+1]+gridDim[Nx+Iy]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = comp[Ix][Iy + 1][Iz][i][1] - comp[Ix][Iy][Iz][i][1];
						RSide += DTran * DeltaX;
					}

					if (Iy>0) {
						if (phaseStat[Ix][Iy - 1][Iz] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][RO][0] * gridDim[Nx + Iy - 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][BMU][0] * gridDim[Nx + Iy - 1] * Coef;

						porpor2 = porosity[Ix][Iy - 1][Iz] * (1 + cpor * (P[Ix + 1][Iy][Iz + 1][1] - refP) + dcpor * (P[Ix + 1][Iy][Iz + 1][1] - refP)*(P[Ix + 1][Iy][Iz + 1][1] - refP));
						if (comp[Ix][Iy - 1][Iz][i][0]>comp[Ix][Iy][Iz][i][0]) {
							DupStream = diffusion[Ix][Iy - 1][Iz][i][0];
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][0];
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix][Iy - 1][Iz] < 1e-10)) DupStream = 0;
						AAd = blockFProps[Ix][Iy - 1][Iz][RO][0] * gridDim[Nx + Iy - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] * dCoefl;
						AAd *= (sat[Ix][Iy - 1][Iz][1] * gridDim[Nx + Iy - 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Nx + Iy] * dCoefl) / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
						BBd = tor[Ix][Iy - 1][Iz] * gridDim[Nx + Iy - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Iy] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Ix] * gridDim[Nx + Ny + Iz] / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = comp[Ix][Iy][Iz][i][0] - comp[Ix][Iy - 1][Iz][i][0];
						RSide -= DTran * DeltaX;

						if (phaseStat[Ix][Iy - 1][Iz] == 1) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][RO][1] * gridDim[Nx + Iy - 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][BMU][1] * gridDim[Nx + Iy - 1] * Coef;

						if (comp[Ix][Iy - 1][Iz][i][1]>comp[Ix][Iy][Iz][i][1]) {
							DupStream = diffusion[Ix][Iy - 1][Iz][i][1];
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][1];
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix][Iy - 1][Iz] < 1e-10)) DupStream = 0;
						AAd = blockFProps[Ix][Iy - 1][Iz][RO][1] * gridDim[Nx + Iy - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] * dCoefg;
						AAd *= (sat[Ix][Iy - 1][Iz][2] * gridDim[Nx + Iy - 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Nx + Iy] * dCoefg) / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
						BBd = tor[Ix][Iy - 1][Iz] * gridDim[Nx + Iy - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Iy] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Ix]*gridDim[Nx+Ny+Iz]/(gridDim[Nx+Iy-1]+gridDim[Nx+Iy]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = comp[Ix][Iy][Iz][i][1] - comp[Ix][Iy - 1][Iz][i][1];
						RSide -= DTran * DeltaX;
					}

					if (Iz<(Nz - 1)) {
						if (phaseStat[Ix][Iy][Iz + 1] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][RO][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][BMU][0] * gridDim[Nx + Ny + Iz + 1] * Coef;

						porpor2 = porosity[Ix][Iy][Iz + 1] * (1 + cpor * (P[Ix + 1][Iy + 1][Iz + 2][1] - refP) + dcpor * (P[Ix + 1][Iy + 1][Iz + 2][1] - refP)*(P[Ix + 1][Iy + 1][Iz + 2][1] - refP));
						if (comp[Ix][Iy][Iz + 1][i][0]>comp[Ix][Iy][Iz][i][0]) {
							DupStream = diffusion[Ix][Iy][Iz + 1][i][0];
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][0];
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix][Iy][Iz + 1] < 1e-10)) DupStream = 0;
						AAd = blockFProps[Ix][Iy][Iz + 1][RO][0] * gridDim[Nx + Ny + Iz + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] * dCoefl;
						AAd *= (sat[Ix][Iy][Iz + 1][1] * gridDim[Nx + Ny + Iz + 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Nx + Ny + Iz] * dCoefl) / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
						BBd = tor[Ix][Iy][Iz + 1] * gridDim[Nx + Ny + Iz + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Ny + Iz] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Ix] * gridDim[Nx + Iy] / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = comp[Ix][Iy][Iz + 1][i][0] - comp[Ix][Iy][Iz][i][0];
						RSide += DTran * DeltaX;

						if (phaseStat[Ix][Iy][Iz + 1] == 1) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][RO][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][BMU][1] * gridDim[Nx + Ny + Iz + 1] * Coef;

						if (comp[Ix][Iy][Iz + 1][i][1]>comp[Ix][Iy][Iz][i][1]) {
							DupStream = diffusion[Ix][Iy][Iz + 1][i][1];
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][1];
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix][Iy][Iz + 1] < 1e-10)) DupStream = 0;
						AAd = blockFProps[Ix][Iy][Iz + 1][RO][1] * gridDim[Nx + Ny + Iz + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] * dCoefg;
						AAd *= (sat[Ix][Iy][Iz + 1][2] * gridDim[Nx + Ny + Iz + 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Nx + Ny + Iz] * dCoefg) / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
						BBd = tor[Ix][Iy][Iz + 1] * gridDim[Nx + Ny + Iz + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Ny + Iz] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Ix]*gridDim[Nx+Iy]/(gridDim[Nx+Ny+Iz+1]+gridDim[Nx+Ny+Iz]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = comp[Ix][Iy][Iz + 1][i][1] - comp[Ix][Iy][Iz][i][1];
						RSide += DTran * DeltaX;
					}

					if (Iz>0) {
						if (phaseStat[Ix][Iy][Iz - 1] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][RO][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][BMU][0] * gridDim[Nx + Ny + Iz - 1] * Coef;

						porpor2 = porosity[Ix][Iy][Iz - 1] * (1 + cpor * (P[Ix + 1][Iy + 1][Iz][1] - refP) + dcpor * (P[Ix + 1][Iy + 1][Iz][1] - refP)*(P[Ix + 1][Iy + 1][Iz][1] - refP));
						if (comp[Ix][Iy][Iz - 1][i][0]>comp[Ix][Iy][Iz][i][0]) {
							DupStream = diffusion[Ix][Iy][Iz - 1][i][0];
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][0];
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix][Iy][Iz - 1] < 1e-10)) DupStream = 0;
						AAd = blockFProps[Ix][Iy][Iz - 1][RO][0] * gridDim[Nx + Ny + Iz - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] * dCoefl;
						AAd *= (sat[Ix][Iy][Iz - 1][1] * gridDim[Nx + Ny + Iz - 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Nx + Ny + Iz] * dCoefl) / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
						BBd = tor[Ix][Iy][Iz - 1] * gridDim[Nx + Ny + Iz - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Ny + Iz] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Ix] * gridDim[Nx + Iy] / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = comp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz - 1][i][0];
						RSide -= DTran * DeltaX;

						if (phaseStat[Ix][Iy][Iz - 1] == 1) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][RO][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][BMU][1] * gridDim[Nx + Ny + Iz - 1] * Coef;

						if (comp[Ix][Iy][Iz - 1][i][1]>comp[Ix][Iy][Iz][i][1]) {
							DupStream = diffusion[Ix][Iy][Iz - 1][i][1];
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][1];
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix][Iy][Iz - 1] < 1e-10)) DupStream = 0;
						AAd = blockFProps[Ix][Iy][Iz - 1][RO][1] * gridDim[Nx + Ny + Iz - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] * dCoefg;
						AAd *= (sat[Ix][Iy][Iz - 1][2] * gridDim[Nx + Ny + Iz - 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Nx + Ny + Iz] * dCoefg) / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
						BBd = tor[Ix][Iy][Iz - 1] * gridDim[Nx + Ny + Iz - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Ny + Iz] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Ix]*gridDim[Nx+Iy]/(gridDim[Nx+Ny+Iz-1]+gridDim[Nx+Ny+Iz]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = comp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz - 1][i][1];
						RSide -= DTran * DeltaX;
					}
#ifdef USE_MKL_SOLVER
					MKLRHSVector[actx->LocalIndex] = RSide - LSide;
#else
					LocalF[actx->LocalIndex] = LSide - RSide;
#endif
				}
				else if (BENo < Nc) {

					LSide = (Vb / Dt)*(porpor*(blockFProps[Ix][Iy][Iz][RO][0] * sat[Ix][Iy][Iz][1] + blockFProps[Ix][Iy][Iz][RO][1] * sat[Ix][Iy][Iz][2]) - preProp[Ix][Iy][Iz][Nc - 1]);
					RSide = trans[Ix + 1][Iy + 1][Iz + 1][0][0] * (P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) - trans[Ix][Iy + 1][Iz + 1][0][0] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);
					RSide += trans[Ix + 1][Iy + 1][Iz + 1][0][1] * (P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) - trans[Ix + 1][Iy][Iz + 1][0][1] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);
					RSide += trans[Ix + 1][Iy + 1][Iz + 1][0][2] * (P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) - trans[Ix + 1][Iy + 1][Iz][0][2] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);
					RSide += trans[Ix + 1][Iy + 1][Iz + 1][1][0] * (P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) - trans[Ix][Iy + 1][Iz + 1][1][0] * (P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);
					RSide += trans[Ix + 1][Iy + 1][Iz + 1][1][1] * (P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) - trans[Ix + 1][Iy][Iz + 1][1][1] * (P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);
					RSide += trans[Ix + 1][Iy + 1][Iz + 1][1][2] * (P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) - trans[Ix + 1][Iy + 1][Iz][1][2] * (P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);

					RSide += trans[Ix + 1][Iy + 1][Iz + 1][2][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - trans[Ix][Iy + 1][Iz + 1][2][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
					RSide += trans[Ix + 1][Iy + 1][Iz + 1][2][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - trans[Ix + 1][Iy][Iz + 1][2][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
					RSide += trans[Ix + 1][Iy + 1][Iz + 1][2][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]) - trans[Ix + 1][Iy + 1][Iz][2][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
					RSide += trans[Ix + 1][Iy + 1][Iz + 1][3][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - trans[Ix][Iy + 1][Iz + 1][3][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
					RSide += trans[Ix + 1][Iy + 1][Iz + 1][3][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - trans[Ix + 1][Iy][Iz + 1][3][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
					RSide += trans[Ix + 1][Iy + 1][Iz + 1][3][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]) - trans[Ix + 1][Iy + 1][Iz][3][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);

					////////////////////////////Transfer Function


					RSide += ZERO_CONV * SI_C * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
					RSide += ZERO_CONV * SI_C * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor) / (porpor + fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));

					//////////////////////
					RSide += Qo + Qg;
#ifdef USE_MKL_SOLVER
					MKLRHSVector[actx->LocalIndex] = RSide - LSide;
#else
					LocalF[actx->LocalIndex] = LSide - RSide;
#endif

				}
				else {
					LSide = (Vb / Dt)*(porpor*watRo*WAT_M_RO*sat[Ix][Iy][Iz][0] - preProp[Ix][Iy][Iz][Nc]);
					RSide = Wtran[Ix + 1][Iy + 1][Iz + 1][0] * (P[Ix + 2][Iy + 1][Iz + 1][0] - P[Ix + 1][Iy + 1][Iz + 1][0]) - Wtran[Ix][Iy + 1][Iz + 1][0] * (P[Ix + 1][Iy + 1][Iz + 1][0] - P[Ix][Iy + 1][Iz + 1][0]);
					RSide += Wtran[Ix + 1][Iy + 1][Iz + 1][1] * (P[Ix + 1][Iy + 2][Iz + 1][0] - P[Ix + 1][Iy + 1][Iz + 1][0]) - Wtran[Ix + 1][Iy][Iz + 1][1] * (P[Ix + 1][Iy + 1][Iz + 1][0] - P[Ix + 1][Iy][Iz + 1][0]);
					RSide += Wtran[Ix + 1][Iy + 1][Iz + 1][2] * (P[Ix + 1][Iy + 1][Iz + 2][0] - P[Ix + 1][Iy + 1][Iz + 1][0]) - Wtran[Ix + 1][Iy + 1][Iz][2] * (P[Ix + 1][Iy + 1][Iz + 1][0] - P[Ix + 1][Iy + 1][Iz][0]);

					RSide += G_ACC * watRo*Wtran[Ix + 1][Iy + 1][Iz + 1][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - G_ACC * watRo*Wtran[Ix][Iy + 1][Iz + 1][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
					RSide += G_ACC * watRo*Wtran[Ix + 1][Iy + 1][Iz + 1][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - G_ACC * watRo*Wtran[Ix + 1][Iy][Iz + 1][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
					RSide += G_ACC * watRo*Wtran[Ix + 1][Iy + 1][Iz + 1][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]) - G_ACC * watRo*Wtran[Ix + 1][Iy + 1][Iz][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);

					/////////////////////////////Transfer Function


					RSide += ZERO_CONV * SI_C* watRo *WAT_M_RO * ShapeFactor_2(Ix, Iy, Iz) * f_m_relperm[0] / watMu * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) *((fP[Ix + 1][Iy + 1][Iz + 1][0] - P[Ix + 1][Iy + 1][Iz + 1][0]) + (blockFProps[Ix][Iy][Iz][BLOCK_PC][0] - fblockFProps[Ix][Iy][Iz][BLOCK_PC][0]));

					////////////////////////////////////////////
					RSide += Qw;
#ifdef USE_MKL_SOLVER
					MKLRHSVector[actx->LocalIndex] = RSide - LSide;
#else
					LocalF[actx->LocalIndex] = LSide - RSide;
#endif
				}
			}
			else if (BENo < (Nc + 2)) {
				Sxl = 0;
				for (i = 0; i < Nc; i++) Sxl += comp[Ix][Iy][Iz][i][0];
#ifdef USE_MKL_SOLVER
				MKLRHSVector[actx->LocalIndex] = 1 - Sxl;
#else
				LocalF[actx->LocalIndex] = Sxl - 1;
#endif
			}
			else if (BENo < (Nc + 3)) {
#ifdef USE_MKL_SOLVER
				MKLRHSVector[actx->LocalIndex] = 1 - sat[Ix][Iy][Iz][0] - sat[Ix][Iy][Iz][1] - sat[Ix][Iy][Iz][2];
#else
				LocalF[actx->LocalIndex] = sat[Ix][Iy][Iz][0] + sat[Ix][Iy][Iz][1] + sat[Ix][Iy][Iz][2] - 1;
#endif				
			}
			else {
				std::cout << Ix << '\t' << Iy << '\t' << Iz << '\t' << BENo << "\tMatrix phase stat: " << phaseStat[Ix][Iy][Iz] << std::endl;
				TerM("Global Index Error!");
			}

			break;

		case 0:
			if (BENo < Nc) {
				Al = 0;
				Bl = 0;
				Ag = 0;
				Bg = 0;
				for (i = 0; i < Nc; i++) {
					Bl += comp[Ix][Iy][Iz][i][0] * fluidProp[i][EOS_B];
					Bg += comp[Ix][Iy][Iz][i][1] * fluidProp[i][EOS_B];
					for (j = 0; j < Nc; j++) {
						tempSQR = sqrt(fluidProp[i][EOS_A] * fluidProp[j][EOS_A])*bic[i][j];
						Al += comp[Ix][Iy][Iz][i][0] * comp[Ix][Iy][Iz][j][0] * tempSQR;
						Ag += comp[Ix][Iy][Iz][i][1] * comp[Ix][Iy][Iz][j][1] * tempSQR;
					}
				}

				Cal = Al;
				Cbl = Bl;
				Cag = Ag;
				Cbg = Bg;
				Al *= P[Ix + 1][Iy + 1][Iz + 1][1] / (RGAS*RGAS*resTemp*resTemp);
				Bl *= P[Ix + 1][Iy + 1][Iz + 1][1] / (RGAS*resTemp);
				Ag *= P[Ix + 1][Iy + 1][Iz + 1][2] / (RGAS*RGAS*resTemp*resTemp);
				Bg *= P[Ix + 1][Iy + 1][Iz + 1][2] / (RGAS*resTemp);

				Zl = P[Ix + 1][Iy + 1][Iz + 1][1] / (blockFProps[Ix][Iy][Iz][RO][0] * RGAS*resTemp);
				Zg = P[Ix + 1][Iy + 1][Iz + 1][2] / (blockFProps[Ix][Iy][Iz][RO][1] * RGAS*resTemp);				

				if (SRK) {
					d1 = 1;
					d2 = 0;
				}
				else if (PR) {
					d1 = 1 + SQRT2;
					d2 = 1 - SQRT2;
				}

				i = BENo;
				tl = 0;
				tg = 0;
				for (j = 0; j < Nc; j++) {	//FFSS
					tempSQR = sqrt(fluidProp[i][EOS_A] * fluidProp[j][EOS_A])*bic[i][j];
					tl += comp[Ix][Iy][Iz][j][0] * tempSQR;
					tg += comp[Ix][Iy][Iz][j][1] * tempSQR;
				}
				t1l = fluidProp[i][EOS_B] / Cbl;
				t1g = fluidProp[i][EOS_B] / Cbg;

				EEl = 2 * tl / Cal - t1l;
				EEg = 2 * tg / Cag - t1g;

				DDl = Al / (Bl*(d1 - d2));
				DDg = Ag / (Bg*(d1 - d2));

				FFl = log((Zl + d2 * Bl) / (Zl + d1 * Bl));
				FFg = log((Zg + d2 * Bg) / (Zg + d1 * Bg));

				phiL = exp(t1l*(Zl - 1) - log(Zl - Bl) + DDl * EEl*FFl);
				phiG = exp(t1g*(Zg - 1) - log(Zg - Bg) + DDg * EEg*FFg);

#ifdef USE_MKL_SOLVER
				MKLRHSVector[actx->LocalIndex] = -comp[Ix][Iy][Iz][i][0] * P[Ix + 1][Iy + 1][Iz + 1][1] * phiL + comp[Ix][Iy][Iz][i][1] * P[Ix + 1][Iy + 1][Iz + 1][2] * phiG;
#else
				LocalF[actx->LocalIndex] = comp[Ix][Iy][Iz][i][0] * P[Ix + 1][Iy + 1][Iz + 1][1] * phiL - comp[Ix][Iy][Iz][i][1] * P[Ix + 1][Iy + 1][Iz + 1][2] * phiG;
#endif
			}
			else if (BENo < (2 * Nc + 1)) {
#pragma region sadeq

				fporpor = fporosity[Ix][Iy][Iz] * (1 + cpor * (fP[Ix + 1][Iy + 1][Iz + 1][1] - refP) + dcpor * (fP[Ix + 1][Iy + 1][Iz + 1][1] - refP)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - refP));
				

				if (P[Ix + 1][Iy + 1][Iz + 1][1] >= fP[Ix + 1][Iy + 1][Iz + 1][1])
				{
					f_m_relperm[1] = relPerm[Ix][Iy][Iz][1];//oil relperm between matrix and fracture
					f_m_drelperm[1][1] = dRelPerm[Ix][Iy][Iz][1];//dkrodsw
					f_m_drelperm[1][2] = dRelPerm[Ix][Iy][Iz][2];//dkrodsg
					f_m_drelperm[1][4] = dRelPerm[Ix][Iy][Iz][4];//dkrodso

					f_m_drelperm[1][9] = 0;
					f_m_drelperm[1][7] = 0;
					f_m_drelperm[1][6] = 0;
				}
				else
				{
					f_m_relperm[1] = frelPerm[Ix][Iy][Iz][1];
					f_m_drelperm[1][6] = fdRelPerm[Ix][Iy][Iz][1];//fdkrofdsw
					f_m_drelperm[1][7] = fdRelPerm[Ix][Iy][Iz][2];//fdkrofdsg
					f_m_drelperm[1][9] = fdRelPerm[Ix][Iy][Iz][4];//fdkrofdso

					f_m_drelperm[1][4] = 0;
					f_m_drelperm[1][2] = 0;
					f_m_drelperm[1][1] = 0;
				}
				if (P[Ix + 1][Iy + 1][Iz + 1][2] >= fP[Ix + 1][Iy + 1][Iz + 1][2])
				{
					f_m_relperm[2] = relPerm[Ix][Iy][Iz][2];//gas relperm between matrix and fracture
					f_m_drelperm[2][3] = dRelPerm[Ix][Iy][Iz][3];//dkrgdsg

					f_m_drelperm[2][8] = 0;
				}
				else
				{
					f_m_relperm[2] = frelPerm[Ix][Iy][Iz][2];
					f_m_drelperm[2][8] = fdRelPerm[Ix][Iy][Iz][3];//fdkrgfdsg

					f_m_drelperm[2][3] = 0;
				}

				if (P[Ix + 1][Iy + 1][Iz + 1][0] >= fP[Ix + 1][Iy + 1][Iz + 1][0])
				{
					f_m_relperm[0] = relPerm[Ix][Iy][Iz][0];
					f_m_drelperm[1][0] = dRelPerm[Ix][Iy][Iz][0];//dkrwdsw

					f_m_drelperm[1][5] = 0;
				}
				else
				{
					f_m_relperm[0] = frelPerm[Ix][Iy][Iz][0];//water relperm between matrix and fracture
					f_m_drelperm[1][5] = fdRelPerm[Ix][Iy][Iz][0];//fdkrwfdsw

					f_m_drelperm[1][0] = 0;
				}
#pragma endregion

#pragma region Wells&Commons
				porpor = porosity[Ix][Iy][Iz] * (1 + cpor * (P[Ix + 1][Iy + 1][Iz + 1][1] - refP) + dcpor * (P[Ix + 1][Iy + 1][Iz + 1][1] - refP)*(P[Ix + 1][Iy + 1][Iz + 1][1] - refP));
				

				Qw = 0;
				Qo = 0;
				Qg = 0;

				PIw = 0;
				PIo = 0;
				PIg = 0;

				Vb = gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz];

				iWell = -1;
				for (i = 0; i < wellNO; i++) {
					if ((Ix == welli[i][1]) && (Iy == welli[i][2]) && (Iz >= welli[i][3]) && (Iz <= welli[i][4])) {
						Re = Calc_Re(Ix, Iy, Iz, i);
						if (welli[i][0] == 0) BMethQM = 1;
						if ((welli[i][0] == 0) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {		//Constant Pwf Pressure - Production
																																																			//Re = 0.14*sqrt(sqrt(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0])*gridDim[Ix] * gridDim[Ix] + sqrt(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1])*gridDim[Nx + Iy] * gridDim[Nx + Iy]);
																																																			//Re /= 0.5*(pow(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0], 0.25) + pow(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1], 0.25));
							if (Re <= wellf[i][3])
								Re += wellf[i][3];

							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][1] * perm[Ix][Iy][Iz][0]) / (log(Re / wellf[i][3]) + wellf[i][2]);

							PIw = S1 * watRo*WAT_M_RO*relPerm[Ix][Iy][Iz][0] / watMu;
							PIo = S1 * blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / blockFProps[Ix][Iy][Iz][BMU][0];
							PIg = S1 * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / blockFProps[Ix][Iy][Iz][BMU][1];

							Qw = PIw * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][0]);
							Qo = PIo * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][1]);
							Qg = PIg * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][2]);

							

							/*if ((wellf[i][1]) && ((-Qo) > wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								//std::cout << "HIT!\n";
								SSo1 = 0;
								for (j = welli[i][3]; j <= welli[i][4]; j++) {
									S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
									SSo1 += blockFProps[Ix][Iy][j][RO][0] * S2*relPerm[Ix][Iy][j][1] / blockFProps[Ix][Iy][Iz][BMU][0];
									S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
									SSo1 += fblockFProps[Ix][Iy][j][RO][0] * S2*frelPerm[Ix][Iy][j][1] / fblockFProps[Ix][Iy][Iz][BMU][0];
								}
								S1 = gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][0] * perm[Ix][Iy][Iz][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);

								if (SSo1) {
									if (SURFACE_RATES) Qo = -S1 * oilRateCh(Ix, Iy, Iz, relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * blockFProps[Ix][Iy][Iz][BMU][0] / (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * blockFProps[Ix][Iy][Iz][BMU][1]))*wellf[i][1] * blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / (blockFProps[Ix][Iy][Iz][BMU][0] * SSo1);
									else Qo = -S1 * wellf[i][1] * blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / (blockFProps[Ix][Iy][Iz][BMU][0] * SSo1);
								}
								Qw = Qo * relPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*blockFProps[Ix][Iy][Iz][BMU][0] / (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * watMu);
								Qg = Qo * relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * blockFProps[Ix][Iy][Iz][BMU][0] / (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * blockFProps[Ix][Iy][Iz][BMU][1]);

							}*/

							if (P[Ix + 1][Iy + 1][Iz + 1][1] < WELL_MIN_P) {
								Qw = 0;
								Qo = 0;
								Qg = 0;

								PIw = 0;
								PIo = 0;
								PIg = 0;
							}
							else if ((wellf[i][1]) && ((-Qo) > wellf[i][1])) {
								Qo = -wellf[i][1];
								Qw = Qo * relPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*blockFProps[Ix][Iy][Iz][BMU][0] / (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * watMu);
								Qg = Qo * relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * blockFProps[Ix][Iy][Iz][BMU][0] / (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * blockFProps[Ix][Iy][Iz][BMU][1]);
								PIw = 0;
								PIo = 0;
								PIg = 0;
							}

							if ((Qw > 0) || ((Qw - Qw) != 0)) {
								Qw = 0;
								PIw = 0;
							}
							if ((Qo > 0) || ((Qo - Qo) != 0)) {
								Qo = 0;
								PIo = 0;
							}
							if ((Qg > 0) || ((Qg - Qg) != 0)) {
								Qg = 0;
								PIg = 0;
							}

							QoProduced = Qo;
							Qoprod += Qo + Qg;
							MethQM += Qo * (1 - comp[Ix][Iy][Iz][0][0]) + Qg * (1 - comp[Ix][Iy][Iz][0][1]);
							
							//Qoprod = Qo*(1 - comp[Ix][Iy][Iz][0][0])+ Qg*(1 - comp[Ix][Iy][Iz][0][1]);
							WellCompSadeq[0] += Qo * (comp[Ix][Iy][Iz][0][0]) + Qg * (comp[Ix][Iy][Iz][0][1]);
							WellCompSadeq[1] += Qo * (comp[Ix][Iy][Iz][1][0]) + Qg * (comp[Ix][Iy][Iz][1][1]);
							WellCompSadeq[2] += Qo * (comp[Ix][Iy][Iz][2][0]) + Qg * (comp[Ix][Iy][Iz][2][1]);
							WellCompSadeq2[0] += (Qo*(comp[Ix][Iy][Iz][0][0]) + Qg * (comp[Ix][Iy][Iz][0][1]));
							WellCompSadeq2[1] += (Qo*(comp[Ix][Iy][Iz][1][0]) + Qg * (comp[Ix][Iy][Iz][1][1]));
							WellCompSadeq2[2] += (Qo*(comp[Ix][Iy][Iz][2][0]) + Qg * (comp[Ix][Iy][Iz][2][1]));
						}

						else if ((welli[i][0] == 1) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {			//Constant Pwf- Gas Production
																																																						//Re = 0.14*sqrt(sqrt(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0])*gridDim[Ix] * gridDim[Ix] + sqrt(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1])*gridDim[Nx + Iy] * gridDim[Nx + Iy]);
																																																						//Re /= 0.5*(pow(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0], 0.25) + pow(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1], 0.25));
																																																						//Re = Calc_Re(Ix, Iy, Iz, i);
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][1] * perm[Ix][Iy][Iz][0]) / (log(Re / wellf[i][3]) + wellf[i][2]);

							PIw = S1 * watRo*WAT_M_RO*relPerm[Ix][Iy][Iz][0] / watMu;
							PIo = S1 * blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / blockFProps[Ix][Iy][Iz][BMU][0];
							PIg = S1 * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / blockFProps[Ix][Iy][Iz][BMU][1];

							Qw = PIw * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][0]);
							Qo = PIo * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][1]);
							Qg = PIg * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][2]);

							if ((Qw > 0) || ((Qw - Qw) != 0)) {
								Qw = 0;
								PIw = 0;
							}
							if ((Qo > 0) || ((Qo - Qo) != 0)) {
								Qo = 0;
								PIo = 0;
							}
							if ((Qg > 0) || ((Qg - Qg) != 0)) {
								Qg = 0;
								PIg = 0;
							}

							if ((wellf[i][1]) && ((-Qg) > wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								SSo1 = 0;
								for (j = welli[i][3]; j <= welli[i][4]; j++) {
									S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
									SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][Iz][BMU][1];
									S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
									SSo1 += fblockFProps[Ix][Iy][j][RO][1] * S2*frelPerm[Ix][Iy][j][2] / fblockFProps[Ix][Iy][Iz][BMU][1];
								}
								S1 = gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][0] * perm[Ix][Iy][Iz][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);

								if (SSo1) {
									if (SURFACE_RATES) Qg = -S1 * gasRateCh(Ix, Iy, Iz, (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * blockFProps[Ix][Iy][Iz][BMU][1]) / (relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * blockFProps[Ix][Iy][Iz][BMU][0]))*wellf[i][1] * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / (blockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
									else Qg = -S1 * wellf[i][1] * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / (blockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
								}
								Qw = Qg * relPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*blockFProps[Ix][Iy][Iz][BMU][1] / (relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * watMu);
								Qo = Qg * relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * blockFProps[Ix][Iy][Iz][BMU][1] / (relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * blockFProps[Ix][Iy][Iz][BMU][0]);

							}

							//QoProd=oilRateCh2(Ix, Iy, Iz, -Qo, -Qg);
							QoProduced = Qo;
						}

						else if ((welli[i][0] == 2) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {			//Constant Pwf Pressure - Water Injection
																																																						//Re = 0.14*sqrt(sqrt(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0])*gridDim[Ix] * gridDim[Ix] + sqrt(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1])*gridDim[Nx + Iy] * gridDim[Nx + Iy]);
																																																						//Re /= 0.5*(pow(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0], 0.25) + pow(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1], 0.25));
																																																						//Re = Calc_Re(Ix, Iy, Iz, i);
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][1] * perm[Ix][Iy][Iz][0]) / (log(Re / wellf[i][3]) + wellf[i][2]);

							PIw = S1 * watRo*WAT_M_RO*relPerm[Ix][Iy][Iz][0] / watMu;
							Qw = PIw * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][0]);


							if ((Qw < 0) || ((Qw - Qw) != 0)) {
								Qw = 0;
								PIw = 0;
							}

							if ((wellf[i][1]) && (Qw > wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								SSo1 = 0;
								for (j = welli[i][3]; j <= welli[i][4]; j++) {
									S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
									SSo1 += watRo * S2*relPerm[Ix][Iy][j][0] / watMu;
									S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
									SSo1 += watRo * S2*frelPerm[Ix][Iy][j][0] / watMu;
								}
								S1 = gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][0] * perm[Ix][Iy][Iz][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);

								if (SSo1) Qw = S1 * wellf[i][1] * watRo*WAT_M_RO * relPerm[Ix][Iy][Iz][0] / (watMu * SSo1);
							}
						}

						else if ((welli[i][0] == 3) && (((fabs(simTime - wellf[i][Nc + 4]) <= TSTEPIF) || (fabs(simTime - wellf[i][Nc + 5]) <= TSTEPIF)) || ((simTime >= wellf[i][Nc + 4]) && (simTime <= wellf[i][Nc + 5])))) {			//Constant Pwf Pressure - Gas Injection
																																																											//Re = 0.14*sqrt(sqrt(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0])*gridDim[Ix] * gridDim[Ix] + sqrt(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1])*gridDim[Nx + Iy] * gridDim[Nx + Iy]);
																																																											//Re /= 0.5*(pow(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0], 0.25) + pow(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1], 0.25));
							for (j = 0; j < Nc; j++) IComp[j] = wellf[i][4 + j];
							FlashInjection(IComp, wellf[i][0], IOComp, IGComp, iOF, iGF, iOD, iGD, iOV, iGV);
							//Re = Calc_Re(Ix, Iy, Iz, i);
							if (Re <= wellf[i][3])
								Re += wellf[i][3];

							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][1] * perm[Ix][Iy][Iz][0]) / (log(Re / wellf[i][3]) + wellf[i][2]);
							//S2 = sgt[Nsgt-1][1] / iGV;
							//S2 = relPerm[Ix][Iy][Iz][2] / blockFProps[Ix][Iy][Iz][BMU][1];

							PIg = S1 * iGD * sgt[Nsgt - 1][1] * iGF / iGV;
							Qg = PIg * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][2]);
							//PIo = S1*iOD * swt[0][2]*iOF / iOV;
							PIo = PIg * iOF / iGF;
							Qo = PIo * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][2]);

							if ((Qo < 0) || ((Qo - Qo) != 0)) {
								Qo = 0;
								PIo = 0;
							}
							if ((Qg < 0) || ((Qg - Qg) != 0)) {
								Qg = 0;
								PIg = 0;
							}

							iWell = i;

							if ((wellf[i][1]) && (Qg > wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								SSo1 = 0;
								for (j = welli[i][3]; j <= welli[i][4]; j++) {
									S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
									//SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][Iz][BMU][1];
									SSo1 += S2;
									S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
									//SSo1 += fblockFProps[Ix][Iy][j][RO][1] * S2*frelPerm[Ix][Iy][j][2] / fblockFProps[Ix][Iy][Iz][BMU][1];
									SSo1 += S2;
								}
								S1 = gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][0] * perm[Ix][Iy][Iz][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);

								//if (SSo1) Qg = S1*wellf[i][1] * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / (blockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
								if (SSo1) Qg = S1 * wellf[i][1] / SSo1;
								if (SSo1) Qo = Qg * iOF / iGF;
							}
							Qginj = Qg + Qo;
						}

						else if ((welli[i][0] == 4) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {		//Constant Oil Rate
							SSo1 = 0;
							for (j = welli[i][3]; j <= welli[i][4]; j++) {
								S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
								SSo1 += blockFProps[Ix][Iy][j][RO][0] * S2*relPerm[Ix][Iy][j][1] / blockFProps[Ix][Iy][Iz][BMU][0];
								S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
								SSo1 += fblockFProps[Ix][Iy][j][RO][0] * S2*frelPerm[Ix][Iy][j][1] / fblockFProps[Ix][Iy][Iz][BMU][0];
							}
							S1 = gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][0] * perm[Ix][Iy][Iz][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);

							if (SSo1) {
								if (SURFACE_RATES) Qo = -S1 * oilRateCh(Ix, Iy, Iz, relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * blockFProps[Ix][Iy][Iz][BMU][0] / (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * blockFProps[Ix][Iy][Iz][BMU][1]))*wellf[i][0] * blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / (blockFProps[Ix][Iy][Iz][BMU][0] * SSo1);
								else Qo = -S1 * wellf[i][0] * blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / (blockFProps[Ix][Iy][Iz][BMU][0] * SSo1);
							}
							Qw = Qo * relPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*blockFProps[Ix][Iy][Iz][BMU][0] / (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * watMu);
							Qg = Qo * relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * blockFProps[Ix][Iy][Iz][BMU][0] / (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * blockFProps[Ix][Iy][Iz][BMU][1]);

							//Re = 0.14*sqrt(sqrt(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0])*gridDim[Ix] * gridDim[Ix] + sqrt(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1])*gridDim[Nx + Iy] * gridDim[Nx + Iy]);
							//Re /= 0.5*(pow(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0], 0.25) + pow(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1], 0.25));
							//Re = Calc_Re(Ix, Iy, Iz, i);
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][1] * perm[Ix][Iy][Iz][0]) / (log(Re / wellf[i][3]) + wellf[i][2]);
							Pwf = P[Ix + 1][Iy + 1][Iz + 1][1] - Qo / (S1*blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / blockFProps[Ix][Iy][Iz][BMU][0]);

							if ((wellf[i][1]) && (Pwf < wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								PIw = S1 * watRo*WAT_M_RO*relPerm[Ix][Iy][Iz][0] / watMu;
								PIo = S1 * blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / blockFProps[Ix][Iy][Iz][BMU][0];
								PIg = S1 * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / blockFProps[Ix][Iy][Iz][BMU][1];

								Qw = PIw * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][0]);
								Qo = PIo * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][1]);
								Qg = PIg * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][2]);

								if ((Qw > 0) || ((Qw - Qw) != 0)) {
									Qw = 0;
									PIw = 0;
								}
								if ((Qo > 0) || ((Qo - Qo) != 0)) {
									Qo = 0;
									PIo = 0;
								}
								if ((Qg > 0) || ((Qg - Qg) != 0)) {
									Qg = 0;
									PIg = 0;
								}
							}

							/*Qw = 0;
							Qo = 0;// 6.553168256220581e-07 / Nz;
							Qg = 0;						
							PIw = 0;
							PIo = 0;
							PIg = 0;*/

							Qoprod = Qo + Qg;
							QoProduced = Qo;
						}

						else if ((welli[i][0] == 5) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {		//Constant Gas Rate
							SSo1 = 0;
							for (j = welli[i][3]; j <= welli[i][4]; j++) {
								S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
								SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][Iz][BMU][1];
								S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
								SSo1 += fblockFProps[Ix][Iy][j][RO][1] * S2*frelPerm[Ix][Iy][j][2] / fblockFProps[Ix][Iy][Iz][BMU][1];
							}
							S1 = gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][0] * perm[Ix][Iy][Iz][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);

							if (SSo1) {
								if (SURFACE_RATES) Qg = -S1 * gasRateCh(Ix, Iy, Iz, (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * blockFProps[Ix][Iy][Iz][BMU][1]) / (relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * blockFProps[Ix][Iy][Iz][BMU][0]))*wellf[i][1] * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / (blockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
								else Qg = -S1 * wellf[i][1] * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / (blockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
							}
							Qw = Qg * relPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*blockFProps[Ix][Iy][Iz][BMU][1] / (relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * watMu);
							Qo = Qg * relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * blockFProps[Ix][Iy][Iz][BMU][1] / (relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * blockFProps[Ix][Iy][Iz][BMU][0]);

							//Re = 0.14*sqrt(sqrt(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0])*gridDim[Ix] * gridDim[Ix] + sqrt(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1])*gridDim[Nx + Iy] * gridDim[Nx + Iy]);
							//Re /= 0.5*(pow(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0], 0.25) + pow(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1], 0.25));
							//Re = Calc_Re(Ix, Iy, Iz, i);
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][1] * perm[Ix][Iy][Iz][0]) / (log(Re / wellf[i][3]) + wellf[i][2]);
							Pwf = P[Ix + 1][Iy + 1][Iz + 1][2] - Qg / (S1*blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / blockFProps[Ix][Iy][Iz][BMU][1]);

							if ((wellf[i][1]) && (Pwf < wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								PIw = S1 * watRo*WAT_M_RO*relPerm[Ix][Iy][Iz][0] / watMu;
								PIo = S1 * blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / blockFProps[Ix][Iy][Iz][BMU][0];
								PIg = S1 * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / blockFProps[Ix][Iy][Iz][BMU][1];

								Qw = PIw * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][0]);
								Qo = PIo * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][1]);
								Qg = PIg * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][2]);

								if ((Qw > 0) || ((Qw - Qw) != 0)) {
									Qw = 0;
									PIw = 0;
								}
								if ((Qo > 0) || ((Qo - Qo) != 0)) {
									Qo = 0;
									PIo = 0;
								}
								if ((Qg > 0) || ((Qg - Qg) != 0)) {
									Qg = 0;
									PIg = 0;
								}
							}
						}

						else if ((welli[i][0] == 6) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {		//Constant Total Production Rate
							SSw = 0;
							SSo = 0;
							SSg = 0;
							SSo1 = 0;
							for (j = welli[i][3]; j <= welli[i][4]; j++) {
								S1 = ((relPerm[Ix][Iy][j][0] / watMu) + (relPerm[Ix][Iy][j][1] / blockFProps[Ix][Iy][j][BMU][0]) + (relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][j][BMU][1]));
								SSw += (relPerm[Ix][Iy][j][0] / watMu) / S1;
								SSo += (relPerm[Ix][Iy][j][1] / blockFProps[Ix][Iy][j][BMU][0]) / S1;
								SSg += (relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][j][BMU][1]) / S1;

								S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
								SSo1 += blockFProps[Ix][Iy][j][RO][0] * S2*relPerm[Ix][Iy][j][1] / blockFProps[Ix][Iy][Iz][BMU][0];

								S1 = ((frelPerm[Ix][Iy][j][0] / watMu) + (frelPerm[Ix][Iy][j][1] / fblockFProps[Ix][Iy][j][BMU][0]) + (frelPerm[Ix][Iy][j][2] / fblockFProps[Ix][Iy][j][BMU][1]));
								SSw += (frelPerm[Ix][Iy][j][0] / watMu) / S1;
								SSo += (frelPerm[Ix][Iy][j][1] / fblockFProps[Ix][Iy][j][BMU][0]) / S1;
								SSg += (frelPerm[Ix][Iy][j][2] / fblockFProps[Ix][Iy][j][BMU][1]) / S1;

								S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
								SSo1 += fblockFProps[Ix][Iy][j][RO][0] * S2*frelPerm[Ix][Iy][j][1] / fblockFProps[Ix][Iy][Iz][BMU][0];

							}
							QoP = SSo * wellf[i][0] / (SSw + SSo + SSg);

							S1 = gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][0] * perm[Ix][Iy][Iz][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
							if (SSo1) Qo = -S1 * QoP*blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / (blockFProps[Ix][Iy][Iz][BMU][0] * SSo1);
							Qw = Qo * relPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*blockFProps[Ix][Iy][Iz][BMU][0] / (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * watMu);
							Qg = Qo * relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * blockFProps[Ix][Iy][Iz][BMU][0] / (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * blockFProps[Ix][Iy][Iz][BMU][1]);


							//Re = 0.14*sqrt(sqrt(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0])*gridDim[Ix] * gridDim[Ix] + sqrt(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1])*gridDim[Nx + Iy] * gridDim[Nx + Iy]);
							//Re /= 0.5*(pow(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0], 0.25) + pow(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1], 0.25));
							//Re = Calc_Re(Ix, Iy, Iz, i);
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][1] * perm[Ix][Iy][Iz][0]) / (log(Re / wellf[i][3]) + wellf[i][2]);
							Pwf = P[Ix + 1][Iy + 1][Iz + 1][1] - (Qw + Qo + Qg) / (S1*(watRo*WAT_M_RO*relPerm[Ix][Iy][Iz][0] / watMu + blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / blockFProps[Ix][Iy][Iz][BMU][0] + blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / blockFProps[Ix][Iy][Iz][BMU][1]));

							if ((wellf[i][1]) && (Pwf < wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								PIw = S1 * watRo*WAT_M_RO*relPerm[Ix][Iy][Iz][0] / watMu;
								PIo = S1 * blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / blockFProps[Ix][Iy][Iz][BMU][0];
								PIg = S1 * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / blockFProps[Ix][Iy][Iz][BMU][1];

								Qw = PIw * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][0]);
								Qo = PIo * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][1]);
								Qg = PIg * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][2]);

								if ((Qw > 0) || ((Qw - Qw) != 0)) {
									Qw = 0;
									PIw = 0;
								}
								if ((Qo > 0) || ((Qo - Qo) != 0)) {
									Qo = 0;
									PIo = 0;
								}
								if ((Qg > 0) || ((Qg - Qg) != 0)) {
									Qg = 0;
									PIg = 0;
								}
							}
						}

						else if ((welli[i][0] == 7) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {			//Constant Water Injection Rate
							SSw = 0;
							for (j = welli[i][3]; j <= welli[i][4]; j++) {
								S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
								SSo1 += S2 * relPerm[Ix][Iy][j][0];
								S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
								SSo1 += S2 * frelPerm[Ix][Iy][j][0];
							}
							S1 = gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][0] * perm[Ix][Iy][Iz][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
							if (SSw) Qw = S1 * wellf[i][0] * relPerm[Ix][Iy][Iz][1] / SSw;

							//Re = 0.14*sqrt(sqrt(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0])*gridDim[Ix] * gridDim[Ix] + sqrt(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1])*gridDim[Nx + Iy] * gridDim[Nx + Iy]);
							//Re /= 0.5*(pow(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0], 0.25) + pow(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1], 0.25));
							//Re = Calc_Re(Ix, Iy, Iz, i);
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][1] * perm[Ix][Iy][Iz][0]) / (log(Re / wellf[i][3]) + wellf[i][2]);
							Pwf = P[Ix + 1][Iy + 1][Iz + 1][0] - Qw / (S1*watRo*WAT_M_RO * relPerm[Ix][Iy][Iz][1] / watMu);

							if ((wellf[i][1]) && (Pwf > wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								PIw = S1 * watRo*WAT_M_RO*relPerm[Ix][Iy][Iz][0] / watMu;
								Qw = PIw * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][0]);

								if ((Qw < 0) || ((Qw - Qw) != 0)) {
									Qw = 0;
									PIw = 0;
								}
							}
						}

						else if ((welli[i][0] == 8) && (((fabs(simTime - wellf[i][Nc + 4]) <= TSTEPIF) || (fabs(simTime - wellf[i][Nc + 5]) <= TSTEPIF)) || ((simTime >= wellf[i][Nc + 4]) && (simTime <= wellf[i][Nc + 5])))) {			//Constant Gas Injection Rate
							for (j = 0; j < Nc; j++) IComp[j] = wellf[i][4 + j];
							FlashInjection(IComp, wellf[i][1], IOComp, IGComp, iOF, iGF, iOD, iGD, iOV, iGV);
							//S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][1] * perm[Ix][Iy][Iz][0]) / (log(Re / wellf[i][3]) + wellf[i][2]);
							if (Re <= wellf[i][3])
								Re += wellf[i][3];

							SSo1 = 0;
							for (j = welli[i][3]; j <= welli[i][4]; j++) {
								S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
								//SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][Iz][BMU][1];
								//SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*sgt[Nsgt-1][1] / blockFProps[Ix][Iy][Iz][BMU][1];
								SSo1 += S2;
								S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
								//SSo1 += fblockFProps[Ix][Iy][j][RO][1] * S2*frelPerm[Ix][Iy][j][2] / fblockFProps[Ix][Iy][Iz][BMU][1];
								//SSo1 += fblockFProps[Ix][Iy][j][RO][1] * S2*sgt[Nsgt-1][1] / fblockFProps[Ix][Iy][Iz][BMU][1];
								SSo1 += S2;
							}
							S1 = gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][0] * perm[Ix][Iy][Iz][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);

							//if (SSo1) Qg = S1*wellf[i][0] * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / (blockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
							//if (SSo1) Qg = S1*wellf[i][0] * blockFProps[Ix][Iy][Iz][RO][1] * sgt[Nsgt - 1][1] / (blockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
							if (SSo1) Qg = S1 * wellf[i][0] / SSo1;
							if (SSo1) Qo = Qg * iOF / iGF;
							//Re = 0.14*sqrt(sqrt(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0])*gridDim[Ix] * gridDim[Ix] + sqrt(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1])*gridDim[Nx + Iy] * gridDim[Nx + Iy]);
							//Re /= 0.5*(pow(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0], 0.25) + pow(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1], 0.25));



							//Re = Calc_Re(Ix, Iy, Iz, i);

							//Pwf = P[Ix + 1][Iy + 1][Iz + 1][2] - Qg / (S1*blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / blockFProps[Ix][Iy][Iz][BMU][1]);
							//Pwf = P[Ix + 1][Iy + 1][Iz + 1][2] - Qg / (S1*blockFProps[Ix][Iy][Iz][RO][1] * sgt[Nsgt - 1][1] / blockFProps[Ix][Iy][Iz][BMU][1]);
							Pwf = P[Ix + 1][Iy + 1][Iz + 1][2] - Qg / (S1*iGD * sgt[Nsgt - 1][1] / iGV);

							if ((wellf[i][1]) && (Pwf > wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								PIg = S1 * iGD * sgt[Nsgt - 1][1] * iGF / iGV;
								Qg = PIg * (wellf[i][1] - P[Ix + 1][Iy + 1][Iz + 1][2]);
								//PIo = S1*iOD * swt[0][2]*iOF / iOV;
								PIo = PIg * iOF / iGF;
								Qo = PIo * (wellf[i][1] - P[Ix + 1][Iy + 1][Iz + 1][2]);

								if ((Qo < 0) || ((Qo - Qo) != 0)) {
									Qo = 0;
									PIo = 0;
								}
								if ((Qg < 0) || ((Qg - Qg) != 0)) {
									Qg = 0;
									PIg = 0;
								}
							}


							if (P[Ix + 1][Iy + 1][Iz + 1][1] > WELL_MAX_P) {
								Qw = 0;
								Qo = 0;
								Qg = 0;
								IOComp[0] = 0;
								IOComp[1] = 0;
								IGComp[0] = 0;
								IGComp[1] = 0;
								PIw = 0;
								PIo = 0;
								PIg = 0;
							}

							QgInjected = Qg;


							QgInj = Qg;

							iWell = i;
							gasInjStat = -1;

							Qginj += Qg + Qo;
						}


					}
					QwT += Qw;
					QoT += Qo;
					QgT += Qg;
				}




#pragma endregion
			
				if (BENo < (2 * Nc - 1)) {
					i = BENo - Nc;
					
					LSide = (Vb / Dt)*(porpor*(comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * sat[Ix][Iy][Iz][1] + comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * sat[Ix][Iy][Iz][2]) - preProp[Ix][Iy][Iz][i]);
					RSide = comp[(Ix + transS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][0][0] * (P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) - comp[(Ix - 1 + transS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix][Iy + 1][Iz + 1][0][0] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);
					RSide += comp[Ix][(Iy + transS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][0][1] * (P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) - comp[Ix][(Iy - 1 + transS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy][Iz + 1][0][1] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);
					RSide += comp[Ix][Iy][(Iz + transS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][0][2] * (P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) - comp[Ix][Iy][(Iz - 1 + transS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz][0][2] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);
					RSide += comp[(Ix + transS[Ix + 1][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][1][0] * (P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) - comp[(Ix - 1 + transS[Ix][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * trans[Ix][Iy + 1][Iz + 1][1][0] * (P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);
					RSide += comp[Ix][(Iy + transS[Ix + 1][Iy + 1][Iz + 1][1][1])][Iz][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][1][1] * (P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) - comp[Ix][(Iy - 1 + transS[Ix + 1][Iy][Iz + 1][1][1])][Iz][i][1] * trans[Ix + 1][Iy][Iz + 1][1][1] * (P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);
					RSide += comp[Ix][Iy][(Iz + transS[Ix + 1][Iy + 1][Iz + 1][1][2])][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][1][2] * (P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) - comp[Ix][Iy][(Iz - 1 + transS[Ix + 1][Iy + 1][Iz][1][2])][i][1] * trans[Ix + 1][Iy + 1][Iz][1][2] * (P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);

					RSide += comp[(Ix + transS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][2][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - comp[(Ix - 1 + transS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix][Iy + 1][Iz + 1][2][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
					RSide += comp[Ix][(Iy + transS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][2][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - comp[Ix][(Iy - 1 + transS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy][Iz + 1][2][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
					RSide += comp[Ix][Iy][(Iz + transS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][2][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]) - comp[Ix][Iy][(Iz - 1 + transS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz][2][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
					RSide += comp[(Ix + transS[Ix + 1][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][3][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - comp[(Ix - 1 + transS[Ix][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * trans[Ix][Iy + 1][Iz + 1][3][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
					RSide += comp[Ix][(Iy + transS[Ix + 1][Iy + 1][Iz + 1][1][1])][Iz][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][3][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - comp[Ix][(Iy - 1 + transS[Ix + 1][Iy][Iz + 1][1][1])][Iz][i][1] * trans[Ix + 1][Iy][Iz + 1][3][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
					RSide += comp[Ix][Iy][(Iz + transS[Ix + 1][Iy + 1][Iz + 1][1][2])][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][3][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]) - comp[Ix][Iy][(Iz - 1 + transS[Ix + 1][Iy + 1][Iz][1][2])][i][1] * trans[Ix + 1][Iy + 1][Iz][3][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);

					////////////////////////////Transfer Function 

					//	if (comp[Ix][Iy][Iz][i][0] > fcomp[Ix][Iy][Iz][i][0]) f_m_diffusion[0] = diffusion[Ix][Iy][Iz][i][0];
					//else f_m_diffusion[0] = fdiffusion[Ix][Iy][Iz][i][0];

					//		if (comp[Ix][Iy][Iz][i][1] > fcomp[Ix][Iy][Iz][i][1]) f_m_diffusion[1] = diffusion[Ix][Iy][Iz][i][1];
					//	else f_m_diffusion[1] = fdiffusion[Ix][Iy][Iz][i][1];

					// Rside Tran func
					RSide += ZERO_CONV * SI_C *comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
					RSide += ZERO_CONV * SI_C *comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor) / (porpor + fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (1))//only Liq in Fracture & Matrix
						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (-1))//only Gas in Fracture & Matrix
						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0)) {
						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);

						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

					}

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);

						//RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * fporpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
					}

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (1)) {
						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);

						//RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * fporpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
					}

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1)) {
						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);

						//RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * fporpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);

						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
					}

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1)) {
						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);

						//RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * fporpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
					}

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0)) {
						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);

						//RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * fporpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);

						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
					}

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0)) {
						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);

						//RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * fporpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
					}





					if (iWell == (-1)) {
						gComp = comp[Ix][Iy][Iz][i][1];
						oComp = comp[Ix][Iy][Iz][i][0];
					}
					else {
						if (welli[iWell][0] == 3) {
							gComp = IGComp[i];
							oComp = IOComp[i];
						}
						else if (welli[iWell][0] == 8) {
							//gComp = wellf[iWell][i + 4];
							gComp = IGComp[i];
							oComp = IOComp[i];
						}
					}

					RSide += oComp * Qo + gComp * Qg;

					
					//jac[BLNo+Nc+i][BLNo+(2*Nc+2)]=dLsidedSo;
					if (phaseStat[Ix][Iy][Iz] == (-1)) dCoefl = 0;
					else dCoefl = 1;
					if (phaseStat[Ix][Iy][Iz] == 1) dCoefg = 0;
					else dCoefg = 1;

					



					if (Ix<(Nx - 1)) {
										
						//////////////////////////////////////////////////////////
						/////////////////////////////////////////////////////////
						if (phaseStat[Ix + 1][Iy][Iz] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][RO][0] * gridDim[Ix + 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BMU][0] * gridDim[Ix + 1] * Coef;
						

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BGAM][0] * gridDim[Ix + 1] * Coef) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

						porpor2 = porosity[Ix + 1][Iy][Iz] * (1 + cpor * (P[Ix + 2][Iy + 1][Iz + 1][1] - refP) + dcpor * (P[Ix + 2][Iy + 1][Iz + 1][1] - refP)*(P[Ix + 2][Iy + 1][Iz + 1][1] - refP));
						
						if (comp[Ix + 1][Iy][Iz][i][0]>comp[Ix][Iy][Iz][i][0]) {
							DupStream = diffusion[Ix + 1][Iy][Iz][i][0];							
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][0];							
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix + 1][Iy][Iz] < 1e-10)) DupStream = 0;
						AAd = blockFProps[Ix + 1][Iy][Iz][RO][0] * gridDim[Ix + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] * dCoefl;
						AAd *= (sat[Ix + 1][Iy][Iz][1] * gridDim[Ix + 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Ix] * dCoefl) / (gridDim[Ix + 1] + gridDim[Ix]);
						BBd = tor[Ix + 1][Iy][Iz] * gridDim[Ix + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Ix] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz] / (gridDim[Ix + 1] + gridDim[Ix]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = comp[Ix + 1][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0];
						RSide += DTran * DeltaX;


						if (phaseStat[Ix + 1][Iy][Iz] == 1) Coef = 0;
						else Coef = 1;
						Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][RO][1] * gridDim[Ix + 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BMU][1] * gridDim[Ix + 1] * Coef;
						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BGAM][1] * gridDim[Ix + 1] * Coef) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

						//////////////////////////////////////////////////////
						if (comp[Ix + 1][Iy][Iz][i][1]>comp[Ix][Iy][Iz][i][1]) {
							DupStream = diffusion[Ix + 1][Iy][Iz][i][1];							
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][1];							
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix + 1][Iy][Iz] < 1e-10)) DupStream = 0;
						AAd = blockFProps[Ix + 1][Iy][Iz][RO][1] * gridDim[Ix + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] * dCoefg;
						AAd *= (sat[Ix + 1][Iy][Iz][2] * gridDim[Ix + 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Ix] * dCoefg) / (gridDim[Ix + 1] + gridDim[Ix]);
						BBd = tor[Ix + 1][Iy][Iz] * gridDim[Ix + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Ix] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Nx+Iy]*gridDim[Nx+Ny+Iz]/(gridDim[Ix+1]+gridDim[Ix]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = comp[Ix + 1][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1];
						RSide += DTran * DeltaX;

						//////////////////////////////////////////////////////
						

					}

					if (Ix>0) {						
						if (phaseStat[Ix - 1][Iy][Iz] == (-1)) Coef = 0;
						else Coef = 1;
						Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][RO][0] * gridDim[Ix - 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][BMU][0] * gridDim[Ix - 1] * Coef;
						
						porpor2 = porosity[Ix - 1][Iy][Iz] * (1 + cpor * (P[Ix][Iy + 1][Iz + 1][1] - refP) + dcpor * (P[Ix][Iy + 1][Iz + 1][1] - refP)*(P[Ix][Iy + 1][Iz + 1][1] - refP));
						
						if (comp[Ix - 1][Iy][Iz][i][0]>comp[Ix][Iy][Iz][i][0]) {
							DupStream = diffusion[Ix - 1][Iy][Iz][i][0];							
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][0];							
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix - 1][Iy][Iz] < 1e-10)) DupStream = 0;
						AAd = blockFProps[Ix - 1][Iy][Iz][RO][0] * gridDim[Ix - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] * dCoefl;
						AAd *= (sat[Ix - 1][Iy][Iz][1] * gridDim[Ix - 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Ix] * dCoefl) / (gridDim[Ix - 1] + gridDim[Ix]);
						BBd = tor[Ix - 1][Iy][Iz] * gridDim[Ix - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Ix] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz] / (gridDim[Ix - 1] + gridDim[Ix]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = comp[Ix][Iy][Iz][i][0] - comp[Ix - 1][Iy][Iz][i][0];
						RSide -= DTran * DeltaX;

						if (phaseStat[Ix - 1][Iy][Iz] == 1) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][RO][1] * gridDim[Ix - 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][BMU][1] * gridDim[Ix - 1] * Coef;
						
						if (comp[Ix - 1][Iy][Iz][i][1]>comp[Ix][Iy][Iz][i][1]) {
							DupStream = diffusion[Ix - 1][Iy][Iz][i][1];							
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][1];							
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix - 1][Iy][Iz] < 1e-10)) DupStream = 0;
						AAd = blockFProps[Ix - 1][Iy][Iz][RO][1] * gridDim[Ix - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] * dCoefg;
						AAd *= (sat[Ix - 1][Iy][Iz][2] * gridDim[Ix - 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Ix] * dCoefg) / (gridDim[Ix - 1] + gridDim[Ix]);
						BBd = tor[Ix - 1][Iy][Iz] * gridDim[Ix - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Ix] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Nx+Iy]*gridDim[Nx+Ny+Iz]/(gridDim[Ix-1]+gridDim[Ix]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = comp[Ix][Iy][Iz][i][1] - comp[Ix - 1][Iy][Iz][i][1];
						RSide -= DTran * DeltaX;						
					}

					if (Iy<(Ny - 1)) {						
						if (phaseStat[Ix][Iy + 1][Iz] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][RO][0] * gridDim[Nx + Iy + 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][BMU][0] * gridDim[Nx + Iy + 1] * Coef;
						porpor2 = porosity[Ix][Iy + 1][Iz] * (1 + cpor * (P[Ix + 1][Iy + 2][Iz + 1][1] - refP) + dcpor * (P[Ix + 1][Iy + 2][Iz + 1][1] - refP)*(P[Ix + 1][Iy + 2][Iz + 1][1] - refP));
						
						if (comp[Ix][Iy + 1][Iz][i][0]>comp[Ix][Iy][Iz][i][0]) {
							DupStream = diffusion[Ix][Iy + 1][Iz][i][0];							
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][0];							
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix][Iy + 1][Iz] < 1e-10)) DupStream = 0;
						AAd = blockFProps[Ix][Iy + 1][Iz][RO][0] * gridDim[Nx + Iy + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] * dCoefl;
						AAd *= (sat[Ix][Iy + 1][Iz][1] * gridDim[Nx + Iy + 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Nx + Iy] * dCoefl) / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
						BBd = tor[Ix][Iy + 1][Iz] * gridDim[Nx + Iy + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Iy] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Ix] * gridDim[Nx + Ny + Iz] / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = comp[Ix][Iy + 1][Iz][i][0] - comp[Ix][Iy][Iz][i][0];
						RSide += DTran * DeltaX;

						if (phaseStat[Ix][Iy + 1][Iz] == 1) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][RO][1] * gridDim[Nx + Iy + 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][BMU][1] * gridDim[Nx + Iy + 1] * Coef;
						
						/////////////////////////////////////////////////////////////////////////////
						if (comp[Ix][Iy + 1][Iz][i][1]>comp[Ix][Iy][Iz][i][1]) {
							DupStream = diffusion[Ix][Iy + 1][Iz][i][1];							
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][1];							
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix][Iy + 1][Iz] < 1e-10)) DupStream = 0;
						AAd = blockFProps[Ix][Iy + 1][Iz][RO][1] * gridDim[Nx + Iy + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] * dCoefg;
						AAd *= (sat[Ix][Iy + 1][Iz][2] * gridDim[Nx + Iy + 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Nx + Iy] * dCoefg) / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
						BBd = tor[Ix][Iy + 1][Iz] * gridDim[Nx + Iy + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Iy] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Ix]*gridDim[Nx+Ny+Iz]/(gridDim[Nx+Iy+1]+gridDim[Nx+Iy]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = comp[Ix][Iy + 1][Iz][i][1] - comp[Ix][Iy][Iz][i][1];
						RSide += DTran * DeltaX;
					}

					if (Iy>0) {						
						if (phaseStat[Ix][Iy - 1][Iz] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][RO][0] * gridDim[Nx + Iy - 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][BMU][0] * gridDim[Nx + Iy - 1] * Coef;
						
						porpor2 = porosity[Ix][Iy - 1][Iz] * (1 + cpor * (P[Ix + 1][Iy][Iz + 1][1] - refP) + dcpor * (P[Ix + 1][Iy][Iz + 1][1] - refP)*(P[Ix + 1][Iy][Iz + 1][1] - refP));
						if (comp[Ix][Iy - 1][Iz][i][0]>comp[Ix][Iy][Iz][i][0]) {
							DupStream = diffusion[Ix][Iy - 1][Iz][i][0];							
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][0];							
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix][Iy - 1][Iz] < 1e-10)) DupStream = 0;
						AAd = blockFProps[Ix][Iy - 1][Iz][RO][0] * gridDim[Nx + Iy - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] * dCoefl;
						AAd *= (sat[Ix][Iy - 1][Iz][1] * gridDim[Nx + Iy - 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Nx + Iy] * dCoefl) / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
						BBd = tor[Ix][Iy - 1][Iz] * gridDim[Nx + Iy - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Iy] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Ix] * gridDim[Nx + Ny + Iz] / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = comp[Ix][Iy][Iz][i][0] - comp[Ix][Iy - 1][Iz][i][0];
						RSide -= DTran * DeltaX;

						if (phaseStat[Ix][Iy - 1][Iz] == 1) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][RO][1] * gridDim[Nx + Iy - 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][BMU][1] * gridDim[Nx + Iy - 1] * Coef;
						
						if (comp[Ix][Iy - 1][Iz][i][1]>comp[Ix][Iy][Iz][i][1]) {
							DupStream = diffusion[Ix][Iy - 1][Iz][i][1];							
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][1];							
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix][Iy - 1][Iz] < 1e-10)) DupStream = 0;
						AAd = blockFProps[Ix][Iy - 1][Iz][RO][1] * gridDim[Nx + Iy - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] * dCoefg;
						AAd *= (sat[Ix][Iy - 1][Iz][2] * gridDim[Nx + Iy - 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Nx + Iy] * dCoefg) / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
						BBd = tor[Ix][Iy - 1][Iz] * gridDim[Nx + Iy - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Iy] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Ix]*gridDim[Nx+Ny+Iz]/(gridDim[Nx+Iy-1]+gridDim[Nx+Iy]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = comp[Ix][Iy][Iz][i][1] - comp[Ix][Iy - 1][Iz][i][1];
						RSide -= DTran * DeltaX;
					}

					if (Iz<(Nz - 1)) {						
						if (phaseStat[Ix][Iy][Iz + 1] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][RO][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][BMU][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
						
						porpor2 = porosity[Ix][Iy][Iz + 1] * (1 + cpor * (P[Ix + 1][Iy + 1][Iz + 2][1] - refP) + dcpor * (P[Ix + 1][Iy + 1][Iz + 2][1] - refP)*(P[Ix + 1][Iy + 1][Iz + 2][1] - refP));
						if (comp[Ix][Iy][Iz + 1][i][0]>comp[Ix][Iy][Iz][i][0]) {
							DupStream = diffusion[Ix][Iy][Iz + 1][i][0];							
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][0];							
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix][Iy][Iz + 1] < 1e-10)) DupStream = 0;
						AAd = blockFProps[Ix][Iy][Iz + 1][RO][0] * gridDim[Nx + Ny + Iz + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] * dCoefl;
						AAd *= (sat[Ix][Iy][Iz + 1][1] * gridDim[Nx + Ny + Iz + 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Nx + Ny + Iz] * dCoefl) / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
						BBd = tor[Ix][Iy][Iz + 1] * gridDim[Nx + Ny + Iz + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Ny + Iz] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Ix] * gridDim[Nx + Iy] / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = comp[Ix][Iy][Iz + 1][i][0] - comp[Ix][Iy][Iz][i][0];
						RSide += DTran * DeltaX;

						if (phaseStat[Ix][Iy][Iz + 1] == 1) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][RO][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][BMU][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
						
						if (comp[Ix][Iy][Iz + 1][i][1]>comp[Ix][Iy][Iz][i][1]) {
							DupStream = diffusion[Ix][Iy][Iz + 1][i][1];							
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][1];							
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix][Iy][Iz + 1] < 1e-10)) DupStream = 0;
						AAd = blockFProps[Ix][Iy][Iz + 1][RO][1] * gridDim[Nx + Ny + Iz + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] * dCoefg;
						AAd *= (sat[Ix][Iy][Iz + 1][2] * gridDim[Nx + Ny + Iz + 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Nx + Ny + Iz] * dCoefg) / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
						BBd = tor[Ix][Iy][Iz + 1] * gridDim[Nx + Ny + Iz + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Ny + Iz] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Ix]*gridDim[Nx+Iy]/(gridDim[Nx+Ny+Iz+1]+gridDim[Nx+Ny+Iz]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = comp[Ix][Iy][Iz + 1][i][1] - comp[Ix][Iy][Iz][i][1];
						RSide += DTran * DeltaX;
					}

					if (Iz>0) {						
						if (phaseStat[Ix][Iy][Iz - 1] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][RO][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][BMU][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
						
						porpor2 = porosity[Ix][Iy][Iz - 1] * (1 + cpor * (P[Ix + 1][Iy + 1][Iz][1] - refP) + dcpor * (P[Ix + 1][Iy + 1][Iz][1] - refP)*(P[Ix + 1][Iy + 1][Iz][1] - refP));
						if (comp[Ix][Iy][Iz - 1][i][0]>comp[Ix][Iy][Iz][i][0]) {
							DupStream = diffusion[Ix][Iy][Iz - 1][i][0];							
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][0];							
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix][Iy][Iz - 1] < 1e-10)) DupStream = 0;
						AAd = blockFProps[Ix][Iy][Iz - 1][RO][0] * gridDim[Nx + Ny + Iz - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] * dCoefl;
						AAd *= (sat[Ix][Iy][Iz - 1][1] * gridDim[Nx + Ny + Iz - 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Nx + Ny + Iz] * dCoefl) / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
						BBd = tor[Ix][Iy][Iz - 1] * gridDim[Nx + Ny + Iz - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Ny + Iz] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Ix] * gridDim[Nx + Iy] / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = comp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz - 1][i][0];
						RSide -= DTran * DeltaX;
						
						if (phaseStat[Ix][Iy][Iz - 1] == 1) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][RO][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][BMU][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
						
						if (comp[Ix][Iy][Iz - 1][i][1]>comp[Ix][Iy][Iz][i][1]) {
							DupStream = diffusion[Ix][Iy][Iz - 1][i][1];							
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][1];							
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix][Iy][Iz - 1] < 1e-10)) DupStream = 0;
						AAd = blockFProps[Ix][Iy][Iz - 1][RO][1] * gridDim[Nx + Ny + Iz - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] * dCoefg;
						AAd *= (sat[Ix][Iy][Iz - 1][2] * gridDim[Nx + Ny + Iz - 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Nx + Ny + Iz] * dCoefg) / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
						BBd = tor[Ix][Iy][Iz - 1] * gridDim[Nx + Ny + Iz - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Ny + Iz] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Ix]*gridDim[Nx+Iy]/(gridDim[Nx+Ny+Iz-1]+gridDim[Nx+Ny+Iz]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = comp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz - 1][i][1];
						RSide -= DTran * DeltaX;
					}					
#ifdef USE_MKL_SOLVER
					MKLRHSVector[actx->LocalIndex] = RSide - LSide;
#else
					LocalF[actx->LocalIndex] = LSide - RSide;
#endif
				}				
				else if (BENo < (2 * Nc)) {

					LSide = (Vb / Dt)*(porpor*(blockFProps[Ix][Iy][Iz][RO][0] * sat[Ix][Iy][Iz][1] + blockFProps[Ix][Iy][Iz][RO][1] * sat[Ix][Iy][Iz][2]) - preProp[Ix][Iy][Iz][Nc - 1]);
					RSide = trans[Ix + 1][Iy + 1][Iz + 1][0][0] * (P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) - trans[Ix][Iy + 1][Iz + 1][0][0] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);
					RSide += trans[Ix + 1][Iy + 1][Iz + 1][0][1] * (P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) - trans[Ix + 1][Iy][Iz + 1][0][1] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);
					RSide += trans[Ix + 1][Iy + 1][Iz + 1][0][2] * (P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) - trans[Ix + 1][Iy + 1][Iz][0][2] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);
					RSide += trans[Ix + 1][Iy + 1][Iz + 1][1][0] * (P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) - trans[Ix][Iy + 1][Iz + 1][1][0] * (P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);
					RSide += trans[Ix + 1][Iy + 1][Iz + 1][1][1] * (P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) - trans[Ix + 1][Iy][Iz + 1][1][1] * (P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);
					RSide += trans[Ix + 1][Iy + 1][Iz + 1][1][2] * (P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) - trans[Ix + 1][Iy + 1][Iz][1][2] * (P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);

					RSide += trans[Ix + 1][Iy + 1][Iz + 1][2][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - trans[Ix][Iy + 1][Iz + 1][2][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
					RSide += trans[Ix + 1][Iy + 1][Iz + 1][2][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - trans[Ix + 1][Iy][Iz + 1][2][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
					RSide += trans[Ix + 1][Iy + 1][Iz + 1][2][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]) - trans[Ix + 1][Iy + 1][Iz][2][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
					RSide += trans[Ix + 1][Iy + 1][Iz + 1][3][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - trans[Ix][Iy + 1][Iz + 1][3][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
					RSide += trans[Ix + 1][Iy + 1][Iz + 1][3][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - trans[Ix + 1][Iy][Iz + 1][3][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
					RSide += trans[Ix + 1][Iy + 1][Iz + 1][3][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]) - trans[Ix + 1][Iy + 1][Iz][3][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);

					////////////////////////////Transfer Function


					RSide += ZERO_CONV * SI_C * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
					RSide += ZERO_CONV * SI_C * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor) / (porpor + fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));

					//////////////////////
					RSide += Qo + Qg;
#ifdef USE_MKL_SOLVER
					MKLRHSVector[actx->LocalIndex] = RSide - LSide;
#else
					LocalF[actx->LocalIndex] = LSide - RSide;
#endif					
				}
				else {
					LSide = (Vb / Dt)*(porpor*watRo*WAT_M_RO*sat[Ix][Iy][Iz][0] - preProp[Ix][Iy][Iz][Nc]);
					RSide = Wtran[Ix + 1][Iy + 1][Iz + 1][0] * (P[Ix + 2][Iy + 1][Iz + 1][0] - P[Ix + 1][Iy + 1][Iz + 1][0]) - Wtran[Ix][Iy + 1][Iz + 1][0] * (P[Ix + 1][Iy + 1][Iz + 1][0] - P[Ix][Iy + 1][Iz + 1][0]);
					RSide += Wtran[Ix + 1][Iy + 1][Iz + 1][1] * (P[Ix + 1][Iy + 2][Iz + 1][0] - P[Ix + 1][Iy + 1][Iz + 1][0]) - Wtran[Ix + 1][Iy][Iz + 1][1] * (P[Ix + 1][Iy + 1][Iz + 1][0] - P[Ix + 1][Iy][Iz + 1][0]);
					RSide += Wtran[Ix + 1][Iy + 1][Iz + 1][2] * (P[Ix + 1][Iy + 1][Iz + 2][0] - P[Ix + 1][Iy + 1][Iz + 1][0]) - Wtran[Ix + 1][Iy + 1][Iz][2] * (P[Ix + 1][Iy + 1][Iz + 1][0] - P[Ix + 1][Iy + 1][Iz][0]);

					RSide += G_ACC * watRo*Wtran[Ix + 1][Iy + 1][Iz + 1][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - G_ACC * watRo*Wtran[Ix][Iy + 1][Iz + 1][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
					RSide += G_ACC * watRo*Wtran[Ix + 1][Iy + 1][Iz + 1][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - G_ACC * watRo*Wtran[Ix + 1][Iy][Iz + 1][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
					RSide += G_ACC * watRo*Wtran[Ix + 1][Iy + 1][Iz + 1][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]) - G_ACC * watRo*Wtran[Ix + 1][Iy + 1][Iz][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);

					/////////////////////////////Transfer Function


					RSide += ZERO_CONV * SI_C* watRo *WAT_M_RO * ShapeFactor_2(Ix, Iy, Iz) * f_m_relperm[0] / watMu * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) *((fP[Ix + 1][Iy + 1][Iz + 1][0] - P[Ix + 1][Iy + 1][Iz + 1][0]) + (blockFProps[Ix][Iy][Iz][BLOCK_PC][0] - fblockFProps[Ix][Iy][Iz][BLOCK_PC][0]));

					////////////////////////////////////////////
					RSide += Qw;
#ifdef USE_MKL_SOLVER
					MKLRHSVector[actx->LocalIndex] = RSide - LSide;
#else
					LocalF[actx->LocalIndex] = LSide - RSide;
#endif
				}
			}
			else if (BENo < (2 * Nc + 2)) {
				Sxl = 0;
				for (i = 0; i < Nc; i++) Sxl += comp[Ix][Iy][Iz][i][0];
#ifdef USE_MKL_SOLVER
				MKLRHSVector[actx->LocalIndex] = 1 - Sxl;
#else
				LocalF[actx->LocalIndex] = Sxl - 1;
#endif
			}
			else if (BENo < (2 * Nc + 3)) {
				Sxg = 0;
				for (i = 0; i<Nc; i++) Sxg += comp[Ix][Iy][Iz][i][1];
#ifdef USE_MKL_SOLVER
				MKLRHSVector[actx->LocalIndex] = 1 - Sxg;
#else
				LocalF[actx->LocalIndex] = Sxg - 1;
#endif
			}
			else if (BENo < (2 * Nc + 4)) {
#ifdef USE_MKL_SOLVER
				MKLRHSVector[actx->LocalIndex] = 1 - sat[Ix][Iy][Iz][0] - sat[Ix][Iy][Iz][1] - sat[Ix][Iy][Iz][2];
#else
				LocalF[actx->LocalIndex] = sat[Ix][Iy][Iz][0] + sat[Ix][Iy][Iz][1] + sat[Ix][Iy][Iz][2] - 1;
#endif
			}
			else {
				std::cout << Ix << '\t' << Iy << '\t' << Iz << '\t' << BENo << "\tMatrix phase stat: " << phaseStat[Ix][Iy][Iz] << std::endl;

				TerM("Global Index Error!");
			}
			
			break;

		case (-1):
			if (BENo < (Nc + 1)) {
#pragma region sadeq

				fporpor = fporosity[Ix][Iy][Iz] * (1 + cpor * (fP[Ix + 1][Iy + 1][Iz + 1][1] - refP) + dcpor * (fP[Ix + 1][Iy + 1][Iz + 1][1] - refP)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - refP));
				
				if (P[Ix + 1][Iy + 1][Iz + 1][1] >= fP[Ix + 1][Iy + 1][Iz + 1][1])
				{
					f_m_relperm[1] = relPerm[Ix][Iy][Iz][1];//oil relperm between matrix and fracture
					f_m_drelperm[1][1] = dRelPerm[Ix][Iy][Iz][1];//dkrodsw
					f_m_drelperm[1][2] = dRelPerm[Ix][Iy][Iz][2];//dkrodsg
					f_m_drelperm[1][4] = dRelPerm[Ix][Iy][Iz][4];//dkrodso

					f_m_drelperm[1][9] = 0;
					f_m_drelperm[1][7] = 0;
					f_m_drelperm[1][6] = 0;
				}
				else
				{
					f_m_relperm[1] = frelPerm[Ix][Iy][Iz][1];
					f_m_drelperm[1][6] = fdRelPerm[Ix][Iy][Iz][1];//fdkrofdsw
					f_m_drelperm[1][7] = fdRelPerm[Ix][Iy][Iz][2];//fdkrofdsg
					f_m_drelperm[1][9] = fdRelPerm[Ix][Iy][Iz][4];//fdkrofdso

					f_m_drelperm[1][4] = 0;
					f_m_drelperm[1][2] = 0;
					f_m_drelperm[1][1] = 0;
				}
				if (P[Ix + 1][Iy + 1][Iz + 1][2] >= fP[Ix + 1][Iy + 1][Iz + 1][2])
				{
					f_m_relperm[2] = relPerm[Ix][Iy][Iz][2];//gas relperm between matrix and fracture
					f_m_drelperm[2][3] = dRelPerm[Ix][Iy][Iz][3];//dkrgdsg

					f_m_drelperm[2][8] = 0;
				}
				else
				{
					f_m_relperm[2] = frelPerm[Ix][Iy][Iz][2];
					f_m_drelperm[2][8] = fdRelPerm[Ix][Iy][Iz][3];//fdkrgfdsg

					f_m_drelperm[2][3] = 0;
				}

				if (P[Ix + 1][Iy + 1][Iz + 1][0] >= fP[Ix + 1][Iy + 1][Iz + 1][0])
				{
					f_m_relperm[0] = relPerm[Ix][Iy][Iz][0];
					f_m_drelperm[1][0] = dRelPerm[Ix][Iy][Iz][0];//dkrwdsw

					f_m_drelperm[1][5] = 0;
				}
				else
				{
					f_m_relperm[0] = frelPerm[Ix][Iy][Iz][0];//water relperm between matrix and fracture
					f_m_drelperm[1][5] = fdRelPerm[Ix][Iy][Iz][0];//fdkrwfdsw

					f_m_drelperm[1][0] = 0;
				}
#pragma endregion

#pragma region Wells&Commons
				porpor = porosity[Ix][Iy][Iz] * (1 + cpor * (P[Ix + 1][Iy + 1][Iz + 1][1] - refP) + dcpor * (P[Ix + 1][Iy + 1][Iz + 1][1] - refP)*(P[Ix + 1][Iy + 1][Iz + 1][1] - refP));
				




				Qw = 0;
				Qo = 0;
				Qg = 0;

				PIw = 0;
				PIo = 0;
				PIg = 0;

				Vb = gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz];

				iWell = -1;
				for (i = 0; i < wellNO; i++) {
					if ((Ix == welli[i][1]) && (Iy == welli[i][2]) && (Iz >= welli[i][3]) && (Iz <= welli[i][4])) {
						Re = Calc_Re(Ix, Iy, Iz, i);
						if (welli[i][0] == 0) BMethQM = 1;
						if ((welli[i][0] == 0) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {		//Constant Pwf Pressure - Production
																																																			//Re = 0.14*sqrt(sqrt(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0])*gridDim[Ix] * gridDim[Ix] + sqrt(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1])*gridDim[Nx + Iy] * gridDim[Nx + Iy]);
																																																			//Re /= 0.5*(pow(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0], 0.25) + pow(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1], 0.25));
							if (Re <= wellf[i][3])
								Re += wellf[i][3];

							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][1] * perm[Ix][Iy][Iz][0]) / (log(Re / wellf[i][3]) + wellf[i][2]);

							PIw = S1 * watRo*WAT_M_RO*relPerm[Ix][Iy][Iz][0] / watMu;
							PIo = S1 * blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / blockFProps[Ix][Iy][Iz][BMU][0];
							PIg = S1 * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / blockFProps[Ix][Iy][Iz][BMU][1];

							Qw = PIw * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][0]);
							Qo = PIo * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][1]);
							Qg = PIg * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][2]);

							

							/*if ((wellf[i][1]) && ((-Qo) > wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								//std::cout << "HIT!\n";
								SSo1 = 0;
								for (j = welli[i][3]; j <= welli[i][4]; j++) {
									S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
									SSo1 += blockFProps[Ix][Iy][j][RO][0] * S2*relPerm[Ix][Iy][j][1] / blockFProps[Ix][Iy][Iz][BMU][0];
									S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
									SSo1 += fblockFProps[Ix][Iy][j][RO][0] * S2*frelPerm[Ix][Iy][j][1] / fblockFProps[Ix][Iy][Iz][BMU][0];
								}
								S1 = gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][0] * perm[Ix][Iy][Iz][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);

								if (SSo1) {
									if (SURFACE_RATES) Qo = -S1 * oilRateCh(Ix, Iy, Iz, relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * blockFProps[Ix][Iy][Iz][BMU][0] / (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * blockFProps[Ix][Iy][Iz][BMU][1]))*wellf[i][1] * blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / (blockFProps[Ix][Iy][Iz][BMU][0] * SSo1);
									else Qo = -S1 * wellf[i][1] * blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / (blockFProps[Ix][Iy][Iz][BMU][0] * SSo1);
								}
								Qw = Qo * relPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*blockFProps[Ix][Iy][Iz][BMU][0] / (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * watMu);
								Qg = Qo * relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * blockFProps[Ix][Iy][Iz][BMU][0] / (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * blockFProps[Ix][Iy][Iz][BMU][1]);

							}*/

							if (P[Ix + 1][Iy + 1][Iz + 1][1] < WELL_MIN_P) {
								Qw = 0;
								Qo = 0;
								Qg = 0;

								PIw = 0;
								PIo = 0;
								PIg = 0;
							}
							else if ((wellf[i][1]) && ((-Qo) > wellf[i][1])) {
								Qo = -wellf[i][1];
								Qw = Qo * relPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*blockFProps[Ix][Iy][Iz][BMU][0] / (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * watMu);
								Qg = Qo * relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * blockFProps[Ix][Iy][Iz][BMU][0] / (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * blockFProps[Ix][Iy][Iz][BMU][1]);
								PIw = 0;
								PIo = 0;
								PIg = 0;
							}
							if ((Qw > 0) || ((Qw - Qw) != 0)) {
								Qw = 0;
								PIw = 0;
							}
							if ((Qo > 0) || ((Qo - Qo) != 0)) {
								Qo = 0;
								PIo = 0;
							}
							if ((Qg > 0) || ((Qg - Qg) != 0)) {
								Qg = 0;
								PIg = 0;
							}

							QoProduced = Qo;
							Qoprod += Qo + Qg;
							MethQM += Qo * (1 - comp[Ix][Iy][Iz][0][0]) + Qg * (1 - comp[Ix][Iy][Iz][0][1]);
							
							//Qoprod = Qo*(1 - comp[Ix][Iy][Iz][0][0])+ Qg*(1 - comp[Ix][Iy][Iz][0][1]);
							WellCompSadeq[0] += Qo * (comp[Ix][Iy][Iz][0][0]) + Qg * (comp[Ix][Iy][Iz][0][1]);
							WellCompSadeq[1] += Qo * (comp[Ix][Iy][Iz][1][0]) + Qg * (comp[Ix][Iy][Iz][1][1]);
							WellCompSadeq[2] += Qo * (comp[Ix][Iy][Iz][2][0]) + Qg * (comp[Ix][Iy][Iz][2][1]);
							WellCompSadeq2[0] += (Qo*(comp[Ix][Iy][Iz][0][0]) + Qg * (comp[Ix][Iy][Iz][0][1]));
							WellCompSadeq2[1] += (Qo*(comp[Ix][Iy][Iz][1][0]) + Qg * (comp[Ix][Iy][Iz][1][1]));
							WellCompSadeq2[2] += (Qo*(comp[Ix][Iy][Iz][2][0]) + Qg * (comp[Ix][Iy][Iz][2][1]));
						}

						else if ((welli[i][0] == 1) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {			//Constant Pwf- Gas Production
																																																						//Re = 0.14*sqrt(sqrt(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0])*gridDim[Ix] * gridDim[Ix] + sqrt(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1])*gridDim[Nx + Iy] * gridDim[Nx + Iy]);
																																																						//Re /= 0.5*(pow(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0], 0.25) + pow(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1], 0.25));
																																																						//Re = Calc_Re(Ix, Iy, Iz, i);
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][1] * perm[Ix][Iy][Iz][0]) / (log(Re / wellf[i][3]) + wellf[i][2]);

							PIw = S1 * watRo*WAT_M_RO*relPerm[Ix][Iy][Iz][0] / watMu;
							PIo = S1 * blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / blockFProps[Ix][Iy][Iz][BMU][0];
							PIg = S1 * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / blockFProps[Ix][Iy][Iz][BMU][1];

							Qw = PIw * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][0]);
							Qo = PIo * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][1]);
							Qg = PIg * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][2]);

							if ((Qw > 0) || ((Qw - Qw) != 0)) {
								Qw = 0;
								PIw = 0;
							}
							if ((Qo > 0) || ((Qo - Qo) != 0)) {
								Qo = 0;
								PIo = 0;
							}
							if ((Qg > 0) || ((Qg - Qg) != 0)) {
								Qg = 0;
								PIg = 0;
							}

							if ((wellf[i][1]) && ((-Qg) > wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								SSo1 = 0;
								for (j = welli[i][3]; j <= welli[i][4]; j++) {
									S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
									SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][Iz][BMU][1];
									S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
									SSo1 += fblockFProps[Ix][Iy][j][RO][1] * S2*frelPerm[Ix][Iy][j][2] / fblockFProps[Ix][Iy][Iz][BMU][1];
								}
								S1 = gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][0] * perm[Ix][Iy][Iz][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);

								if (SSo1) {
									if (SURFACE_RATES) Qg = -S1 * gasRateCh(Ix, Iy, Iz, (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * blockFProps[Ix][Iy][Iz][BMU][1]) / (relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * blockFProps[Ix][Iy][Iz][BMU][0]))*wellf[i][1] * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / (blockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
									else Qg = -S1 * wellf[i][1] * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / (blockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
								}
								Qw = Qg * relPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*blockFProps[Ix][Iy][Iz][BMU][1] / (relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * watMu);
								Qo = Qg * relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * blockFProps[Ix][Iy][Iz][BMU][1] / (relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * blockFProps[Ix][Iy][Iz][BMU][0]);

							}

							//QoProd=oilRateCh2(Ix, Iy, Iz, -Qo, -Qg);
							QoProduced = Qo;
						}

						else if ((welli[i][0] == 2) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {			//Constant Pwf Pressure - Water Injection
																																																						//Re = 0.14*sqrt(sqrt(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0])*gridDim[Ix] * gridDim[Ix] + sqrt(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1])*gridDim[Nx + Iy] * gridDim[Nx + Iy]);
																																																						//Re /= 0.5*(pow(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0], 0.25) + pow(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1], 0.25));
																																																						//Re = Calc_Re(Ix, Iy, Iz, i);
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][1] * perm[Ix][Iy][Iz][0]) / (log(Re / wellf[i][3]) + wellf[i][2]);

							PIw = S1 * watRo*WAT_M_RO*relPerm[Ix][Iy][Iz][0] / watMu;
							Qw = PIw * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][0]);


							if ((Qw < 0) || ((Qw - Qw) != 0)) {
								Qw = 0;
								PIw = 0;
							}

							if ((wellf[i][1]) && (Qw > wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								SSo1 = 0;
								for (j = welli[i][3]; j <= welli[i][4]; j++) {
									S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
									SSo1 += watRo * S2*relPerm[Ix][Iy][j][0] / watMu;
									S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
									SSo1 += watRo * S2*frelPerm[Ix][Iy][j][0] / watMu;
								}
								S1 = gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][0] * perm[Ix][Iy][Iz][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);

								if (SSo1) Qw = S1 * wellf[i][1] * watRo*WAT_M_RO * relPerm[Ix][Iy][Iz][0] / (watMu * SSo1);
							}
						}

						else if ((welli[i][0] == 3) && (((fabs(simTime - wellf[i][Nc + 4]) <= TSTEPIF) || (fabs(simTime - wellf[i][Nc + 5]) <= TSTEPIF)) || ((simTime >= wellf[i][Nc + 4]) && (simTime <= wellf[i][Nc + 5])))) {			//Constant Pwf Pressure - Gas Injection
																																																											//Re = 0.14*sqrt(sqrt(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0])*gridDim[Ix] * gridDim[Ix] + sqrt(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1])*gridDim[Nx + Iy] * gridDim[Nx + Iy]);
																																																											//Re /= 0.5*(pow(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0], 0.25) + pow(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1], 0.25));
							for (j = 0; j < Nc; j++) IComp[j] = wellf[i][4 + j];
							FlashInjection(IComp, wellf[i][0], IOComp, IGComp, iOF, iGF, iOD, iGD, iOV, iGV);
							//Re = Calc_Re(Ix, Iy, Iz, i);
							if (Re <= wellf[i][3])
								Re += wellf[i][3];

							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][1] * perm[Ix][Iy][Iz][0]) / (log(Re / wellf[i][3]) + wellf[i][2]);
							//S2 = sgt[Nsgt-1][1] / iGV;
							//S2 = relPerm[Ix][Iy][Iz][2] / blockFProps[Ix][Iy][Iz][BMU][1];

							PIg = S1 * iGD * sgt[Nsgt - 1][1] * iGF / iGV;
							Qg = PIg * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][2]);
							//PIo = S1*iOD * swt[0][2]*iOF / iOV;
							PIo = PIg * iOF / iGF;
							Qo = PIo * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][2]);

							if ((Qo < 0) || ((Qo - Qo) != 0)) {
								Qo = 0;
								PIo = 0;
							}
							if ((Qg < 0) || ((Qg - Qg) != 0)) {
								Qg = 0;
								PIg = 0;
							}

							iWell = i;

							if ((wellf[i][1]) && (Qg > wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								SSo1 = 0;
								for (j = welli[i][3]; j <= welli[i][4]; j++) {
									S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
									//SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][Iz][BMU][1];
									SSo1 += S2;
									S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
									//SSo1 += fblockFProps[Ix][Iy][j][RO][1] * S2*frelPerm[Ix][Iy][j][2] / fblockFProps[Ix][Iy][Iz][BMU][1];
									SSo1 += S2;
								}
								S1 = gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][0] * perm[Ix][Iy][Iz][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);

								//if (SSo1) Qg = S1*wellf[i][1] * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / (blockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
								if (SSo1) Qg = S1 * wellf[i][1] / SSo1;
								if (SSo1) Qo = Qg * iOF / iGF;
							}
							Qginj = Qg + Qo;
						}

						else if ((welli[i][0] == 4) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {		//Constant Oil Rate
							SSo1 = 0;
							for (j = welli[i][3]; j <= welli[i][4]; j++) {
								S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
								SSo1 += blockFProps[Ix][Iy][j][RO][0] * S2*relPerm[Ix][Iy][j][1] / blockFProps[Ix][Iy][Iz][BMU][0];
								S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
								SSo1 += fblockFProps[Ix][Iy][j][RO][0] * S2*frelPerm[Ix][Iy][j][1] / fblockFProps[Ix][Iy][Iz][BMU][0];
							}
							S1 = gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][0] * perm[Ix][Iy][Iz][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);

							if (SSo1) {
								if (SURFACE_RATES) Qo = -S1 * oilRateCh(Ix, Iy, Iz, relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * blockFProps[Ix][Iy][Iz][BMU][0] / (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * blockFProps[Ix][Iy][Iz][BMU][1]))*wellf[i][0] * blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / (blockFProps[Ix][Iy][Iz][BMU][0] * SSo1);
								else Qo = -S1 * wellf[i][0] * blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / (blockFProps[Ix][Iy][Iz][BMU][0] * SSo1);
							}
							Qw = Qo * relPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*blockFProps[Ix][Iy][Iz][BMU][0] / (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * watMu);
							Qg = Qo * relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * blockFProps[Ix][Iy][Iz][BMU][0] / (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * blockFProps[Ix][Iy][Iz][BMU][1]);

							//Re = 0.14*sqrt(sqrt(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0])*gridDim[Ix] * gridDim[Ix] + sqrt(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1])*gridDim[Nx + Iy] * gridDim[Nx + Iy]);
							//Re /= 0.5*(pow(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0], 0.25) + pow(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1], 0.25));
							//Re = Calc_Re(Ix, Iy, Iz, i);
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][1] * perm[Ix][Iy][Iz][0]) / (log(Re / wellf[i][3]) + wellf[i][2]);
							Pwf = P[Ix + 1][Iy + 1][Iz + 1][1] - Qo / (S1*blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / blockFProps[Ix][Iy][Iz][BMU][0]);

							if ((wellf[i][1]) && (Pwf < wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								PIw = S1 * watRo*WAT_M_RO*relPerm[Ix][Iy][Iz][0] / watMu;
								PIo = S1 * blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / blockFProps[Ix][Iy][Iz][BMU][0];
								PIg = S1 * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / blockFProps[Ix][Iy][Iz][BMU][1];

								Qw = PIw * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][0]);
								Qo = PIo * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][1]);
								Qg = PIg * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][2]);

								if ((Qw > 0) || ((Qw - Qw) != 0)) {
									Qw = 0;
									PIw = 0;
								}
								if ((Qo > 0) || ((Qo - Qo) != 0)) {
									Qo = 0;
									PIo = 0;
								}
								if ((Qg > 0) || ((Qg - Qg) != 0)) {
									Qg = 0;
									PIg = 0;
								}
							}

							/*Qw = 0;
							Qo = 0;// 6.553168256220581e-07 / Nz;
							Qg = 0;							
							PIw = 0;
							PIo = 0;
							PIg = 0;*/

							Qoprod = Qo + Qg;
							QoProduced = Qo;
						}

						else if ((welli[i][0] == 5) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {		//Constant Gas Rate
							SSo1 = 0;
							for (j = welli[i][3]; j <= welli[i][4]; j++) {
								S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
								SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][Iz][BMU][1];
								S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
								SSo1 += fblockFProps[Ix][Iy][j][RO][1] * S2*frelPerm[Ix][Iy][j][2] / fblockFProps[Ix][Iy][Iz][BMU][1];
							}
							S1 = gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][0] * perm[Ix][Iy][Iz][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);

							if (SSo1) {
								if (SURFACE_RATES) Qg = -S1 * gasRateCh(Ix, Iy, Iz, (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * blockFProps[Ix][Iy][Iz][BMU][1]) / (relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * blockFProps[Ix][Iy][Iz][BMU][0]))*wellf[i][1] * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / (blockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
								else Qg = -S1 * wellf[i][1] * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / (blockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
							}
							Qw = Qg * relPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*blockFProps[Ix][Iy][Iz][BMU][1] / (relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * watMu);
							Qo = Qg * relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * blockFProps[Ix][Iy][Iz][BMU][1] / (relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * blockFProps[Ix][Iy][Iz][BMU][0]);

							//Re = 0.14*sqrt(sqrt(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0])*gridDim[Ix] * gridDim[Ix] + sqrt(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1])*gridDim[Nx + Iy] * gridDim[Nx + Iy]);
							//Re /= 0.5*(pow(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0], 0.25) + pow(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1], 0.25));
							//Re = Calc_Re(Ix, Iy, Iz, i);
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][1] * perm[Ix][Iy][Iz][0]) / (log(Re / wellf[i][3]) + wellf[i][2]);
							Pwf = P[Ix + 1][Iy + 1][Iz + 1][2] - Qg / (S1*blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / blockFProps[Ix][Iy][Iz][BMU][1]);

							if ((wellf[i][1]) && (Pwf < wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								PIw = S1 * watRo*WAT_M_RO*relPerm[Ix][Iy][Iz][0] / watMu;
								PIo = S1 * blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / blockFProps[Ix][Iy][Iz][BMU][0];
								PIg = S1 * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / blockFProps[Ix][Iy][Iz][BMU][1];

								Qw = PIw * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][0]);
								Qo = PIo * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][1]);
								Qg = PIg * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][2]);

								if ((Qw > 0) || ((Qw - Qw) != 0)) {
									Qw = 0;
									PIw = 0;
								}
								if ((Qo > 0) || ((Qo - Qo) != 0)) {
									Qo = 0;
									PIo = 0;
								}
								if ((Qg > 0) || ((Qg - Qg) != 0)) {
									Qg = 0;
									PIg = 0;
								}
							}
						}

						else if ((welli[i][0] == 6) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {		//Constant Total Production Rate
							SSw = 0;
							SSo = 0;
							SSg = 0;
							SSo1 = 0;
							for (j = welli[i][3]; j <= welli[i][4]; j++) {
								S1 = ((relPerm[Ix][Iy][j][0] / watMu) + (relPerm[Ix][Iy][j][1] / blockFProps[Ix][Iy][j][BMU][0]) + (relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][j][BMU][1]));
								SSw += (relPerm[Ix][Iy][j][0] / watMu) / S1;
								SSo += (relPerm[Ix][Iy][j][1] / blockFProps[Ix][Iy][j][BMU][0]) / S1;
								SSg += (relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][j][BMU][1]) / S1;

								S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
								SSo1 += blockFProps[Ix][Iy][j][RO][0] * S2*relPerm[Ix][Iy][j][1] / blockFProps[Ix][Iy][Iz][BMU][0];

								S1 = ((frelPerm[Ix][Iy][j][0] / watMu) + (frelPerm[Ix][Iy][j][1] / fblockFProps[Ix][Iy][j][BMU][0]) + (frelPerm[Ix][Iy][j][2] / fblockFProps[Ix][Iy][j][BMU][1]));
								SSw += (frelPerm[Ix][Iy][j][0] / watMu) / S1;
								SSo += (frelPerm[Ix][Iy][j][1] / fblockFProps[Ix][Iy][j][BMU][0]) / S1;
								SSg += (frelPerm[Ix][Iy][j][2] / fblockFProps[Ix][Iy][j][BMU][1]) / S1;

								S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
								SSo1 += fblockFProps[Ix][Iy][j][RO][0] * S2*frelPerm[Ix][Iy][j][1] / fblockFProps[Ix][Iy][Iz][BMU][0];

							}
							QoP = SSo * wellf[i][0] / (SSw + SSo + SSg);

							S1 = gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][0] * perm[Ix][Iy][Iz][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
							if (SSo1) Qo = -S1 * QoP*blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / (blockFProps[Ix][Iy][Iz][BMU][0] * SSo1);
							Qw = Qo * relPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*blockFProps[Ix][Iy][Iz][BMU][0] / (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * watMu);
							Qg = Qo * relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * blockFProps[Ix][Iy][Iz][BMU][0] / (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * blockFProps[Ix][Iy][Iz][BMU][1]);


							//Re = 0.14*sqrt(sqrt(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0])*gridDim[Ix] * gridDim[Ix] + sqrt(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1])*gridDim[Nx + Iy] * gridDim[Nx + Iy]);
							//Re /= 0.5*(pow(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0], 0.25) + pow(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1], 0.25));
							//Re = Calc_Re(Ix, Iy, Iz, i);
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][1] * perm[Ix][Iy][Iz][0]) / (log(Re / wellf[i][3]) + wellf[i][2]);
							Pwf = P[Ix + 1][Iy + 1][Iz + 1][1] - (Qw + Qo + Qg) / (S1*(watRo*WAT_M_RO*relPerm[Ix][Iy][Iz][0] / watMu + blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / blockFProps[Ix][Iy][Iz][BMU][0] + blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / blockFProps[Ix][Iy][Iz][BMU][1]));

							if ((wellf[i][1]) && (Pwf < wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								PIw = S1 * watRo*WAT_M_RO*relPerm[Ix][Iy][Iz][0] / watMu;
								PIo = S1 * blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / blockFProps[Ix][Iy][Iz][BMU][0];
								PIg = S1 * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / blockFProps[Ix][Iy][Iz][BMU][1];

								Qw = PIw * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][0]);
								Qo = PIo * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][1]);
								Qg = PIg * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][2]);

								if ((Qw > 0) || ((Qw - Qw) != 0)) {
									Qw = 0;
									PIw = 0;
								}
								if ((Qo > 0) || ((Qo - Qo) != 0)) {
									Qo = 0;
									PIo = 0;
								}
								if ((Qg > 0) || ((Qg - Qg) != 0)) {
									Qg = 0;
									PIg = 0;
								}
							}
						}

						else if ((welli[i][0] == 7) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {			//Constant Water Injection Rate
							SSw = 0;
							for (j = welli[i][3]; j <= welli[i][4]; j++) {
								S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
								SSo1 += S2 * relPerm[Ix][Iy][j][0];
								S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
								SSo1 += S2 * frelPerm[Ix][Iy][j][0];
							}
							S1 = gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][0] * perm[Ix][Iy][Iz][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
							if (SSw) Qw = S1 * wellf[i][0] * relPerm[Ix][Iy][Iz][1] / SSw;

							//Re = 0.14*sqrt(sqrt(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0])*gridDim[Ix] * gridDim[Ix] + sqrt(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1])*gridDim[Nx + Iy] * gridDim[Nx + Iy]);
							//Re /= 0.5*(pow(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0], 0.25) + pow(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1], 0.25));
							//Re = Calc_Re(Ix, Iy, Iz, i);
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][1] * perm[Ix][Iy][Iz][0]) / (log(Re / wellf[i][3]) + wellf[i][2]);
							Pwf = P[Ix + 1][Iy + 1][Iz + 1][0] - Qw / (S1*watRo*WAT_M_RO * relPerm[Ix][Iy][Iz][1] / watMu);

							if ((wellf[i][1]) && (Pwf > wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								PIw = S1 * watRo*WAT_M_RO*relPerm[Ix][Iy][Iz][0] / watMu;
								Qw = PIw * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][0]);

								if ((Qw < 0) || ((Qw - Qw) != 0)) {
									Qw = 0;
									PIw = 0;
								}
							}
						}

						else if ((welli[i][0] == 8) && (((fabs(simTime - wellf[i][Nc + 4]) <= TSTEPIF) || (fabs(simTime - wellf[i][Nc + 5]) <= TSTEPIF)) || ((simTime >= wellf[i][Nc + 4]) && (simTime <= wellf[i][Nc + 5])))) {			//Constant Gas Injection Rate
							for (j = 0; j < Nc; j++) IComp[j] = wellf[i][4 + j];
							FlashInjection(IComp, wellf[i][1], IOComp, IGComp, iOF, iGF, iOD, iGD, iOV, iGV);
							//S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][1] * perm[Ix][Iy][Iz][0]) / (log(Re / wellf[i][3]) + wellf[i][2]);
							if (Re <= wellf[i][3])
								Re += wellf[i][3];

							SSo1 = 0;
							for (j = welli[i][3]; j <= welli[i][4]; j++) {
								S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
								//SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][Iz][BMU][1];
								//SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*sgt[Nsgt-1][1] / blockFProps[Ix][Iy][Iz][BMU][1];
								SSo1 += S2;
								S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
								//SSo1 += fblockFProps[Ix][Iy][j][RO][1] * S2*frelPerm[Ix][Iy][j][2] / fblockFProps[Ix][Iy][Iz][BMU][1];
								//SSo1 += fblockFProps[Ix][Iy][j][RO][1] * S2*sgt[Nsgt-1][1] / fblockFProps[Ix][Iy][Iz][BMU][1];
								SSo1 += S2;
							}
							S1 = gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][0] * perm[Ix][Iy][Iz][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);

							//if (SSo1) Qg = S1*wellf[i][0] * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / (blockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
							//if (SSo1) Qg = S1*wellf[i][0] * blockFProps[Ix][Iy][Iz][RO][1] * sgt[Nsgt - 1][1] / (blockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
							if (SSo1) Qg = S1 * wellf[i][0] / SSo1;
							if (SSo1) Qo = Qg * iOF / iGF;
							//Re = 0.14*sqrt(sqrt(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0])*gridDim[Ix] * gridDim[Ix] + sqrt(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1])*gridDim[Nx + Iy] * gridDim[Nx + Iy]);
							//Re /= 0.5*(pow(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0], 0.25) + pow(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1], 0.25));



							//Re = Calc_Re(Ix, Iy, Iz, i);

							//Pwf = P[Ix + 1][Iy + 1][Iz + 1][2] - Qg / (S1*blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / blockFProps[Ix][Iy][Iz][BMU][1]);
							//Pwf = P[Ix + 1][Iy + 1][Iz + 1][2] - Qg / (S1*blockFProps[Ix][Iy][Iz][RO][1] * sgt[Nsgt - 1][1] / blockFProps[Ix][Iy][Iz][BMU][1]);
							Pwf = P[Ix + 1][Iy + 1][Iz + 1][2] - Qg / (S1*iGD * sgt[Nsgt - 1][1] / iGV);

							if ((wellf[i][1]) && (Pwf > wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								PIg = S1 * iGD * sgt[Nsgt - 1][1] * iGF / iGV;
								Qg = PIg * (wellf[i][1] - P[Ix + 1][Iy + 1][Iz + 1][2]);
								//PIo = S1*iOD * swt[0][2]*iOF / iOV;
								PIo = PIg * iOF / iGF;
								Qo = PIo * (wellf[i][1] - P[Ix + 1][Iy + 1][Iz + 1][2]);

								if ((Qo < 0) || ((Qo - Qo) != 0)) {
									Qo = 0;
									PIo = 0;
								}
								if ((Qg < 0) || ((Qg - Qg) != 0)) {
									Qg = 0;
									PIg = 0;
								}
							}

							if (P[Ix + 1][Iy + 1][Iz + 1][1] > WELL_MAX_P) {
								Qw = 0;
								Qo = 0;
								Qg = 0;
								IOComp[0] = 0;
								IOComp[1] = 0;
								IGComp[0] = 0;
								IGComp[1] = 0;
								PIw = 0;
								PIo = 0;
								PIg = 0;
							}

							QgInjected = Qg;


							QgInj = Qg;

							iWell = i;
							gasInjStat = -1;

							Qginj += Qg + Qo;
						}


					}
					QwT += Qw;
					QoT += Qo;
					QgT += Qg;
				}




#pragma endregion

				if (BENo < (Nc - 1)) {
					i = BENo;

					LSide = (Vb / Dt)*(porpor*(comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * sat[Ix][Iy][Iz][1] + comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * sat[Ix][Iy][Iz][2]) - preProp[Ix][Iy][Iz][i]);
					RSide = comp[(Ix + transS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][0][0] * (P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) - comp[(Ix - 1 + transS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix][Iy + 1][Iz + 1][0][0] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);
					RSide += comp[Ix][(Iy + transS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][0][1] * (P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) - comp[Ix][(Iy - 1 + transS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy][Iz + 1][0][1] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);
					RSide += comp[Ix][Iy][(Iz + transS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][0][2] * (P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) - comp[Ix][Iy][(Iz - 1 + transS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz][0][2] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);
					RSide += comp[(Ix + transS[Ix + 1][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][1][0] * (P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) - comp[(Ix - 1 + transS[Ix][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * trans[Ix][Iy + 1][Iz + 1][1][0] * (P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);
					RSide += comp[Ix][(Iy + transS[Ix + 1][Iy + 1][Iz + 1][1][1])][Iz][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][1][1] * (P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) - comp[Ix][(Iy - 1 + transS[Ix + 1][Iy][Iz + 1][1][1])][Iz][i][1] * trans[Ix + 1][Iy][Iz + 1][1][1] * (P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);
					RSide += comp[Ix][Iy][(Iz + transS[Ix + 1][Iy + 1][Iz + 1][1][2])][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][1][2] * (P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) - comp[Ix][Iy][(Iz - 1 + transS[Ix + 1][Iy + 1][Iz][1][2])][i][1] * trans[Ix + 1][Iy + 1][Iz][1][2] * (P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);

					RSide += comp[(Ix + transS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][2][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - comp[(Ix - 1 + transS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix][Iy + 1][Iz + 1][2][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
					RSide += comp[Ix][(Iy + transS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][2][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - comp[Ix][(Iy - 1 + transS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy][Iz + 1][2][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
					RSide += comp[Ix][Iy][(Iz + transS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][2][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]) - comp[Ix][Iy][(Iz - 1 + transS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz][2][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
					RSide += comp[(Ix + transS[Ix + 1][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][3][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - comp[(Ix - 1 + transS[Ix][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * trans[Ix][Iy + 1][Iz + 1][3][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
					RSide += comp[Ix][(Iy + transS[Ix + 1][Iy + 1][Iz + 1][1][1])][Iz][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][3][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - comp[Ix][(Iy - 1 + transS[Ix + 1][Iy][Iz + 1][1][1])][Iz][i][1] * trans[Ix + 1][Iy][Iz + 1][3][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
					RSide += comp[Ix][Iy][(Iz + transS[Ix + 1][Iy + 1][Iz + 1][1][2])][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][3][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]) - comp[Ix][Iy][(Iz - 1 + transS[Ix + 1][Iy + 1][Iz][1][2])][i][1] * trans[Ix + 1][Iy + 1][Iz][3][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);

					////////////////////////////Transfer Function 

					//	if (comp[Ix][Iy][Iz][i][0] > fcomp[Ix][Iy][Iz][i][0]) f_m_diffusion[0] = diffusion[Ix][Iy][Iz][i][0];
					//else f_m_diffusion[0] = fdiffusion[Ix][Iy][Iz][i][0];

					//		if (comp[Ix][Iy][Iz][i][1] > fcomp[Ix][Iy][Iz][i][1]) f_m_diffusion[1] = diffusion[Ix][Iy][Iz][i][1];
					//	else f_m_diffusion[1] = fdiffusion[Ix][Iy][Iz][i][1];

					// Rside Tran func
					RSide += ZERO_CONV * SI_C *comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
					RSide += ZERO_CONV * SI_C *comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor) / (porpor + fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (1))//only Liq in Fracture & Matrix
						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (-1))//only Gas in Fracture & Matrix
						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0)) {
						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);

						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

					}

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);

						//RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * fporpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
					}

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (1)) {
						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);

						//RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * fporpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
					}

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1)) {
						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);

						//RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * fporpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);

						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
					}

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1)) {
						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);

						//RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * fporpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
					}

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0)) {
						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);

						//RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * fporpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);

						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
					}

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0)) {
						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);

						//RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * fporpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
					}





					if (iWell == (-1)) {
						gComp = comp[Ix][Iy][Iz][i][1];
						oComp = comp[Ix][Iy][Iz][i][0];
					}
					else {
						if (welli[iWell][0] == 3) {
							gComp = IGComp[i];
							oComp = IOComp[i];
						}
						else if (welli[iWell][0] == 8) {
							//gComp = wellf[iWell][i + 4];
							gComp = IGComp[i];
							oComp = IOComp[i];
						}
					}

					RSide += oComp * Qo + gComp * Qg;


					//jac[BLNo+Nc+i][BLNo+(2*Nc+2)]=dLsidedSo;
					if (phaseStat[Ix][Iy][Iz] == (-1)) dCoefl = 0;
					else dCoefl = 1;
					if (phaseStat[Ix][Iy][Iz] == 1) dCoefg = 0;
					else dCoefg = 1;





					if (Ix<(Nx - 1)) {

						//////////////////////////////////////////////////////////
						/////////////////////////////////////////////////////////
						if (phaseStat[Ix + 1][Iy][Iz] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][RO][0] * gridDim[Ix + 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BMU][0] * gridDim[Ix + 1] * Coef;


						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BGAM][0] * gridDim[Ix + 1] * Coef) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

						porpor2 = porosity[Ix + 1][Iy][Iz] * (1 + cpor * (P[Ix + 2][Iy + 1][Iz + 1][1] - refP) + dcpor * (P[Ix + 2][Iy + 1][Iz + 1][1] - refP)*(P[Ix + 2][Iy + 1][Iz + 1][1] - refP));

						if (comp[Ix + 1][Iy][Iz][i][0]>comp[Ix][Iy][Iz][i][0]) {
							DupStream = diffusion[Ix + 1][Iy][Iz][i][0];
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][0];
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix + 1][Iy][Iz] < 1e-10)) DupStream = 0;
						AAd = blockFProps[Ix + 1][Iy][Iz][RO][0] * gridDim[Ix + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] * dCoefl;
						AAd *= (sat[Ix + 1][Iy][Iz][1] * gridDim[Ix + 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Ix] * dCoefl) / (gridDim[Ix + 1] + gridDim[Ix]);
						BBd = tor[Ix + 1][Iy][Iz] * gridDim[Ix + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Ix] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz] / (gridDim[Ix + 1] + gridDim[Ix]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = comp[Ix + 1][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0];
						RSide += DTran * DeltaX;


						if (phaseStat[Ix + 1][Iy][Iz] == 1) Coef = 0;
						else Coef = 1;
						Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][RO][1] * gridDim[Ix + 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BMU][1] * gridDim[Ix + 1] * Coef;
						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BGAM][1] * gridDim[Ix + 1] * Coef) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

						//////////////////////////////////////////////////////
						if (comp[Ix + 1][Iy][Iz][i][1]>comp[Ix][Iy][Iz][i][1]) {
							DupStream = diffusion[Ix + 1][Iy][Iz][i][1];
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][1];
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix + 1][Iy][Iz] < 1e-10)) DupStream = 0;
						AAd = blockFProps[Ix + 1][Iy][Iz][RO][1] * gridDim[Ix + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] * dCoefg;
						AAd *= (sat[Ix + 1][Iy][Iz][2] * gridDim[Ix + 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Ix] * dCoefg) / (gridDim[Ix + 1] + gridDim[Ix]);
						BBd = tor[Ix + 1][Iy][Iz] * gridDim[Ix + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Ix] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Nx+Iy]*gridDim[Nx+Ny+Iz]/(gridDim[Ix+1]+gridDim[Ix]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = comp[Ix + 1][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1];
						RSide += DTran * DeltaX;

						//////////////////////////////////////////////////////


					}

					if (Ix>0) {
						if (phaseStat[Ix - 1][Iy][Iz] == (-1)) Coef = 0;
						else Coef = 1;
						Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][RO][0] * gridDim[Ix - 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][BMU][0] * gridDim[Ix - 1] * Coef;

						porpor2 = porosity[Ix - 1][Iy][Iz] * (1 + cpor * (P[Ix][Iy + 1][Iz + 1][1] - refP) + dcpor * (P[Ix][Iy + 1][Iz + 1][1] - refP)*(P[Ix][Iy + 1][Iz + 1][1] - refP));

						if (comp[Ix - 1][Iy][Iz][i][0]>comp[Ix][Iy][Iz][i][0]) {
							DupStream = diffusion[Ix - 1][Iy][Iz][i][0];
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][0];
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix - 1][Iy][Iz] < 1e-10)) DupStream = 0;
						AAd = blockFProps[Ix - 1][Iy][Iz][RO][0] * gridDim[Ix - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] * dCoefl;
						AAd *= (sat[Ix - 1][Iy][Iz][1] * gridDim[Ix - 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Ix] * dCoefl) / (gridDim[Ix - 1] + gridDim[Ix]);
						BBd = tor[Ix - 1][Iy][Iz] * gridDim[Ix - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Ix] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz] / (gridDim[Ix - 1] + gridDim[Ix]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = comp[Ix][Iy][Iz][i][0] - comp[Ix - 1][Iy][Iz][i][0];
						RSide -= DTran * DeltaX;

						if (phaseStat[Ix - 1][Iy][Iz] == 1) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][RO][1] * gridDim[Ix - 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][BMU][1] * gridDim[Ix - 1] * Coef;

						if (comp[Ix - 1][Iy][Iz][i][1]>comp[Ix][Iy][Iz][i][1]) {
							DupStream = diffusion[Ix - 1][Iy][Iz][i][1];
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][1];
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix - 1][Iy][Iz] < 1e-10)) DupStream = 0;
						AAd = blockFProps[Ix - 1][Iy][Iz][RO][1] * gridDim[Ix - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] * dCoefg;
						AAd *= (sat[Ix - 1][Iy][Iz][2] * gridDim[Ix - 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Ix] * dCoefg) / (gridDim[Ix - 1] + gridDim[Ix]);
						BBd = tor[Ix - 1][Iy][Iz] * gridDim[Ix - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Ix] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Nx+Iy]*gridDim[Nx+Ny+Iz]/(gridDim[Ix-1]+gridDim[Ix]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = comp[Ix][Iy][Iz][i][1] - comp[Ix - 1][Iy][Iz][i][1];
						RSide -= DTran * DeltaX;
					}

					if (Iy<(Ny - 1)) {
						if (phaseStat[Ix][Iy + 1][Iz] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][RO][0] * gridDim[Nx + Iy + 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][BMU][0] * gridDim[Nx + Iy + 1] * Coef;
						porpor2 = porosity[Ix][Iy + 1][Iz] * (1 + cpor * (P[Ix + 1][Iy + 2][Iz + 1][1] - refP) + dcpor * (P[Ix + 1][Iy + 2][Iz + 1][1] - refP)*(P[Ix + 1][Iy + 2][Iz + 1][1] - refP));

						if (comp[Ix][Iy + 1][Iz][i][0]>comp[Ix][Iy][Iz][i][0]) {
							DupStream = diffusion[Ix][Iy + 1][Iz][i][0];
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][0];
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix][Iy + 1][Iz] < 1e-10)) DupStream = 0;
						AAd = blockFProps[Ix][Iy + 1][Iz][RO][0] * gridDim[Nx + Iy + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] * dCoefl;
						AAd *= (sat[Ix][Iy + 1][Iz][1] * gridDim[Nx + Iy + 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Nx + Iy] * dCoefl) / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
						BBd = tor[Ix][Iy + 1][Iz] * gridDim[Nx + Iy + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Iy] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Ix] * gridDim[Nx + Ny + Iz] / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = comp[Ix][Iy + 1][Iz][i][0] - comp[Ix][Iy][Iz][i][0];
						RSide += DTran * DeltaX;

						if (phaseStat[Ix][Iy + 1][Iz] == 1) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][RO][1] * gridDim[Nx + Iy + 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][BMU][1] * gridDim[Nx + Iy + 1] * Coef;

						/////////////////////////////////////////////////////////////////////////////
						if (comp[Ix][Iy + 1][Iz][i][1]>comp[Ix][Iy][Iz][i][1]) {
							DupStream = diffusion[Ix][Iy + 1][Iz][i][1];
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][1];
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix][Iy + 1][Iz] < 1e-10)) DupStream = 0;
						AAd = blockFProps[Ix][Iy + 1][Iz][RO][1] * gridDim[Nx + Iy + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] * dCoefg;
						AAd *= (sat[Ix][Iy + 1][Iz][2] * gridDim[Nx + Iy + 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Nx + Iy] * dCoefg) / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
						BBd = tor[Ix][Iy + 1][Iz] * gridDim[Nx + Iy + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Iy] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Ix]*gridDim[Nx+Ny+Iz]/(gridDim[Nx+Iy+1]+gridDim[Nx+Iy]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = comp[Ix][Iy + 1][Iz][i][1] - comp[Ix][Iy][Iz][i][1];
						RSide += DTran * DeltaX;
					}

					if (Iy>0) {
						if (phaseStat[Ix][Iy - 1][Iz] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][RO][0] * gridDim[Nx + Iy - 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][BMU][0] * gridDim[Nx + Iy - 1] * Coef;

						porpor2 = porosity[Ix][Iy - 1][Iz] * (1 + cpor * (P[Ix + 1][Iy][Iz + 1][1] - refP) + dcpor * (P[Ix + 1][Iy][Iz + 1][1] - refP)*(P[Ix + 1][Iy][Iz + 1][1] - refP));
						if (comp[Ix][Iy - 1][Iz][i][0]>comp[Ix][Iy][Iz][i][0]) {
							DupStream = diffusion[Ix][Iy - 1][Iz][i][0];
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][0];
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix][Iy - 1][Iz] < 1e-10)) DupStream = 0;
						AAd = blockFProps[Ix][Iy - 1][Iz][RO][0] * gridDim[Nx + Iy - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] * dCoefl;
						AAd *= (sat[Ix][Iy - 1][Iz][1] * gridDim[Nx + Iy - 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Nx + Iy] * dCoefl) / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
						BBd = tor[Ix][Iy - 1][Iz] * gridDim[Nx + Iy - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Iy] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Ix] * gridDim[Nx + Ny + Iz] / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = comp[Ix][Iy][Iz][i][0] - comp[Ix][Iy - 1][Iz][i][0];
						RSide -= DTran * DeltaX;

						if (phaseStat[Ix][Iy - 1][Iz] == 1) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][RO][1] * gridDim[Nx + Iy - 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][BMU][1] * gridDim[Nx + Iy - 1] * Coef;

						if (comp[Ix][Iy - 1][Iz][i][1]>comp[Ix][Iy][Iz][i][1]) {
							DupStream = diffusion[Ix][Iy - 1][Iz][i][1];
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][1];
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix][Iy - 1][Iz] < 1e-10)) DupStream = 0;
						AAd = blockFProps[Ix][Iy - 1][Iz][RO][1] * gridDim[Nx + Iy - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] * dCoefg;
						AAd *= (sat[Ix][Iy - 1][Iz][2] * gridDim[Nx + Iy - 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Nx + Iy] * dCoefg) / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
						BBd = tor[Ix][Iy - 1][Iz] * gridDim[Nx + Iy - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Iy] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Ix]*gridDim[Nx+Ny+Iz]/(gridDim[Nx+Iy-1]+gridDim[Nx+Iy]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = comp[Ix][Iy][Iz][i][1] - comp[Ix][Iy - 1][Iz][i][1];
						RSide -= DTran * DeltaX;
					}

					if (Iz<(Nz - 1)) {
						if (phaseStat[Ix][Iy][Iz + 1] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][RO][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][BMU][0] * gridDim[Nx + Ny + Iz + 1] * Coef;

						porpor2 = porosity[Ix][Iy][Iz + 1] * (1 + cpor * (P[Ix + 1][Iy + 1][Iz + 2][1] - refP) + dcpor * (P[Ix + 1][Iy + 1][Iz + 2][1] - refP)*(P[Ix + 1][Iy + 1][Iz + 2][1] - refP));
						if (comp[Ix][Iy][Iz + 1][i][0]>comp[Ix][Iy][Iz][i][0]) {
							DupStream = diffusion[Ix][Iy][Iz + 1][i][0];
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][0];
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix][Iy][Iz + 1] < 1e-10)) DupStream = 0;
						AAd = blockFProps[Ix][Iy][Iz + 1][RO][0] * gridDim[Nx + Ny + Iz + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] * dCoefl;
						AAd *= (sat[Ix][Iy][Iz + 1][1] * gridDim[Nx + Ny + Iz + 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Nx + Ny + Iz] * dCoefl) / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
						BBd = tor[Ix][Iy][Iz + 1] * gridDim[Nx + Ny + Iz + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Ny + Iz] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Ix] * gridDim[Nx + Iy] / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = comp[Ix][Iy][Iz + 1][i][0] - comp[Ix][Iy][Iz][i][0];
						RSide += DTran * DeltaX;

						if (phaseStat[Ix][Iy][Iz + 1] == 1) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][RO][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][BMU][1] * gridDim[Nx + Ny + Iz + 1] * Coef;

						if (comp[Ix][Iy][Iz + 1][i][1]>comp[Ix][Iy][Iz][i][1]) {
							DupStream = diffusion[Ix][Iy][Iz + 1][i][1];
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][1];
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix][Iy][Iz + 1] < 1e-10)) DupStream = 0;
						AAd = blockFProps[Ix][Iy][Iz + 1][RO][1] * gridDim[Nx + Ny + Iz + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] * dCoefg;
						AAd *= (sat[Ix][Iy][Iz + 1][2] * gridDim[Nx + Ny + Iz + 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Nx + Ny + Iz] * dCoefg) / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
						BBd = tor[Ix][Iy][Iz + 1] * gridDim[Nx + Ny + Iz + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Ny + Iz] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Ix]*gridDim[Nx+Iy]/(gridDim[Nx+Ny+Iz+1]+gridDim[Nx+Ny+Iz]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = comp[Ix][Iy][Iz + 1][i][1] - comp[Ix][Iy][Iz][i][1];
						RSide += DTran * DeltaX;
					}

					if (Iz>0) {
						if (phaseStat[Ix][Iy][Iz - 1] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][RO][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][BMU][0] * gridDim[Nx + Ny + Iz - 1] * Coef;

						porpor2 = porosity[Ix][Iy][Iz - 1] * (1 + cpor * (P[Ix + 1][Iy + 1][Iz][1] - refP) + dcpor * (P[Ix + 1][Iy + 1][Iz][1] - refP)*(P[Ix + 1][Iy + 1][Iz][1] - refP));
						if (comp[Ix][Iy][Iz - 1][i][0]>comp[Ix][Iy][Iz][i][0]) {
							DupStream = diffusion[Ix][Iy][Iz - 1][i][0];
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][0];
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix][Iy][Iz - 1] < 1e-10)) DupStream = 0;
						AAd = blockFProps[Ix][Iy][Iz - 1][RO][0] * gridDim[Nx + Ny + Iz - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] * dCoefl;
						AAd *= (sat[Ix][Iy][Iz - 1][1] * gridDim[Nx + Ny + Iz - 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Nx + Ny + Iz] * dCoefl) / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
						BBd = tor[Ix][Iy][Iz - 1] * gridDim[Nx + Ny + Iz - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Ny + Iz] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Ix] * gridDim[Nx + Iy] / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = comp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz - 1][i][0];
						RSide -= DTran * DeltaX;

						if (phaseStat[Ix][Iy][Iz - 1] == 1) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][RO][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][BMU][1] * gridDim[Nx + Ny + Iz - 1] * Coef;

						if (comp[Ix][Iy][Iz - 1][i][1]>comp[Ix][Iy][Iz][i][1]) {
							DupStream = diffusion[Ix][Iy][Iz - 1][i][1];
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][1];
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix][Iy][Iz - 1] < 1e-10)) DupStream = 0;
						AAd = blockFProps[Ix][Iy][Iz - 1][RO][1] * gridDim[Nx + Ny + Iz - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] * dCoefg;
						AAd *= (sat[Ix][Iy][Iz - 1][2] * gridDim[Nx + Ny + Iz - 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Nx + Ny + Iz] * dCoefg) / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
						BBd = tor[Ix][Iy][Iz - 1] * gridDim[Nx + Ny + Iz - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Ny + Iz] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Ix]*gridDim[Nx+Iy]/(gridDim[Nx+Ny+Iz-1]+gridDim[Nx+Ny+Iz]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = comp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz - 1][i][1];
						RSide -= DTran * DeltaX;
					}

#ifdef USE_MKL_SOLVER
					MKLRHSVector[actx->LocalIndex] = RSide - LSide;
#else
					LocalF[actx->LocalIndex] = LSide - RSide;
#endif
				}
				else if (BENo < Nc) {

					LSide = (Vb / Dt)*(porpor*(blockFProps[Ix][Iy][Iz][RO][0] * sat[Ix][Iy][Iz][1] + blockFProps[Ix][Iy][Iz][RO][1] * sat[Ix][Iy][Iz][2]) - preProp[Ix][Iy][Iz][Nc - 1]);
					RSide = trans[Ix + 1][Iy + 1][Iz + 1][0][0] * (P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) - trans[Ix][Iy + 1][Iz + 1][0][0] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);
					RSide += trans[Ix + 1][Iy + 1][Iz + 1][0][1] * (P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) - trans[Ix + 1][Iy][Iz + 1][0][1] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);
					RSide += trans[Ix + 1][Iy + 1][Iz + 1][0][2] * (P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) - trans[Ix + 1][Iy + 1][Iz][0][2] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);
					RSide += trans[Ix + 1][Iy + 1][Iz + 1][1][0] * (P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) - trans[Ix][Iy + 1][Iz + 1][1][0] * (P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);
					RSide += trans[Ix + 1][Iy + 1][Iz + 1][1][1] * (P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) - trans[Ix + 1][Iy][Iz + 1][1][1] * (P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);
					RSide += trans[Ix + 1][Iy + 1][Iz + 1][1][2] * (P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) - trans[Ix + 1][Iy + 1][Iz][1][2] * (P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);

					RSide += trans[Ix + 1][Iy + 1][Iz + 1][2][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - trans[Ix][Iy + 1][Iz + 1][2][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
					RSide += trans[Ix + 1][Iy + 1][Iz + 1][2][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - trans[Ix + 1][Iy][Iz + 1][2][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
					RSide += trans[Ix + 1][Iy + 1][Iz + 1][2][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]) - trans[Ix + 1][Iy + 1][Iz][2][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
					RSide += trans[Ix + 1][Iy + 1][Iz + 1][3][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - trans[Ix][Iy + 1][Iz + 1][3][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
					RSide += trans[Ix + 1][Iy + 1][Iz + 1][3][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - trans[Ix + 1][Iy][Iz + 1][3][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
					RSide += trans[Ix + 1][Iy + 1][Iz + 1][3][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]) - trans[Ix + 1][Iy + 1][Iz][3][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);

					////////////////////////////Transfer Function


					RSide += ZERO_CONV * SI_C * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
					RSide += ZERO_CONV * SI_C * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor) / (porpor + fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));

					//////////////////////
					RSide += Qo + Qg;
#ifdef USE_MKL_SOLVER
					MKLRHSVector[actx->LocalIndex] = RSide - LSide;
#else
					LocalF[actx->LocalIndex] = LSide - RSide;
#endif

				}
				else {
					LSide = (Vb / Dt)*(porpor*watRo*WAT_M_RO*sat[Ix][Iy][Iz][0] - preProp[Ix][Iy][Iz][Nc]);
					RSide = Wtran[Ix + 1][Iy + 1][Iz + 1][0] * (P[Ix + 2][Iy + 1][Iz + 1][0] - P[Ix + 1][Iy + 1][Iz + 1][0]) - Wtran[Ix][Iy + 1][Iz + 1][0] * (P[Ix + 1][Iy + 1][Iz + 1][0] - P[Ix][Iy + 1][Iz + 1][0]);
					RSide += Wtran[Ix + 1][Iy + 1][Iz + 1][1] * (P[Ix + 1][Iy + 2][Iz + 1][0] - P[Ix + 1][Iy + 1][Iz + 1][0]) - Wtran[Ix + 1][Iy][Iz + 1][1] * (P[Ix + 1][Iy + 1][Iz + 1][0] - P[Ix + 1][Iy][Iz + 1][0]);
					RSide += Wtran[Ix + 1][Iy + 1][Iz + 1][2] * (P[Ix + 1][Iy + 1][Iz + 2][0] - P[Ix + 1][Iy + 1][Iz + 1][0]) - Wtran[Ix + 1][Iy + 1][Iz][2] * (P[Ix + 1][Iy + 1][Iz + 1][0] - P[Ix + 1][Iy + 1][Iz][0]);

					RSide += G_ACC * watRo*Wtran[Ix + 1][Iy + 1][Iz + 1][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - G_ACC * watRo*Wtran[Ix][Iy + 1][Iz + 1][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
					RSide += G_ACC * watRo*Wtran[Ix + 1][Iy + 1][Iz + 1][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - G_ACC * watRo*Wtran[Ix + 1][Iy][Iz + 1][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
					RSide += G_ACC * watRo*Wtran[Ix + 1][Iy + 1][Iz + 1][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]) - G_ACC * watRo*Wtran[Ix + 1][Iy + 1][Iz][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);

					/////////////////////////////Transfer Function


					RSide += ZERO_CONV * SI_C* watRo *WAT_M_RO * ShapeFactor_2(Ix, Iy, Iz) * f_m_relperm[0] / watMu * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) *((fP[Ix + 1][Iy + 1][Iz + 1][0] - P[Ix + 1][Iy + 1][Iz + 1][0]) + (blockFProps[Ix][Iy][Iz][BLOCK_PC][0] - fblockFProps[Ix][Iy][Iz][BLOCK_PC][0]));

					////////////////////////////////////////////
					RSide += Qw;
#ifdef USE_MKL_SOLVER
					MKLRHSVector[actx->LocalIndex] = RSide - LSide;
#else
					LocalF[actx->LocalIndex] = LSide - RSide;
#endif
				}
			}
			else if (BENo < (Nc + 2)) {
				Sxg = 0;
				for (i = 0; i < Nc; i++) Sxg += comp[Ix][Iy][Iz][i][1];
#ifdef USE_MKL_SOLVER
				MKLRHSVector[actx->LocalIndex] = 1 - Sxg;
#else
				LocalF[actx->LocalIndex] = Sxg - 1;
#endif
			}
			else if (BENo < (Nc + 3)) {
#ifdef USE_MKL_SOLVER
				MKLRHSVector[actx->LocalIndex] = 1 - sat[Ix][Iy][Iz][0] - sat[Ix][Iy][Iz][1] - sat[Ix][Iy][Iz][2];
#else
				LocalF[actx->LocalIndex] = sat[Ix][Iy][Iz][0] + sat[Ix][Iy][Iz][1] + sat[Ix][Iy][Iz][2] - 1;
#endif
			}
			else {
				std::cout << Ix << '\t' << Iy << '\t' << Iz << '\t' << BENo << "\tMatrix phase stat: " << phaseStat[Ix][Iy][Iz] << std::endl;

				TerM("Global Index Error!");
			}

			break;
		}

		
	}	



	if (((IsFracture) && ((fporosity[Ix][Iy][Iz]<1e-10))) || ((!(IsFracture)) && ((porosity[Ix][Iy][Iz]<1e-10)))) {
#ifdef USE_MKL_SOLVER
		MKLRHSVector[actx->LocalIndex] = 0;
#else
		LocalF[actx->LocalIndex] = 0;
#endif
	}
	
#ifndef USE_MKL_SOLVER
	ierr = VecRestoreArrayRead(Petsc_x, (const PetscScalar **)(&LocalX));
	CHKERRQ(ierr);
	ierr = VecRestoreArray(Petsc_f, &LocalF);
	CHKERRQ(ierr);
#endif
	

	return 0;
}


PetscErrorCode IteratorJacobian(Vec Petsc_x, Mat Petsc_B, AppCtx *actx) {


#pragma region Defs
	int Ix, Iy, Iz;
	FType Al, Bl, Zl, Zg, Ag, Bg;
	FType tl, tg, d1, d2, t1l, t1g;
	FType Cal, Cbl, Cag, Cbg;
	FType dAdxl, dBdxl, dZdxl, phiL, phiG, dAdxg, dBdxg, dZdxg;
	FType dAAdxl, dAAdxg, dBBdxl, dBBdxg, DDl, DDg, EEl, EEg, FFl, FFg;
	FType dFFdxl, dFFdxg, dEEdxl, dEEdxg, dDDdxl, dDDdxg, dPhidxl, dPhidxg;
	FType dAdpl, dBdpl, dAdpg, dBdpg, dZdpl, dZdpg;
	FType dAAdpl, dAAdpg, dBBdpl, dBBdpg, dDDdpl, dDDdpg, dFFdpl, dFFdpg, dPhidpl, dPhidpg;
	register int i, j, k, n;
	int BNo, BLNo, BENo;	//Block N.O.
	int mBLNo, CSRrowIndex;
	FType LSide, RSide, S1, SSw, SSo, SSg, Vb, porpor, Re;

	FType dLsidedp, dLsidedSo, dLsidedSg, dLsidedxl, dLsidedxg, dPordp;

	FType dRsidedxl, dRsidedxg, Surat, Makhraj, Moshtaq, dMul, dMug, dBsidedxl, dBsidedxg;
	FType Bmoshtaq, MoshtaqGama, BmoshtaqGama, tempdx, dBsidedp = 0;

	FType dRsidedp, dLsidedSw;
	FType dRsidedSg, dRsidedSw;
	FType tempSQR;
	FType Sxl, Sxg;
	FType dQdxl, dQdxg;
	int jacCol, reCol, reCol2, reCol3, reCol4, reColF1;
	FType PIw, PIo, PIg;
	FType S2, SSo1, QoP;
	FType gComp, oComp;
	int iWell;
	//static int tss = 0;
	//FType relPermO;
	FType dsw, dsgo, dsgg, dso;

	FType porpor2, DupStream, DTran;
	char dCoefl, dCoefg, Coef;
	FType dPordp2, MMd, NNd, AAd, BBd, dAAddp, dBBddp, dMMddp, DeltaX;
	FType dAAddp2, dBBddp2, dMMddp2, dDdp, dDdp2, dDiffdpl, dDiffdpg;
	FType dDiffdxl, dDiffdxg;
	FType dAAddx, dMMddx;
	FType dAAddx2, dMMddx2, dDdx, dDdx2, dRsidedSo, Pwf;
	int FracEq, MatrixEq;
	FType iOF, iGF, iOD, iGD, iOV, iGV;
	FType Mporpor, MdPordp, dRsideMdp, dRsideMdxl, dRsideMdxg, dRsideMdSo, dRsideMdSg, dRsideMdSw;
	FType fporpor, fdPordp, dRsidefdp, dRsidefdxl, dRsidefdxg, dRsidefdSo, dRsidefdSg, dRsidefdSw;


	//int MPIIndex;
	int itemp1;
	FType simTime;
	PetscErrorCode ierr;
	PetscScalar *LocalX;
	bool IsFracture;
	int JRowIndex;
	int RowNO;
	//bool AllZero;


	simTime = actx->SimulationTime;
	RowNO = actx->GlobalIndex;

	for (i = 1; i < (2 * Nx*Ny*Nz); i++) if ((actx->GlobalIndex) < preConRow[i]) break;
	BNo = i - 1;
	BENo = actx->GlobalIndex - preConRow[BNo];
	jacCol = preConRow[BNo];
	if (BNo >= (Nx*Ny*Nz)) {
		BNo -= Nx * Ny*Nz;
		IsFracture = true;
		//jacIndex = fpJHolder[Ix][Iy][Iz];
	}
	else {
		IsFracture = false;
		//jacIndex = pJHolder[Ix][Iy][Iz];
	}


	Iz = BNo / (Nx*Ny);
	itemp1 = BNo % (Nx*Ny);
	Iy = itemp1 / Nx;
	Ix = itemp1 % Nx;

#ifndef USE_MKL_SOLVER
	ierr = VecGetArrayRead(Petsc_x, (const PetscScalar **)(&LocalX));
	CHKERRQ(ierr);
#endif

	BLNo = BNo * (2 * Nc + 4);
	
	//CSRrowIndex=BLNo;
	CSRrowIndex = preConRow[Iz*(Nx*Ny) + Iy * Nx + Ix];
	
	FracEq = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + Iy * Nx + Ix];
	MatrixEq = preConRow[Iz*(Nx*Ny) + Iy * Nx + Ix];

	if ((ZERO_DIFF) && (ZERO_CONV) && (ShapeFactor_1(Ix, Iy, Iz)) && (ShapeFactor_3(Ix, Iy, Iz)) && (fphaseStat[Ix][Iy][Iz] != phaseStat[Ix][Iy][Iz])) Equilibrium_Concentrations(Ix, Iy, Iz);
	for (i = 0; i < Nc; i++) {
		EdgeComp[i][0] = 0;
		EdgeComp[i][1] = 0;
	}


#pragma  endregion

	JRowIndex = 0;
	Jac1Row[JRowIndex] = 0;
	Jac1Col[JRowIndex] = RowNO;
	JRowIndex++;


	if (IsFracture) {
		if (phaseStat[Ix][Iy][Iz] == 0) reColF1 = 0;
		else reColF1 = Nc;

		switch (fphaseStat[Ix][Iy][Iz]) {
		case -1:
			reCol = Nc;
			reCol3 = 1;

			if (BENo < (Nc + 1)) {

#pragma region sadeq

				
				Mporpor = porosity[Ix][Iy][Iz] * (1 + cpor * (P[Ix + 1][Iy + 1][Iz + 1][1] - refP) + dcpor * (P[Ix + 1][Iy + 1][Iz + 1][1] - refP)*(P[Ix + 1][Iy + 1][Iz + 1][1] - refP));
				MdPordp = porosity[Ix][Iy][Iz] * (cpor + 2 * dcpor*(P[Ix + 1][Iy + 1][Iz + 1][1] - refP));

				if (P[Ix + 1][Iy + 1][Iz + 1][1] >= fP[Ix + 1][Iy + 1][Iz + 1][1])
				{
					f_m_relperm[1] = relPerm[Ix][Iy][Iz][1];//oil relperm between matrix and fracture
					f_m_drelperm[1][1] = dRelPerm[Ix][Iy][Iz][1];//dkrodsw
					f_m_drelperm[1][2] = dRelPerm[Ix][Iy][Iz][2];//dkrodsg
					f_m_drelperm[1][4] = dRelPerm[Ix][Iy][Iz][4];//dkrodso

					f_m_drelperm[1][9] = 0;
					f_m_drelperm[1][7] = 0;
					f_m_drelperm[1][6] = 0;
				}
				else
				{
					f_m_relperm[1] = frelPerm[Ix][Iy][Iz][1];
					f_m_drelperm[1][6] = fdRelPerm[Ix][Iy][Iz][1];//fdkrofdsw
					f_m_drelperm[1][7] = fdRelPerm[Ix][Iy][Iz][2];//fdkrofdsg
					f_m_drelperm[1][9] = fdRelPerm[Ix][Iy][Iz][4];//fdkrofdso

					f_m_drelperm[1][4] = 0;
					f_m_drelperm[1][2] = 0;
					f_m_drelperm[1][1] = 0;
				}
				if (P[Ix + 1][Iy + 1][Iz + 1][2] >= fP[Ix + 1][Iy + 1][Iz + 1][2])
				{
					f_m_relperm[2] = relPerm[Ix][Iy][Iz][2];//gas relperm between matrix and fracture
					f_m_drelperm[2][3] = dRelPerm[Ix][Iy][Iz][3];//dkrgdsg

					f_m_drelperm[2][8] = 0;
				}
				else
				{
					f_m_relperm[2] = frelPerm[Ix][Iy][Iz][2];
					f_m_drelperm[2][8] = fdRelPerm[Ix][Iy][Iz][3];//fdkrgfdsg

					f_m_drelperm[2][3] = 0;
				}

				if (P[Ix + 1][Iy + 1][Iz + 1][0] >= fP[Ix + 1][Iy + 1][Iz + 1][0])
				{
					f_m_relperm[0] = relPerm[Ix][Iy][Iz][0];
					f_m_drelperm[1][0] = dRelPerm[Ix][Iy][Iz][0];//dkrwdsw

					f_m_drelperm[1][5] = 0;
				}
				else
				{
					f_m_relperm[0] = frelPerm[Ix][Iy][Iz][0];//water relperm between matrix and fracture
					f_m_drelperm[1][5] = fdRelPerm[Ix][Iy][Iz][0];//fdkrwfdsw

					f_m_drelperm[1][0] = 0;
				}
#pragma endregion

#pragma region Wells&Commons For Fracture 
				porpor = fporosity[Ix][Iy][Iz] * (1 + cpor * (fP[Ix + 1][Iy + 1][Iz + 1][1] - refP) + dcpor * (fP[Ix + 1][Iy + 1][Iz + 1][1] - refP)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - refP));
				dPordp = fporosity[Ix][Iy][Iz] * (cpor + 2 * dcpor*(fP[Ix + 1][Iy + 1][Iz + 1][1] - refP));




				Qw = 0;
				Qo = 0;
				Qg = 0;

				PIw = 0;
				PIo = 0;
				PIg = 0;

				Vb = gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz];

				iWell = -1;
				for (i = 0; i < wellNO; i++) {
					if ((Ix == welli[i][1]) && (Iy == welli[i][2]) && (Iz >= welli[i][3]) && (Iz <= welli[i][4])) {
						//Re = Calc_Re(Ix, Iy, Iz, i);
						Re = Re_f;
						if ((welli[i][0] == 0) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {
							//if ((welli[i][0] == 0) && ((fabs(simTime - wellf[i][4]) <= TSTEPIF) && (fabs(simTime - wellf[i][5]) <= TSTEPIF))) {		//Constant Pwf Pressure - Production

							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][1] * fperm[Ix][Iy][Iz][0]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);

							PIw = S1 * watRo*WAT_M_RO*frelPerm[Ix][Iy][Iz][0] / watMu;
							PIo = S1 * fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / fblockFProps[Ix][Iy][Iz][BMU][0];
							PIg = S1 * fblockFProps[Ix][Iy][Iz][RO][1] * frelPerm[Ix][Iy][Iz][2] / fblockFProps[Ix][Iy][Iz][BMU][1];

							Qw = PIw * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][0]);
							Qo = PIo * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
							Qg = PIg * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

							

							/*if ((wellf[i][1]) && ((-Qo) > wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								SSo1 = 0;
								for (j = welli[i][3]; j <= welli[i][4]; j++) {
									S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
									SSo1 += fblockFProps[Ix][Iy][j][RO][0] * S2*frelPerm[Ix][Iy][j][1] / fblockFProps[Ix][Iy][Iz][BMU][0];
									S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
									SSo1 += blockFProps[Ix][Iy][j][RO][0] * S2*relPerm[Ix][Iy][j][1] / blockFProps[Ix][Iy][Iz][BMU][0];
								}
								S1 = gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][0] * fperm[Ix][Iy][Iz][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);

								if (SSo1) {
									if (SURFACE_RATES) Qo = -S1 * oilRateCh(Ix, Iy, Iz, frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fblockFProps[Ix][Iy][Iz][BMU][0] / (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fblockFProps[Ix][Iy][Iz][BMU][1]))*wellf[i][1] * fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / (fblockFProps[Ix][Iy][Iz][BMU][0] * SSo1);
									else Qo = -S1 * wellf[i][1] * fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / (fblockFProps[Ix][Iy][Iz][BMU][0] * SSo1);
								}
								Qw = Qo * frelPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*fblockFProps[Ix][Iy][Iz][BMU][0] / (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * watMu);
								Qg = Qo * frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fblockFProps[Ix][Iy][Iz][BMU][0] / (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fblockFProps[Ix][Iy][Iz][BMU][1]);

							}*/


							if (fP[Ix + 1][Iy + 1][Iz + 1][1] < WELL_MIN_P){
								Qw = 0;
								Qo = 0;
								Qg = 0;

								PIw = 0;
								PIo = 0;
								PIg = 0;
							}
							else if ((wellf[i][1]) && ((-Qo) > wellf[i][1])) {
								Qo = -wellf[i][1];
								Qw = Qo * frelPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*fblockFProps[Ix][Iy][Iz][BMU][0] / (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * watMu);
								Qg = Qo * frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fblockFProps[Ix][Iy][Iz][BMU][0] / (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fblockFProps[Ix][Iy][Iz][BMU][1]);
								PIw = 0;
								PIo = 0;
								PIg = 0;
							}
							if ((Qw > 0) || ((Qw - Qw) != 0)) {
								Qw = 0;
								PIw = 0;
							}
							if ((Qo > 0) || ((Qo - Qo) != 0)) {
								Qo = 0;
								PIo = 0;
							}
							if ((Qg > 0) || ((Qg - Qg) != 0)) {
								Qg = 0;
								PIg = 0;
							}
							

							QoProduced = Qo;
							Qoprod += Qo + Qg;
							//MethQM += Qo * (1 - fcomp[Ix][Iy][Iz][0][0]) + Qg * (1 - fcomp[Ix][Iy][Iz][0][1]);
							//Qoprod = Qo*(1 - fcomp[Ix][Iy][Iz][0][0])+ Qg*(1 - fcomp[Ix][Iy][Iz][0][1]);
							WellCompSadeq[0] += Qo * (fcomp[Ix][Iy][Iz][0][0]) + Qg * (fcomp[Ix][Iy][Iz][0][1]);
							WellCompSadeq[1] += Qo * (fcomp[Ix][Iy][Iz][1][0]) + Qg * (fcomp[Ix][Iy][Iz][1][1]);
							WellCompSadeq[2] += Qo * (fcomp[Ix][Iy][Iz][2][0]) + Qg * (fcomp[Ix][Iy][Iz][2][1]);
							WellCompSadeq2[0] += (Qo*(fcomp[Ix][Iy][Iz][0][0]) + Qg * (fcomp[Ix][Iy][Iz][0][1]));
							WellCompSadeq2[1] += (Qo*(fcomp[Ix][Iy][Iz][1][0]) + Qg * (fcomp[Ix][Iy][Iz][1][1]));
							WellCompSadeq2[2] += (Qo*(fcomp[Ix][Iy][Iz][2][0]) + Qg * (fcomp[Ix][Iy][Iz][2][1]));
						}

						else if ((welli[i][0] == 1) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {		//Constant Pwf- Gas Production
																																																					//Re = Re_f;
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][1] * fperm[Ix][Iy][Iz][0]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);

							PIw = S1 * watRo*WAT_M_RO*frelPerm[Ix][Iy][Iz][0] / watMu;
							PIo = S1 * fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / fblockFProps[Ix][Iy][Iz][BMU][0];
							PIg = S1 * fblockFProps[Ix][Iy][Iz][RO][1] * frelPerm[Ix][Iy][Iz][2] / fblockFProps[Ix][Iy][Iz][BMU][1];

							Qw = PIw * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][0]);
							Qo = PIo * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
							Qg = PIg * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

							if ((Qw > 0) || ((Qw - Qw) != 0)) {
								Qw = 0;
								PIw = 0;
							}
							if ((Qo > 0) || ((Qo - Qo) != 0)) {
								Qo = 0;
								PIo = 0;
							}
							if ((Qg > 0) || ((Qg - Qg) != 0)) {
								Qg = 0;
								PIg = 0;
							}

							if ((wellf[i][1]) && ((-Qg) > wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								SSo1 = 0;
								for (j = welli[i][3]; j <= welli[i][4]; j++) {
									S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
									SSo1 += fblockFProps[Ix][Iy][j][RO][1] * S2*frelPerm[Ix][Iy][j][2] / fblockFProps[Ix][Iy][Iz][BMU][1];
									S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
									SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][Iz][BMU][1];
								}
								S1 = gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][0] * fperm[Ix][Iy][Iz][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);

								if (SSo1) {
									if (SURFACE_RATES) Qg = -S1 * gasRateCh(Ix, Iy, Iz, (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fblockFProps[Ix][Iy][Iz][BMU][1]) / (frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fblockFProps[Ix][Iy][Iz][BMU][0]))*wellf[i][1] * fblockFProps[Ix][Iy][Iz][RO][1] * frelPerm[Ix][Iy][Iz][2] / (fblockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
									else Qg = -S1 * wellf[i][1] * fblockFProps[Ix][Iy][Iz][RO][1] * frelPerm[Ix][Iy][Iz][2] / (fblockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
								}
								Qw = Qg * frelPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*fblockFProps[Ix][Iy][Iz][BMU][1] / (frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * watMu);
								Qo = Qg * frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fblockFProps[Ix][Iy][Iz][BMU][1] / (frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fblockFProps[Ix][Iy][Iz][BMU][0]);

							}

							//QoProd=oilRateCh2(Ix, Iy, Iz, -Qo, -Qg);
							QoProduced = Qo;
						}

						else if ((welli[i][0] == 2) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {			//Constant Pwf Pressure - Water Injection
																																																						//Re = Re_f;
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][1] * fperm[Ix][Iy][Iz][0]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);

							PIw = S1 * watRo*WAT_M_RO*frelPerm[Ix][Iy][Iz][0] / watMu;
							Qw = PIw * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][0]);


							if ((Qw < 0) || ((Qw - Qw) != 0)) {
								Qw = 0;
								PIw = 0;
							}

							if ((wellf[i][1]) && (Qw > wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								SSo1 = 0;
								for (j = welli[i][3]; j <= welli[i][4]; j++) {
									S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
									SSo1 += watRo * S2*frelPerm[Ix][Iy][j][0] / watMu;
									S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
									SSo1 += watRo * S2*relPerm[Ix][Iy][j][0] / watMu;
								}
								S1 = gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][0] * fperm[Ix][Iy][Iz][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);

								if (SSo1) Qw = S1 * wellf[i][1] * watRo*WAT_M_RO * frelPerm[Ix][Iy][Iz][0] / (watMu * SSo1);
							}
						}

						else if ((welli[i][0] == 3) && (((fabs(simTime - wellf[i][Nc + 4]) <= TSTEPIF) || (fabs(simTime - wellf[i][Nc + 5]) <= TSTEPIF)) || ((simTime >= wellf[i][Nc + 4]) && (simTime <= wellf[i][Nc + 5])))) {		//Constant Pwf Pressure - Gas Injection
																																																										//Re = Re_f;

							for (j = 0; j < Nc; j++) IComp[j] = wellf[i][4 + j];
							FlashInjection(IComp, wellf[i][0], IOComp, IGComp, iOF, iGF, iOD, iGD, iOV, iGV);
							//Re = Calc_Re(Ix, Iy, Iz, i);
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][1] * fperm[Ix][Iy][Iz][0]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
							//S2 = sgt[Nsgt-1][1] / iGV;
							//S2 = relPerm[Ix][Iy][Iz][2] / blockFProps[Ix][Iy][Iz][BMU][1];

							PIg = S1 * iGD * sgt[Nsgt - 1][1] * iGF / iGV;
							Qg = PIg * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
							//PIo = S1*iOD * swt[0][2]*iOF / iOV;
							PIo = PIg * iOF / iGF;
							Qo = PIo * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

							if ((Qo < 0) || ((Qo - Qo) != 0)) {
								Qo = 0;
								PIo = 0;
							}
							if ((Qg < 0) || ((Qg - Qg) != 0)) {
								Qg = 0;
								PIg = 0;
							}

							iWell = i;

							if ((wellf[i][1]) && (Qg > wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								SSo1 = 0;
								for (j = welli[i][3]; j <= welli[i][4]; j++) {
									S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
									//SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][Iz][BMU][1];
									SSo1 += S2;
									S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
									//SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][Iz][BMU][1];
									SSo1 += S2;
								}
								S1 = gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][0] * fperm[Ix][Iy][Iz][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);

								//if (SSo1) Qg = S1*wellf[i][1] * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / (blockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
								if (SSo1) Qg = S1 * wellf[i][1] / SSo1;
								if (SSo1) Qo = Qg * iOF / iGF;
							}

							Qginj = Qg + Qo;
						}

						else if ((welli[i][0] == 4) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {		//Constant Oil Rate
							SSo1 = 0;
							for (j = welli[i][3]; j <= welli[i][4]; j++) {
								S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
								SSo1 += fblockFProps[Ix][Iy][j][RO][0] * S2*frelPerm[Ix][Iy][j][1] / fblockFProps[Ix][Iy][Iz][BMU][0];
								S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
								SSo1 += blockFProps[Ix][Iy][j][RO][0] * S2*relPerm[Ix][Iy][j][1] / blockFProps[Ix][Iy][Iz][BMU][0];
							}
							S1 = gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][0] * fperm[Ix][Iy][Iz][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);

							if (SSo1) {
								if (SURFACE_RATES) Qo = -S1 * oilRateCh(Ix, Iy, Iz, frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fblockFProps[Ix][Iy][Iz][BMU][0] / (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fblockFProps[Ix][Iy][Iz][BMU][1]))*wellf[i][0] * fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / (fblockFProps[Ix][Iy][Iz][BMU][0] * SSo1);
								else Qo = -S1 * wellf[i][0] * fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / (fblockFProps[Ix][Iy][Iz][BMU][0] * SSo1);
							}
							Qw = Qo * frelPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*fblockFProps[Ix][Iy][Iz][BMU][0] / (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * watMu);
							Qg = Qo * frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fblockFProps[Ix][Iy][Iz][BMU][0] / (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fblockFProps[Ix][Iy][Iz][BMU][1]);

							//Re = Re_f;
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][1] * fperm[Ix][Iy][Iz][0]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
							Pwf = fP[Ix + 1][Iy + 1][Iz + 1][1] - Qo / (S1*fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / fblockFProps[Ix][Iy][Iz][BMU][0]);

							if ((wellf[i][1]) && (Pwf < wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								PIw = S1 * watRo*WAT_M_RO*frelPerm[Ix][Iy][Iz][0] / watMu;
								PIo = S1 * fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / fblockFProps[Ix][Iy][Iz][BMU][0];
								PIg = S1 * fblockFProps[Ix][Iy][Iz][RO][1] * frelPerm[Ix][Iy][Iz][2] / fblockFProps[Ix][Iy][Iz][BMU][1];

								Qw = PIw * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][0]);
								Qo = PIo * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
								Qg = PIg * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

								if ((Qw > 0) || ((Qw - Qw) != 0)) {
									Qw = 0;
									PIw = 0;
								}
								if ((Qo > 0) || ((Qo - Qo) != 0)) {
									Qo = 0;
									PIo = 0;
								}
								if ((Qg > 0) || ((Qg - Qg) != 0)) {
									Qg = 0;
									PIg = 0;
								}
							}

							/*PIw = 0;
							PIo = 0;
							PIg = 0;

							Qw = 0;
							Qo = -6.553168256220581e-07 / Nz;
							Qg = 0;
							if (fP[Ix + 1][Iy + 1][Iz + 1][1] < 10600000) Qo = 0;*/

							QoProduced = Qo;
							Qoprod = Qo + Qg;
						}

						else if ((welli[i][0] == 5) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {		//Constant Gas Rate
							SSo1 = 0;
							for (j = welli[i][3]; j <= welli[i][4]; j++) {
								S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
								SSo1 += fblockFProps[Ix][Iy][j][RO][1] * S2*frelPerm[Ix][Iy][j][2] / fblockFProps[Ix][Iy][Iz][BMU][1];
								S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
								SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][Iz][BMU][1];
							}
							S1 = gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][0] * fperm[Ix][Iy][Iz][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);

							if (SSo1) {
								if (SURFACE_RATES) Qg = -S1 * gasRateCh(Ix, Iy, Iz, (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fblockFProps[Ix][Iy][Iz][BMU][1]) / (frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fblockFProps[Ix][Iy][Iz][BMU][0]))*wellf[i][1] * fblockFProps[Ix][Iy][Iz][RO][1] * frelPerm[Ix][Iy][Iz][2] / (fblockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
								else Qg = -S1 * wellf[i][1] * fblockFProps[Ix][Iy][Iz][RO][1] * frelPerm[Ix][Iy][Iz][2] / (fblockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
							}
							Qw = Qg * frelPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*fblockFProps[Ix][Iy][Iz][BMU][1] / (frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * watMu);
							Qo = Qg * frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fblockFProps[Ix][Iy][Iz][BMU][1] / (frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fblockFProps[Ix][Iy][Iz][BMU][0]);

							//Re = Re_f;
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][1] * fperm[Ix][Iy][Iz][0]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
							Pwf = fP[Ix + 1][Iy + 1][Iz + 1][2] - Qg / (S1*fblockFProps[Ix][Iy][Iz][RO][1] * frelPerm[Ix][Iy][Iz][2] / fblockFProps[Ix][Iy][Iz][BMU][1]);

							if ((wellf[i][1]) && (Pwf < wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								PIw = S1 * watRo*WAT_M_RO*frelPerm[Ix][Iy][Iz][0] / watMu;
								PIo = S1 * fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / fblockFProps[Ix][Iy][Iz][BMU][0];
								PIg = S1 * fblockFProps[Ix][Iy][Iz][RO][1] * frelPerm[Ix][Iy][Iz][2] / fblockFProps[Ix][Iy][Iz][BMU][1];

								Qw = PIw * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][0]);
								Qo = PIo * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
								Qg = PIg * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

								if ((Qw > 0) || ((Qw - Qw) != 0)) {
									Qw = 0;
									PIw = 0;
								}
								if ((Qo > 0) || ((Qo - Qo) != 0)) {
									Qo = 0;
									PIo = 0;
								}
								if ((Qg > 0) || ((Qg - Qg) != 0)) {
									Qg = 0;
									PIg = 0;
								}
							}
						}

						else if ((welli[i][0] == 6) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {		//Constant Total Production Rate
							SSw = 0;
							SSo = 0;
							SSg = 0;
							SSo1 = 0;
							for (j = welli[i][3]; j <= welli[i][4]; j++) {
								S1 = (frelPerm[Ix][Iy][j][0] / watMu) + (frelPerm[Ix][Iy][j][1] / fblockFProps[Ix][Iy][j][BMU][0]) + (frelPerm[Ix][Iy][j][2] / fblockFProps[Ix][Iy][j][BMU][1]);
								SSw += (frelPerm[Ix][Iy][j][0] / watMu) / S1;
								SSo += (frelPerm[Ix][Iy][j][1] / fblockFProps[Ix][Iy][j][BMU][0]) / S1;
								SSg += (frelPerm[Ix][Iy][j][2] / fblockFProps[Ix][Iy][j][BMU][1]) / S1;

								S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
								SSo1 += fblockFProps[Ix][Iy][j][RO][0] * S2*frelPerm[Ix][Iy][j][1] / fblockFProps[Ix][Iy][Iz][BMU][0];

								S1 = (relPerm[Ix][Iy][j][0] / watMu) + (relPerm[Ix][Iy][j][1] / blockFProps[Ix][Iy][j][BMU][0]) + (relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][j][BMU][1]);
								SSw += (relPerm[Ix][Iy][j][0] / watMu) / S1;
								SSo += (relPerm[Ix][Iy][j][1] / blockFProps[Ix][Iy][j][BMU][0]) / S1;
								SSg += (relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][j][BMU][1]) / S1;

								S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
								SSo1 += blockFProps[Ix][Iy][j][RO][0] * S2*relPerm[Ix][Iy][j][1] / blockFProps[Ix][Iy][Iz][BMU][0];

							}
							QoP = SSo * wellf[i][0] / (SSw + SSo + SSg);

							S1 = gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][0] * fperm[Ix][Iy][Iz][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
							if (SSo1) Qo = -S1 * QoP*fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / (fblockFProps[Ix][Iy][Iz][BMU][0] * SSo1);
							Qw = Qo * frelPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*fblockFProps[Ix][Iy][Iz][BMU][0] / (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * watMu);
							Qg = Qo * frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fblockFProps[Ix][Iy][Iz][BMU][0] / (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fblockFProps[Ix][Iy][Iz][BMU][1]);


							//Re = Re_f;
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][1] * fperm[Ix][Iy][Iz][0]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
							Pwf = fP[Ix + 1][Iy + 1][Iz + 1][1] - (Qw + Qo + Qg) / (S1*(watRo*WAT_M_RO*frelPerm[Ix][Iy][Iz][0] / watMu + fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / fblockFProps[Ix][Iy][Iz][BMU][0] + fblockFProps[Ix][Iy][Iz][RO][1] * frelPerm[Ix][Iy][Iz][2] / fblockFProps[Ix][Iy][Iz][BMU][1]));

							if ((wellf[i][1]) && (Pwf < wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								PIw = S1 * watRo*WAT_M_RO*frelPerm[Ix][Iy][Iz][0] / watMu;
								PIo = S1 * fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / fblockFProps[Ix][Iy][Iz][BMU][0];
								PIg = S1 * fblockFProps[Ix][Iy][Iz][RO][1] * frelPerm[Ix][Iy][Iz][2] / fblockFProps[Ix][Iy][Iz][BMU][1];

								Qw = PIw * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][0]);
								Qo = PIo * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
								Qg = PIg * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

								if ((Qw > 0) || ((Qw - Qw) != 0)) {
									Qw = 0;
									PIw = 0;
								}
								if ((Qo > 0) || ((Qo - Qo) != 0)) {
									Qo = 0;
									PIo = 0;
								}
								if ((Qg > 0) || ((Qg - Qg) != 0)) {
									Qg = 0;
									PIg = 0;
								}
							}
						}

						else if ((welli[i][0] == 7) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {			//Constant Water Injection Rate
							SSw = 0;
							for (j = welli[i][3]; j <= welli[i][4]; j++) {
								S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
								SSo1 += S2 * frelPerm[Ix][Iy][j][0];
								S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
								SSo1 += S2 * relPerm[Ix][Iy][j][0];
							}
							S1 = gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][0] * fperm[Ix][Iy][Iz][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
							if (SSw) Qw = S1 * wellf[i][0] * frelPerm[Ix][Iy][Iz][1] / SSw;

							//Re = Re_f;
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][1] * fperm[Ix][Iy][Iz][0]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
							Pwf = fP[Ix + 1][Iy + 1][Iz + 1][0] - Qw / (S1*watRo*WAT_M_RO * frelPerm[Ix][Iy][Iz][1] / watMu);
							if ((wellf[i][1]) && (Pwf > wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								PIw = S1 * watRo*WAT_M_RO*frelPerm[Ix][Iy][Iz][0] / watMu;
								Qw = PIw * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][0]);

								if ((Qw < 0) || ((Qw - Qw) != 0)) {
									Qw = 0;
									PIw = 0;
								}
							}
						}

						else if ((welli[i][0] == 8) && (((fabs(simTime - wellf[i][Nc + 4]) <= TSTEPIF) || (fabs(simTime - wellf[i][Nc + 5]) <= TSTEPIF)) || ((simTime >= wellf[i][Nc + 4]) && (simTime <= wellf[i][Nc + 5])))) {			//Constant Gas Injection Rate
							for (j = 0; j < Nc; j++) IComp[j] = wellf[i][4 + j];
							FlashInjection(IComp, wellf[i][1], IOComp, IGComp, iOF, iGF, iOD, iGD, iOV, iGV);

							SSo1 = 0;
							for (j = welli[i][3]; j <= welli[i][4]; j++) {
								S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
								//SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][Iz][BMU][1];
								//SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*sgt[Nsgt-1][1] / blockFProps[Ix][Iy][Iz][BMU][1];
								SSo1 += S2;

								S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
								//SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][Iz][BMU][1];
								//SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*sgt[Nsgt-1][1] / blockFProps[Ix][Iy][Iz][BMU][1];
								SSo1 += S2;
							}
							S1 = gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][0] * fperm[Ix][Iy][Iz][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);

							//if (SSo1) Qg = S1*wellf[i][0] * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / (blockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
							//if (SSo1) Qg = S1*wellf[i][0] * blockFProps[Ix][Iy][Iz][RO][1] * sgt[Nsgt - 1][1] / (blockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
							if (SSo1) Qg = S1 * wellf[i][0] / SSo1;
							if (SSo1) Qo = Qg * iOF / iGF;
							//Re = 0.14*sqrt(sqrt(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0])*gridDim[Ix] * gridDim[Ix] + sqrt(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1])*gridDim[Nx + Iy] * gridDim[Nx + Iy]);
							//Re /= 0.5*(pow(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0], 0.25) + pow(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1], 0.25));



							//Re = Calc_Re(Ix, Iy, Iz, i);
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][1] * fperm[Ix][Iy][Iz][0]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
							//Pwf = P[Ix + 1][Iy + 1][Iz + 1][2] - Qg / (S1*blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / blockFProps[Ix][Iy][Iz][BMU][1]);
							//Pwf = P[Ix + 1][Iy + 1][Iz + 1][2] - Qg / (S1*blockFProps[Ix][Iy][Iz][RO][1] * sgt[Nsgt - 1][1] / blockFProps[Ix][Iy][Iz][BMU][1]);
							Pwf = fP[Ix + 1][Iy + 1][Iz + 1][2] - Qg / (S1*iGD * sgt[Nsgt - 1][1] / iGV);

							if ((wellf[i][1]) && (Pwf > wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								PIg = S1 * iGD * sgt[Nsgt - 1][1] * iGF / iGV;
								Qg = PIg * (wellf[i][1] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
								//PIo = S1*iOD * swt[0][2]*iOF / iOV;
								PIo = PIg * iOF / iGF;
								Qo = PIo * (wellf[i][1] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

								if ((Qo < 0) || ((Qo - Qo) != 0)) {
									Qo = 0;
									PIo = 0;
								}
								if ((Qg < 0) || ((Qg - Qg) != 0)) {
									Qg = 0;
									PIg = 0;
								}
							}

							if (fP[Ix + 1][Iy + 1][Iz + 1][1] > WELL_MAX_P) {
								Qw = 0;
								Qo = 0;
								Qg = 0;
								IOComp[0] = 0;
								IOComp[1] = 0;
								IGComp[0] = 0;
								IGComp[1] = 0;
								PIw = 0;
								PIo = 0;
								PIg = 0;
							}

							QgInjected = Qg;


							QgInj = Qg;

							iWell = i;
							gasInjStat = -1;

							Qginj += Qg + Qo;
						}


					}
					QwT += Qw;
					QoT += Qo;
					QgT += Qg;
				}



#pragma endregion

				if (BENo < (Nc - 1)) {
					i = BENo;

					LSide = (Vb / Dt)*(porpor*(fcomp[Ix][Iy][Iz][i][0] * fblockFProps[Ix][Iy][Iz][RO][0] * fsat[Ix][Iy][Iz][1] + fcomp[Ix][Iy][Iz][i][1] * fblockFProps[Ix][Iy][Iz][RO][1] * fsat[Ix][Iy][Iz][2]) - fpreProp[Ix][Iy][Iz][i]);
					RSide = fcomp[(Ix + ftransS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][0][0] * (fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) - fcomp[(Ix - 1 + ftransS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix][Iy + 1][Iz + 1][0][0] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);
					RSide += fcomp[Ix][(Iy + ftransS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][0][1] * (fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) - fcomp[Ix][(Iy - 1 + ftransS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy][Iz + 1][0][1] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);
					RSide += fcomp[Ix][Iy][(Iz + ftransS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][0][2] * (fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) - fcomp[Ix][Iy][(Iz - 1 + ftransS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz][0][2] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);
					RSide += fcomp[(Ix + ftransS[Ix + 1][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][1][0] * (fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]) - fcomp[(Ix - 1 + ftransS[Ix][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * ftrans[Ix][Iy + 1][Iz + 1][1][0] * (fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);
					RSide += fcomp[Ix][(Iy + ftransS[Ix + 1][Iy + 1][Iz + 1][1][1])][Iz][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][1][1] * (fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]) - fcomp[Ix][(Iy - 1 + ftransS[Ix + 1][Iy][Iz + 1][1][1])][Iz][i][1] * ftrans[Ix + 1][Iy][Iz + 1][1][1] * (fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);
					RSide += fcomp[Ix][Iy][(Iz + ftransS[Ix + 1][Iy + 1][Iz + 1][1][2])][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][1][2] * (fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]) - fcomp[Ix][Iy][(Iz - 1 + ftransS[Ix + 1][Iy + 1][Iz][1][2])][i][1] * ftrans[Ix + 1][Iy + 1][Iz][1][2] * (fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);

					RSide += fcomp[(Ix + ftransS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][2][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - fcomp[(Ix - 1 + ftransS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix][Iy + 1][Iz + 1][2][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
					RSide += fcomp[Ix][(Iy + ftransS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][2][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - fcomp[Ix][(Iy - 1 + ftransS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy][Iz + 1][2][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
					RSide += fcomp[Ix][Iy][(Iz + ftransS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][2][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]) - fcomp[Ix][Iy][(Iz - 1 + ftransS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz][2][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
					RSide += fcomp[(Ix + ftransS[Ix + 1][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][3][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - fcomp[(Ix - 1 + ftransS[Ix][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * ftrans[Ix][Iy + 1][Iz + 1][3][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
					RSide += fcomp[Ix][(Iy + ftransS[Ix + 1][Iy + 1][Iz + 1][1][1])][Iz][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][3][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - fcomp[Ix][(Iy - 1 + ftransS[Ix + 1][Iy][Iz + 1][1][1])][Iz][i][1] * ftrans[Ix + 1][Iy][Iz + 1][3][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
					RSide += fcomp[Ix][Iy][(Iz + ftransS[Ix + 1][Iy + 1][Iz + 1][1][2])][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][3][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]) - fcomp[Ix][Iy][(Iz - 1 + ftransS[Ix + 1][Iy + 1][Iz][1][2])][i][1] * ftrans[Ix + 1][Iy + 1][Iz][3][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);


					////////////////////////////Transfer Function

					//	if (comp[Ix][Iy][Iz][i][0] > fcomp[Ix][Iy][Iz][i][0]) f_m_diffusion[0] = diffusion[Ix][Iy][Iz][i][0];
					//else f_m_diffusion[0] = fdiffusion[Ix][Iy][Iz][i][0];

					//		if (comp[Ix][Iy][Iz][i][1] > fcomp[Ix][Iy][Iz][i][1]) f_m_diffusion[1] = diffusion[Ix][Iy][Iz][i][1];
					//	else f_m_diffusion[1] = fdiffusion[Ix][Iy][Iz][i][1];
					//Transfer function Rside 
					RSide -= ZERO_CONV * SI_C *comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
					RSide -= ZERO_CONV * SI_C * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor) / (porpor + Mporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (1))//only Liq in Fracture & Matrix
						RSide -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (-1))//only Gas in Fracture & Matrix
						RSide -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0)) {
						RSide -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);

						RSide -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

					}

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
						//RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);

						RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
					}

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (1)) {
						//RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);

						RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
					}

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1)) {
						//RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);

						RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);

						RSide -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
					}

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1)) {
						RSide -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

						//RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);

						RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
					}

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0)) {
						//RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);

						RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);

						RSide -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
					}

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0)) {
						RSide -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

						//RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);

						RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
					}
					//	
					/////////////////////////////////////////
					if (iWell == (-1)) {
						gComp = fcomp[Ix][Iy][Iz][i][1];
						oComp = fcomp[Ix][Iy][Iz][i][0];
					}
					else {
						if (welli[iWell][0] == 3) {
							gComp = IGComp[i];
							oComp = IOComp[i];
						}
						else if (welli[iWell][0] == 8) {
							//gComp = wellf[iWell][i + 4];
							gComp = IGComp[i];
							oComp = IOComp[i];
						}
					}

					/*
					if (iWell == (-1)) {
					gComp = fcomp[Ix][Iy][Iz][i][1];
					}
					else {
					if (welli[iWell][0] == 3) {
					gComp = wellf[iWell][i + 4];
					}
					else if (welli[iWell][0] == 8) {
					gComp = wellf[iWell][i + 4];
					}
					}*/

					RSide += oComp * Qo + gComp * Qg;

					dLsidedp = (Vb / Dt)*(fcomp[Ix][Iy][Iz][i][0] * fsat[Ix][Iy][Iz][1] * (fblockFProps[Ix][Iy][Iz][RO][0] * dPordp + fdE[Ix][Iy][Iz][Nc][0] * porpor) + fcomp[Ix][Iy][Iz][i][1] * fsat[Ix][Iy][Iz][2] * (fblockFProps[Ix][Iy][Iz][RO][1] * dPordp + fdE[Ix][Iy][Iz][Nc][1] * porpor));
					dLsidedSo = (Vb / Dt)*(fcomp[Ix][Iy][Iz][i][0] * porpor*fblockFProps[Ix][Iy][Iz][RO][0]);
					dLsidedSg = (Vb / Dt)*(fcomp[Ix][Iy][Iz][i][1] * porpor*fblockFProps[Ix][Iy][Iz][RO][1]);

					dRsideMdp = 0;
					dRsidedp = 0;
					// Transfer function drside dp mdp
					//moshtagh transfer Function jabejaie naft nesbat be feshar matrix
					dRsideMdp -= ZERO_CONV * SI_C * dE[Ix][Iy][Iz][Nc][0] * comp[Ix][Iy][Iz][i][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
					dRsideMdp -= ZERO_CONV * -SI_C * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor));
					dRsideMdp -= ZERO_CONV * -SI_C * (DiffVisco(Ix, Iy, Iz, Nc, 0) * Mporpor + MdPordp * blockFProps[Ix][Iy][Iz][BMU][0]) * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor)*(blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) * (porpor + Mporpor);
					dRsideMdp -= ZERO_CONV * SI_C * MdPordp * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / (blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					//moshtagh transfer Function jabejaie gaz nesbat be feshar matrix
					dRsideMdp -= ZERO_CONV * SI_C * dE[Ix][Iy][Iz][Nc][1] * comp[Ix][Iy][Iz][i][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor) / (porpor + Mporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));
					dRsideMdp -= ZERO_CONV * -SI_C * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor) / (porpor + Mporpor));
					dRsideMdp -= ZERO_CONV * -SI_C * (DiffVisco(Ix, Iy, Iz, Nc, 1) * Mporpor + MdPordp * blockFProps[Ix][Iy][Iz][BMU][1]) * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor)*(blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1])) * (porpor + Mporpor);
					dRsideMdp -= ZERO_CONV * SI_C * MdPordp * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / (blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (1)) { // //moshtagh transfer Function nofuze oil-oil nesbat be feshar matrix 
						dRsideMdp -= ZERO_DIFF * MdPordp * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
						dRsideMdp -= ZERO_DIFF * dE[Ix][Iy][Iz][Nc][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
						dRsideMdp -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
					}

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (-1)) { // //moshtagh transfer Function nofuze gas-gas nesbat be feshar matrix 
						dRsideMdp -= ZERO_DIFF * MdPordp * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
						dRsideMdp -= ZERO_DIFF * dE[Ix][Iy][Iz][Nc][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
						dRsideMdp -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
					}

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0)) {
						dRsideMdp -= ZERO_DIFF * MdPordp * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
						dRsideMdp -= ZERO_DIFF * dE[Ix][Iy][Iz][Nc][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
						dRsideMdp -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);

						dRsideMdp -= ZERO_DIFF * MdPordp * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
						dRsideMdp -= ZERO_DIFF * dE[Ix][Iy][Iz][Nc][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
						dRsideMdp -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
					}

					//if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
						//dRsideMdp -= ZERO_DIFF * MdPordp * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
						//dRsideMdp -= ZERO_DIFF * dE[Ix][Iy][Iz][Nc][0] * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
						//dRsideMdp -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 0) * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
					//}

					//if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (1)) {
						//dRsideMdp -= ZERO_DIFF * MdPordp * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
						//dRsideMdp -= ZERO_DIFF * dE[Ix][Iy][Iz][Nc][1] * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
						//dRsideMdp -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 1) * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
					//}

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1)) {
						//dRsideMdp -= ZERO_DIFF * MdPordp * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
						//dRsideMdp -= ZERO_DIFF * dE[Ix][Iy][Iz][Nc][1] * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
						//dRsideMdp -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 1) * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);

						dRsideMdp -= ZERO_DIFF * MdPordp * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
						dRsideMdp -= ZERO_DIFF * dE[Ix][Iy][Iz][Nc][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
						dRsideMdp -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
					}

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1)) {
						dRsideMdp -= ZERO_DIFF * MdPordp * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
						dRsideMdp -= ZERO_DIFF * dE[Ix][Iy][Iz][Nc][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
						dRsideMdp -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

						//dRsideMdp -= ZERO_DIFF * MdPordp * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
						//dRsideMdp -= ZERO_DIFF * dE[Ix][Iy][Iz][Nc][0] * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
						//dRsideMdp -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 0) * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
					}

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0)) {
						//dRsideMdp -= ZERO_DIFF * MdPordp * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
						//dRsideMdp -= ZERO_DIFF * dE[Ix][Iy][Iz][Nc][0] * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
						//dRsideMdp -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 0) * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);

						dRsideMdp -= ZERO_DIFF * MdPordp * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
						dRsideMdp -= ZERO_DIFF * dE[Ix][Iy][Iz][Nc][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
						dRsideMdp -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
					}

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0)) {
						dRsideMdp -= ZERO_DIFF * MdPordp * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
						dRsideMdp -= ZERO_DIFF * dE[Ix][Iy][Iz][Nc][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
						dRsideMdp -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

						//dRsideMdp -= ZERO_DIFF * MdPordp * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
						//dRsideMdp -= ZERO_DIFF * dE[Ix][Iy][Iz][Nc][1] * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
						//dRsideMdp -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 1) * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
					}


					//moshtagh transfer Function jabejaie naft nesbat be feshar Fracture
					dRsidedp -= ZERO_CONV * SI_C * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor));
					dRsidedp -= ZERO_CONV * -SI_C * (fDiffVisco(Ix, Iy, Iz, Nc, 0) * porpor + dPordp * fblockFProps[Ix][Iy][Iz][BMU][0]) * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor)*(blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) * (porpor + Mporpor);
					dRsidedp -= ZERO_CONV * SI_C * dPordp * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / (blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					//moshtagh transfer Function jabejaie gaz nesbat be feshar Fracture
					dRsidedp -= ZERO_CONV * SI_C * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor) / (porpor + Mporpor));
					dRsidedp -= ZERO_CONV * -SI_C * (fDiffVisco(Ix, Iy, Iz, Nc, 1) * porpor + dPordp * fblockFProps[Ix][Iy][Iz][BMU][1]) * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor)*(blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1])) * (porpor + Mporpor);
					dRsidedp -= ZERO_CONV * SI_C * dPordp * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / (blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
						dRsidedp -= ZERO_DIFF * dPordp * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
						dRsidedp -= ZERO_DIFF * fdE[Ix][Iy][Iz][Nc][1] * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
						dRsidedp -= ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, Nc, 1) * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
					}

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (1)) {
						dRsidedp -= ZERO_DIFF * dPordp * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
						dRsidedp -= ZERO_DIFF * fdE[Ix][Iy][Iz][Nc][0] * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
						dRsidedp -= ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, Nc, 0) * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
					}

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1)) {
						dRsidedp -= ZERO_DIFF * dPordp * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
						dRsidedp -= ZERO_DIFF * fdE[Ix][Iy][Iz][Nc][0] * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
						dRsidedp -= ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, Nc, 0) * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
					}

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0)) {
						dRsidedp -= ZERO_DIFF * dPordp * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
						dRsidedp -= ZERO_DIFF * fdE[Ix][Iy][Iz][Nc][1] * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
						dRsidedp -= ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, Nc, 1) * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
					}

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1)) {
						dRsidedp -= ZERO_DIFF * dPordp * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
						dRsidedp -= ZERO_DIFF * fdE[Ix][Iy][Iz][Nc][1] * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
						dRsidedp -= ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, Nc, 1) * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
					}

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0)) {
						dRsidedp -= ZERO_DIFF * dPordp * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
						dRsidedp -= ZERO_DIFF * fdE[Ix][Iy][Iz][Nc][0] * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
						dRsidedp -= ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, Nc, 0) * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
					}

					//


					dRsidedp += fcomp[(Ix + ftransS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][0][0] + fcomp[(Ix - 1 + ftransS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix][Iy + 1][Iz + 1][0][0];
					dRsidedp += fcomp[Ix][(Iy + ftransS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][0][1] + fcomp[Ix][(Iy - 1 + ftransS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy][Iz + 1][0][1];
					dRsidedp += fcomp[Ix][Iy][(Iz + ftransS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][0][2] + fcomp[Ix][Iy][(Iz - 1 + ftransS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz][0][2];
					dRsidedp += fcomp[(Ix + ftransS[Ix + 1][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][1][0] + fcomp[(Ix - 1 + ftransS[Ix][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * ftrans[Ix][Iy + 1][Iz + 1][1][0];
					dRsidedp += fcomp[Ix][(Iy + ftransS[Ix + 1][Iy + 1][Iz + 1][1][1])][Iz][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][1][1] + fcomp[Ix][(Iy - 1 + ftransS[Ix + 1][Iy][Iz + 1][1][1])][Iz][i][1] * ftrans[Ix + 1][Iy][Iz + 1][1][1];
					dRsidedp += fcomp[Ix][Iy][(Iz + ftransS[Ix + 1][Iy + 1][Iz + 1][1][2])][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][1][2] + fcomp[Ix][Iy][(Iz - 1 + ftransS[Ix + 1][Iy + 1][Iz][1][2])][i][1] * ftrans[Ix + 1][Iy + 1][Iz][1][2];

					//jac[BLNo+Nc+i][BLNo+(2*Nc)]=PCoeff*(dLsidedp+dRsidedp);

					//jac[BLNo+Nc+i][BLNo+(2*Nc+2)]=dLsidedSo;
					if (fphaseStat[Ix][Iy][Iz] == (-1)) dCoefl = 0;
					else dCoefl = 1;
					if (fphaseStat[Ix][Iy][Iz] == 1) dCoefg = 0;
					else dCoefg = 1;

					dMul = fDiffVisco(Ix, Iy, Iz, Nc, 0);
					dMug = fDiffVisco(Ix, Iy, Iz, Nc, 1);
					dDiffdpl = fDifDiffusion(Ix, Iy, Iz, i, Nc, 0);
					dDiffdpg = fDifDiffusion(Ix, Iy, Iz, i, Nc, 1);

					dRsidedSw = 0;
					dRsidedSg = 0;
					dRsidedSo = 0;
					dRsideMdSg = 0;
					dRsideMdSw = 0;
					dRsideMdSo = 0;

					//Transfer function drside saturation 
					// moshtagh transfer Function jabejaie naft nesbat be So Matrix
					dRsideMdSo -= ZERO_CONV * SI_C * f_m_drelperm[1][4] * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (1))
						dRsideMdSo -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0))
						dRsideMdSo -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);

					//if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (-1))
						//dRsideMdSo -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0)) {
						//dRsideMdSo -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);

						dRsideMdSo -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
					}


					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1))
						dRsideMdSo -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);

					//if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1))
						//dRsideMdSo -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);



					// moshtagh transfer Function jabejaie naft nesbat be So Fracture
					dRsidedSo -= ZERO_CONV * SI_C * f_m_drelperm[1][9] * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (1))
						dRsidedSo -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1))
						dRsidedSo -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0))
						dRsidedSo -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);


					// moshtagh transfer Function jabejaie naft nesbat be Sg Matrix
					dRsideMdSg -= ZERO_CONV * SI_C * f_m_drelperm[1][2] * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					// moshtagh transfer Function jabejaie gaz nesbat be Sg Matrix
					dRsideMdSg -= ZERO_CONV * SI_C * f_m_drelperm[2][3] * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor) / (porpor + Mporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (-1))
						dRsideMdSg -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0))
						dRsideMdSg -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

					//if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (1))
						//dRsideMdSg -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1))
						dRsideMdSg -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0)) {
						dRsideMdSg -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
						//dRsideMdSg -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
					}

					// moshtagh transfer Function jabejaie naft nesbat be Sg Fracture
					dRsidedSg -= ZERO_CONV * SI_C * f_m_drelperm[1][7] * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					// moshtagh transfer Function jabejaie gaz nesbat be Sg Fracture
					dRsidedSg -= ZERO_CONV * SI_C * f_m_drelperm[2][8] * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor) / (porpor + Mporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (-1))
						dRsidedSg -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0))
						dRsidedSg -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1))
						dRsidedSg -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);


					// moshtagh transfer Function jabejaie naft nesbat be Sw Matrix
					dRsideMdSw -= ZERO_CONV * SI_C * f_m_drelperm[1][1] * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);


					// moshtagh transfer Function jabejaie naft nesbat be Sw Fracture
					dRsidedSw -= ZERO_CONV * SI_C * f_m_drelperm[1][6] * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
					//


					if (Ix<(Nx - 1)) {
						if (fphaseStat[Ix + 1][Iy][Iz]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + Iy * Nx + Ix + 1] - reCol2;

						dsw = fcomp[(Ix + ftransS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][4][0] * (fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) + fcomp[(Ix + ftransS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][6][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][0]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dsgo = fcomp[(Ix + ftransS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][8][0] * (fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) + fcomp[(Ix + ftransS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][9][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						dsgg = fcomp[(Ix + ftransS[Ix + 1][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][5][0] * (fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]) + fcomp[(Ix + ftransS[Ix + 1][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][7][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][0]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix + 1][Iy][Iz] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][1][0]) {
							Jac1Row[JRowIndex] += (fphaseStat[Ix + 1][Iy][Iz] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;

						//oil to oil
						dso = fcomp[(Ix + ftransS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][10][0] * (fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) + fcomp[(Ix + ftransS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][11][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][0]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix + 1][Iy][Iz] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;
						//////////////////////////////////////////////////////////
						/////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (fphaseStat[Ix + 1][Iy][Iz] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][RO][0] * gridDim[Ix + 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][BMU][0] * gridDim[Ix + 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][0] * gridDim[Ix] * Makhraj - dMul * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix + 1][Iy][Iz][Nc][0] * gridDim[Ix + 1] * Coef*Makhraj - fDiffVisco(Ix + 1, Iy, Iz, Nc, 0)*gridDim[Ix + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Ix] * (fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][Nc][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Ix + 1] * (fblockFProps[Ix + 1][Iy][Iz][BGAM][0] * fdE[Ix + 1][Iy][Iz][Nc][0] / fblockFProps[Ix + 1][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][BGAM][0] * gridDim[Ix + 1] * Coef) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][0]) {
							dRsidedp -= fcomp[Ix + 1][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][1] * Moshtaq*(fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = (fcomp[Ix + 1][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][1] * Bmoshtaq)*(fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= fcomp[Ix + 1][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (fcomp[Ix + 1][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= (fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}

						porpor2 = fporosity[Ix + 1][Iy][Iz] * (1 + cpor * (fP[Ix + 2][Iy + 1][Iz + 1][1] - refP) + dcpor * (fP[Ix + 2][Iy + 1][Iz + 1][1] - refP)*(fP[Ix + 2][Iy + 1][Iz + 1][1] - refP));
						dPordp2 = fporosity[Ix + 1][Iy][Iz] * (cpor + 2 * dcpor*(fP[Ix + 2][Iy + 1][Iz + 1][1] - refP));
						if (fcomp[Ix + 1][Iy][Iz][i][0]>fcomp[Ix][Iy][Iz][i][0]) {
							DupStream = fdiffusion[Ix + 1][Iy][Iz][i][0];
							dDdp = 0;
							dDdp2 = fDifDiffusion(Ix + 1, Iy, Iz, i, Nc, 0);
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][0];
							dDdp = dDiffdpl;
							dDdp2 = 0;
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix + 1][Iy][Iz] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = fblockFProps[Ix + 1][Iy][Iz][RO][0] * gridDim[Ix + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] * dCoefl;
						AAd *= (fsat[Ix + 1][Iy][Iz][1] * gridDim[Ix + 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Ix] * dCoefl) / (gridDim[Ix + 1] + gridDim[Ix]);
						BBd = gridDim[Ix + 1] * Coef / porpor2 + gridDim[Ix] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz] / (gridDim[Ix + 1] + gridDim[Ix]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = fcomp[Ix + 1][Iy][Iz][i][0] - fcomp[Ix][Iy][Iz][i][0];
						RSide += DTran * DeltaX;

						dAAddp = fdE[Ix][Iy][Iz][Nc][0] * gridDim[Ix] * dCoefl;
						dAAddp2 = fdE[Ix + 1][Iy][Iz][Nc][0] * gridDim[Ix + 1] * Coef;
						dBBddp = -dPordp * gridDim[Ix] * dCoefl / (porpor*porpor);
						dBBddp2 = -dPordp2 * gridDim[Ix + 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefl) {
							dRsidedp += -NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}

						if (fphaseStat[Ix + 1][Iy][Iz] == 1) Coef = 0;
						else Coef = 1;
						Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][RO][1] * gridDim[Ix + 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][BMU][1] * gridDim[Ix + 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][1] * gridDim[Ix] * Makhraj - dMug * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix + 1][Iy][Iz][Nc][1] * gridDim[Ix + 1] * Coef*Makhraj - fDiffVisco(Ix + 1, Iy, Iz, Nc, 1)*gridDim[Ix + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Ix] * (fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][Nc][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Ix + 1] * (fblockFProps[Ix + 1][Iy][Iz][BGAM][1] * fdE[Ix + 1][Iy][Iz][Nc][1] / fblockFProps[Ix + 1][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][BGAM][1] * gridDim[Ix + 1] * Coef) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

						if (ftransS[Ix + 1][Iy + 1][Iz + 1][1][0]) {
							dRsidedp -= fcomp[Ix + 1][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][2] * Moshtaq*(fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += (fcomp[Ix + 1][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][2] * Bmoshtaq)*(fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= fcomp[Ix + 1][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (fcomp[Ix + 1][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= (fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);

						}
						//////////////////////////////////////////////////////
						if (fcomp[Ix + 1][Iy][Iz][i][1]>fcomp[Ix][Iy][Iz][i][1]) {
							DupStream = fdiffusion[Ix + 1][Iy][Iz][i][1];
							dDdp = 0;
							dDdp2 = fDifDiffusion(Ix + 1, Iy, Iz, i, Nc, 1);
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][1];
							dDdp = dDiffdpg;
							dDdp2 = 0;
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix + 1][Iy][Iz] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = fblockFProps[Ix + 1][Iy][Iz][RO][1] * gridDim[Ix + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] * dCoefg;
						AAd *= (fsat[Ix + 1][Iy][Iz][2] * gridDim[Ix + 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Ix] * dCoefg) / (gridDim[Ix + 1] + gridDim[Ix]);
						BBd = gridDim[Ix + 1] * Coef / porpor2 + gridDim[Ix] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Nx+Iy]*gridDim[Nx+Ny+Iz]/(gridDim[Ix+1]+gridDim[Ix]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = fcomp[Ix + 1][Iy][Iz][i][1] - fcomp[Ix][Iy][Iz][i][1];
						RSide += DTran * DeltaX;

						dAAddp = fdE[Ix][Iy][Iz][Nc][1] * gridDim[Ix] * dCoefg;
						dAAddp2 = fdE[Ix + 1][Iy][Iz][Nc][1] * gridDim[Ix + 1] * Coef;
						dBBddp = -dPordp * gridDim[Ix] * dCoefg / (porpor*porpor);
						dBBddp2 = -dPordp2 * gridDim[Ix + 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefg) {
							dRsidedp += -NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}


						//////////////////////////////////////////////////////
						Jac1Row[JRowIndex] = PCoeff * (-fcomp[(Ix + ftransS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][0][0] - fcomp[(Ix + ftransS[Ix + 1][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][1][0] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;

					}

					if (Ix>0) {
						if (fphaseStat[Ix - 1][Iy][Iz]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + Iy * Nx + Ix - 1] - reCol2;

						dsw = -fcomp[(Ix - 1 + ftransS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix][Iy + 1][Iz + 1][4][0] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]) - fcomp[(Ix - 1 + ftransS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix][Iy + 1][Iz + 1][6][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						if (!ftransS[Ix][Iy + 1][Iz + 1][0][0]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dso = -fcomp[(Ix - 1 + ftransS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix][Iy + 1][Iz + 1][10][0] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]) - fcomp[(Ix - 1 + ftransS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix][Iy + 1][Iz + 1][11][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						if (!ftransS[Ix][Iy + 1][Iz + 1][0][0]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix - 1][Iy][Iz] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;

						dsgo = -fcomp[(Ix - 1 + ftransS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix][Iy + 1][Iz + 1][8][0] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]) - fcomp[(Ix - 1 + ftransS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix][Iy + 1][Iz + 1][9][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						dsgg = -fcomp[(Ix - 1 + ftransS[Ix][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * ftrans[Ix][Iy + 1][Iz + 1][5][0] * (fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]) - fcomp[(Ix - 1 + ftransS[Ix][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * ftrans[Ix][Iy + 1][Iz + 1][7][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						if (!ftransS[Ix][Iy + 1][Iz + 1][0][0]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix - 1][Iy][Iz] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}
						if (!ftransS[Ix][Iy + 1][Iz + 1][1][0]) {
							Jac1Row[JRowIndex] += (fphaseStat[Ix - 1][Iy][Iz] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;
						/////////////////////////////////////////////////////////////
						////////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (fphaseStat[Ix - 1][Iy][Iz] == (-1)) Coef = 0;
						else Coef = 1;
						Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][RO][0] * gridDim[Ix - 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][BMU][0] * gridDim[Ix - 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][0] * gridDim[Ix] * Makhraj - dMul * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix - 1][Iy][Iz][Nc][0] * gridDim[Ix - 1] * Coef*Makhraj - fDiffVisco(Ix - 1, Iy, Iz, Nc, 0)*gridDim[Ix - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Ix] * (fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][Nc][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Ix - 1] * (fblockFProps[Ix - 1][Iy][Iz][BGAM][0] * fdE[Ix - 1][Iy][Iz][Nc][0] / fblockFProps[Ix - 1][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][BGAM][0] * gridDim[Ix - 1] * Coef) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

						if (ftransS[Ix][Iy + 1][Iz + 1][0][0]) {
							dRsidedp += (fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);
							dBsidedp = -fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);

							dRsidedp += (fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][1])*(Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
							dBsidedp -= fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp += fcomp[Ix - 1][Iy][Iz][i][0] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][1] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);
							dBsidedp = -(fcomp[Ix - 1][Iy][Iz][i][0] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);

							dRsidedp += fcomp[Ix - 1][Iy][Iz][i][0] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
							dBsidedp -= (fcomp[Ix - 1][Iy][Iz][i][0] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][1])*(Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						}

						porpor2 = fporosity[Ix - 1][Iy][Iz] * (1 + cpor * (fP[Ix][Iy + 1][Iz + 1][1] - refP) + dcpor * (fP[Ix][Iy + 1][Iz + 1][1] - refP)*(fP[Ix][Iy + 1][Iz + 1][1] - refP));
						dPordp2 = fporosity[Ix - 1][Iy][Iz] * (cpor + 2 * dcpor*(fP[Ix][Iy + 1][Iz + 1][1] - refP));
						if (fcomp[Ix - 1][Iy][Iz][i][0]>fcomp[Ix][Iy][Iz][i][0]) {
							DupStream = fdiffusion[Ix - 1][Iy][Iz][i][0];
							dDdp = 0;
							dDdp2 = fDifDiffusion(Ix - 1, Iy, Iz, i, Nc, 0);
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][0];
							dDdp = dDiffdpl;
							dDdp2 = 0;
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix - 1][Iy][Iz] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = fblockFProps[Ix - 1][Iy][Iz][RO][0] * gridDim[Ix - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] * dCoefl;
						AAd *= (fsat[Ix - 1][Iy][Iz][1] * gridDim[Ix - 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Ix] * dCoefl) / (gridDim[Ix - 1] + gridDim[Ix]);
						BBd = gridDim[Ix - 1] * Coef / porpor2 + gridDim[Ix] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz] / (gridDim[Ix - 1] + gridDim[Ix]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = fcomp[Ix][Iy][Iz][i][0] - fcomp[Ix - 1][Iy][Iz][i][0];
						RSide -= DTran * DeltaX;

						dAAddp = fdE[Ix][Iy][Iz][Nc][0] * gridDim[Ix] * dCoefl;
						dAAddp2 = fdE[Ix - 1][Iy][Iz][Nc][0] * gridDim[Ix - 1] * Coef;
						dBBddp = -dPordp * gridDim[Ix] * dCoefl / (porpor*porpor);
						dBBddp2 = -dPordp2 * gridDim[Ix - 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefl) {
							dRsidedp += NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += -NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}

						if (fphaseStat[Ix - 1][Iy][Iz] == 1) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][RO][1] * gridDim[Ix - 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][BMU][1] * gridDim[Ix - 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][1] * gridDim[Ix] * Makhraj - dMug * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix - 1][Iy][Iz][Nc][1] * gridDim[Ix - 1] * Coef*Makhraj - fDiffVisco(Ix - 1, Iy, Iz, Nc, 1)*gridDim[Ix - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Ix] * (fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][Nc][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Ix - 1] * (fblockFProps[Ix - 1][Iy][Iz][BGAM][1] * fdE[Ix - 1][Iy][Iz][Nc][1] / fblockFProps[Ix - 1][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][BGAM][1] * gridDim[Ix - 1] * Coef) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

						if (ftransS[Ix][Iy + 1][Iz + 1][1][0]) {
							dRsidedp += (fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);
							dBsidedp = -fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);

							dRsidedp += (fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
							dBsidedp -= fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp += fcomp[Ix - 1][Iy][Iz][i][1] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][2] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);
							dBsidedp = -(fcomp[Ix - 1][Iy][Iz][i][1] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);

							dRsidedp += fcomp[Ix - 1][Iy][Iz][i][1] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
							dBsidedp -= (fcomp[Ix - 1][Iy][Iz][i][1] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						}
						//////////////////////////////////////////////////////////////
						if (fcomp[Ix - 1][Iy][Iz][i][1]>fcomp[Ix][Iy][Iz][i][1]) {
							DupStream = fdiffusion[Ix - 1][Iy][Iz][i][1];
							dDdp = 0;
							dDdp2 = fDifDiffusion(Ix - 1, Iy, Iz, i, Nc, 1);
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][1];
							dDdp = dDiffdpg;
							dDdp2 = 0;
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix - 1][Iy][Iz] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = fblockFProps[Ix - 1][Iy][Iz][RO][1] * gridDim[Ix - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] * dCoefg;
						AAd *= (fsat[Ix - 1][Iy][Iz][2] * gridDim[Ix - 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Ix] * dCoefg) / (gridDim[Ix - 1] + gridDim[Ix]);
						BBd = gridDim[Ix - 1] * Coef / porpor2 + gridDim[Ix] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Nx+Iy]*gridDim[Nx+Ny+Iz]/(gridDim[Ix-1]+gridDim[Ix]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = fcomp[Ix][Iy][Iz][i][1] - fcomp[Ix - 1][Iy][Iz][i][1];
						RSide -= DTran * DeltaX;

						dAAddp = fdE[Ix][Iy][Iz][Nc][1] * gridDim[Ix] * dCoefg;
						dAAddp2 = fdE[Ix - 1][Iy][Iz][Nc][1] * gridDim[Ix - 1] * Coef;
						dBBddp = -dPordp * gridDim[Ix] * dCoefg / (porpor*porpor);
						dBBddp2 = -dPordp2 * gridDim[Ix - 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefg) {
							dRsidedp += NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += -NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}

						///////////////////////////////////////////////////////////////
						Jac1Row[JRowIndex] = PCoeff * (-fcomp[(Ix - 1 + ftransS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix][Iy + 1][Iz + 1][0][0] - fcomp[(Ix - 1 + ftransS[Ix][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * ftrans[Ix][Iy + 1][Iz + 1][1][0] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;
					}

					if (Iy<(Ny - 1)) {
						if (fphaseStat[Ix][Iy + 1][Iz]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + (Iy + 1)*Nx + Ix] - reCol2;

						dsw = fcomp[Ix][(Iy + ftransS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][4][1] * (fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) + fcomp[Ix][(Iy + ftransS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][6][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dso = fcomp[Ix][(Iy + ftransS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][10][1] * (fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) + fcomp[Ix][(Iy + ftransS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][11][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix][Iy + 1][Iz] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;

						dsgo = fcomp[Ix][(Iy + ftransS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][8][1] * (fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) + fcomp[Ix][(Iy + ftransS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][9][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						dsgg = fcomp[Ix][(Iy + ftransS[Ix + 1][Iy + 1][Iz + 1][1][1])][Iz][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][5][1] * (fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]) + fcomp[Ix][(Iy + ftransS[Ix + 1][Iy + 1][Iz + 1][1][1])][Iz][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][7][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix][Iy + 1][Iz] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][1][1]) {
							Jac1Row[JRowIndex] += (fphaseStat[Ix][Iy + 1][Iz] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;
						//////////////////////////////////////////////////////////////////////////////
						/////////////////////////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (fphaseStat[Ix][Iy + 1][Iz] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][RO][0] * gridDim[Nx + Iy + 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][BMU][0] * gridDim[Nx + Iy + 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Iy] * Makhraj - dMul * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix][Iy + 1][Iz][Nc][0] * gridDim[Nx + Iy + 1] * Coef*Makhraj - fDiffVisco(Ix, Iy + 1, Iz, Nc, 0)*gridDim[Nx + Iy + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Iy] * (fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][Nc][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Iy + 1] * (fblockFProps[Ix][Iy + 1][Iz][BGAM][0] * fdE[Ix][Iy + 1][Iz][Nc][0] / fblockFProps[Ix][Iy + 1][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][BGAM][0] * gridDim[Nx + Iy + 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][1]) {
							dRsidedp -= fcomp[Ix][Iy + 1][Iz][i][0] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][1] * Moshtaq*(fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = (fcomp[Ix][Iy + 1][Iz][i][0] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= fcomp[Ix][Iy + 1][Iz][i][0] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (fcomp[Ix][Iy + 1][Iz][i][0] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= (fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}

						porpor2 = fporosity[Ix][Iy + 1][Iz] * (1 + cpor * (fP[Ix + 1][Iy + 2][Iz + 1][1] - refP) + dcpor * (fP[Ix + 1][Iy + 2][Iz + 1][1] - refP)*(fP[Ix + 1][Iy + 2][Iz + 1][1] - refP));
						dPordp2 = fporosity[Ix][Iy + 1][Iz] * (cpor + 2 * dcpor*(fP[Ix + 1][Iy + 2][Iz + 1][1] - refP));
						if (fcomp[Ix][Iy + 1][Iz][i][0]>fcomp[Ix][Iy][Iz][i][0]) {
							DupStream = fdiffusion[Ix][Iy + 1][Iz][i][0];
							dDdp = 0;
							dDdp2 = fDifDiffusion(Ix, Iy + 1, Iz, i, Nc, 0);
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][0];
							dDdp = dDiffdpl;
							dDdp2 = 0;
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix][Iy + 1][Iz] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = fblockFProps[Ix][Iy + 1][Iz][RO][0] * gridDim[Nx + Iy + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] * dCoefl;
						AAd *= (fsat[Ix][Iy + 1][Iz][1] * gridDim[Nx + Iy + 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Nx + Iy] * dCoefl) / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
						BBd = gridDim[Nx + Iy + 1] * Coef / porpor2 + gridDim[Nx + Iy] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Ix] * gridDim[Nx + Ny + Iz] / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = fcomp[Ix][Iy + 1][Iz][i][0] - fcomp[Ix][Iy][Iz][i][0];
						RSide += DTran * DeltaX;

						dAAddp = fdE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Iy] * dCoefl;
						dAAddp2 = fdE[Ix][Iy + 1][Iz][Nc][0] * gridDim[Nx + Iy + 1] * Coef;
						dBBddp = -dPordp * gridDim[Nx + Iy] * dCoefl / (porpor*porpor);
						dBBddp2 = -dPordp2 * gridDim[Nx + Iy + 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefl) {
							dRsidedp += -NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}

						if (fphaseStat[Ix][Iy + 1][Iz] == 1) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][RO][1] * gridDim[Nx + Iy + 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][BMU][1] * gridDim[Nx + Iy + 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Iy] * Makhraj - dMug * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix][Iy + 1][Iz][Nc][1] * gridDim[Nx + Iy + 1] * Coef*Makhraj - fDiffVisco(Ix, Iy + 1, Iz, Nc, 1)*gridDim[Nx + Iy + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = Coef * gridDim[Nx + Iy] * (fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][Nc][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);
						BmoshtaqGama = gridDim[Nx + Iy + 1] * (fblockFProps[Ix][Iy + 1][Iz][BGAM][1] * fdE[Ix][Iy + 1][Iz][Nc][1] / fblockFProps[Ix][Iy + 1][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][BGAM][1] * gridDim[Nx + Iy + 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

						if (ftransS[Ix + 1][Iy + 1][Iz + 1][1][1]) {
							dRsidedp -= fcomp[Ix][Iy + 1][Iz][i][1] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][2] * Moshtaq*(fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += (fcomp[Ix][Iy + 1][Iz][i][1] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= fcomp[Ix][Iy + 1][Iz][i][1] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (fcomp[Ix][Iy + 1][Iz][i][1] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= (fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}

						/////////////////////////////////////////////////////////////////////////////
						if (fcomp[Ix][Iy + 1][Iz][i][1]>fcomp[Ix][Iy][Iz][i][1]) {
							DupStream = fdiffusion[Ix][Iy + 1][Iz][i][1];
							dDdp = 0;
							dDdp2 = fDifDiffusion(Ix, Iy + 1, Iz, i, Nc, 1);
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][1];
							dDdp = dDiffdpg;
							dDdp2 = 0;
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix][Iy + 1][Iz] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = fblockFProps[Ix][Iy + 1][Iz][RO][1] * gridDim[Nx + Iy + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] * dCoefg;
						AAd *= (fsat[Ix][Iy + 1][Iz][2] * gridDim[Nx + Iy + 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Nx + Iy] * dCoefg) / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
						BBd = gridDim[Nx + Iy + 1] * Coef / porpor2 + gridDim[Nx + Iy] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Ix]*gridDim[Nx+Ny+Iz]/(gridDim[Nx+Iy+1]+gridDim[Nx+Iy]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = fcomp[Ix][Iy + 1][Iz][i][1] - fcomp[Ix][Iy][Iz][i][1];
						RSide += DTran * DeltaX;

						dAAddp = fdE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Iy] * dCoefg;
						dAAddp2 = fdE[Ix][Iy + 1][Iz][Nc][1] * gridDim[Nx + Iy + 1] * Coef;
						dBBddp = -dPordp * gridDim[Nx + Iy] * dCoefg / (porpor*porpor);
						dBBddp2 = -dPordp2 * gridDim[Nx + Iy + 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefg) {
							dRsidedp += -NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}
						/////////////////////////////////////////////////////////////////////////////
						Jac1Row[JRowIndex] = PCoeff * (-fcomp[Ix][(Iy + ftransS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][0][1] - fcomp[Ix][(Iy + ftransS[Ix + 1][Iy + 1][Iz + 1][1][1])][Iz][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][1][1] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;
					}

					if (Iy>0) {
						if (fphaseStat[Ix][Iy - 1][Iz]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + (Iy - 1)*Nx + Ix] - reCol2;

						dsw = -fcomp[Ix][(Iy - 1 + ftransS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy][Iz + 1][4][1] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]) - fcomp[Ix][(Iy - 1 + ftransS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy][Iz + 1][6][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						if (!ftransS[Ix + 1][Iy][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dso = -fcomp[Ix][(Iy - 1 + ftransS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy][Iz + 1][10][1] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]) - fcomp[Ix][(Iy - 1 + ftransS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy][Iz + 1][11][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						if (!ftransS[Ix + 1][Iy][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix][Iy - 1][Iz] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;

						dsgo = -fcomp[Ix][(Iy - 1 + ftransS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy][Iz + 1][8][1] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]) - fcomp[Ix][(Iy - 1 + ftransS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy][Iz + 1][9][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						dsgg = -fcomp[Ix][(Iy - 1 + ftransS[Ix + 1][Iy][Iz + 1][1][1])][Iz][i][1] * ftrans[Ix + 1][Iy][Iz + 1][5][1] * (fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]) - fcomp[Ix][(Iy - 1 + ftransS[Ix + 1][Iy][Iz + 1][1][1])][Iz][i][1] * ftrans[Ix + 1][Iy][Iz + 1][7][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						if (!ftransS[Ix + 1][Iy][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix][Iy - 1][Iz] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}
						if (!ftransS[Ix + 1][Iy][Iz + 1][1][1]) {
							Jac1Row[JRowIndex] += (fphaseStat[Ix][Iy - 1][Iz] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;

						//////////////////////////////////////////////////////////////////
						/////////////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (fphaseStat[Ix][Iy - 1][Iz] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][RO][0] * gridDim[Nx + Iy - 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][BMU][0] * gridDim[Nx + Iy - 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Iy] * Makhraj - dMul * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix][Iy - 1][Iz][Nc][0] * gridDim[Nx + Iy - 1] * Coef*Makhraj - fDiffVisco(Ix, Iy - 1, Iz, Nc, 0)*gridDim[Nx + Iy - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Iy] * (fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][Nc][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Iy - 1] * (fblockFProps[Ix][Iy - 1][Iz][BGAM][0] * fdE[Ix][Iy - 1][Iz][Nc][0] / fblockFProps[Ix][Iy - 1][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][BGAM][0] * gridDim[Nx + Iy - 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

						if (ftransS[Ix + 1][Iy][Iz + 1][0][1]) {
							dRsidedp += (fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);
							dBsidedp = -fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);

							dRsidedp += (fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][1])*(Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
							dBsidedp -= fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						}
						else {
							dRsidedp += fcomp[Ix][Iy - 1][Iz][i][0] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][1] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);
							dBsidedp = -(fcomp[Ix][Iy - 1][Iz][i][0] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);

							dRsidedp += fcomp[Ix][Iy - 1][Iz][i][0] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
							dBsidedp -= (fcomp[Ix][Iy - 1][Iz][i][0] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][1])*(Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						}

						porpor2 = fporosity[Ix][Iy - 1][Iz] * (1 + cpor * (fP[Ix + 1][Iy][Iz + 1][1] - refP) + dcpor * (fP[Ix + 1][Iy][Iz + 1][1] - refP)*(fP[Ix + 1][Iy][Iz + 1][1] - refP));
						dPordp2 = fporosity[Ix][Iy - 1][Iz] * (cpor + 2 * dcpor*(fP[Ix + 1][Iy][Iz + 1][1] - refP));
						if (fcomp[Ix][Iy - 1][Iz][i][0]>fcomp[Ix][Iy][Iz][i][0]) {
							DupStream = fdiffusion[Ix][Iy - 1][Iz][i][0];
							dDdp = 0;
							dDdp2 = fDifDiffusion(Ix, Iy - 1, Iz, i, Nc, 0);
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][0];
							dDdp = dDiffdpl;
							dDdp2 = 0;
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix][Iy - 1][Iz] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = fblockFProps[Ix][Iy - 1][Iz][RO][0] * gridDim[Nx + Iy - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] * dCoefl;
						AAd *= (fsat[Ix][Iy - 1][Iz][1] * gridDim[Nx + Iy - 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Nx + Iy] * dCoefl) / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
						BBd = gridDim[Nx + Iy - 1] * Coef / porpor2 + gridDim[Nx + Iy] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Ix] * gridDim[Nx + Ny + Iz] / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = fcomp[Ix][Iy][Iz][i][0] - fcomp[Ix][Iy - 1][Iz][i][0];
						RSide -= DTran * DeltaX;

						dAAddp = fdE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Iy] * dCoefl;
						dAAddp2 = fdE[Ix][Iy - 1][Iz][Nc][0] * gridDim[Nx + Iy - 1] * Coef;
						dBBddp = -dPordp * gridDim[Nx + Iy] * dCoefl / (porpor*porpor);
						dBBddp2 = -dPordp2 * gridDim[Nx + Iy - 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefl) {
							dRsidedp += NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += -NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}

						if (fphaseStat[Ix][Iy - 1][Iz] == 1) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][RO][1] * gridDim[Nx + Iy - 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][BMU][1] * gridDim[Nx + Iy - 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Iy] * Makhraj - dMug * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix][Iy - 1][Iz][Nc][1] * gridDim[Nx + Iy - 1] * Coef*Makhraj - fDiffVisco(Ix, Iy - 1, Iz, Nc, 1)*gridDim[Nx + Iy - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Iy] * (fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][Nc][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Iy - 1] * (fblockFProps[Ix][Iy - 1][Iz][BGAM][1] * fdE[Ix][Iy - 1][Iz][Nc][1] / fblockFProps[Ix][Iy - 1][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][BGAM][1] * gridDim[Nx + Iy - 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

						if (ftransS[Ix + 1][Iy][Iz + 1][1][1]) {
							dRsidedp += (fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);
							dBsidedp -= fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);

							dRsidedp += (fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
							dBsidedp -= fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						}
						else {
							dRsidedp += fcomp[Ix][Iy - 1][Iz][i][1] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][2] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);
							dBsidedp -= (fcomp[Ix][Iy - 1][Iz][i][1] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);

							dRsidedp += fcomp[Ix][Iy - 1][Iz][i][1] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
							dBsidedp -= (fcomp[Ix][Iy - 1][Iz][i][1] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						}

						///////////////////////////////////////////////////////////////////
						if (fcomp[Ix][Iy - 1][Iz][i][1]>fcomp[Ix][Iy][Iz][i][1]) {
							DupStream = fdiffusion[Ix][Iy - 1][Iz][i][1];
							dDdp = 0;
							dDdp2 = fDifDiffusion(Ix, Iy - 1, Iz, i, Nc, 1);
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][1];
							dDdp = dDiffdpg;
							dDdp2 = 0;
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix][Iy - 1][Iz] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = fblockFProps[Ix][Iy - 1][Iz][RO][1] * gridDim[Nx + Iy - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] * dCoefg;
						AAd *= (fsat[Ix][Iy - 1][Iz][2] * gridDim[Nx + Iy - 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Nx + Iy] * dCoefg) / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
						BBd = gridDim[Nx + Iy - 1] * Coef / porpor2 + gridDim[Nx + Iy] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Ix]*gridDim[Nx+Ny+Iz]/(gridDim[Nx+Iy-1]+gridDim[Nx+Iy]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = fcomp[Ix][Iy][Iz][i][1] - fcomp[Ix][Iy - 1][Iz][i][1];
						RSide -= DTran * DeltaX;

						dAAddp = fdE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Iy] * dCoefg;
						dAAddp2 = fdE[Ix][Iy - 1][Iz][Nc][1] * gridDim[Nx + Iy - 1] * Coef;
						dBBddp = -dPordp * gridDim[Nx + Iy] * dCoefg / (porpor*porpor);
						dBBddp2 = -dPordp2 * gridDim[Nx + Iy - 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefg) {
							dRsidedp += NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += -NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}

						//////////////////////////////////////////////////////////////////
						Jac1Row[JRowIndex] = PCoeff * (-fcomp[Ix][(Iy - 1 + ftransS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy][Iz + 1][0][1] - fcomp[Ix][(Iy - 1 + ftransS[Ix + 1][Iy][Iz + 1][1][1])][Iz][i][1] * ftrans[Ix + 1][Iy][Iz + 1][1][1] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;
					}

					if (Iz<(Nz - 1)) {
						if (fphaseStat[Ix][Iy][Iz + 1]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[Nx*Ny*Nz + (Iz + 1)*(Nx*Ny) + Iy * Nx + Ix] - reCol2;

						dsw = fcomp[Ix][Iy][(Iz + ftransS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][4][2] * (fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) + fcomp[Ix][Iy][(Iz + ftransS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][6][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][2]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dso = fcomp[Ix][Iy][(Iz + ftransS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][10][2] * (fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) + fcomp[Ix][Iy][(Iz + ftransS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][11][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][2]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix][Iy][Iz + 1] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;

						dsgo = fcomp[Ix][Iy][(Iz + ftransS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][8][2] * (fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) + fcomp[Ix][Iy][(Iz + ftransS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][9][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						dsgg = fcomp[Ix][Iy][(Iz + ftransS[Ix + 1][Iy + 1][Iz + 1][1][2])][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][5][2] * (fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]) + fcomp[Ix][Iy][(Iz + ftransS[Ix + 1][Iy + 1][Iz + 1][1][2])][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][7][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][2]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix][Iy][Iz + 1] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][1][2]) {
							Jac1Row[JRowIndex] += (fphaseStat[Ix][Iy][Iz + 1] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;
						///////////////////////////////////////////////////////////////////////////
						////////////////////////////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (fphaseStat[Ix][Iy][Iz + 1] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][RO][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][BMU][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Ny + Iz] * Makhraj - dMul * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix][Iy][Iz + 1][Nc][0] * gridDim[Nx + Ny + Iz + 1] * Coef*Makhraj - fDiffVisco(Ix, Iy, Iz + 1, Nc, 0)*gridDim[Nx + Ny + Iz + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Ny + Iz] * (fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][Nc][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz + 1] * (fblockFProps[Ix][Iy][Iz + 1][BGAM][0] * fdE[Ix][Iy][Iz + 1][Nc][0] / fblockFProps[Ix][Iy][Iz + 1][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][BGAM][0] * gridDim[Nx + Ny + Iz + 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][2]) {
							dRsidedp -= fcomp[Ix][Iy][Iz + 1][i][0] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][1] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = (fcomp[Ix][Iy][Iz + 1][i][0] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= fcomp[Ix][Iy][Iz + 1][i][0] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (fcomp[Ix][Iy][Iz + 1][i][0] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= (fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}

						porpor2 = fporosity[Ix][Iy][Iz + 1] * (1 + cpor * (fP[Ix + 1][Iy + 1][Iz + 2][1] - refP) + dcpor * (fP[Ix + 1][Iy + 1][Iz + 2][1] - refP)*(fP[Ix + 1][Iy + 1][Iz + 2][1] - refP));
						dPordp2 = fporosity[Ix][Iy][Iz + 1] * (cpor + 2 * dcpor*(fP[Ix + 1][Iy + 1][Iz + 2][1] - refP));
						if (fcomp[Ix][Iy][Iz + 1][i][0]>fcomp[Ix][Iy][Iz][i][0]) {
							DupStream = fdiffusion[Ix][Iy][Iz + 1][i][0];
							dDdp = 0;
							dDdp2 = fDifDiffusion(Ix, Iy, Iz + 1, i, Nc, 0);
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][0];
							dDdp = dDiffdpl;
							dDdp2 = 0;
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix][Iy][Iz + 1] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = fblockFProps[Ix][Iy][Iz + 1][RO][0] * gridDim[Nx + Ny + Iz + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] * dCoefl;
						AAd *= (fsat[Ix][Iy][Iz + 1][1] * gridDim[Nx + Ny + Iz + 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Nx + Ny + Iz] * dCoefl) / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
						BBd = gridDim[Nx + Ny + Iz + 1] * Coef / porpor2 + gridDim[Nx + Ny + Iz] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Ix] * gridDim[Nx + Iy] / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = fcomp[Ix][Iy][Iz + 1][i][0] - fcomp[Ix][Iy][Iz][i][0];
						RSide += DTran * DeltaX;

						dAAddp = fdE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Ny + Iz] * dCoefl;
						dAAddp2 = fdE[Ix][Iy][Iz + 1][Nc][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
						dBBddp = -dPordp * gridDim[Nx + Ny + Iz] * dCoefl / (porpor*porpor);
						dBBddp2 = -dPordp2 * gridDim[Nx + Ny + Iz + 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefl) {
							dRsidedp += -NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}

						if (fphaseStat[Ix][Iy][Iz + 1] == 1) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][RO][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][BMU][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Ny + Iz] * Makhraj - dMug * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix][Iy][Iz + 1][Nc][1] * gridDim[Nx + Ny + Iz + 1] * Coef*Makhraj - fDiffVisco(Ix, Iy, Iz + 1, Nc, 1)*gridDim[Nx + Ny + Iz + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Ny + Iz] * (fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][Nc][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz + 1] * (fblockFProps[Ix][Iy][Iz + 1][BGAM][1] * fdE[Ix][Iy][Iz + 1][Nc][1] / fblockFProps[Ix][Iy][Iz + 1][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][BGAM][1] * gridDim[Nx + Ny + Iz + 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

						if (ftransS[Ix + 1][Iy + 1][Iz + 1][1][2]) {
							dRsidedp -= fcomp[Ix][Iy][Iz + 1][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][2] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += (fcomp[Ix][Iy][Iz + 1][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= fcomp[Ix][Iy][Iz + 1][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (fcomp[Ix][Iy][Iz + 1][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= (fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						///////////////////////////////////////////////////////////////////////////////
						if (fcomp[Ix][Iy][Iz + 1][i][1]>fcomp[Ix][Iy][Iz][i][1]) {
							DupStream = fdiffusion[Ix][Iy][Iz + 1][i][1];
							dDdp = 0;
							dDdp2 = fDifDiffusion(Ix, Iy, Iz + 1, i, Nc, 1);
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][1];
							dDdp = dDiffdpg;
							dDdp2 = 0;
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix][Iy][Iz + 1] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = fblockFProps[Ix][Iy][Iz + 1][RO][1] * gridDim[Nx + Ny + Iz + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] * dCoefg;
						AAd *= (fsat[Ix][Iy][Iz + 1][2] * gridDim[Nx + Ny + Iz + 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Nx + Ny + Iz] * dCoefg) / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
						BBd = gridDim[Nx + Ny + Iz + 1] * Coef / porpor2 + gridDim[Nx + Ny + Iz] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Ix]*gridDim[Nx+Iy]/(gridDim[Nx+Ny+Iz+1]+gridDim[Nx+Ny+Iz]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = fcomp[Ix][Iy][Iz + 1][i][1] - fcomp[Ix][Iy][Iz][i][1];
						RSide += DTran * DeltaX;

						dAAddp = fdE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Ny + Iz] * dCoefg;
						dAAddp2 = fdE[Ix][Iy][Iz + 1][Nc][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
						dBBddp = -dPordp * gridDim[Nx + Ny + Iz] * dCoefg / (porpor*porpor);
						dBBddp2 = -dPordp2 * gridDim[Nx + Ny + Iz + 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefg) {
							dRsidedp += -NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}

						//////////////////////////////////////////////////////////////////////////////
						Jac1Row[JRowIndex] = PCoeff * (-fcomp[Ix][Iy][(Iz + ftransS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][0][2] - fcomp[Ix][Iy][(Iz + ftransS[Ix + 1][Iy + 1][Iz + 1][1][2])][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][1][2] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;
					}

					if (Iz>0) {
						if (fphaseStat[Ix][Iy][Iz - 1]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[Nx*Ny*Nz + (Iz - 1)*(Nx*Ny) + Iy * Nx + Ix] - reCol2;

						dsw = -fcomp[Ix][Iy][(Iz - 1 + ftransS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz][4][2] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]) - fcomp[Ix][Iy][(Iz - 1 + ftransS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz][6][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						if (!ftransS[Ix + 1][Iy + 1][Iz][0][2]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dso = -fcomp[Ix][Iy][(Iz - 1 + ftransS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz][10][2] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]) - fcomp[Ix][Iy][(Iz - 1 + ftransS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz][11][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						if (!ftransS[Ix + 1][Iy + 1][Iz][0][2]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix][Iy][Iz - 1] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;

						dsgo = -fcomp[Ix][Iy][(Iz - 1 + ftransS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz][8][2] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]) - fcomp[Ix][Iy][(Iz - 1 + ftransS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz][9][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						dsgg = -fcomp[Ix][Iy][(Iz - 1 + ftransS[Ix + 1][Iy + 1][Iz][1][2])][i][1] * ftrans[Ix + 1][Iy + 1][Iz][5][2] * (fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]) - fcomp[Ix][Iy][(Iz - 1 + ftransS[Ix + 1][Iy + 1][Iz][1][2])][i][1] * ftrans[Ix + 1][Iy + 1][Iz][7][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						if (!ftransS[Ix + 1][Iy + 1][Iz][0][2]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix][Iy][Iz - 1] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}
						if (!ftransS[Ix + 1][Iy + 1][Iz][1][2]) {
							Jac1Row[JRowIndex] += (fphaseStat[Ix][Iy][Iz - 1] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;

						///////////////////////////////////////////////////////////////
						///////////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (fphaseStat[Ix][Iy][Iz - 1] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][RO][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][BMU][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Ny + Iz] * Makhraj - dMul * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix][Iy][Iz - 1][Nc][0] * gridDim[Nx + Ny + Iz - 1] * Coef*Makhraj - fDiffVisco(Ix, Iy, Iz - 1, Nc, 0)*gridDim[Nx + Ny + Iz - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Ny + Iz] * (fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][Nc][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz - 1] * (fblockFProps[Ix][Iy][Iz - 1][BGAM][0] * fdE[Ix][Iy][Iz - 1][Nc][0] / fblockFProps[Ix][Iy][Iz - 1][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][BGAM][0] * gridDim[Nx + Ny + Iz - 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

						if (ftransS[Ix + 1][Iy + 1][Iz][0][2]) {
							dRsidedp += (fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);
							dBsidedp = -fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);

							dRsidedp += (fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][1])*(Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							dBsidedp -= fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						}
						else {
							dRsidedp += fcomp[Ix][Iy][Iz - 1][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][1] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);
							dBsidedp = -(fcomp[Ix][Iy][Iz - 1][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);

							dRsidedp += fcomp[Ix][Iy][Iz - 1][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							dBsidedp -= (fcomp[Ix][Iy][Iz - 1][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][1])*(Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						}

						porpor2 = fporosity[Ix][Iy][Iz - 1] * (1 + cpor * (fP[Ix + 1][Iy + 1][Iz][1] - refP) + dcpor * (fP[Ix + 1][Iy + 1][Iz][1] - refP)*(fP[Ix + 1][Iy + 1][Iz][1] - refP));
						dPordp2 = fporosity[Ix][Iy][Iz - 1] * (cpor + 2 * dcpor*(fP[Ix + 1][Iy + 1][Iz][1] - refP));
						if (fcomp[Ix][Iy][Iz - 1][i][0]>fcomp[Ix][Iy][Iz][i][0]) {
							DupStream = fdiffusion[Ix][Iy][Iz - 1][i][0];
							dDdp = 0;
							dDdp2 = fDifDiffusion(Ix, Iy, Iz - 1, i, Nc, 0);
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][0];
							dDdp = dDiffdpl;
							dDdp2 = 0;
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix][Iy][Iz - 1] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = fblockFProps[Ix][Iy][Iz - 1][RO][0] * gridDim[Nx + Ny + Iz - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] * dCoefl;
						AAd *= (fsat[Ix][Iy][Iz - 1][1] * gridDim[Nx + Ny + Iz - 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Nx + Ny + Iz] * dCoefl) / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
						BBd = gridDim[Nx + Ny + Iz - 1] * Coef / porpor2 + gridDim[Nx + Ny + Iz] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Ix] * gridDim[Nx + Iy] / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = fcomp[Ix][Iy][Iz][i][0] - fcomp[Ix][Iy][Iz - 1][i][0];
						RSide -= DTran * DeltaX;

						dAAddp = fdE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Ny + Iz] * dCoefl;
						dAAddp2 = fdE[Ix][Iy][Iz - 1][Nc][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
						dBBddp = -dPordp * gridDim[Nx + Ny + Iz] * dCoefl / (porpor*porpor);
						dBBddp2 = -dPordp2 * gridDim[Nx + Ny + Iz - 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefl) {
							dRsidedp += NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += -NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}

						if (fphaseStat[Ix][Iy][Iz - 1] == 1) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][RO][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][BMU][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Ny + Iz] * Makhraj - dMug * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix][Iy][Iz - 1][Nc][1] * gridDim[Nx + Ny + Iz - 1] * Coef*Makhraj - fDiffVisco(Ix, Iy, Iz - 1, Nc, 1)*gridDim[Nx + Ny + Iz - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Ny + Iz] * (fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][Nc][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz - 1] * (fblockFProps[Ix][Iy][Iz - 1][BGAM][1] * fdE[Ix][Iy][Iz - 1][Nc][1] / fblockFProps[Ix][Iy][Iz - 1][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][BGAM][1] * gridDim[Nx + Ny + Iz - 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

						if (ftransS[Ix + 1][Iy + 1][Iz][1][2]) {
							dRsidedp += (fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);
							dBsidedp -= fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);

							dRsidedp += (fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							dBsidedp -= fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						}
						else {
							dRsidedp += fcomp[Ix][Iy][Iz - 1][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][2] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);
							dBsidedp -= (fcomp[Ix][Iy][Iz - 1][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);

							dRsidedp += fcomp[Ix][Iy][Iz - 1][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							dBsidedp -= (fcomp[Ix][Iy][Iz - 1][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						}
						//////////////////////////////////////////////////////////////////
						if (fcomp[Ix][Iy][Iz - 1][i][1]>fcomp[Ix][Iy][Iz][i][1]) {
							DupStream = fdiffusion[Ix][Iy][Iz - 1][i][1];
							dDdp = 0;
							dDdp2 = fDifDiffusion(Ix, Iy, Iz - 1, i, Nc, 1);
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][1];
							dDdp = dDiffdpg;
							dDdp2 = 0;
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix][Iy][Iz - 1] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = fblockFProps[Ix][Iy][Iz - 1][RO][1] * gridDim[Nx + Ny + Iz - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] * dCoefg;
						AAd *= (fsat[Ix][Iy][Iz - 1][2] * gridDim[Nx + Ny + Iz - 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Nx + Ny + Iz] * dCoefg) / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
						BBd = gridDim[Nx + Ny + Iz - 1] * Coef / porpor2 + gridDim[Nx + Ny + Iz] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Ix]*gridDim[Nx+Iy]/(gridDim[Nx+Ny+Iz-1]+gridDim[Nx+Ny+Iz]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = fcomp[Ix][Iy][Iz][i][1] - fcomp[Ix][Iy][Iz - 1][i][1];
						RSide -= DTran * DeltaX;

						dAAddp = fdE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Ny + Iz] * dCoefg;
						dAAddp2 = fdE[Ix][Iy][Iz - 1][Nc][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
						dBBddp = -dPordp * gridDim[Nx + Ny + Iz] * dCoefg / (porpor*porpor);
						dBBddp2 = -dPordp2 * gridDim[Nx + Ny + Iz - 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefg) {
							dRsidedp += NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += -NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}
						//////////////////////////////////////////////////////////////////
						Jac1Row[JRowIndex] = PCoeff * (-fcomp[Ix][Iy][(Iz - 1 + ftransS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz][0][2] - fcomp[Ix][Iy][(Iz - 1 + ftransS[Ix + 1][Iy + 1][Iz][1][2])][i][1] * ftrans[Ix + 1][Iy + 1][Iz][1][2] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;
					}

					Jac1Row[JRowIndex] = PCoeff * (dLsidedp + dRsidedp + fcomp[Ix][Iy][Iz][i][0] * PIo + gComp * PIg);
					Jac1Col[JRowIndex] = jacCol + (2 * Nc) - reCol;
					JRowIndex++;


					if (fphaseStat[Ix][Iy][Iz] != -1) {
						Jac1Row[JRowIndex] = -dRsidedSw;
						Jac1Col[JRowIndex] = jacCol + (2 * Nc + 1) - reCol;
						JRowIndex++;
						Jac1Row[JRowIndex] = dLsidedSo - dRsidedSo;
						Jac1Col[JRowIndex] = jacCol + (2 * Nc + 2) - reCol;
						JRowIndex++;
						//reCol1 = 0;
						reCol3 = 0;
					}
					else {
						//reCol1 = 2;
						reCol3 = 1;
					}

					if (fphaseStat[Ix][Iy][Iz] != 1) {
						Jac1Row[JRowIndex] = dLsidedSg - dRsidedSg;
						Jac1Col[JRowIndex] = jacCol + (2 * Nc + 3) - reCol - reCol3;
						JRowIndex++;
					}

					/////////////////////////////////////////////////Sadeq///////////////////////////////////
					if (phaseStat[Ix][Iy][Iz] == 1) {
						reColF1 = Nc;
						//reColF2
						//dRsideMdSo = 0;
						Jac1Row[JRowIndex] = dRsideMdSo;
						Jac1Col[JRowIndex] = MatrixEq + 2 * Nc + 2 - reColF1;
						JRowIndex++;
					}
					else if (phaseStat[Ix][Iy][Iz] == (-1)) {
						reColF1 = Nc;
						//reColF2 = Nc;
						//dRsideMdSg = 0;
						Jac1Row[JRowIndex] = dRsideMdSg;
						Jac1Col[JRowIndex] = MatrixEq + 2 * Nc + 2 - reColF1;
						JRowIndex++;
					}
					else {
						reColF1 = 0;
						//reColF2 = 0;
						//dRsideMdSo = 0;
						Jac1Row[JRowIndex] = dRsideMdSo;
						Jac1Col[JRowIndex] = MatrixEq + 2 * Nc + 2 - reColF1;
						JRowIndex++;
						//dRsideMdSg = 0;
						Jac1Row[JRowIndex] = dRsideMdSg;
						Jac1Col[JRowIndex] = MatrixEq + 2 * Nc + 3 - reColF1;
						JRowIndex++;
					}
					//dRsideMdp = 0;
					Jac1Row[JRowIndex] = PCoeff * dRsideMdp;
					Jac1Col[JRowIndex] = MatrixEq + 2 * Nc - reColF1;
					JRowIndex++;
					//dRsideMdSw = 0;
					Jac1Row[JRowIndex] = dRsideMdSw;
					Jac1Col[JRowIndex] = MatrixEq + 2 * Nc + 1 - reColF1;
					JRowIndex++;
					//////////////////////////Sadeq///////////////////////////////


					for (k = 0; k<Nc; k++) {
						dRsidedxl = 0;
						dRsidedxg = 0;
						dRsideMdxl = 0;
						dRsideMdxg = 0;

						dMul = fDiffVisco(Ix, Iy, Iz, k, 0);
						dMug = fDiffVisco(Ix, Iy, Iz, k, 1);
						dDiffdxl = fDifDiffusion(Ix, Iy, Iz, i, k, 0);
						dDiffdxg = fDifDiffusion(Ix, Iy, Iz, i, k, 1);


						if (k == i) {
							// Transfer function drside dxl dxg 
							// moshtagh transfer Function jabejaie naft nesbat be xl Matrix
							dRsideMdxl -= ZERO_CONV * SI_C * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
							dRsideMdxl -= ZERO_CONV * SI_C * dE[Ix][Iy][Iz][k][0] * comp[Ix][Iy][Iz][i][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
							dRsideMdxl -= ZERO_CONV * -SI_C * DiffVisco(Ix, Iy, Iz, k, 0) * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] * Mporpor / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor)*(blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) * (porpor + Mporpor);

							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (1)) {
								dRsideMdxl -= ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
								dRsideMdxl -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								dRsideMdxl -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsideMdxl -= ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
								dRsideMdxl -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								dRsideMdxl -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
							}

							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
							//	dRsideMdxl -= ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
								//dRsideMdxl -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
							//	dRsideMdxl -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
							}

							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0)) {
								//dRsideMdxl -= ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
								//dRsideMdxl -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								//dRsideMdxl -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);

								dRsideMdxl -= ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
								dRsideMdxl -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								dRsideMdxl -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1)) {
								dRsideMdxl -= ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
								dRsideMdxl -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								dRsideMdxl -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
							}

							//if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								//dRsideMdxl -= ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
								//dRsideMdxl -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								//dRsideMdxl -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
							//}


							// moshtagh transfer Function jabejaie naft nesbat be xl Fracture
							dRsidedxl -= ZERO_CONV * -SI_C * fDiffVisco(Ix, Iy, Iz, k, 0) * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] * porpor / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor)*(blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) * (porpor + Mporpor);

							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (1)) {
								dRsidedxl -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsidedxl -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
							}

							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (1)) {
								dRsidedxl -= ZERO_DIFF * fdE[Ix][Iy][Iz][k][0] * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
								dRsidedxl -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0];
								dRsidedxl -= ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1)) {
								dRsidedxl -= ZERO_DIFF * fdE[Ix][Iy][Iz][k][0] * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
								dRsidedxl -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0];
								dRsidedxl -= ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);

								dRsidedxl -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
							}

							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsidedxl -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
							}

							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsidedxl -= ZERO_DIFF * fdE[Ix][Iy][Iz][k][0] * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
								dRsidedxl -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0];
								dRsidedxl -= ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
							}

							// moshtagh transfer Function jabejaie gaz nesbat be xg Matrix
							dRsideMdxg -= ZERO_CONV * SI_C * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor) / (porpor + Mporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));
							dRsideMdxg -= ZERO_CONV * SI_C * dE[Ix][Iy][Iz][k][1] * comp[Ix][Iy][Iz][i][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor) / (porpor + Mporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));
							dRsideMdxg -= ZERO_CONV * -SI_C * DiffVisco(Ix, Iy, Iz, k, 1) * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] * Mporpor / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor)*(blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1])) * (porpor + Mporpor);

							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								dRsideMdxg -= ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
								dRsideMdxg -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								dRsideMdxg -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsideMdxg -= ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
								dRsideMdxg -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								dRsideMdxg -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
							}

							//if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (1)) {
								//dRsideMdxg -= ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
								//dRsideMdxg -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								//dRsideMdxg -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
							//}


							//if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1)) {
								//dRsideMdxg -= ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
								//dRsideMdxg -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								//dRsideMdxg -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
							//}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								dRsideMdxg -= ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
								dRsideMdxg -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								dRsideMdxg -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
							}

							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsideMdxg -= ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
								dRsideMdxg -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								dRsideMdxg -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

								//dRsideMdxg -= ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
								//dRsideMdxg -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								//dRsideMdxg -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
							}

							// moshtagh transfer Function jabejaie gaz nesbat be xg Fracture
							dRsidedxg -= ZERO_CONV * -SI_C * fDiffVisco(Ix, Iy, Iz, k, 1) * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] * porpor / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor)*(blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1])) * (porpor + Mporpor);

							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								dRsidedxg -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsidedxg -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
							}

							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								dRsidedxg -= ZERO_DIFF * fdE[Ix][Iy][Iz][k][1] * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
								dRsidedxg -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1];
								dRsidedxg -= ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								dRsidedxg -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];

								dRsidedxg -= ZERO_DIFF * fdE[Ix][Iy][Iz][k][1] * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
								dRsidedxg -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1];
								dRsidedxg -= ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
							}

							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsidedxg -= ZERO_DIFF * fdE[Ix][Iy][Iz][k][1] * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
								dRsidedxg -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1];
								dRsidedxg -= ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
							}

							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsidedxg -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
							}
							//

							dLsidedxl = fblockFProps[Ix][Iy][Iz][RO][0] + fcomp[Ix][Iy][Iz][i][0] * fdE[Ix][Iy][Iz][k][0];
							dLsidedxg = fblockFProps[Ix][Iy][Iz][RO][1] + fcomp[Ix][Iy][Iz][i][1] * fdE[Ix][Iy][Iz][k][1];
							if (iWell != (-1)) {
								dQdxl = 0;
								dQdxg = 0;
							}
							else {
								dQdxl = Qo;
								dQdxg = Qg;
							}

							if (Ix<(Nx - 1)) {
								if (fphaseStat[Ix + 1][Iy][Iz] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][RO][0] * gridDim[Ix + 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][BMU][0] * gridDim[Ix + 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][0] * gridDim[Ix] * Makhraj - dMul * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix + 1][Iy][Iz][k][0] * gridDim[Ix + 1] * Coef*Makhraj - fDiffVisco(Ix + 1, Iy, Iz, k, 0)*gridDim[Ix + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Ix] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][k][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Ix + 1] * (G_ACCG*fblockFProps[Ix + 1][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix + 1][Iy][Iz][BGAM][0] * fdE[Ix + 1][Iy][Iz][k][0] / fblockFProps[Ix + 1][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][BGAM][0] * gridDim[Ix + 1] * Coef) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

								if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][0]) {
									dRsidedxl += fcomp[Ix + 1][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][1] * Moshtaq*(fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = (ftrans[Ix + 1][Iy + 1][Iz + 1][0][0] + fcomp[Ix + 1][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][1] * Bmoshtaq)*(fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

									//dRsidedxl+=comp[Ix+1][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxl+=(trans[Ix+1][Iy+1][Iz+1][2][0]+comp[Ix+1][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}
								else {
									dRsidedxl += (ftrans[Ix + 1][Iy + 1][Iz + 1][0][0] + fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

									//dRsidedxl+=(trans[Ix+1][Iy+1][Iz+1][2][0]+comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxl+=comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}

								porpor2 = fporosity[Ix + 1][Iy][Iz] * (1 + cpor * (fP[Ix + 2][Iy + 1][Iz + 1][1] - refP) + dcpor * (fP[Ix + 2][Iy + 1][Iz + 1][1] - refP)*(fP[Ix + 2][Iy + 1][Iz + 1][1] - refP));
								if (fcomp[Ix + 1][Iy][Iz][i][0]>fcomp[Ix][Iy][Iz][i][0]) {
									DupStream = fdiffusion[Ix + 1][Iy][Iz][i][0];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix + 1, Iy, Iz, i, k, 0);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix + 1][Iy][Iz][RO][0] * gridDim[Ix + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] * dCoefl;
								AAd *= (fsat[Ix + 1][Iy][Iz][1] * gridDim[Ix + 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Ix] * dCoefl) / (gridDim[Ix + 1] + gridDim[Ix]);
								BBd = gridDim[Ix + 1] * Coef / porpor2 + gridDim[Ix] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz] / (gridDim[Ix + 1] + gridDim[Ix]);
								DeltaX = fcomp[Ix + 1][Iy][Iz][i][0] - fcomp[Ix][Iy][Iz][i][0];

								dAAddx = fdE[Ix][Iy][Iz][k][0] * gridDim[Ix] * dCoefl;
								dAAddx2 = fdE[Ix + 1][Iy][Iz][k][0] * gridDim[Ix + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + Iy * Nx + Ix + 1];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;



								if (fphaseStat[Ix + 1][Iy][Iz] == 1) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][RO][1] * gridDim[Ix + 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][BMU][1] * gridDim[Ix + 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][1] * gridDim[Ix] * Makhraj - dMug * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix + 1][Iy][Iz][k][1] * gridDim[Ix + 1] * Coef*Makhraj - fDiffVisco(Ix + 1, Iy, Iz, k, 1)*gridDim[Ix + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Ix] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][k][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Ix + 1] * (G_ACCG*fblockFProps[Ix + 1][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix + 1][Iy][Iz][BGAM][1] * fdE[Ix + 1][Iy][Iz][k][1] / fblockFProps[Ix + 1][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][BGAM][1] * gridDim[Ix + 1] * Coef) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

								if (ftransS[Ix + 1][Iy + 1][Iz + 1][1][0]) {
									dRsidedxg += fcomp[Ix + 1][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][2] * Moshtaq*(fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = (ftrans[Ix + 1][Iy + 1][Iz + 1][1][0] + fcomp[Ix + 1][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][2] * Bmoshtaq)*(fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

									//dRsidedxg+=comp[Ix+1][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxg+=(trans[Ix+1][Iy+1][Iz+1][3][0]+comp[Ix+1][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}
								else {
									dRsidedxg += (ftrans[Ix + 1][Iy + 1][Iz + 1][1][0] + fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

									//dRsidedxg+=(trans[Ix+1][Iy+1][Iz+1][3][0]+comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxg+=comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);

								}

								if (fcomp[Ix + 1][Iy][Iz][i][1]>fcomp[Ix][Iy][Iz][i][1]) {
									DupStream = fdiffusion[Ix + 1][Iy][Iz][i][1];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix + 1, Iy, Iz, i, k, 1);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix + 1][Iy][Iz][RO][1] * gridDim[Ix + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] * dCoefg;
								AAd *= (fsat[Ix + 1][Iy][Iz][2] * gridDim[Ix + 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Ix] * dCoefg) / (gridDim[Ix + 1] + gridDim[Ix]);
								BBd = gridDim[Ix + 1] * Coef / porpor2 + gridDim[Ix] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Nx+Iy]*gridDim[Nx+Ny+Iz]/(gridDim[Ix+1]+gridDim[Ix]);
								DeltaX = fcomp[Ix + 1][Iy][Iz][i][1] - fcomp[Ix][Iy][Iz][i][1];

								dAAddx = fdE[Ix][Iy][Iz][k][1] * gridDim[Ix] * dCoefg;
								dAAddx2 = fdE[Ix + 1][Iy][Iz][k][1] * gridDim[Ix + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								if (fphaseStat[Ix + 1][Iy][Iz]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;


							}

							if (Ix>0) {
								if (fphaseStat[Ix - 1][Iy][Iz] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][RO][0] * gridDim[Ix - 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][BMU][0] * gridDim[Ix - 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][0] * gridDim[Ix] * Makhraj - dMul * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix - 1][Iy][Iz][k][0] * gridDim[Ix - 1] * Coef*Makhraj - fDiffVisco(Ix - 1, Iy, Iz, k, 0)*gridDim[Ix - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Ix] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][k][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Ix - 1] * (G_ACCG*fblockFProps[Ix - 1][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix - 1][Iy][Iz][BGAM][0] * fdE[Ix - 1][Iy][Iz][k][0] / fblockFProps[Ix - 1][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][BGAM][0] * gridDim[Ix - 1] * Coef) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

								if (ftransS[Ix][Iy + 1][Iz + 1][0][0]) {
									dRsidedxl -= (ftrans[Ix][Iy + 1][Iz + 1][0][0] + fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);
									dBsidedxl = -fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);

									//dRsidedxl-=(trans[Ix][Iy+1][Iz+1][2][0]+comp[Ix][Iy][Iz][i][0]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1])*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
									//dBsidedxl-=comp[Ix][Iy][Iz][i][0]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								}
								else {
									dRsidedxl -= fcomp[Ix - 1][Iy][Iz][i][0] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][1] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);
									dBsidedxl = -(ftrans[Ix][Iy + 1][Iz + 1][0][0] + fcomp[Ix - 1][Iy][Iz][i][0] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);

									//dRsidedxl-=comp[Ix-1][Iy][Iz][i][0]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
									//dBsidedxl-=(trans[Ix][Iy+1][Iz+1][2][0]+comp[Ix-1][Iy][Iz][i][0]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][1])*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								}

								porpor2 = fporosity[Ix - 1][Iy][Iz] * (1 + cpor * (fP[Ix][Iy + 1][Iz + 1][1] - refP) + dcpor * (fP[Ix][Iy + 1][Iz + 1][1] - refP)*(fP[Ix][Iy + 1][Iz + 1][1] - refP));
								if (fcomp[Ix - 1][Iy][Iz][i][0]>fcomp[Ix][Iy][Iz][i][0]) {
									DupStream = fdiffusion[Ix - 1][Iy][Iz][i][0];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix - 1, Iy, Iz, i, k, 0);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix - 1][Iy][Iz][RO][0] * gridDim[Ix - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] * dCoefl;
								AAd *= (fsat[Ix - 1][Iy][Iz][1] * gridDim[Ix - 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Ix] * dCoefl) / (gridDim[Ix - 1] + gridDim[Ix]);
								BBd = gridDim[Ix - 1] * Coef / porpor2 + gridDim[Ix] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz] / (gridDim[Ix - 1] + gridDim[Ix]);
								DeltaX = fcomp[Ix - 1][Iy][Iz][i][0] - fcomp[Ix][Iy][Iz][i][0];
								//DeltaX = -fCalcDiffIntegral(Ix, Iy, Iz, i, -1, 0);

								dAAddx = fdE[Ix][Iy][Iz][k][0] * gridDim[Ix] * dCoefl;
								dAAddx2 = fdE[Ix - 1][Iy][Iz][k][0] * gridDim[Ix - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += -NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += -NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + Iy * Nx + Ix - 1];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;


								if (fphaseStat[Ix - 1][Iy][Iz] == 1) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][RO][1] * gridDim[Ix - 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][BMU][1] * gridDim[Ix - 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][1] * gridDim[Ix] * Makhraj - dMug * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix - 1][Iy][Iz][k][1] * gridDim[Ix - 1] * Coef*Makhraj - fDiffVisco(Ix - 1, Iy, Iz, k, 1)*gridDim[Ix - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Ix] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][k][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);
								BmoshtaqGama = gridDim[Ix - 1] * (G_ACCG*fblockFProps[Ix - 1][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix - 1][Iy][Iz][BGAM][1] * fdE[Ix - 1][Iy][Iz][k][1] / fblockFProps[Ix - 1][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][BGAM][1] * gridDim[Ix - 1] * Coef) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

								if (ftransS[Ix][Iy + 1][Iz + 1][1][0]) {
									dRsidedxg -= (ftrans[Ix][Iy + 1][Iz + 1][1][0] + fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);
									dBsidedxg = -fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);

									//dRsidedxg-=(trans[Ix][Iy+1][Iz+1][3][0]+comp[Ix][Iy][Iz][i][1]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
									//dBsidedxg-=comp[Ix][Iy][Iz][i][1]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								}
								else {
									dRsidedxg -= fcomp[Ix - 1][Iy][Iz][i][1] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][2] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);
									dBsidedxg = -(ftrans[Ix][Iy + 1][Iz + 1][1][0] + fcomp[Ix - 1][Iy][Iz][i][1] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);

									//dRsidedxg-=comp[Ix-1][Iy][Iz][i][1]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
									//dBsidedxg-=(trans[Ix][Iy+1][Iz+1][3][0]+comp[Ix-1][Iy][Iz][i][1]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								}


								if (fcomp[Ix - 1][Iy][Iz][i][1]>fcomp[Ix][Iy][Iz][i][1]) {
									DupStream = fdiffusion[Ix - 1][Iy][Iz][i][1];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix - 1, Iy, Iz, i, k, 1);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix - 1][Iy][Iz][RO][1] * gridDim[Ix - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] * dCoefg;
								AAd *= (fsat[Ix - 1][Iy][Iz][2] * gridDim[Ix - 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Ix] * dCoefg) / (gridDim[Ix - 1] + gridDim[Ix]);
								BBd = gridDim[Ix - 1] * Coef / porpor2 + gridDim[Ix] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Nx+Iy]*gridDim[Nx+Ny+Iz]/(gridDim[Ix-1]+gridDim[Ix]);
								DeltaX = fcomp[Ix - 1][Iy][Iz][i][1] - fcomp[Ix][Iy][Iz][i][1];

								dAAddx = fdE[Ix][Iy][Iz][k][1] * gridDim[Ix] * dCoefg;
								dAAddx2 = fdE[Ix - 1][Iy][Iz][k][1] * gridDim[Ix - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += -NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += -NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}


								if (fphaseStat[Ix - 1][Iy][Iz]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;

							}

							if (Iy<(Ny - 1)) {
								if (fphaseStat[Ix][Iy + 1][Iz] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][RO][0] * gridDim[Nx + Iy + 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][BMU][0] * gridDim[Nx + Iy + 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][0] * gridDim[Nx + Iy] * Makhraj - dMul * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix][Iy + 1][Iz][k][0] * gridDim[Nx + Iy + 1] * Coef*Makhraj - fDiffVisco(Ix, Iy + 1, Iz, k, 0)*gridDim[Nx + Iy + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][k][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Iy + 1] * (G_ACCG*fblockFProps[Ix][Iy + 1][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy + 1][Iz][BGAM][0] * fdE[Ix][Iy + 1][Iz][k][0] / fblockFProps[Ix][Iy + 1][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][BGAM][0] * gridDim[Nx + Iy + 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

								if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][1]) {
									dRsidedxl += fcomp[Ix][Iy + 1][Iz][i][0] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][1] * Moshtaq*(fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = (ftrans[Ix + 1][Iy + 1][Iz + 1][0][1] + fcomp[Ix][Iy + 1][Iz][i][0] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

									//dRsidedxl+=comp[Ix][Iy+1][Iz][i][0]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxl+=(trans[Ix+1][Iy+1][Iz+1][2][1]+comp[Ix][Iy+1][Iz][i][0]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}
								else {
									dRsidedxl += (ftrans[Ix + 1][Iy + 1][Iz + 1][0][1] + fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

									//dRsidedxl+=(trans[Ix+1][Iy+1][Iz+1][2][1]+comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxl+=comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}

								porpor2 = fporosity[Ix][Iy + 1][Iz] * (1 + cpor * (fP[Ix + 1][Iy + 2][Iz + 1][1] - refP) + dcpor * (fP[Ix + 1][Iy + 2][Iz + 1][1] - refP)*(fP[Ix + 1][Iy + 2][Iz + 1][1] - refP));
								if (fcomp[Ix][Iy + 1][Iz][i][0]>fcomp[Ix][Iy][Iz][i][0]) {
									DupStream = fdiffusion[Ix][Iy + 1][Iz][i][0];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix, Iy + 1, Iz, i, k, 0);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix][Iy + 1][Iz][RO][0] * gridDim[Nx + Iy + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] * dCoefl;
								AAd *= (fsat[Ix][Iy + 1][Iz][1] * gridDim[Nx + Iy + 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Nx + Iy] * dCoefl) / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
								BBd = gridDim[Nx + Iy + 1] * Coef / porpor2 + gridDim[Nx + Iy] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Ix] * gridDim[Nx + Ny + Iz] / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
								DeltaX = fcomp[Ix][Iy + 1][Iz][i][0] - fcomp[Ix][Iy][Iz][i][0];

								dAAddx = fdE[Ix][Iy][Iz][k][0] * gridDim[Nx + Iy] * dCoefl;
								dAAddx2 = fdE[Ix][Iy + 1][Iz][k][0] * gridDim[Nx + Iy + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + (Iy + 1)*Nx + Ix];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;


								if (fphaseStat[Ix][Iy + 1][Iz] == 1) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][RO][1] * gridDim[Nx + Iy + 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][BMU][1] * gridDim[Nx + Iy + 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][1] * gridDim[Nx + Iy] * Makhraj - dMug * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix][Iy + 1][Iz][k][1] * gridDim[Nx + Iy + 1] * Coef*Makhraj - fDiffVisco(Ix, Iy + 1, Iz, k, 1)*gridDim[Nx + Iy + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][k][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Iy + 1] * (G_ACCG*fblockFProps[Ix][Iy + 1][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy + 1][Iz][BGAM][1] * fdE[Ix][Iy + 1][Iz][k][1] / fblockFProps[Ix][Iy + 1][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][BGAM][1] * gridDim[Nx + Iy + 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

								if (ftransS[Ix + 1][Iy + 1][Iz + 1][1][1]) {
									dRsidedxg += fcomp[Ix][Iy + 1][Iz][i][1] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][2] * Moshtaq*(fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = (ftrans[Ix + 1][Iy + 1][Iz + 1][1][1] + fcomp[Ix][Iy + 1][Iz][i][1] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

									//dRsidedxg+=comp[Ix][Iy+1][Iz][i][1]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxg+=(trans[Ix+1][Iy+1][Iz+1][3][1]+comp[Ix][Iy+1][Iz][i][1]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}
								else {
									dRsidedxg += (ftrans[Ix + 1][Iy + 1][Iz + 1][1][1] + fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

									//dRsidedxg+=(trans[Ix+1][Iy+1][Iz+1][3][1]+comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxg+=comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);

								}

								if (fcomp[Ix][Iy + 1][Iz][i][1]>fcomp[Ix][Iy][Iz][i][1]) {
									DupStream = fdiffusion[Ix][Iy + 1][Iz][i][1];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix, Iy + 1, Iz, i, k, 1);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix][Iy + 1][Iz][RO][1] * gridDim[Nx + Iy + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] * dCoefg;
								AAd *= (fsat[Ix][Iy + 1][Iz][2] * gridDim[Nx + Iy + 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Nx + Iy] * dCoefg) / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
								BBd = gridDim[Nx + Iy + 1] * Coef / porpor2 + gridDim[Nx + Iy] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Ix]*gridDim[Nx+Ny+Iz]/(gridDim[Nx+Iy+1]+gridDim[Nx+Iy]);
								DeltaX = fcomp[Ix][Iy + 1][Iz][i][1] - fcomp[Ix][Iy][Iz][i][1];

								dAAddx = fdE[Ix][Iy][Iz][k][1] * gridDim[Nx + Iy] * dCoefg;
								dAAddx2 = fdE[Ix][Iy + 1][Iz][k][1] * gridDim[Nx + Iy + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								if (fphaseStat[Ix][Iy + 1][Iz]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;
							}

							if (Iy>0) {
								if (fphaseStat[Ix][Iy - 1][Iz] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][RO][0] * gridDim[Nx + Iy - 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][BMU][0] * gridDim[Nx + Iy - 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][0] * gridDim[Nx + Iy] * Makhraj - dMul * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix][Iy - 1][Iz][k][0] * gridDim[Nx + Iy - 1] * Coef*Makhraj - fDiffVisco(Ix, Iy - 1, Iz, k, 0)*gridDim[Nx + Iy - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][k][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Iy - 1] * (G_ACCG*fblockFProps[Ix][Iy - 1][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy - 1][Iz][BGAM][0] * fdE[Ix][Iy - 1][Iz][k][0] / fblockFProps[Ix][Iy - 1][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][BGAM][0] * gridDim[Nx + Iy - 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

								if (ftransS[Ix + 1][Iy][Iz + 1][0][1]) {
									dRsidedxl -= (ftrans[Ix + 1][Iy][Iz + 1][0][1] + fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);
									dBsidedxl = -fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);

									//dRsidedxl-=(trans[Ix+1][Iy][Iz+1][2][1]+comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][1])*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
									//dBsidedxl-=comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								}
								else {
									dRsidedxl -= fcomp[Ix][Iy - 1][Iz][i][0] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][1] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);
									dBsidedxl = -(ftrans[Ix + 1][Iy][Iz + 1][0][1] + fcomp[Ix][Iy - 1][Iz][i][0] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);

									//dRsidedxl-=comp[Ix][Iy-1][Iz][i][0]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
									//dBsidedxl-=(trans[Ix+1][Iy][Iz+1][2][1]+comp[Ix][Iy-1][Iz][i][0]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][1])*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								}

								porpor2 = fporosity[Ix][Iy - 1][Iz] * (1 + cpor * (fP[Ix + 1][Iy][Iz + 1][1] - refP) + dcpor * (fP[Ix + 1][Iy][Iz + 1][1] - refP)*(fP[Ix + 1][Iy][Iz + 1][1] - refP));
								if (fcomp[Ix][Iy - 1][Iz][i][0]>fcomp[Ix][Iy][Iz][i][0]) {
									DupStream = fdiffusion[Ix][Iy - 1][Iz][i][0];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix, Iy - 1, Iz, i, k, 0);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix][Iy - 1][Iz][RO][0] * gridDim[Nx + Iy - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] * dCoefl;
								AAd *= (fsat[Ix][Iy - 1][Iz][1] * gridDim[Nx + Iy - 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Nx + Iy] * dCoefl) / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
								BBd = gridDim[Nx + Iy - 1] * Coef / porpor2 + gridDim[Nx + Iy] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Ix] * gridDim[Nx + Ny + Iz] / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
								DeltaX = fcomp[Ix][Iy - 1][Iz][i][0] - fcomp[Ix][Iy][Iz][i][0];

								dAAddx = fdE[Ix][Iy][Iz][k][0] * gridDim[Nx + Iy] * dCoefl;
								dAAddx2 = fdE[Ix][Iy - 1][Iz][k][0] * gridDim[Nx + Iy - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += -NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += -NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + (Iy - 1)*Nx + Ix];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;


								if (fphaseStat[Ix][Iy - 1][Iz] == 1) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][RO][1] * gridDim[Nx + Iy - 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][BMU][1] * gridDim[Nx + Iy - 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][1] * gridDim[Nx + Iy] * Makhraj - dMug * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix][Iy - 1][Iz][k][1] * gridDim[Nx + Iy - 1] * Coef*Makhraj - fDiffVisco(Ix, Iy - 1, Iz, k, 1)*gridDim[Nx + Iy - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][k][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Iy - 1] * (G_ACCG*fblockFProps[Ix][Iy - 1][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy - 1][Iz][BGAM][1] * fdE[Ix][Iy - 1][Iz][k][1] / fblockFProps[Ix][Iy - 1][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][BGAM][1] * gridDim[Nx + Iy - 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

								if (ftransS[Ix + 1][Iy][Iz + 1][1][1]) {
									dRsidedxg -= (ftrans[Ix + 1][Iy][Iz + 1][1][1] + fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);
									dBsidedxg = -fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);

									//dRsidedxg-=(trans[Ix+1][Iy][Iz+1][3][1]+comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
									//dBsidedxg-=comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								}
								else {
									dRsidedxg -= fcomp[Ix][Iy - 1][Iz][i][1] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][2] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);
									dBsidedxg = -(ftrans[Ix + 1][Iy][Iz + 1][1][1] + fcomp[Ix][Iy - 1][Iz][i][1] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);

									//dRsidedxg-=comp[Ix][Iy-1][Iz][i][1]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
									//dBsidedxg-=(trans[Ix+1][Iy][Iz+1][3][1]+comp[Ix][Iy-1][Iz][i][1]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								}

								if (fcomp[Ix][Iy - 1][Iz][i][1]>fcomp[Ix][Iy][Iz][i][1]) {
									DupStream = fdiffusion[Ix][Iy - 1][Iz][i][1];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix, Iy - 1, Iz, i, k, 1);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix][Iy - 1][Iz][RO][1] * gridDim[Nx + Iy - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] * dCoefg;
								AAd *= (fsat[Ix][Iy - 1][Iz][2] * gridDim[Nx + Iy - 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Nx + Iy] * dCoefg) / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
								BBd = gridDim[Nx + Iy - 1] * Coef / porpor2 + gridDim[Nx + Iy] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Ix]*gridDim[Nx+Ny+Iz]/(gridDim[Nx+Iy-1]+gridDim[Nx+Iy]);
								DeltaX = fcomp[Ix][Iy - 1][Iz][i][1] - fcomp[Ix][Iy][Iz][i][1];

								dAAddx = fdE[Ix][Iy][Iz][k][1] * gridDim[Nx + Iy] * dCoefg;
								dAAddx2 = fdE[Ix][Iy - 1][Iz][k][1] * gridDim[Nx + Iy - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += -NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += -NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}



								if (fphaseStat[Ix][Iy - 1][Iz]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;
							}

							if (Iz<(Nz - 1)) {
								if (fphaseStat[Ix][Iy][Iz + 1] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][RO][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][BMU][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][0] * gridDim[Nx + Ny + Iz] * Makhraj - dMul * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix][Iy][Iz + 1][k][0] * gridDim[Nx + Ny + Iz + 1] * Coef*Makhraj - fDiffVisco(Ix, Iy, Iz + 1, k, 0)*gridDim[Nx + Ny + Iz + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][k][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz + 1] * (G_ACCG*fblockFProps[Ix][Iy][Iz + 1][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz + 1][BGAM][0] * fdE[Ix][Iy][Iz + 1][k][0] / fblockFProps[Ix][Iy][Iz + 1][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][BGAM][0] * gridDim[Nx + Ny + Iz + 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

								if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][2]) {
									dRsidedxl += fcomp[Ix][Iy][Iz + 1][i][0] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][1] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = (ftrans[Ix + 1][Iy + 1][Iz + 1][0][2] + fcomp[Ix][Iy][Iz + 1][i][0] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

									dRsidedxl += fcomp[Ix][Iy][Iz + 1][i][0] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz + 1][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
									dBsidedxl += (ftrans[Ix + 1][Iy + 1][Iz + 1][2][2] + fcomp[Ix][Iy][Iz + 1][i][0] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
								}
								else {
									dRsidedxl += (ftrans[Ix + 1][Iy + 1][Iz + 1][0][2] + fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

									dRsidedxl += (ftrans[Ix + 1][Iy + 1][Iz + 1][2][2] + fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
									dBsidedxl += fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
								}

								porpor2 = fporosity[Ix][Iy][Iz + 1] * (1 + cpor * (fP[Ix + 1][Iy + 1][Iz + 2][1] - refP) + dcpor * (fP[Ix + 1][Iy + 1][Iz + 2][1] - refP)*(fP[Ix + 1][Iy + 1][Iz + 2][1] - refP));
								if (fcomp[Ix][Iy][Iz + 1][i][0]>fcomp[Ix][Iy][Iz][i][0]) {
									DupStream = fdiffusion[Ix][Iy][Iz + 1][i][0];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix, Iy, Iz + 1, i, k, 0);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix][Iy][Iz + 1][RO][0] * gridDim[Nx + Ny + Iz + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] * dCoefl;
								AAd *= (fsat[Ix][Iy][Iz + 1][1] * gridDim[Nx + Ny + Iz + 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Nx + Ny + Iz] * dCoefl) / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
								BBd = gridDim[Nx + Ny + Iz + 1] * Coef / porpor2 + gridDim[Nx + Ny + Iz] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Ix] * gridDim[Nx + Iy] / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
								DeltaX = fcomp[Ix][Iy][Iz + 1][i][0] - fcomp[Ix][Iy][Iz][i][0];

								dAAddx = fdE[Ix][Iy][Iz][k][0] * gridDim[Nx + Ny + Iz] * dCoefl;
								dAAddx2 = fdE[Ix][Iy][Iz + 1][k][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								mBLNo = preConRow[Nx*Ny*Nz + (Iz + 1)*(Nx*Ny) + Iy * Nx + Ix];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;


								if (fphaseStat[Ix][Iy][Iz + 1] == 1) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][RO][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][BMU][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][1] * gridDim[Nx + Ny + Iz] * Makhraj - dMug * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix][Iy][Iz + 1][k][1] * gridDim[Nx + Ny + Iz + 1] * Coef*Makhraj - fDiffVisco(Ix, Iy, Iz + 1, k, 1)*gridDim[Nx + Ny + Iz + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][k][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz + 1] * (G_ACCG*fblockFProps[Ix][Iy][Iz + 1][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz + 1][BGAM][1] * fdE[Ix][Iy][Iz + 1][k][1] / fblockFProps[Ix][Iy][Iz + 1][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][BGAM][1] * gridDim[Nx + Ny + Iz + 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

								if (ftransS[Ix + 1][Iy + 1][Iz + 1][1][2]) {
									dRsidedxg += fcomp[Ix][Iy][Iz + 1][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][2] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = (ftrans[Ix + 1][Iy + 1][Iz + 1][1][2] + fcomp[Ix][Iy][Iz + 1][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

									dRsidedxg += fcomp[Ix][Iy][Iz + 1][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
									dBsidedxg += (ftrans[Ix + 1][Iy + 1][Iz + 1][3][2] + fcomp[Ix][Iy][Iz + 1][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
								}
								else {
									dRsidedxg += (ftrans[Ix + 1][Iy + 1][Iz + 1][1][2] + fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

									dRsidedxg += (ftrans[Ix + 1][Iy + 1][Iz + 1][3][2] + fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
									dBsidedxg += fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);

								}

								if (fcomp[Ix][Iy][Iz + 1][i][1]>fcomp[Ix][Iy][Iz][i][1]) {
									DupStream = fdiffusion[Ix][Iy][Iz + 1][i][1];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix, Iy, Iz + 1, i, k, 1);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix][Iy][Iz + 1][RO][1] * gridDim[Nx + Ny + Iz + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] * dCoefg;
								AAd *= (fsat[Ix][Iy][Iz + 1][2] * gridDim[Nx + Ny + Iz + 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Nx + Ny + Iz] * dCoefg) / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
								BBd = gridDim[Nx + Ny + Iz + 1] * Coef / porpor2 + gridDim[Nx + Ny + Iz] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Ix]*gridDim[Nx+Iy]/(gridDim[Nx+Ny+Iz+1]+gridDim[Nx+Ny+Iz]);
								DeltaX = fcomp[Ix][Iy][Iz + 1][i][1] - fcomp[Ix][Iy][Iz][i][1];

								dAAddx = fdE[Ix][Iy][Iz][k][1] * gridDim[Nx + Ny + Iz] * dCoefg;
								dAAddx2 = fdE[Ix][Iy][Iz + 1][k][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}


								if (fphaseStat[Ix][Iy][Iz + 1]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;
							}

							if (Iz>0) {
								if (fphaseStat[Ix][Iy][Iz - 1] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][RO][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][BMU][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][0] * gridDim[Nx + Ny + Iz] * Makhraj - dMul * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix][Iy][Iz - 1][k][0] * gridDim[Nx + Ny + Iz - 1] * Coef*Makhraj - fDiffVisco(Ix, Iy, Iz - 1, k, 0)*gridDim[Nx + Ny + Iz - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][k][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz - 1] * (G_ACCG*fblockFProps[Ix][Iy][Iz - 1][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz - 1][BGAM][0] * fdE[Ix][Iy][Iz - 1][k][0] / fblockFProps[Ix][Iy][Iz - 1][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][BGAM][0] * gridDim[Nx + Ny + Iz - 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

								if (ftransS[Ix + 1][Iy + 1][Iz][0][2]) {
									dRsidedxl -= (ftrans[Ix + 1][Iy + 1][Iz][0][2] + fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);
									dBsidedxl = -fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);

									dRsidedxl -= (ftrans[Ix + 1][Iy + 1][Iz][2][2] + fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
									dBsidedxl -= fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								}
								else {
									dRsidedxl -= fcomp[Ix][Iy][Iz - 1][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][1] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);
									dBsidedxl = -(ftrans[Ix + 1][Iy + 1][Iz][0][2] + fcomp[Ix][Iy][Iz - 1][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);

									dRsidedxl -= fcomp[Ix][Iy][Iz - 1][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
									dBsidedxl -= (ftrans[Ix + 1][Iy + 1][Iz][2][2] + fcomp[Ix][Iy][Iz - 1][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								}

								porpor2 = fporosity[Ix][Iy][Iz - 1] * (1 + cpor * (fP[Ix + 1][Iy + 1][Iz][1] - refP) + dcpor * (fP[Ix + 1][Iy + 1][Iz][1] - refP)*(fP[Ix + 1][Iy + 1][Iz][1] - refP));
								if (fcomp[Ix][Iy][Iz - 1][i][0]>fcomp[Ix][Iy][Iz][i][0]) {
									DupStream = fdiffusion[Ix][Iy][Iz - 1][i][0];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix, Iy, Iz - 1, i, k, 0);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix][Iy][Iz - 1][RO][0] * gridDim[Nx + Ny + Iz - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] * dCoefl;
								AAd *= (fsat[Ix][Iy][Iz - 1][1] * gridDim[Nx + Ny + Iz - 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Nx + Ny + Iz] * dCoefl) / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
								BBd = gridDim[Nx + Ny + Iz - 1] * Coef / porpor2 + gridDim[Nx + Ny + Iz] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Ix] * gridDim[Nx + Iy] / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
								DeltaX = fcomp[Ix][Iy][Iz - 1][i][0] - fcomp[Ix][Iy][Iz][i][0];

								dAAddx = fdE[Ix][Iy][Iz][k][0] * gridDim[Nx + Ny + Iz] * dCoefl;
								dAAddx2 = fdE[Ix][Iy][Iz - 1][k][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += -NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += -NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								mBLNo = preConRow[Nx*Ny*Nz + (Iz - 1)*(Nx*Ny) + Iy * Nx + Ix];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;


								if (fphaseStat[Ix][Iy][Iz - 1] == 1) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][RO][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][BMU][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][1] * gridDim[Nx + Ny + Iz] * Makhraj - dMug * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix][Iy][Iz - 1][k][1] * gridDim[Nx + Ny + Iz - 1] * Coef*Makhraj - fDiffVisco(Ix, Iy, Iz - 1, k, 1)*gridDim[Nx + Ny + Iz - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][k][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz - 1] * (G_ACCG*fblockFProps[Ix][Iy][Iz - 1][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz - 1][BGAM][1] * fdE[Ix][Iy][Iz - 1][k][1] / fblockFProps[Ix][Iy][Iz - 1][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][BGAM][1] * gridDim[Nx + Ny + Iz - 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

								if (ftransS[Ix + 1][Iy + 1][Iz][1][2]) {
									dRsidedxg -= (ftrans[Ix + 1][Iy + 1][Iz][1][2] + fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);
									dBsidedxg = -fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);

									dRsidedxg -= (ftrans[Ix + 1][Iy + 1][Iz][3][2] + fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
									dBsidedxg -= fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								}
								else {
									dRsidedxg -= fcomp[Ix][Iy][Iz - 1][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][2] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);
									dBsidedxg = -(ftrans[Ix + 1][Iy + 1][Iz][1][2] + fcomp[Ix][Iy][Iz - 1][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);

									dRsidedxg -= fcomp[Ix][Iy][Iz - 1][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
									dBsidedxg -= (ftrans[Ix + 1][Iy + 1][Iz][3][2] + fcomp[Ix][Iy][Iz - 1][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								}

								if (fcomp[Ix][Iy][Iz - 1][i][1]>fcomp[Ix][Iy][Iz][i][1]) {
									DupStream = fdiffusion[Ix][Iy][Iz - 1][i][1];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix, Iy, Iz - 1, i, k, 1);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix][Iy][Iz - 1][RO][1] * gridDim[Nx + Ny + Iz - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] * dCoefg;
								AAd *= (fsat[Ix][Iy][Iz - 1][2] * gridDim[Nx + Ny + Iz - 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Nx + Ny + Iz] * dCoefg) / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
								BBd = gridDim[Nx + Ny + Iz - 1] * Coef / porpor2 + gridDim[Nx + Ny + Iz] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Ix]*gridDim[Nx+Iy]/(gridDim[Nx+Ny+Iz-1]+gridDim[Nx+Ny+Iz]);
								DeltaX = fcomp[Ix][Iy][Iz - 1][i][1] - fcomp[Ix][Iy][Iz][i][1];

								dAAddx = fdE[Ix][Iy][Iz][k][1] * gridDim[Nx + Ny + Iz] * dCoefg;
								dAAddx2 = fdE[Ix][Iy][Iz - 1][k][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += -NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += -NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}


								if (fphaseStat[Ix][Iy][Iz - 1]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;
							}

							/////////////////////////////////////////////////Sadeq//k=i/////////////////////////////////
							if (phaseStat[Ix][Iy][Iz] == 1) {
								//dRsideMdxl = 0;
								Jac1Row[JRowIndex] = dRsideMdxl;
								Jac1Col[JRowIndex] = MatrixEq + k;
								JRowIndex++;
							}
							else if (phaseStat[Ix][Iy][Iz] == (-1)) {
								//dRsideMdxg = 0;
								Jac1Row[JRowIndex] = dRsideMdxg;
								Jac1Col[JRowIndex] = MatrixEq + k;
								JRowIndex++;
							}
							else {
								//dRsideMdxl = 0;
								Jac1Row[JRowIndex] = dRsideMdxl;
								Jac1Col[JRowIndex] = MatrixEq + k;
								JRowIndex++;
								//dRsideMdxg = 0;
								Jac1Row[JRowIndex] = dRsideMdxg;
								Jac1Col[JRowIndex] = MatrixEq + Nc + k;
								JRowIndex++;
							}
							////////////////////////sadeq/////////////////////////
						}
						else {
							// Transfer function drside dxl dxg 
							// moshtagh transfer Function jabejaie naft nesbat be xl Matrix
							//dRsideMdxl -= ZERO_CONV * SI_C * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
							dRsideMdxl -= ZERO_CONV * SI_C * dE[Ix][Iy][Iz][k][0] * comp[Ix][Iy][Iz][i][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
							dRsideMdxl -= ZERO_CONV * -SI_C * DiffVisco(Ix, Iy, Iz, k, 0) * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] * Mporpor / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor)*(blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) * (porpor + Mporpor);

							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (1)) {
								dRsideMdxl -= ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
								//dRsideMdxl -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								dRsideMdxl -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsideMdxl -= ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
								//dRsideMdxl -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								dRsideMdxl -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
							}

							//if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								//dRsideMdxl -= ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
								//dRsideMdxl -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								//dRsideMdxl -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
							//}

							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0)) {
								//dRsideMdxl -= ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
								//dRsideMdxl -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								//dRsideMdxl -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);

								dRsideMdxl -= ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
								//dRsideMdxl -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								dRsideMdxl -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1)) {
								dRsideMdxl -= ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
								//dRsideMdxl -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								dRsideMdxl -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
							}

							//if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								//dRsideMdxl -= ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
								//dRsideMdxl -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								//dRsideMdxl -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
							//}


							// moshtagh transfer Function jabejaie naft nesbat be xl Fracture
							dRsidedxl -= ZERO_CONV * -SI_C * fDiffVisco(Ix, Iy, Iz, k, 0) * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] * porpor / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor)*(blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) * (porpor + Mporpor);

							//if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (1)) {
								//dRsidedxl -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
							//}

							//if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0)) {
								//dRsidedxl -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
							//}

							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (1)) {
								dRsidedxl -= ZERO_DIFF * fdE[Ix][Iy][Iz][k][0] * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
								//dRsidedxl -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0];
								dRsidedxl -= ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1)) {
								dRsidedxl -= ZERO_DIFF * fdE[Ix][Iy][Iz][k][0] * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
								//dRsidedxl -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0];
								dRsidedxl -= ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);

								//dRsidedxl -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
							}

							//if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0)) {
								//dRsidedxl -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
							//}

							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsidedxl -= ZERO_DIFF * fdE[Ix][Iy][Iz][k][0] * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
								//dRsidedxl -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0];
								dRsidedxl -= ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
							}

							// moshtagh transfer Function jabejaie gaz nesbat be xg Matrix
							//dRsideMdxg -= ZERO_CONV * SI_C * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor) / (porpor + Mporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));
							dRsideMdxg -= ZERO_CONV * SI_C * dE[Ix][Iy][Iz][k][1] * comp[Ix][Iy][Iz][i][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor) / (porpor + Mporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));
							dRsideMdxg -= ZERO_CONV * -SI_C * DiffVisco(Ix, Iy, Iz, k, 1) * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] * Mporpor / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor)*(blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1])) * (porpor + Mporpor);

							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								dRsideMdxg -= ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
								//dRsideMdxg -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								dRsideMdxg -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsideMdxg -= ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
								//dRsideMdxg -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								dRsideMdxg -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
							}

							//if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (1)) {
								//dRsideMdxg -= ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
								//dRsideMdxg -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								//dRsideMdxg -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
							//}


							//if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1)) {
								//dRsideMdxg -= ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
								//dRsideMdxg -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								//dRsideMdxg -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
							//}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								dRsideMdxg -= ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
								//dRsideMdxg -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								dRsideMdxg -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
							}

							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsideMdxg -= ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
								//dRsideMdxg -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								dRsideMdxg -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

								//dRsideMdxg -= ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
								//dRsideMdxg -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								//dRsideMdxg -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
							}

							// moshtagh transfer Function jabejaie gaz nesbat be xg Fracture
							dRsidedxg -= ZERO_CONV * -SI_C * fDiffVisco(Ix, Iy, Iz, k, 1) * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] * porpor / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor)*(blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1])) * (porpor + Mporpor);

							//if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								//dRsidedxg -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
							//}

							//if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0)) {
								//dRsidedxg -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
							//}

							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								dRsidedxg -= ZERO_DIFF * fdE[Ix][Iy][Iz][k][1] * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
								//dRsidedxg -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1];
								dRsidedxg -= ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								//dRsidedxg -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];

								dRsidedxg -= ZERO_DIFF * fdE[Ix][Iy][Iz][k][1] * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
								//dRsidedxg -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1];
								dRsidedxg -= ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
							}

							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsidedxg -= ZERO_DIFF * fdE[Ix][Iy][Iz][k][1] * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
								//dRsidedxg -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1];
								dRsidedxg -= ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
							}

							//if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0)) {
								//dRsidedxg -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
							//}
							//

							dLsidedxl = fcomp[Ix][Iy][Iz][i][0] * fdE[Ix][Iy][Iz][k][0];
							dLsidedxg = fcomp[Ix][Iy][Iz][i][1] * fdE[Ix][Iy][Iz][k][1];
							dQdxl = 0;
							dQdxg = 0;



							if (Ix<(Nx - 1)) {
								if (fphaseStat[Ix + 1][Iy][Iz] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][RO][0] * gridDim[Ix + 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][BMU][0] * gridDim[Ix + 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][0] * gridDim[Ix] * Makhraj - dMul * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix + 1][Iy][Iz][k][0] * gridDim[Ix + 1] * Coef*Makhraj - fDiffVisco(Ix + 1, Iy, Iz, k, 0)*gridDim[Ix + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Ix] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][k][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Ix + 1] * (G_ACCG*fblockFProps[Ix + 1][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix + 1][Iy][Iz][BGAM][0] * fdE[Ix + 1][Iy][Iz][k][0] / fblockFProps[Ix + 1][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][BGAM][0] * gridDim[Ix + 1] * Coef) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

								if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][0]) {
									dRsidedxl += fcomp[Ix + 1][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][1] * Moshtaq*(fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = (fcomp[Ix + 1][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][1] * Bmoshtaq)*(fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

									//dRsidedxl+=comp[Ix+1][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxl+=(comp[Ix+1][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}
								else {
									dRsidedxl += (fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][0] * frelPerm[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][0] * frelPerm[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

									//dRsidedxl+=(comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxl+=comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}

								porpor2 = fporosity[Ix + 1][Iy][Iz] * (1 + cpor * (fP[Ix + 2][Iy + 1][Iz + 1][1] - refP) + dcpor * (fP[Ix + 2][Iy + 1][Iz + 1][1] - refP)*(fP[Ix + 2][Iy + 1][Iz + 1][1] - refP));
								if (fcomp[Ix + 1][Iy][Iz][i][0]>fcomp[Ix][Iy][Iz][i][0]) {
									DupStream = fdiffusion[Ix + 1][Iy][Iz][i][0];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix + 1, Iy, Iz, i, k, 0);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix + 1][Iy][Iz][RO][0] * gridDim[Ix + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] * dCoefl;
								AAd *= (fsat[Ix + 1][Iy][Iz][1] * gridDim[Ix + 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Ix] * dCoefl) / (gridDim[Ix + 1] + gridDim[Ix]);
								BBd = gridDim[Ix + 1] * Coef / porpor2 + gridDim[Ix] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz] / (gridDim[Ix + 1] + gridDim[Ix]);
								DeltaX = fcomp[Ix + 1][Iy][Iz][i][0] - fcomp[Ix][Iy][Iz][i][0];

								dAAddx = fdE[Ix][Iy][Iz][k][0] * gridDim[Ix] * dCoefl;
								dAAddx2 = fdE[Ix + 1][Iy][Iz][k][0] * gridDim[Ix + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + Iy * Nx + Ix + 1];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;


								if (fphaseStat[Ix + 1][Iy][Iz] == 1) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][RO][1] * gridDim[Ix + 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][BMU][1] * gridDim[Ix + 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][1] * gridDim[Ix] * Makhraj - dMug * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix + 1][Iy][Iz][k][1] * gridDim[Ix + 1] * Coef*Makhraj - fDiffVisco(Ix + 1, Iy, Iz, k, 1)*gridDim[Ix + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Ix] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][k][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Ix + 1] * (G_ACCG*fblockFProps[Ix + 1][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix + 1][Iy][Iz][BGAM][1] * fdE[Ix + 1][Iy][Iz][k][1] / fblockFProps[Ix + 1][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][BGAM][1] * gridDim[Ix + 1] * Coef) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

								if (ftransS[Ix + 1][Iy + 1][Iz + 1][1][0]) {
									dRsidedxg += fcomp[Ix + 1][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][2] * Moshtaq*(fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = (fcomp[Ix + 1][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][2] * Bmoshtaq)*(fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

									//dRsidedxg+=comp[Ix+1][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxg+=(comp[Ix+1][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}
								else {
									dRsidedxg += (fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

									//dRsidedxg+=(comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxg+=comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);

								}

								if (fcomp[Ix + 1][Iy][Iz][i][1]>fcomp[Ix][Iy][Iz][i][1]) {
									DupStream = fdiffusion[Ix + 1][Iy][Iz][i][1];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix + 1, Iy, Iz, i, k, 1);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix + 1][Iy][Iz][RO][1] * gridDim[Ix + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] * dCoefg;
								AAd *= (fsat[Ix + 1][Iy][Iz][2] * gridDim[Ix + 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Ix] * dCoefg) / (gridDim[Ix + 1] + gridDim[Ix]);
								BBd = gridDim[Ix + 1] * Coef / porpor2 + gridDim[Ix] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Nx+Iy]*gridDim[Nx+Ny+Iz]/(gridDim[Ix+1]+gridDim[Ix]);
								DeltaX = fcomp[Ix + 1][Iy][Iz][i][1] - fcomp[Ix][Iy][Iz][i][1];

								dAAddx = fdE[Ix][Iy][Iz][k][1] * gridDim[Ix] * dCoefg;
								dAAddx2 = fdE[Ix + 1][Iy][Iz][k][1] * gridDim[Ix + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}


								if (fphaseStat[Ix + 1][Iy][Iz]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;
							}

							if (Ix>0) {
								if (fphaseStat[Ix - 1][Iy][Iz] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][RO][0] * gridDim[Ix - 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][BMU][0] * gridDim[Ix - 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][0] * gridDim[Ix] * Makhraj - dMul * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix - 1][Iy][Iz][k][0] * gridDim[Ix - 1] * Coef*Makhraj - fDiffVisco(Ix - 1, Iy, Iz, k, 0)*gridDim[Ix - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Ix] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][k][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Ix - 1] * (G_ACCG*fblockFProps[Ix - 1][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix - 1][Iy][Iz][BGAM][0] * fdE[Ix - 1][Iy][Iz][k][0] / fblockFProps[Ix - 1][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][BGAM][0] * gridDim[Ix - 1] * Coef) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

								if (ftransS[Ix][Iy + 1][Iz + 1][0][0]) {
									dRsidedxl -= (fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);
									dBsidedxl = -fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);

									//dRsidedxl-=(comp[Ix][Iy][Iz][i][0]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1])*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
									//dBsidedxl-=comp[Ix][Iy][Iz][i][0]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								}
								else {
									dRsidedxl -= fcomp[Ix - 1][Iy][Iz][i][0] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][1] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);
									dBsidedxl = -(fcomp[Ix - 1][Iy][Iz][i][0] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);

									//dRsidedxl-=comp[Ix-1][Iy][Iz][i][0]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
									//dBsidedxl-=(comp[Ix-1][Iy][Iz][i][0]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][1])*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								}

								porpor2 = fporosity[Ix - 1][Iy][Iz] * (1 + cpor * (fP[Ix][Iy + 1][Iz + 1][1] - refP) + dcpor * (fP[Ix][Iy + 1][Iz + 1][1] - refP)*(fP[Ix][Iy + 1][Iz + 1][1] - refP));
								if (fcomp[Ix - 1][Iy][Iz][i][0]>fcomp[Ix][Iy][Iz][i][0]) {
									DupStream = fdiffusion[Ix - 1][Iy][Iz][i][0];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix - 1, Iy, Iz, i, k, 0);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix - 1][Iy][Iz][RO][0] * gridDim[Ix - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] * dCoefl;
								AAd *= (fsat[Ix - 1][Iy][Iz][1] * gridDim[Ix - 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Ix] * dCoefl) / (gridDim[Ix - 1] + gridDim[Ix]);
								BBd = gridDim[Ix - 1] * Coef / porpor2 + gridDim[Ix] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz] / (gridDim[Ix - 1] + gridDim[Ix]);
								DeltaX = fcomp[Ix - 1][Iy][Iz][i][0] - fcomp[Ix][Iy][Iz][i][0];

								dAAddx = fdE[Ix][Iy][Iz][k][0] * gridDim[Ix] * dCoefl;
								dAAddx2 = fdE[Ix - 1][Iy][Iz][k][0] * gridDim[Ix - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += -NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += -NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}


								mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + Iy * Nx + Ix - 1];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;


								if (fphaseStat[Ix - 1][Iy][Iz]) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][RO][1] * gridDim[Ix - 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][BMU][1] * gridDim[Ix - 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][1] * gridDim[Ix] * Makhraj - dMug * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix - 1][Iy][Iz][k][1] * gridDim[Ix - 1] * Coef*Makhraj - fDiffVisco(Ix - 1, Iy, Iz, k, 1)*gridDim[Ix - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Ix] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][k][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Ix - 1] * (G_ACCG*fblockFProps[Ix - 1][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix - 1][Iy][Iz][BGAM][1] * fdE[Ix - 1][Iy][Iz][k][1] / fblockFProps[Ix - 1][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][BGAM][1] * gridDim[Ix - 1] * Coef) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

								if (ftransS[Ix][Iy + 1][Iz + 1][1][0]) {
									dRsidedxg -= (fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);
									dBsidedxg = -fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);

									//dRsidedxg-=(comp[Ix][Iy][Iz][i][1]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
									//dBsidedxg-=comp[Ix][Iy][Iz][i][1]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								}
								else {
									dRsidedxg -= fcomp[Ix - 1][Iy][Iz][i][1] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][2] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);
									dBsidedxg = -(fcomp[Ix - 1][Iy][Iz][i][1] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);

									//dRsidedxg-=comp[Ix-1][Iy][Iz][i][1]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
									//dBsidedxg-=(comp[Ix-1][Iy][Iz][i][1]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								}

								if (fcomp[Ix - 1][Iy][Iz][i][1]>fcomp[Ix][Iy][Iz][i][1]) {
									DupStream = fdiffusion[Ix - 1][Iy][Iz][i][1];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix - 1, Iy, Iz, i, k, 1);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix - 1][Iy][Iz][RO][1] * gridDim[Ix - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] * dCoefg;
								AAd *= (fsat[Ix - 1][Iy][Iz][2] * gridDim[Ix - 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Ix] * dCoefg) / (gridDim[Ix - 1] + gridDim[Ix]);
								BBd = gridDim[Ix - 1] * Coef / porpor2 + gridDim[Ix] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Nx+Iy]*gridDim[Nx+Ny+Iz]/(gridDim[Ix-1]+gridDim[Ix]);
								DeltaX = fcomp[Ix - 1][Iy][Iz][i][1] - fcomp[Ix][Iy][Iz][i][1];

								dAAddx = fdE[Ix][Iy][Iz][k][1] * gridDim[Ix] * dCoefg;
								dAAddx2 = fdE[Ix - 1][Iy][Iz][k][1] * gridDim[Ix - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += -NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += -NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}


								if (fphaseStat[Ix - 1][Iy][Iz]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;
							}

							if (Iy<(Ny - 1)) {
								if (fphaseStat[Ix][Iy + 1][Iz] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][RO][0] * gridDim[Nx + Iy + 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][BMU][0] * gridDim[Nx + Iy + 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][0] * gridDim[Nx + Iy] * Makhraj - dMul * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix][Iy + 1][Iz][k][0] * gridDim[Nx + Iy + 1] * Coef*Makhraj - fDiffVisco(Ix, Iy + 1, Iz, k, 0)*gridDim[Nx + Iy + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][k][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Iy + 1] * (G_ACCG*fblockFProps[Ix][Iy + 1][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy + 1][Iz][BGAM][0] * fdE[Ix][Iy + 1][Iz][k][0] / fblockFProps[Ix][Iy + 1][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][BGAM][0] * gridDim[Nx + Iy + 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

								if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][1]) {
									dRsidedxl += fcomp[Ix][Iy + 1][Iz][i][0] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][1] * Moshtaq*(fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = (fcomp[Ix][Iy + 1][Iz][i][0] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

									//dRsidedxl+=comp[Ix][Iy+1][Iz][i][0]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxl+=(comp[Ix][Iy+1][Iz][i][0]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}
								else {
									dRsidedxl += (fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

									//dRsidedxl+=(comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxl+=comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}

								porpor2 = fporosity[Ix][Iy + 1][Iz] * (1 + cpor * (fP[Ix + 1][Iy + 2][Iz + 1][1] - refP) + dcpor * (fP[Ix + 1][Iy + 2][Iz + 1][1] - refP)*(fP[Ix + 1][Iy + 2][Iz + 1][1] - refP));
								if (fcomp[Ix][Iy + 1][Iz][i][0]>fcomp[Ix][Iy][Iz][i][0]) {
									DupStream = fdiffusion[Ix][Iy + 1][Iz][i][0];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix, Iy + 1, Iz, i, k, 0);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix][Iy + 1][Iz][RO][0] * gridDim[Nx + Iy + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] * dCoefl;
								AAd *= (fsat[Ix][Iy + 1][Iz][1] * gridDim[Nx + Iy + 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Nx + Iy] * dCoefl) / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
								BBd = gridDim[Nx + Iy + 1] * Coef / porpor2 + gridDim[Nx + Iy] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Ix] * gridDim[Nx + Ny + Iz] / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
								DeltaX = fcomp[Ix][Iy + 1][Iz][i][0] - fcomp[Ix][Iy][Iz][i][0];

								dAAddx = fdE[Ix][Iy][Iz][k][0] * gridDim[Nx + Iy] * dCoefl;
								dAAddx2 = fdE[Ix][Iy + 1][Iz][k][0] * gridDim[Nx + Iy + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}


								mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + (Iy + 1)*Nx + Ix];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;


								if (fphaseStat[Ix][Iy + 1][Iz] == 1) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][RO][1] * gridDim[Nx + Iy + 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][BMU][1] * gridDim[Nx + Iy + 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][1] * gridDim[Nx + Iy] * Makhraj - dMug * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix][Iy + 1][Iz][k][1] * gridDim[Nx + Iy + 1] * Coef*Makhraj - fDiffVisco(Ix, Iy + 1, Iz, k, 1)*gridDim[Nx + Iy + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][k][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Iy + 1] * (G_ACCG*fblockFProps[Ix][Iy + 1][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy + 1][Iz][BGAM][1] * fdE[Ix][Iy + 1][Iz][k][1] / fblockFProps[Ix][Iy + 1][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][BGAM][1] * gridDim[Nx + Iy + 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

								if (ftransS[Ix + 1][Iy + 1][Iz + 1][1][1]) {
									dRsidedxg += fcomp[Ix][Iy + 1][Iz][i][1] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][2] * Moshtaq*(fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = (fcomp[Ix][Iy + 1][Iz][i][1] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

									//dRsidedxg+=comp[Ix][Iy+1][Iz][i][1]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxg+=(comp[Ix][Iy+1][Iz][i][1]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}
								else {
									dRsidedxg += (fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

									//dRsidedxg+=(comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxg+=comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);

								}

								if (fcomp[Ix][Iy + 1][Iz][i][1]>fcomp[Ix][Iy][Iz][i][1]) {
									DupStream = fdiffusion[Ix][Iy + 1][Iz][i][1];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix, Iy + 1, Iz, i, k, 1);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix][Iy + 1][Iz][RO][1] * gridDim[Nx + Iy + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] * dCoefg;
								AAd *= (fsat[Ix][Iy + 1][Iz][2] * gridDim[Nx + Iy + 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Nx + Iy] * dCoefg) / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
								BBd = gridDim[Nx + Iy + 1] * Coef / porpor2 + gridDim[Nx + Iy] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Ix]*gridDim[Nx+Ny+Iz]/(gridDim[Nx+Iy+1]+gridDim[Nx+Iy]);
								DeltaX = fcomp[Ix][Iy + 1][Iz][i][1] - fcomp[Ix][Iy][Iz][i][1];

								dAAddx = fdE[Ix][Iy][Iz][k][1] * gridDim[Nx + Iy] * dCoefg;
								dAAddx2 = fdE[Ix][Iy + 1][Iz][k][1] * gridDim[Nx + Iy + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								if (fphaseStat[Ix][Iy + 1][Iz]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;
							}

							if (Iy>0) {
								if (fphaseStat[Ix][Iy - 1][Iz] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][RO][0] * gridDim[Nx + Iy - 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][BMU][0] * gridDim[Nx + Iy - 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][0] * gridDim[Nx + Iy] * Makhraj - dMul * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix][Iy - 1][Iz][k][0] * gridDim[Nx + Iy - 1] * Coef*Makhraj - fDiffVisco(Ix, Iy - 1, Iz, k, 0)*gridDim[Nx + Iy - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][k][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Iy - 1] * (G_ACCG*fblockFProps[Ix][Iy - 1][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy - 1][Iz][BGAM][0] * fdE[Ix][Iy - 1][Iz][k][0] / fblockFProps[Ix][Iy - 1][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][BGAM][0] * gridDim[Nx + Iy - 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

								if (ftransS[Ix + 1][Iy][Iz + 1][0][1]) {
									dRsidedxl -= (fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);
									dBsidedxl = -fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);

									//dRsidedxl-=(comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][1])*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
									//dBsidedxl-=comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								}
								else {
									dRsidedxl -= fcomp[Ix][Iy - 1][Iz][i][0] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][1] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);
									dBsidedxl = -(fcomp[Ix][Iy - 1][Iz][i][0] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);

									//dRsidedxl-=comp[Ix][Iy-1][Iz][i][0]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
									//dBsidedxl-=(comp[Ix][Iy-1][Iz][i][0]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][1])*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								}

								porpor2 = fporosity[Ix][Iy - 1][Iz] * (1 + cpor * (fP[Ix + 1][Iy][Iz + 1][1] - refP) + dcpor * (fP[Ix + 1][Iy][Iz + 1][1] - refP)*(fP[Ix + 1][Iy][Iz + 1][1] - refP));
								if (fcomp[Ix][Iy - 1][Iz][i][0]>fcomp[Ix][Iy][Iz][i][0]) {
									DupStream = fdiffusion[Ix][Iy - 1][Iz][i][0];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix, Iy - 1, Iz, i, k, 0);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix][Iy - 1][Iz][RO][0] * gridDim[Nx + Iy - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] * dCoefl;
								AAd *= (fsat[Ix][Iy - 1][Iz][1] * gridDim[Nx + Iy - 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Nx + Iy] * dCoefl) / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
								BBd = gridDim[Nx + Iy - 1] * Coef / porpor2 + gridDim[Nx + Iy] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Ix] * gridDim[Nx + Ny + Iz] / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
								DeltaX = fcomp[Ix][Iy - 1][Iz][i][0] - fcomp[Ix][Iy][Iz][i][0];

								dAAddx = fdE[Ix][Iy][Iz][k][0] * gridDim[Nx + Iy] * dCoefl;
								dAAddx2 = fdE[Ix][Iy - 1][Iz][k][0] * gridDim[Nx + Iy - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += -NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += -NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}


								mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + (Iy - 1)*Nx + Ix];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;


								if (fphaseStat[Ix][Iy - 1][Iz] == 1) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][RO][1] * gridDim[Nx + Iy - 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][BMU][1] * gridDim[Nx + Iy - 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][1] * gridDim[Nx + Iy] * Makhraj - dMug * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix][Iy - 1][Iz][k][1] * gridDim[Nx + Iy - 1] * Coef*Makhraj - fDiffVisco(Ix, Iy - 1, Iz, k, 1)*gridDim[Nx + Iy - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][k][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Iy - 1] * (G_ACCG*fblockFProps[Ix][Iy - 1][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy - 1][Iz][BGAM][1] * fdE[Ix][Iy - 1][Iz][k][1] / fblockFProps[Ix][Iy - 1][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][BGAM][1] * gridDim[Nx + Iy - 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

								if (ftransS[Ix + 1][Iy][Iz + 1][1][1]) {
									dRsidedxg -= (fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);
									dBsidedxg = -fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);

									//dRsidedxg-=(comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
									//dBsidedxg-=comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								}
								else {
									dRsidedxg -= fcomp[Ix][Iy - 1][Iz][i][1] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][2] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);
									dBsidedxg = -(fcomp[Ix][Iy - 1][Iz][i][1] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);

									//dRsidedxg-=comp[Ix][Iy-1][Iz][i][1]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
									//dBsidedxg-=(comp[Ix][Iy-1][Iz][i][1]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								}

								if (fcomp[Ix][Iy - 1][Iz][i][1]>fcomp[Ix][Iy][Iz][i][1]) {
									DupStream = fdiffusion[Ix][Iy - 1][Iz][i][1];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix, Iy - 1, Iz, i, k, 1);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix][Iy - 1][Iz][RO][1] * gridDim[Nx + Iy - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] * dCoefg;
								AAd *= (fsat[Ix][Iy - 1][Iz][2] * gridDim[Nx + Iy - 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Nx + Iy] * dCoefg) / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
								BBd = gridDim[Nx + Iy - 1] * Coef / porpor2 + gridDim[Nx + Iy] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Ix]*gridDim[Nx+Ny+Iz]/(gridDim[Nx+Iy-1]+gridDim[Nx+Iy]);
								DeltaX = fcomp[Ix][Iy - 1][Iz][i][1] - fcomp[Ix][Iy][Iz][i][1];

								dAAddx = fdE[Ix][Iy][Iz][k][1] * gridDim[Nx + Iy] * dCoefg;
								dAAddx2 = fdE[Ix][Iy - 1][Iz][k][1] * gridDim[Nx + Iy - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += -NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += -NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}


								if (fphaseStat[Ix][Iy - 1][Iz]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;
							}

							if (Iz<(Nz - 1)) {
								if (fphaseStat[Ix][Iy][Iz + 1] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][RO][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][BMU][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][0] * gridDim[Nx + Ny + Iz] * Makhraj - dMul * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix][Iy][Iz + 1][k][0] * gridDim[Nx + Ny + Iz + 1] * Coef*Makhraj - fDiffVisco(Ix, Iy, Iz + 1, k, 0)*gridDim[Nx + Ny + Iz + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][k][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz + 1] * (G_ACCG*fblockFProps[Ix][Iy][Iz + 1][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz + 1][BGAM][0] * fdE[Ix][Iy][Iz + 1][k][0] / fblockFProps[Ix][Iy][Iz + 1][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][BGAM][0] * gridDim[Nx + Ny + Iz + 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

								if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][2]) {
									dRsidedxl += fcomp[Ix][Iy][Iz + 1][i][0] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][1] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = (fcomp[Ix][Iy][Iz + 1][i][0] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

									dRsidedxl += fcomp[Ix][Iy][Iz + 1][i][0] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
									dBsidedxl += (fcomp[Ix][Iy][Iz + 1][i][0] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
								}
								else {
									dRsidedxl += (fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

									dRsidedxl += (fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
									dBsidedxl += fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
								}

								porpor2 = fporosity[Ix][Iy][Iz + 1] * (1 + cpor * (fP[Ix + 1][Iy + 1][Iz + 2][1] - refP) + dcpor * (fP[Ix + 1][Iy + 1][Iz + 2][1] - refP)*(fP[Ix + 1][Iy + 1][Iz + 2][1] - refP));
								if (fcomp[Ix][Iy][Iz + 1][i][0]>fcomp[Ix][Iy][Iz][i][0]) {
									DupStream = fdiffusion[Ix][Iy][Iz + 1][i][0];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix, Iy, Iz + 1, i, k, 0);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix][Iy][Iz + 1][RO][0] * gridDim[Nx + Ny + Iz + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] * dCoefl;
								AAd *= (fsat[Ix][Iy][Iz + 1][1] * gridDim[Nx + Ny + Iz + 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Nx + Ny + Iz] * dCoefl) / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
								BBd = gridDim[Nx + Ny + Iz + 1] * Coef / porpor2 + gridDim[Nx + Ny + Iz] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Ix] * gridDim[Nx + Iy] / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
								DeltaX = fcomp[Ix][Iy][Iz + 1][i][0] - fcomp[Ix][Iy][Iz][i][0];

								dAAddx = fdE[Ix][Iy][Iz][k][0] * gridDim[Nx + Ny + Iz] * dCoefl;
								dAAddx2 = fdE[Ix][Iy][Iz + 1][k][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								mBLNo = preConRow[Nx*Ny*Nz + (Iz + 1)*(Nx*Ny) + Iy * Nx + Ix];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;


								if (fphaseStat[Ix][Iy][Iz + 1] == 1) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][RO][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][BMU][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][1] * gridDim[Nx + Ny + Iz] * Makhraj - dMug * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix][Iy][Iz + 1][k][1] * gridDim[Nx + Ny + Iz + 1] * Coef*Makhraj - fDiffVisco(Ix, Iy, Iz + 1, k, 1)*gridDim[Nx + Ny + Iz + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][k][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz + 1] * (G_ACCG*fblockFProps[Ix][Iy][Iz + 1][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz + 1][BGAM][1] * fdE[Ix][Iy][Iz + 1][k][1] / fblockFProps[Ix][Iy][Iz + 1][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][BGAM][1] * gridDim[Nx + Ny + Iz + 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

								if (ftransS[Ix + 1][Iy + 1][Iz + 1][1][2]) {
									dRsidedxg += fcomp[Ix][Iy][Iz + 1][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][2] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = (fcomp[Ix][Iy][Iz + 1][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

									dRsidedxg += fcomp[Ix][Iy][Iz + 1][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
									dBsidedxg += (fcomp[Ix][Iy][Iz + 1][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
								}
								else {
									dRsidedxg += (fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

									dRsidedxg += (fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
									dBsidedxg += fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);

								}

								if (fcomp[Ix][Iy][Iz + 1][i][1]>fcomp[Ix][Iy][Iz][i][1]) {
									DupStream = fdiffusion[Ix][Iy][Iz + 1][i][1];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix, Iy, Iz + 1, i, k, 1);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix][Iy][Iz + 1][RO][1] * gridDim[Nx + Ny + Iz + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] * dCoefg;
								AAd *= (fsat[Ix][Iy][Iz + 1][2] * gridDim[Nx + Ny + Iz + 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Nx + Ny + Iz] * dCoefg) / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
								BBd = gridDim[Nx + Ny + Iz + 1] * Coef / porpor2 + gridDim[Nx + Ny + Iz] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Ix]*gridDim[Nx+Iy]/(gridDim[Nx+Ny+Iz+1]+gridDim[Nx+Ny+Iz]);
								DeltaX = fcomp[Ix][Iy][Iz + 1][i][1] - fcomp[Ix][Iy][Iz][i][1];

								dAAddx = fdE[Ix][Iy][Iz][k][1] * gridDim[Nx + Ny + Iz] * dCoefg;
								dAAddx2 = fdE[Ix][Iy][Iz + 1][k][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}


								if (fphaseStat[Ix][Iy][Iz + 1]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;
							}

							if (Iz>0) {
								if (fphaseStat[Ix][Iy][Iz - 1] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][RO][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][BMU][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][0] * gridDim[Nx + Ny + Iz] * Makhraj - dMul * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix][Iy][Iz - 1][k][0] * gridDim[Nx + Ny + Iz - 1] * Coef*Makhraj - fDiffVisco(Ix, Iy, Iz - 1, k, 0)*gridDim[Nx + Ny + Iz - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][k][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz - 1] * (G_ACCG*fblockFProps[Ix][Iy][Iz - 1][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz - 1][BGAM][0] * fdE[Ix][Iy][Iz - 1][k][0] / fblockFProps[Ix][Iy][Iz - 1][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][BGAM][0] * gridDim[Nx + Ny + Iz - 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

								if (ftransS[Ix + 1][Iy + 1][Iz][0][2]) {
									dRsidedxl -= (fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);
									dBsidedxl = -fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);

									dRsidedxl -= (fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][1])*(Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
									dBsidedxl -= fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								}
								else {
									dRsidedxl -= fcomp[Ix][Iy][Iz - 1][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][1] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);
									dBsidedxl = -(fcomp[Ix][Iy][Iz - 1][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);

									dRsidedxl -= -fcomp[Ix][Iy][Iz - 1][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
									dBsidedxl -= -(fcomp[Ix][Iy][Iz - 1][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][1])*(Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								}

								porpor2 = fporosity[Ix][Iy][Iz - 1] * (1 + cpor * (fP[Ix + 1][Iy + 1][Iz][1] - refP) + dcpor * (fP[Ix + 1][Iy + 1][Iz][1] - refP)*(fP[Ix + 1][Iy + 1][Iz][1] - refP));
								if (fcomp[Ix][Iy][Iz - 1][i][0]>fcomp[Ix][Iy][Iz][i][0]) {
									DupStream = fdiffusion[Ix][Iy][Iz - 1][i][0];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix, Iy, Iz - 1, i, k, 0);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix][Iy][Iz - 1][RO][0] * gridDim[Nx + Ny + Iz - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] * dCoefl;
								AAd *= (fsat[Ix][Iy][Iz - 1][1] * gridDim[Nx + Ny + Iz - 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Nx + Ny + Iz] * dCoefl) / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
								BBd = gridDim[Nx + Ny + Iz - 1] * Coef / porpor2 + gridDim[Nx + Ny + Iz] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Ix] * gridDim[Nx + Iy] / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
								DeltaX = fcomp[Ix][Iy][Iz - 1][i][0] - fcomp[Ix][Iy][Iz][i][0];

								dAAddx = fdE[Ix][Iy][Iz][k][0] * gridDim[Nx + Ny + Iz] * dCoefl;
								dAAddx2 = fdE[Ix][Iy][Iz - 1][k][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += -NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += -NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								mBLNo = preConRow[Nx*Ny*Nz + (Iz - 1)*(Nx*Ny) + Iy * Nx + Ix];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;


								if (fphaseStat[Ix][Iy][Iz - 1] == 1) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][RO][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][BMU][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][1] * gridDim[Nx + Ny + Iz] * Makhraj - dMug * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix][Iy][Iz - 1][k][1] * gridDim[Nx + Ny + Iz - 1] * Coef*Makhraj - fDiffVisco(Ix, Iy, Iz - 1, k, 1)*gridDim[Nx + Ny + Iz - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][k][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz - 1] * (G_ACCG*fblockFProps[Ix][Iy][Iz - 1][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz - 1][BGAM][1] * fdE[Ix][Iy][Iz - 1][k][1] / fblockFProps[Ix][Iy][Iz - 1][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][BGAM][1] * gridDim[Nx + Ny + Iz - 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

								if (ftransS[Ix + 1][Iy + 1][Iz][1][2]) {
									dRsidedxg -= (fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);
									dBsidedxg = -fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);

									dRsidedxg -= (fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
									dBsidedxg -= fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								}
								else {
									dRsidedxg -= fcomp[Ix][Iy][Iz - 1][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][2] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);
									dBsidedxg = -(fcomp[Ix][Iy][Iz - 1][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);

									dRsidedxg -= fcomp[Ix][Iy][Iz - 1][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
									dBsidedxg -= (fcomp[Ix][Iy][Iz - 1][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								}

								if (fcomp[Ix][Iy][Iz - 1][i][1]>fcomp[Ix][Iy][Iz][i][1]) {
									DupStream = fdiffusion[Ix][Iy][Iz - 1][i][1];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix, Iy, Iz - 1, i, k, 1);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix][Iy][Iz - 1][RO][1] * gridDim[Nx + Ny + Iz - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] * dCoefg;
								AAd *= (fsat[Ix][Iy][Iz - 1][2] * gridDim[Nx + Ny + Iz - 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Nx + Ny + Iz] * dCoefg) / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
								BBd = gridDim[Nx + Ny + Iz - 1] * Coef / porpor2 + gridDim[Nx + Ny + Iz] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Ix]*gridDim[Nx+Iy]/(gridDim[Nx+Ny+Iz-1]+gridDim[Nx+Ny+Iz]);
								DeltaX = fcomp[Ix][Iy][Iz - 1][i][1] - fcomp[Ix][Iy][Iz][i][1];

								dAAddx = fdE[Ix][Iy][Iz][k][1] * gridDim[Nx + Ny + Iz] * dCoefg;
								dAAddx2 = fdE[Ix][Iy][Iz - 1][k][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += -NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += -NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}



								if (fphaseStat[Ix][Iy][Iz - 1]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;
							}

							/////////////////////////////////////////////////Sadeq//k!=i/////////////////////////////////
							if (phaseStat[Ix][Iy][Iz] == 1) {
								//dRsideMdxl = 0;
								Jac1Row[JRowIndex] = dRsideMdxl;
								Jac1Col[JRowIndex] = MatrixEq + k;
								JRowIndex++;
							}
							else if (phaseStat[Ix][Iy][Iz] == (-1)) {
								//dRsideMdxg = 0;
								Jac1Row[JRowIndex] = dRsideMdxg;
								Jac1Col[JRowIndex] = MatrixEq + k;
								JRowIndex++;
							}
							else {
								//dRsideMdxl = 0;
								Jac1Row[JRowIndex] = dRsideMdxl;
								Jac1Col[JRowIndex] = MatrixEq + k;
								JRowIndex++;
								//dRsideMdxg = 0;
								Jac1Row[JRowIndex] = dRsideMdxg;
								Jac1Col[JRowIndex] = MatrixEq + Nc + k;
								JRowIndex++;
							}
							////////////////////////sadeq/////////////////////////
						}
						//jac[BLNo+Nc+i][BLNo+k]=(Vb/Dt)*porpor*sat[Ix][Iy][Iz][1]*dLsidedxl-dQdxl;
						if (fphaseStat[Ix][Iy][Iz] != -1) {
							Jac1Row[JRowIndex] = (Vb / Dt)*porpor*fsat[Ix][Iy][Iz][1] * dLsidedxl - dQdxl - dRsidedxl;
							//Jac1Row[JRowIndex]=(Vb/Dt)*porpor*sat[Ix][Iy][Iz][1]*dLsidedxl-dQdxl;
							Jac1Col[JRowIndex] = jacCol + k;
							JRowIndex++;
						}

						//jac[BLNo+Nc+i][BLNo+Nc+k]=(Vb/Dt)*porpor*sat[Ix][Iy][Iz][2]*dLsidedxg-dQdxg;
						if (fphaseStat[Ix][Iy][Iz] != 1) {
							Jac1Row[JRowIndex] = (Vb / Dt)*porpor*fsat[Ix][Iy][Iz][2] * dLsidedxg - dQdxg - dRsidedxg;
							//Jac1Row[JRowIndex]=(Vb/Dt)*porpor*sat[Ix][Iy][Iz][2]*dLsidedxg-dQdxg;
							Jac1Col[JRowIndex] = jacCol + Nc + k - reCol;
							JRowIndex++;
						}

					}
				}
				else if (BENo < (Nc)) {
					LSide = (Vb / Dt)*(porpor*(fblockFProps[Ix][Iy][Iz][RO][0] * fsat[Ix][Iy][Iz][1] + fblockFProps[Ix][Iy][Iz][RO][1] * fsat[Ix][Iy][Iz][2]) - fpreProp[Ix][Iy][Iz][Nc - 1]);
					RSide = ftrans[Ix + 1][Iy + 1][Iz + 1][0][0] * (fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) - ftrans[Ix][Iy + 1][Iz + 1][0][0] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);
					RSide += ftrans[Ix + 1][Iy + 1][Iz + 1][0][1] * (fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) - ftrans[Ix + 1][Iy][Iz + 1][0][1] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);
					RSide += ftrans[Ix + 1][Iy + 1][Iz + 1][0][2] * (fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) - ftrans[Ix + 1][Iy + 1][Iz][0][2] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);
					RSide += ftrans[Ix + 1][Iy + 1][Iz + 1][1][0] * (fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]) - ftrans[Ix][Iy + 1][Iz + 1][1][0] * (fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);
					RSide += ftrans[Ix + 1][Iy + 1][Iz + 1][1][1] * (fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]) - ftrans[Ix + 1][Iy][Iz + 1][1][1] * (fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);
					RSide += ftrans[Ix + 1][Iy + 1][Iz + 1][1][2] * (fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]) - ftrans[Ix + 1][Iy + 1][Iz][1][2] * (fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);

					RSide += ftrans[Ix + 1][Iy + 1][Iz + 1][2][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - ftrans[Ix][Iy + 1][Iz + 1][2][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
					RSide += ftrans[Ix + 1][Iy + 1][Iz + 1][2][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - ftrans[Ix + 1][Iy][Iz + 1][2][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
					RSide += ftrans[Ix + 1][Iy + 1][Iz + 1][2][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]) - ftrans[Ix + 1][Iy + 1][Iz][2][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
					RSide += ftrans[Ix + 1][Iy + 1][Iz + 1][3][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - ftrans[Ix][Iy + 1][Iz + 1][3][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
					RSide += ftrans[Ix + 1][Iy + 1][Iz + 1][3][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - ftrans[Ix + 1][Iy][Iz + 1][3][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
					RSide += ftrans[Ix + 1][Iy + 1][Iz + 1][3][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]) - ftrans[Ix + 1][Iy + 1][Iz][3][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);

					///////////////////////////////////Transfer Function 

					RSide -= ZERO_CONV * SI_C *blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
					RSide -= ZERO_CONV * SI_C *blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor) / (porpor + Mporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));

					/////////////////////////////////////
					RSide += Qo + Qg;


					dLsidedp = (Vb / Dt)*(fsat[Ix][Iy][Iz][1] * (fblockFProps[Ix][Iy][Iz][RO][0] * dPordp + fdE[Ix][Iy][Iz][Nc][0] * porpor) + fsat[Ix][Iy][Iz][2] * (fblockFProps[Ix][Iy][Iz][RO][1] * dPordp + fdE[Ix][Iy][Iz][Nc][1] * porpor));
					dLsidedSo = (Vb / Dt)*(porpor*fblockFProps[Ix][Iy][Iz][RO][0]);
					dLsidedSg = (Vb / Dt)*(porpor*fblockFProps[Ix][Iy][Iz][RO][1]);

					dRsideMdp = 0;
					dRsidedp = 0;
					//Transfer function dRside dp mdp
					//moshtagh transfer Function jabejaie naft nesbat be feshar matrix
					dRsideMdp -= ZERO_CONV * SI_C * dE[Ix][Iy][Iz][Nc][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
					dRsideMdp -= ZERO_CONV * -SI_C * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor));
					dRsideMdp -= ZERO_CONV * -SI_C * (DiffVisco(Ix, Iy, Iz, Nc, 0) * Mporpor + MdPordp * blockFProps[Ix][Iy][Iz][BMU][0]) * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor)*(blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) * (porpor + Mporpor);
					dRsideMdp -= ZERO_CONV * SI_C * MdPordp * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / (blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					//moshtagh transfer Function jabejaie gaz nesbat be feshar matrix
					dRsideMdp -= ZERO_CONV * SI_C * dE[Ix][Iy][Iz][Nc][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor) / (porpor + Mporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));
					dRsideMdp -= ZERO_CONV * -SI_C * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor) / (porpor + Mporpor));
					dRsideMdp -= ZERO_CONV * -SI_C * (DiffVisco(Ix, Iy, Iz, Nc, 1) * Mporpor + MdPordp * blockFProps[Ix][Iy][Iz][BMU][1]) * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor)*(blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1])) * (porpor + Mporpor);
					dRsideMdp -= ZERO_CONV * SI_C * MdPordp * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / (blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));

					//moshtagh transfer Function jabejaie naft nesbat be feshar Fracture
					dRsidedp -= ZERO_CONV * SI_C * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor));
					dRsidedp -= ZERO_CONV * -SI_C * (fDiffVisco(Ix, Iy, Iz, Nc, 0) * porpor + dPordp * fblockFProps[Ix][Iy][Iz][BMU][0]) * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor)*(blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) * (porpor + Mporpor);
					dRsidedp -= ZERO_CONV * SI_C * dPordp * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / (blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					//moshtagh transfer Function jabejaie gaz nesbat be feshar Fracture
					dRsidedp -= ZERO_CONV * SI_C * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor) / (porpor + Mporpor));
					dRsidedp -= ZERO_CONV * -SI_C * (fDiffVisco(Ix, Iy, Iz, Nc, 1) * porpor + dPordp * fblockFProps[Ix][Iy][Iz][BMU][1]) * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor)*(blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1])) * (porpor + Mporpor);
					dRsidedp -= ZERO_CONV * SI_C * dPordp * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / (blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));
					//

					dRsidedp += ftrans[Ix + 1][Iy + 1][Iz + 1][0][0] + ftrans[Ix][Iy + 1][Iz + 1][0][0];
					dRsidedp += ftrans[Ix + 1][Iy + 1][Iz + 1][0][1] + ftrans[Ix + 1][Iy][Iz + 1][0][1];
					dRsidedp += ftrans[Ix + 1][Iy + 1][Iz + 1][0][2] + ftrans[Ix + 1][Iy + 1][Iz][0][2];
					dRsidedp += ftrans[Ix + 1][Iy + 1][Iz + 1][1][0] + ftrans[Ix][Iy + 1][Iz + 1][1][0];
					dRsidedp += ftrans[Ix + 1][Iy + 1][Iz + 1][1][1] + ftrans[Ix + 1][Iy][Iz + 1][1][1];
					dRsidedp += ftrans[Ix + 1][Iy + 1][Iz + 1][1][2] + ftrans[Ix + 1][Iy + 1][Iz][1][2];

					//jac[BLNo+2*Nc-1][BLNo+(2*Nc)]=PCoeff*(dLsidedp+dRsidedp);
					dMul = fDiffVisco(Ix, Iy, Iz, Nc, 0);
					dMug = fDiffVisco(Ix, Iy, Iz, Nc, 1);

					dRsidedSw = 0;
					dRsidedSg = 0;
					dRsidedSo = 0;
					dRsideMdSo = 0;
					dRsideMdSg = 0;
					dRsideMdSw = 0;
					//transfer function drside dso
					// moshtagh transfer Function jabejaie naft nesbat be So Matrix
					dRsideMdSo -= ZERO_CONV * SI_C * f_m_drelperm[1][4] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					// moshtagh transfer Function jabejaie naft nesbat be So Fracture
					dRsidedSo -= ZERO_CONV * SI_C * f_m_drelperm[1][9] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					// moshtagh transfer Function jabejaie naft nesbat be Sg Matrix
					dRsideMdSg -= ZERO_CONV * SI_C * f_m_drelperm[1][2] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					// moshtagh transfer Function jabejaie gaz nesbat be Sg Matrix
					dRsideMdSg -= ZERO_CONV * SI_C * f_m_drelperm[2][3] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor) / (porpor + Mporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));

					// moshtagh transfer Function jabejaie naft nesbat be Sg Fracture
					dRsidedSg -= ZERO_CONV * SI_C * f_m_drelperm[1][7] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					// moshtagh transfer Function jabejaie gaz nesbat be Sg Fracture
					dRsidedSg -= ZERO_CONV * SI_C * f_m_drelperm[2][8] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor) / (porpor + Mporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));

					// moshtagh transfer Function jabejaie naft nesbat be Sw Matrix
					dRsideMdSw -= ZERO_CONV * SI_C * f_m_drelperm[1][1] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					// moshtagh transfer Function jabejaie naft nesbat be Sw Fracture
					dRsidedSw -= ZERO_CONV * SI_C * f_m_drelperm[1][6] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
					//
					if (Ix<(Nx - 1)) {
						if (fphaseStat[Ix + 1][Iy][Iz]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + Iy * Nx + Ix + 1] - reCol2;

						dsw = ftrans[Ix + 1][Iy + 1][Iz + 1][4][0] * (fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) + ftrans[Ix + 1][Iy + 1][Iz + 1][6][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][0]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dso = ftrans[Ix + 1][Iy + 1][Iz + 1][10][0] * (fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) + ftrans[Ix + 1][Iy + 1][Iz + 1][11][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][0]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix + 1][Iy][Iz] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;

						dsgo = ftrans[Ix + 1][Iy + 1][Iz + 1][8][0] * (fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) + ftrans[Ix + 1][Iy + 1][Iz + 1][9][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						dsgg = ftrans[Ix + 1][Iy + 1][Iz + 1][5][0] * (fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]) + ftrans[Ix + 1][Iy + 1][Iz + 1][7][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][0]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix + 1][Iy][Iz] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][1][0]) {
							Jac1Row[JRowIndex] += (fphaseStat[Ix + 1][Iy][Iz] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;
						///////////////////////////////////////////////////////////////////
						//////////////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (fphaseStat[Ix + 1][Iy][Iz] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][RO][0] * gridDim[Ix + 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][BMU][0] * gridDim[Ix + 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][0] * gridDim[Ix] * Makhraj - dMul * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix + 1][Iy][Iz][Nc][0] * gridDim[Ix + 1] * Coef*Makhraj - fDiffVisco(Ix + 1, Iy, Iz, Nc, 0)*gridDim[Ix + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Ix] * (fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][Nc][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Ix + 1] * (fblockFProps[Ix + 1][Iy][Iz][BGAM][0] * fdE[Ix + 1][Iy][Iz][Nc][0] / fblockFProps[Ix + 1][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][BGAM][0] * gridDim[Ix + 1] * Coef) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][0]) {
							dRsidedp -= fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][1] * Moshtaq*(fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = (fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][1] * Bmoshtaq)*(fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= (fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}

						if (fphaseStat[Ix + 1][Iy][Iz] == 1) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][RO][1] * gridDim[Ix + 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][BMU][1] * gridDim[Ix + 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][1] * gridDim[Ix] * Makhraj - dMug * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix + 1][Iy][Iz][Nc][1] * gridDim[Ix + 1] * Coef*Makhraj - fDiffVisco(Ix + 1, Iy, Iz, Nc, 1)*gridDim[Ix + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Ix] * (fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][Nc][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Ix + 1] * (fblockFProps[Ix + 1][Iy][Iz][BGAM][1] * fdE[Ix + 1][Iy][Iz][Nc][1] / fblockFProps[Ix + 1][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][BGAM][1] * gridDim[Ix + 1] * Coef) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

						if (ftransS[Ix + 1][Iy + 1][Iz + 1][1][0]) {
							dRsidedp -= fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][2] * Moshtaq*(fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += (fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][2] * Bmoshtaq)*(fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= (fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);

						}
						////////////////////////////////////////////////////////////////////
						////////////////////////////////////////////////////////////////////
						Jac1Row[JRowIndex] = PCoeff * (-ftrans[Ix + 1][Iy + 1][Iz + 1][0][0] - ftrans[Ix + 1][Iy + 1][Iz + 1][1][0] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;
					}

					if (Ix>0) {
						if (fphaseStat[Ix - 1][Iy][Iz]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + Iy * Nx + Ix - 1] - reCol2;

						dsw = -ftrans[Ix][Iy + 1][Iz + 1][4][0] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]) - ftrans[Ix][Iy + 1][Iz + 1][6][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						if (!ftransS[Ix][Iy + 1][Iz + 1][0][0]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dso = -ftrans[Ix][Iy + 1][Iz + 1][10][0] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]) - ftrans[Ix][Iy + 1][Iz + 1][11][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						if (!ftransS[Ix][Iy + 1][Iz + 1][0][0]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix - 1][Iy][Iz] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;

						dsgo = -ftrans[Ix][Iy + 1][Iz + 1][8][0] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]) - ftrans[Ix][Iy + 1][Iz + 1][9][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						dsgg = -ftrans[Ix][Iy + 1][Iz + 1][5][0] * (fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]) - ftrans[Ix][Iy + 1][Iz + 1][7][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						if (!ftransS[Ix][Iy + 1][Iz + 1][0][0]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix - 1][Iy][Iz] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}
						if (!ftransS[Ix][Iy + 1][Iz + 1][1][0]) {
							Jac1Row[JRowIndex] += (fphaseStat[Ix - 1][Iy][Iz] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;
						////////////////////////////////////////////////////////
						//////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (fphaseStat[Ix - 1][Iy][Iz] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][RO][0] * gridDim[Ix - 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][BMU][0] * gridDim[Ix - 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][0] * gridDim[Ix] * Makhraj - dMul * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix - 1][Iy][Iz][Nc][0] * gridDim[Ix - 1] * Coef*Makhraj - fDiffVisco(Ix - 1, Iy, Iz, Nc, 0)*gridDim[Ix - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Ix] * (fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][Nc][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Ix - 1] * (fblockFProps[Ix - 1][Iy][Iz][BGAM][0] * fdE[Ix - 1][Iy][Iz][Nc][0] / fblockFProps[Ix - 1][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][BGAM][0] * gridDim[Ix - 1] * Coef) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

						if (ftransS[Ix][Iy + 1][Iz + 1][0][0]) {
							dRsidedp += (fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);
							dBsidedp = -fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);

							dRsidedp += (fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][1])*(Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
							dBsidedp -= fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp += fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][1] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);
							dBsidedp = -(fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);

							dRsidedp += fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
							dBsidedp -= (fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][1])*(Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						}

						if (fphaseStat[Ix - 1][Iy][Iz] == 1) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][RO][1] * gridDim[Ix - 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][BMU][1] * gridDim[Ix - 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][1] * gridDim[Ix] * Makhraj - dMug * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix - 1][Iy][Iz][Nc][1] * gridDim[Ix - 1] * Coef*Makhraj - fDiffVisco(Ix - 1, Iy, Iz, Nc, 1)*gridDim[Ix - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Ix] * (fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][Nc][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Ix - 1] * (fblockFProps[Ix - 1][Iy][Iz][BGAM][1] * fdE[Ix - 1][Iy][Iz][Nc][1] / fblockFProps[Ix - 1][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][BGAM][1] * gridDim[Ix - 1] * Coef) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

						if (ftransS[Ix][Iy + 1][Iz + 1][1][0]) {
							dRsidedp += (fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);
							dBsidedp -= fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);

							dRsidedp += (fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
							dBsidedp -= fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp += fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][2] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);
							dBsidedp -= (fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);

							dRsidedp += fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
							dBsidedp -= (fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						}
						///////////////////////////////////////////////////////////
						///////////////////////////////////////////////////////////
						Jac1Row[JRowIndex] = PCoeff * (-ftrans[Ix][Iy + 1][Iz + 1][0][0] - ftrans[Ix][Iy + 1][Iz + 1][1][0] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;
					}


					if (Iy<(Ny - 1)) {
						if (fphaseStat[Ix][Iy + 1][Iz]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + (Iy + 1)*Nx + Ix] - reCol2;

						dsw = ftrans[Ix + 1][Iy + 1][Iz + 1][4][1] * (fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) + ftrans[Ix + 1][Iy + 1][Iz + 1][6][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dso = ftrans[Ix + 1][Iy + 1][Iz + 1][10][1] * (fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) + ftrans[Ix + 1][Iy + 1][Iz + 1][11][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix][Iy + 1][Iz] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;

						dsgo = ftrans[Ix + 1][Iy + 1][Iz + 1][8][1] * (fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) + ftrans[Ix + 1][Iy + 1][Iz + 1][9][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						dsgg = ftrans[Ix + 1][Iy + 1][Iz + 1][5][1] * (fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]) + ftrans[Ix + 1][Iy + 1][Iz + 1][7][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix][Iy + 1][Iz] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][1][1]) {
							Jac1Row[JRowIndex] += (fphaseStat[Ix][Iy + 1][Iz] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;
						//////////////////////////////////////////////////////////////////////////////
						/////////////////////////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (fphaseStat[Ix][Iy + 1][Iz] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][RO][0] * gridDim[Nx + Iy + 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][BMU][0] * gridDim[Nx + Iy + 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Iy] * Makhraj - dMul * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix][Iy + 1][Iz][Nc][0] * gridDim[Nx + Iy + 1] * Coef*Makhraj - fDiffVisco(Ix, Iy + 1, Iz, Nc, 0)*gridDim[Nx + Iy + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Iy] * (fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][Nc][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Iy + 1] * (fblockFProps[Ix][Iy + 1][Iz][BGAM][0] * fdE[Ix][Iy + 1][Iz][Nc][0] / fblockFProps[Ix][Iy + 1][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][BGAM][0] * gridDim[Nx + Iy + 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][1]) {
							dRsidedp -= fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][1] * Moshtaq*(fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = (fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= (fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}

						if (fphaseStat[Ix][Iy + 1][Iz] == 1) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][RO][1] * gridDim[Nx + Iy + 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][BMU][1] * gridDim[Nx + Iy + 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Iy] * Makhraj - dMug * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix][Iy + 1][Iz][Nc][1] * gridDim[Nx + Iy + 1] * Coef*Makhraj - fDiffVisco(Ix, Iy + 1, Iz, Nc, 1)*gridDim[Nx + Iy + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Iy] * (fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][Nc][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Iy + 1] * (fblockFProps[Ix][Iy + 1][Iz][BGAM][1] * fdE[Ix][Iy + 1][Iz][Nc][1] / fblockFProps[Ix][Iy + 1][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][BGAM][1] * gridDim[Nx + Iy + 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

						if (ftransS[Ix + 1][Iy + 1][Iz + 1][1][1]) {
							dRsidedp -= fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][2] * Moshtaq*(fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += (fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= (fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}

						/////////////////////////////////////////////////////////////////////////////
						/////////////////////////////////////////////////////////////////////////////
						Jac1Row[JRowIndex] = PCoeff * (-ftrans[Ix + 1][Iy + 1][Iz + 1][0][1] - ftrans[Ix + 1][Iy + 1][Iz + 1][1][1] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;
					}
					if (Iy>0) {
						if (fphaseStat[Ix][Iy - 1][Iz]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + (Iy - 1)*Nx + Ix + 1] - reCol2;

						dsw = -ftrans[Ix + 1][Iy][Iz + 1][4][1] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]) - ftrans[Ix + 1][Iy][Iz + 1][6][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						if (!ftransS[Ix + 1][Iy][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dso = -ftrans[Ix + 1][Iy][Iz + 1][10][1] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]) - ftrans[Ix + 1][Iy][Iz + 1][11][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						if (!ftransS[Ix + 1][Iy][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix][Iy - 1][Iz] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;

						dsgo = -ftrans[Ix + 1][Iy][Iz + 1][8][1] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]) - ftrans[Ix + 1][Iy][Iz + 1][9][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						dsgg = -ftrans[Ix + 1][Iy][Iz + 1][5][1] * (fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]) - ftrans[Ix + 1][Iy][Iz + 1][7][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						if (!ftransS[Ix + 1][Iy][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix][Iy - 1][Iz] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}
						if (!ftransS[Ix + 1][Iy][Iz + 1][1][1]) {
							Jac1Row[JRowIndex] += (fphaseStat[Ix][Iy - 1][Iz] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;


						//////////////////////////////////////////////////////////////////
						/////////////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (fphaseStat[Ix][Iy - 1][Iz] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][RO][0] * gridDim[Nx + Iy - 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][BMU][0] * gridDim[Nx + Iy - 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Iy] * Makhraj - dMul * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix][Iy - 1][Iz][Nc][0] * gridDim[Nx + Iy - 1] * Coef*Makhraj - fDiffVisco(Ix, Iy - 1, Iz, Nc, 0)*gridDim[Nx + Iy - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Iy] * (fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][Nc][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Iy - 1] * (fblockFProps[Ix][Iy - 1][Iz][BGAM][0] * fdE[Ix][Iy - 1][Iz][Nc][0] / fblockFProps[Ix][Iy - 1][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][BGAM][0] * gridDim[Nx + Iy - 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

						if (ftransS[Ix + 1][Iy][Iz + 1][0][1]) {
							dRsidedp += (fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);
							dBsidedp = -fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);

							dRsidedp += (fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][1])*(Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
							dBsidedp -= fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						}
						else {
							dRsidedp += fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][1] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);
							dBsidedp = -(fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);

							dRsidedp += fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
							dBsidedp = -(fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][1])*(Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						}

						if (fphaseStat[Ix][Iy - 1][Iz] == 1) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][RO][1] * gridDim[Nx + Iy - 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][BMU][1] * gridDim[Nx + Iy - 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Iy] * Makhraj - dMug * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix][Iy - 1][Iz][Nc][1] * gridDim[Nx + Iy - 1] * Coef*Makhraj - fDiffVisco(Ix, Iy - 1, Iz, Nc, 1)*gridDim[Nx + Iy - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Iy] * (fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][Nc][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Iy - 1] * (fblockFProps[Ix][Iy - 1][Iz][BGAM][1] * fdE[Ix][Iy - 1][Iz][Nc][1] / fblockFProps[Ix][Iy - 1][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][BGAM][1] * gridDim[Nx + Iy - 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

						if (ftransS[Ix + 1][Iy][Iz + 1][1][1]) {
							dRsidedp += (fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);
							dBsidedp -= fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);

							dRsidedp += (fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
							dBsidedp -= fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						}
						else {
							dRsidedp += fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][2] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);
							dBsidedp = -(fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);

							dRsidedp += fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
							dBsidedp -= (fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						}
						///////////////////////////////////////////////////////////////////
						//////////////////////////////////////////////////////////////////
						Jac1Row[JRowIndex] = PCoeff * (-ftrans[Ix + 1][Iy][Iz + 1][0][1] - ftrans[Ix + 1][Iy][Iz + 1][1][1] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;
					}

					if (Iz<(Nz - 1)) {
						if (fphaseStat[Ix][Iy][Iz + 1]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[Nx*Ny*Nz + (Iz + 1)*(Nx*Ny) + Iy * Nx + Ix] - reCol2;

						dsw = ftrans[Ix + 1][Iy + 1][Iz + 1][4][2] * (fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) + ftrans[Ix + 1][Iy + 1][Iz + 1][6][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][2]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dso = ftrans[Ix + 1][Iy + 1][Iz + 1][10][2] * (fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) + ftrans[Ix + 1][Iy + 1][Iz + 1][11][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][2]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix][Iy][Iz + 1] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;

						dsgo = ftrans[Ix + 1][Iy + 1][Iz + 1][8][2] * (fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) + ftrans[Ix + 1][Iy + 1][Iz + 1][9][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						dsgg = ftrans[Ix + 1][Iy + 1][Iz + 1][5][2] * (fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]) + ftrans[Ix + 1][Iy + 1][Iz + 1][7][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][2]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix][Iy][Iz + 1] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][1][2]) {
							Jac1Row[JRowIndex] += (fphaseStat[Ix][Iy][Iz + 1] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;
						///////////////////////////////////////////////////////////////////////////
						////////////////////////////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (fphaseStat[Ix][Iy][Iz + 1] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][RO][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][BMU][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Ny + Iz] * Makhraj - dMul * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix][Iy][Iz + 1][Nc][0] * gridDim[Nx + Ny + Iz + 1] * Coef*Makhraj - fDiffVisco(Ix, Iy, Iz + 1, Nc, 0)*gridDim[Nx + Ny + Iz + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Ny + Iz] * (fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][Nc][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz + 1] * (fblockFProps[Ix][Iy][Iz + 1][BGAM][0] * fdE[Ix][Iy][Iz + 1][Nc][0] / fblockFProps[Ix][Iy][Iz + 1][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][BGAM][0] * gridDim[Nx + Ny + Iz + 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][2]) {
							dRsidedp -= fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][1] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = (fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= (fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}

						if (fphaseStat[Ix][Iy][Iz + 1] == 1) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][RO][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][BMU][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Ny + Iz] * Makhraj - dMug * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix][Iy][Iz + 1][Nc][1] * gridDim[Nx + Ny + Iz + 1] * Coef*Makhraj - fDiffVisco(Ix, Iy, Iz + 1, Nc, 1)*gridDim[Nx + Ny + Iz + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Ny + Iz] * (fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][Nc][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz + 1] * (fblockFProps[Ix][Iy][Iz + 1][BGAM][1] * fdE[Ix][Iy][Iz + 1][Nc][1] / fblockFProps[Ix][Iy][Iz + 1][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][BGAM][1] * gridDim[Nx + Ny + Iz + 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

						if (ftransS[Ix + 1][Iy + 1][Iz + 1][1][2]) {
							dRsidedp -= fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][2] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += (fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= (fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						///////////////////////////////////////////////////////////////////////////////
						//////////////////////////////////////////////////////////////////////////////

						Jac1Row[JRowIndex] = PCoeff * (-ftrans[Ix + 1][Iy + 1][Iz + 1][0][2] - ftrans[Ix + 1][Iy + 1][Iz + 1][1][2] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;
					}

					if (Iz>0) {
						if (fphaseStat[Ix][Iy][Iz - 1]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[Nx*Ny*Nz + (Iz - 1)*(Nx*Ny) + Iy * Nx + Ix + 1] - reCol2;

						dsw = -ftrans[Ix + 1][Iy + 1][Iz][4][2] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]) - ftrans[Ix + 1][Iy + 1][Iz][6][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						if (!ftransS[Ix + 1][Iy + 1][Iz][0][2]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dso = -ftrans[Ix + 1][Iy + 1][Iz][10][2] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]) - ftrans[Ix + 1][Iy + 1][Iz][11][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						if (!ftransS[Ix + 1][Iy + 1][Iz][0][2]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix][Iy][Iz - 1] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;

						dsgo = -ftrans[Ix + 1][Iy + 1][Iz][8][2] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]) - ftrans[Ix + 1][Iy + 1][Iz][9][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						dsgg = -ftrans[Ix + 1][Iy + 1][Iz][5][2] * (fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]) - ftrans[Ix + 1][Iy + 1][Iz][7][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						if (!ftransS[Ix + 1][Iy + 1][Iz][0][2]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix][Iy][Iz - 1] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}
						if (!ftransS[Ix + 1][Iy + 1][Iz][1][2]) {
							Jac1Row[JRowIndex] += (fphaseStat[Ix][Iy][Iz - 1] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;
						///////////////////////////////////////////////////////////////
						///////////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (fphaseStat[Ix][Iy][Iz - 1] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][RO][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][BMU][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Ny + Iz] * Makhraj - dMul * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix][Iy][Iz - 1][Nc][0] * gridDim[Nx + Ny + Iz - 1] * Coef*Makhraj - fDiffVisco(Ix, Iy, Iz - 1, Nc, 0)*gridDim[Nx + Ny + Iz - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Ny + Iz] * (fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][Nc][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz - 1] * (fblockFProps[Ix][Iy][Iz - 1][BGAM][0] * fdE[Ix][Iy][Iz - 1][Nc][0] / fblockFProps[Ix][Iy][Iz - 1][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][BGAM][0] * gridDim[Nx + Ny + Iz - 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

						if (ftransS[Ix + 1][Iy + 1][Iz][0][2]) {
							dRsidedp += (fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);
							dBsidedp = -fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);

							dRsidedp += (fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][1])*(Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							dBsidedp -= fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						}
						else {
							dRsidedp += fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][1] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);
							dBsidedp = -(fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);

							dRsidedp += fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							dBsidedp -= (fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][1])*(Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						}

						if (fphaseStat[Ix][Iy][Iz - 1] == 1) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][RO][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][BMU][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Ny + Iz] * Makhraj - dMug * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix][Iy][Iz - 1][Nc][1] * gridDim[Nx + Ny + Iz - 1] * Coef*Makhraj - fDiffVisco(Ix, Iy, Iz - 1, Nc, 1)*gridDim[Nx + Ny + Iz - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Ny + Iz] * (fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][Nc][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz - 1] * (fblockFProps[Ix][Iy][Iz - 1][BGAM][1] * fdE[Ix][Iy][Iz - 1][Nc][1] / fblockFProps[Ix][Iy][Iz - 1][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][BGAM][1] * gridDim[Nx + Ny + Iz - 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

						if (ftransS[Ix + 1][Iy + 1][Iz][1][2]) {
							dRsidedp += (fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);
							dBsidedp -= fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);

							dRsidedp += (fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							dBsidedp -= fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						}
						else {
							dRsidedp += fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][2] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);
							dBsidedp -= (fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);

							dRsidedp += fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							dBsidedp -= (fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						}
						//////////////////////////////////////////////////////////////////
						//////////////////////////////////////////////////////////////////
						Jac1Row[JRowIndex] = PCoeff * (-ftrans[Ix + 1][Iy + 1][Iz][0][2] - ftrans[Ix + 1][Iy + 1][Iz][1][2] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;
					}

					Jac1Row[JRowIndex] = PCoeff * (dLsidedp + dRsidedp + PIo + PIg);
					Jac1Col[JRowIndex] = jacCol + (2 * Nc) - reCol;
					JRowIndex++;



					if (fphaseStat[Ix][Iy][Iz] != -1) {
						Jac1Row[JRowIndex] = -dRsidedSw;
						Jac1Col[JRowIndex] = jacCol + (2 * Nc + 1) - reCol;
						JRowIndex++;

						Jac1Row[JRowIndex] = dLsidedSo - dRsidedSo;
						Jac1Col[JRowIndex] = jacCol + (2 * Nc + 2) - reCol;
						JRowIndex++;
					}

					if (fphaseStat[Ix][Iy][Iz] != 1) {
						Jac1Row[JRowIndex] = dLsidedSg - dRsidedSg;
						Jac1Col[JRowIndex] = jacCol + (2 * Nc + 3) - reCol - reCol3;
						JRowIndex++;
					}
					//////////////////////////////////////////////


					/////////////////////////////////////////////////Sadeq///////////////////////////////////
					if (phaseStat[Ix][Iy][Iz] == 1) {
						//dRsideMdSo = 0;
						Jac1Row[JRowIndex] = dRsideMdSo;
						Jac1Col[JRowIndex] = MatrixEq + 2 * Nc + 2 - reColF1;
						JRowIndex++;
					}
					else if (phaseStat[Ix][Iy][Iz] == (-1)) {
						//dRsideMdSg = 0;
						Jac1Row[JRowIndex] = dRsideMdSg;
						Jac1Col[JRowIndex] = MatrixEq + 2 * Nc + 2 - reColF1;
						JRowIndex++;
					}
					else {
						//dRsideMdSo = 0;
						Jac1Row[JRowIndex] = dRsideMdSo;
						Jac1Col[JRowIndex] = MatrixEq + 2 * Nc + 2 - reColF1;
						JRowIndex++;
						//dRsideMdSg = 0;
						Jac1Row[JRowIndex] = dRsideMdSg;
						Jac1Col[JRowIndex] = MatrixEq + 2 * Nc + 3 - reColF1;
						JRowIndex++;
					}
					//dRsideMdp = 0;
					Jac1Row[JRowIndex] = PCoeff * dRsideMdp;
					Jac1Col[JRowIndex] = MatrixEq + 2 * Nc - reColF1;
					JRowIndex++;
					//dRsideMdSw = 0;
					Jac1Row[JRowIndex] = dRsideMdSw;
					Jac1Col[JRowIndex] = MatrixEq + 2 * Nc + 1 - reColF1;
					JRowIndex++;
					//////////////////////////Sadeq///////////////////////////////


					for (k = 0; k<Nc; k++) {
						dRsidedxl = 0;
						dRsidedxg = 0;
						dRsideMdxl = 0;
						dRsideMdxg = 0;


						dLsidedxl = fdE[Ix][Iy][Iz][k][0];
						dLsidedxg = fdE[Ix][Iy][Iz][k][1];
						dQdxl = 0;
						dQdxg = 0;

						dMul = fDiffVisco(Ix, Iy, Iz, k, 0);
						dMug = fDiffVisco(Ix, Iy, Iz, k, 1);
						// Transfer function dRside dxl
						// moshtagh transfer Function jabejaie naft nesbat be xl Matrix
						dRsideMdxl -= ZERO_CONV * SI_C * dE[Ix][Iy][Iz][k][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
						dRsideMdxl -= ZERO_CONV * -SI_C * DiffVisco(Ix, Iy, Iz, k, 0) * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] * Mporpor / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor)*(blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) * (porpor + Mporpor);

						// moshtagh transfer Function jabejaie naft nesbat be xl Fracture
						dRsidedxl -= ZERO_CONV * -SI_C * fDiffVisco(Ix, Iy, Iz, k, 0) * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] * porpor / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor)*(blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) * (porpor + Mporpor);

						// moshtagh transfer Function jabejaie gaz nesbat be xg Matrix
						dRsideMdxg -= ZERO_CONV * SI_C * dE[Ix][Iy][Iz][k][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor) / (porpor + Mporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));
						dRsideMdxg -= ZERO_CONV * -SI_C * DiffVisco(Ix, Iy, Iz, k, 1) * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] * Mporpor / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor)*(blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1])) * (porpor + Mporpor);

						// moshtagh transfer Function jabejaie gaz nesbat be xg Fracture
						dRsidedxg -= ZERO_CONV * -SI_C * fDiffVisco(Ix, Iy, Iz, k, 1) * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] * porpor / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor)*(blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1])) * (porpor + Mporpor);
						//

						if (Ix<(Nx - 1)) {
							if (fphaseStat[Ix + 1][Iy][Iz] == (-1)) Coef = 0;
							else Coef = 1;

							Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][RO][0] * gridDim[Ix + 1] * Coef;
							Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][BMU][0] * gridDim[Ix + 1] * Coef;
							Moshtaq = (fdE[Ix][Iy][Iz][k][0] * gridDim[Ix] * Makhraj - dMul * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (fdE[Ix + 1][Iy][Iz][k][0] * gridDim[Ix + 1] * Coef*Makhraj - fDiffVisco(Ix + 1, Iy, Iz, k, 0)*gridDim[Ix + 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Ix] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][k][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Ix + 1] * (G_ACCG*fblockFProps[Ix + 1][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix + 1][Iy][Iz][BGAM][0] * fdE[Ix + 1][Iy][Iz][k][0] / fblockFProps[Ix + 1][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

							tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][BGAM][0] * gridDim[Ix + 1] * Coef) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

							if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][0]) {
								dRsidedxl += fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][1] * Moshtaq*(fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
								dBsidedxl = (fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][1] * Bmoshtaq)*(fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

								//dRsidedxl+=IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								//dBsidedxl+=(IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
							}
							else {
								dRsidedxl += (fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
								dBsidedxl = fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

								//dRsidedxl+=(IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								//dBsidedxl+=IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
							}

							mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + Iy * Nx + Ix + 1];
							Jac1Row[JRowIndex] = -dBsidedxl * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo + k;
							JRowIndex++;


							if (fphaseStat[Ix + 1][Iy][Iz] == 1) Coef = 0;
							else Coef = 1;

							Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][RO][1] * gridDim[Ix + 1] * Coef;
							Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][BMU][1] * gridDim[Ix + 1] * Coef;
							Moshtaq = (fdE[Ix][Iy][Iz][k][1] * gridDim[Ix] * Makhraj - dMug * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (fdE[Ix + 1][Iy][Iz][k][1] * gridDim[Ix + 1] * Coef*Makhraj - fDiffVisco(Ix + 1, Iy, Iz, k, 1)*gridDim[Ix + 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Ix] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][k][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Ix + 1] * (G_ACCG*fblockFProps[Ix + 1][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix + 1][Iy][Iz][BGAM][1] * fdE[Ix + 1][Iy][Iz][k][1] / fblockFProps[Ix + 1][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

							tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][BGAM][1] * gridDim[Ix + 1] * Coef) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

							if (ftransS[Ix + 1][Iy + 1][Iz + 1][1][0]) {
								dRsidedxg += fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][2] * Moshtaq*(fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
								dBsidedxg = (fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][2] * Bmoshtaq)*(fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

								//dRsidedxg+=IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								//dBsidedxg+=(IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
							}
							else {
								dRsidedxg += (fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
								dBsidedxg = fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

								//dRsidedxg+=(IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								//dBsidedxg+=IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);

							}

							if (fphaseStat[Ix + 1][Iy][Iz]) reCol2 = Nc;
							else reCol2 = 0;
							Jac1Row[JRowIndex] = -dBsidedxg * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
							JRowIndex++;
						}

						if (Ix>0) {
							if (fphaseStat[Ix - 1][Iy][Iz] == (-1)) Coef = 0;
							else Coef = 1;

							Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][RO][0] * gridDim[Ix - 1] * Coef;
							Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][BMU][0] * gridDim[Ix - 1] * Coef;
							Moshtaq = (fdE[Ix][Iy][Iz][k][0] * gridDim[Ix] * Makhraj - dMul * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (fdE[Ix - 1][Iy][Iz][k][0] * gridDim[Ix - 1] * Coef*Makhraj - fDiffVisco(Ix - 1, Iy, Iz, k, 0)*gridDim[Ix - 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Ix] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][k][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Ix - 1] * (G_ACCG*fblockFProps[Ix - 1][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix - 1][Iy][Iz][BGAM][0] * fdE[Ix - 1][Iy][Iz][k][0] / fblockFProps[Ix - 1][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

							tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][BGAM][0] * gridDim[Ix - 1] * Coef) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

							if (ftransS[Ix][Iy + 1][Iz + 1][0][0]) {
								dRsidedxl -= (fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);
								dBsidedxl = -fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);

								//dRsidedxl-=(IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1])*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								//dBsidedxl-=IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
							}
							else {
								dRsidedxl -= fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][1] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);
								dBsidedxl = -(fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);

								//dRsidedxl-=IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								//dBsidedxl-=(IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][1])*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
							}

							mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + Iy * Nx + Ix - 1];
							Jac1Row[JRowIndex] = -dBsidedxl * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo + k;
							JRowIndex++;


							if (fphaseStat[Ix - 1][Iy][Iz] == 1) Coef = 0;
							else Coef = 1;

							Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][RO][1] * gridDim[Ix - 1] * Coef;
							Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][BMU][1] * gridDim[Ix - 1] * Coef;
							Moshtaq = (fdE[Ix][Iy][Iz][k][1] * gridDim[Ix] * Makhraj - dMug * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (fdE[Ix - 1][Iy][Iz][k][1] * gridDim[Ix - 1] * Coef*Makhraj - fDiffVisco(Ix - 1, Iy, Iz, k, 1)*gridDim[Ix - 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Ix] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][k][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Ix - 1] * (G_ACCG*fblockFProps[Ix - 1][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix - 1][Iy][Iz][BGAM][1] * fdE[Ix - 1][Iy][Iz][k][1] / fblockFProps[Ix - 1][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

							tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][BGAM][1] * gridDim[Ix - 1] * Coef) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

							if (ftransS[Ix][Iy + 1][Iz + 1][1][0]) {
								dRsidedxg -= (fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);
								dBsidedxg = -fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);

								//dRsidedxg-=(IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								//dBsidedxg-=IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
							}
							else {
								dRsidedxg -= fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][2] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);
								dBsidedxg = -(fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);

								//dRsidedxg-=IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								//dBsidedxg-=(IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
							}


							if (fphaseStat[Ix - 1][Iy][Iz]) reCol2 = Nc;
							else reCol2 = 0;
							Jac1Row[JRowIndex] = -dBsidedxg * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
							JRowIndex++;
						}

						if (Iy<(Ny - 1)) {
							if (fphaseStat[Ix][Iy + 1][Iz] == (-1)) Coef = 0;
							else Coef = 1;

							Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][RO][0] * gridDim[Nx + Iy + 1] * Coef;
							Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][BMU][0] * gridDim[Nx + Iy + 1] * Coef;
							Moshtaq = (fdE[Ix][Iy][Iz][k][0] * gridDim[Nx + Iy] * Makhraj - dMul * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (fdE[Ix][Iy + 1][Iz][k][0] * gridDim[Nx + Iy + 1] * Coef*Makhraj - fDiffVisco(Ix, Iy + 1, Iz, k, 0)*gridDim[Nx + Iy + 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][k][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Nx + Iy + 1] * (G_ACCG*fblockFProps[Ix][Iy + 1][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy + 1][Iz][BGAM][0] * fdE[Ix][Iy + 1][Iz][k][0] / fblockFProps[Ix][Iy + 1][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

							tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][BGAM][0] * gridDim[Nx + Iy + 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

							if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][1]) {
								dRsidedxl += fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][1] * Moshtaq*(fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
								dBsidedxl = (fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

								//dRsidedxl+=IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								//dBsidedxl+=(IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
							}
							else {
								dRsidedxl += (fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
								dBsidedxl = fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

								//dRsidedxl+=(IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								//dBsidedxl+=IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
							}

							mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + (Iy + 1)*Nx + Ix];
							Jac1Row[JRowIndex] = -dBsidedxl * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo + k;
							JRowIndex++;


							if (fphaseStat[Ix][Iy + 1][Iz] == 1) Coef = 0;
							else Coef = 1;

							Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][RO][1] * gridDim[Nx + Iy + 1] * Coef;
							Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][BMU][1] * gridDim[Nx + Iy + 1] * Coef;
							Moshtaq = (fdE[Ix][Iy][Iz][k][1] * gridDim[Nx + Iy] * Makhraj - dMug * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (fdE[Ix][Iy + 1][Iz][k][1] * gridDim[Nx + Iy + 1] * Coef*Makhraj - fDiffVisco(Ix, Iy + 1, Iz, k, 1)*gridDim[Nx + Iy + 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][k][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Nx + Iy + 1] * (G_ACCG*fblockFProps[Ix][Iy + 1][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy + 1][Iz][BGAM][1] * fdE[Ix][Iy + 1][Iz][k][1] / fblockFProps[Ix][Iy + 1][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

							tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][BGAM][1] * gridDim[Nx + Iy + 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

							if (ftransS[Ix + 1][Iy + 1][Iz + 1][1][1]) {
								dRsidedxg += fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][2] * Moshtaq*(fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
								dBsidedxg = (fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

								//dRsidedxg+=IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								//dBsidedxg+=(IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
							}
							else {
								dRsidedxg += (fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
								dBsidedxg = fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

								//dRsidedxg+=(IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								//dBsidedxg+=IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);

							}

							if (fphaseStat[Ix][Iy + 1][Iz]) reCol2 = Nc;
							else reCol2 = 0;
							Jac1Row[JRowIndex] = -dBsidedxg * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
							JRowIndex++;
						}

						if (Iy>0) {
							if (fphaseStat[Ix][Iy - 1][Iz] == (-1)) Coef = 0;
							else Coef = 1;

							Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][RO][0] * gridDim[Nx + Iy - 1] * Coef;
							Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][BMU][0] * gridDim[Nx + Iy - 1] * Coef;
							Moshtaq = (fdE[Ix][Iy][Iz][k][0] * gridDim[Nx + Iy] * Makhraj - dMul * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (fdE[Ix][Iy - 1][Iz][k][0] * gridDim[Nx + Iy - 1] * Coef*Makhraj - fDiffVisco(Ix, Iy - 1, Iz, k, 0)*gridDim[Nx + Iy - 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][k][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Nx + Iy - 1] * (G_ACCG*fblockFProps[Ix][Iy - 1][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy - 1][Iz][BGAM][0] * fdE[Ix][Iy - 1][Iz][k][0] / fblockFProps[Ix][Iy - 1][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

							tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][BGAM][0] * gridDim[Nx + Iy - 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

							if (ftransS[Ix + 1][Iy][Iz + 1][0][1]) {
								dRsidedxl -= (fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);
								dBsidedxl = -fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);

								//dRsidedxl-=(IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][1])*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								//dBsidedxl-=IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
							}
							else {
								dRsidedxl -= fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][1] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);
								dBsidedxl = -(fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);

								//dRsidedxl-=IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								//dBsidedxl-=(IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][1])*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
							}

							mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + (Iy - 1)*Nx + Ix];
							Jac1Row[JRowIndex] = -dBsidedxl * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo + k;
							JRowIndex++;


							if (fphaseStat[Ix][Iy - 1][Iz] == 1) Coef = 0;
							else Coef = 1;

							Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][RO][1] * gridDim[Nx + Iy - 1] * Coef;
							Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][BMU][1] * gridDim[Nx + Iy - 1] * Coef;
							Moshtaq = (fdE[Ix][Iy][Iz][k][1] * gridDim[Nx + Iy] * Makhraj - dMug * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (fdE[Ix][Iy - 1][Iz][k][1] * gridDim[Nx + Iy - 1] * Coef*Makhraj - fDiffVisco(Ix, Iy - 1, Iz, k, 1)*gridDim[Nx + Iy - 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][k][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Nx + Iy - 1] * (G_ACCG*fblockFProps[Ix][Iy - 1][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy - 1][Iz][BGAM][1] * fdE[Ix][Iy - 1][Iz][k][1] / fblockFProps[Ix][Iy - 1][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

							tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][BGAM][1] * gridDim[Nx + Iy - 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

							if (ftransS[Ix + 1][Iy][Iz + 1][1][1]) {
								dRsidedxg -= (fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);
								dBsidedxg = -fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);

								//dRsidedxg-=(IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								//dBsidedxg-=IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
							}
							else {
								dRsidedxg -= fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][2] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);
								dBsidedxg = -(fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);

								//dRsidedxg-=IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								//dBsidedxg-=(IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
							}


							if (fphaseStat[Ix][Iy - 1][Iz]) reCol2 = Nc;
							else reCol2 = 0;
							Jac1Row[JRowIndex] = -dBsidedxg * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
							JRowIndex++;
						}

						if (Iz<(Nz - 1)) {
							if (fphaseStat[Ix][Iy][Iz + 1] == (-1)) Coef = 0;
							else Coef = 1;

							Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][RO][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
							Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][BMU][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
							Moshtaq = (fdE[Ix][Iy][Iz][k][0] * gridDim[Nx + Ny + Iz] * Makhraj - dMul * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (fdE[Ix][Iy][Iz + 1][k][0] * gridDim[Nx + Ny + Iz + 1] * Coef*Makhraj - fDiffVisco(Ix, Iy, Iz + 1, k, 0)*gridDim[Nx + Ny + Iz + 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][k][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz + 1] * (G_ACCG*fblockFProps[Ix][Iy][Iz + 1][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz + 1][BGAM][0] * fdE[Ix][Iy][Iz + 1][k][0] / fblockFProps[Ix][Iy][Iz + 1][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

							tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][BGAM][0] * gridDim[Nx + Ny + Iz + 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

							if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][2]) {
								dRsidedxl += fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][1] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
								dBsidedxl = (fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

								dRsidedxl += fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
								dBsidedxl += (fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							}
							else {
								dRsidedxl += (fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
								dBsidedxl = fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

								dRsidedxl += (fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
								dBsidedxl += fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							}

							mBLNo = preConRow[Nx*Ny*Nz + (Iz + 1)*(Nx*Ny) + Iy * Nx + Ix];
							Jac1Row[JRowIndex] = -dBsidedxl * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo + k;
							JRowIndex++;


							if (fphaseStat[Ix][Iy][Iz + 1] == 1) Coef = 0;
							else Coef = 1;

							Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][RO][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
							Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][BMU][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
							Moshtaq = (fdE[Ix][Iy][Iz][k][1] * gridDim[Nx + Ny + Iz] * Makhraj - dMug * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (fdE[Ix][Iy][Iz + 1][k][1] * gridDim[Nx + Ny + Iz + 1] * Coef*Makhraj - fDiffVisco(Ix, Iy, Iz + 1, k, 1)*gridDim[Nx + Ny + Iz + 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][k][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz + 1] * (G_ACCG*fblockFProps[Ix][Iy][Iz + 1][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz + 1][BGAM][1] * fdE[Ix][Iy][Iz + 1][k][1] / fblockFProps[Ix][Iy][Iz + 1][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

							tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][BGAM][1] * gridDim[Nx + Ny + Iz + 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

							if (ftransS[Ix + 1][Iy + 1][Iz + 1][1][2]) {
								dRsidedxg += fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][2] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
								dBsidedxg = (fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

								dRsidedxg += fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
								dBsidedxg += (fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							}
							else {
								dRsidedxg += (fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
								dBsidedxg = fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

								dRsidedxg += (fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
								dBsidedxg += fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);

							}

							if (fphaseStat[Ix][Iy][Iz + 1]) reCol2 = Nc;
							else reCol2 = 0;
							Jac1Row[JRowIndex] = -dBsidedxg * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
							JRowIndex++;
						}

						if (Iz>0) {
							if (fphaseStat[Ix][Iy][Iz - 1] == (-1)) Coef = 0;
							else Coef = 1;

							Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][RO][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
							Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][BMU][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
							Moshtaq = (fdE[Ix][Iy][Iz][k][0] * gridDim[Nx + Ny + Iz] * Makhraj - dMul * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (fdE[Ix][Iy][Iz - 1][k][0] * gridDim[Nx + Ny + Iz - 1] * Coef*Makhraj - fDiffVisco(Ix, Iy, Iz - 1, k, 0)*gridDim[Nx + Ny + Iz - 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][k][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz - 1] * (G_ACCG*fblockFProps[Ix][Iy][Iz - 1][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz - 1][BGAM][0] * fdE[Ix][Iy][Iz - 1][k][0] / fblockFProps[Ix][Iy][Iz - 1][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

							tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][BGAM][0] * gridDim[Nx + Ny + Iz - 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

							if (ftransS[Ix + 1][Iy + 1][Iz][0][2]) {
								dRsidedxl -= (fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);
								dBsidedxl = -fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);

								dRsidedxl -= (fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][1])*(Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								dBsidedxl -= fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							}
							else {
								dRsidedxl -= fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][1] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);
								dBsidedxl = -(fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);

								dRsidedxl -= fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								dBsidedxl -= (fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][1])*(Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							}

							mBLNo = preConRow[Nx*Ny*Nz + (Iz - 1)*(Nx*Ny) + Iy * Nx + Ix];
							Jac1Row[JRowIndex] = -dBsidedxl * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo + k;
							JRowIndex++;


							if (fphaseStat[Ix][Iy][Iz - 1] == 1) Coef = 0;
							else Coef = 1;

							Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][RO][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
							Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][BMU][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
							Moshtaq = (fdE[Ix][Iy][Iz][k][1] * gridDim[Nx + Ny + Iz] * Makhraj - dMug * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (fdE[Ix][Iy][Iz - 1][k][1] * gridDim[Nx + Ny + Iz - 1] * Coef*Makhraj - fDiffVisco(Ix, Iy, Iz - 1, k, 1)*gridDim[Nx + Ny + Iz - 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][k][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz - 1] * (G_ACCG*fblockFProps[Ix][Iy][Iz - 1][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz - 1][BGAM][1] * fdE[Ix][Iy][Iz - 1][k][1] / fblockFProps[Ix][Iy][Iz - 1][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

							tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][BGAM][1] * gridDim[Nx + Ny + Iz - 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

							if (ftransS[Ix + 1][Iy + 1][Iz][1][2]) {
								dRsidedxg -= (fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);
								dBsidedxg = -fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);

								dRsidedxg -= (fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								dBsidedxg -= fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							}
							else {
								dRsidedxg -= fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][2] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);
								dBsidedxg = -(fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);

								dRsidedxg -= fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								dBsidedxg -= (fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							}


							if (fphaseStat[Ix][Iy][Iz - 1]) reCol2 = Nc;
							else reCol2 = 0;
							Jac1Row[JRowIndex] = -dBsidedxg * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
							JRowIndex++;
						}
						//jac[BLNo+2*Nc-1][BLNo+k]=(Vb/Dt)*porpor*sat[Ix][Iy][Iz][1]*dE[Ix][Iy][Iz][k][0];
						if (fphaseStat[Ix][Iy][Iz] != -1) {
							Jac1Row[JRowIndex] = (Vb / Dt)*porpor*fsat[Ix][Iy][Iz][1] * fdE[Ix][Iy][Iz][k][0] - dRsidedxl;
							//Jac1Row[JRowIndex]=(Vb/Dt)*porpor*sat[Ix][Iy][Iz][1]*dE[Ix][Iy][Iz][k][0];
							Jac1Col[JRowIndex] = jacCol + k;
							JRowIndex++;
						}

						//jac[BLNo+2*Nc-1][BLNo+Nc+k]=(Vb/Dt)*porpor*sat[Ix][Iy][Iz][2]*dE[Ix][Iy][Iz][k][1];
						if (fphaseStat[Ix][Iy][Iz] != 1) {
							//Jac1Row[JRowIndex]=(Vb/Dt)*porpor*sat[Ix][Iy][Iz][2]*dE[Ix][Iy][Iz][k][1];
							Jac1Row[JRowIndex] = (Vb / Dt)*porpor*fsat[Ix][Iy][Iz][2] * fdE[Ix][Iy][Iz][k][1] - dRsidedxg;
							Jac1Col[JRowIndex] = jacCol + Nc + k - reCol;
							JRowIndex++;
						}

						/////////////////////////////////////////////////Sadeq////////////////////////////////////
						if (phaseStat[Ix][Iy][Iz] == 1) {
							//dRsideMdxl = 0;
							Jac1Row[JRowIndex] = dRsideMdxl;
							Jac1Col[JRowIndex] = MatrixEq + k;
							JRowIndex++;
						}
						else if (phaseStat[Ix][Iy][Iz] == (-1)) {
							//dRsideMdxg = 0;
							Jac1Row[JRowIndex] = dRsideMdxg;
							Jac1Col[JRowIndex] = MatrixEq + k;
							JRowIndex++;
						}
						else {
							//dRsideMdxl = 0;
							Jac1Row[JRowIndex] = dRsideMdxl;
							Jac1Col[JRowIndex] = MatrixEq + k;
							JRowIndex++;
							//dRsideMdxg = 0;
							Jac1Row[JRowIndex] = dRsideMdxg;
							Jac1Col[JRowIndex] = MatrixEq + Nc + k;
							JRowIndex++;
						}
						////////////////////////sadeq/////////////////////////
					}


				}
				else {
					LSide = (Vb / Dt)*(porpor*watRo*WAT_M_RO*fsat[Ix][Iy][Iz][0] - fpreProp[Ix][Iy][Iz][Nc]);
					RSide = fWtran[Ix + 1][Iy + 1][Iz + 1][0] * (fP[Ix + 2][Iy + 1][Iz + 1][0] - fP[Ix + 1][Iy + 1][Iz + 1][0]) - fWtran[Ix][Iy + 1][Iz + 1][0] * (fP[Ix + 1][Iy + 1][Iz + 1][0] - fP[Ix][Iy + 1][Iz + 1][0]);
					RSide += fWtran[Ix + 1][Iy + 1][Iz + 1][1] * (fP[Ix + 1][Iy + 2][Iz + 1][0] - fP[Ix + 1][Iy + 1][Iz + 1][0]) - fWtran[Ix + 1][Iy][Iz + 1][1] * (fP[Ix + 1][Iy + 1][Iz + 1][0] - fP[Ix + 1][Iy][Iz + 1][0]);
					RSide += fWtran[Ix + 1][Iy + 1][Iz + 1][2] * (fP[Ix + 1][Iy + 1][Iz + 2][0] - fP[Ix + 1][Iy + 1][Iz + 1][0]) - fWtran[Ix + 1][Iy + 1][Iz][2] * (fP[Ix + 1][Iy + 1][Iz + 1][0] - fP[Ix + 1][Iy + 1][Iz][0]);

					RSide += G_ACC * watRo*fWtran[Ix + 1][Iy + 1][Iz + 1][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - G_ACC * watRo*fWtran[Ix][Iy + 1][Iz + 1][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
					RSide += G_ACC * watRo*fWtran[Ix + 1][Iy + 1][Iz + 1][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - G_ACC * watRo*fWtran[Ix + 1][Iy][Iz + 1][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
					RSide += G_ACC * watRo*fWtran[Ix + 1][Iy + 1][Iz + 1][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]) - G_ACC * watRo*fWtran[Ix + 1][Iy + 1][Iz][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);

					/////////////////////////////Transfer Function


					RSide -= ZERO_CONV * SI_C* watRo *WAT_M_RO * ShapeFactor_2(Ix, Iy, Iz) * f_m_relperm[0] / watMu * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) *((fP[Ix + 1][Iy + 1][Iz + 1][0] - P[Ix + 1][Iy + 1][Iz + 1][0]) + (blockFProps[Ix][Iy][Iz][BLOCK_PC][0] - fblockFProps[Ix][Iy][Iz][BLOCK_PC][0]));

					////////////////////////////////////////////
					RSide += Qw;
					ans[CSRrowIndex] = -LSide + RSide;
					CSRrowIndex++;


					dLsidedp = (Vb / Dt)*watRo*WAT_M_RO*fsat[Ix][Iy][Iz][0] * dPordp;
					dLsidedSw = (Vb / Dt)*(porpor*watRo*WAT_M_RO);

					dRsidedp = 0;
					dRsideMdp = 0;
					//Transfer function dRside dp
					dRsidedp -= ZERO_CONV * SI_C * watRo *WAT_M_RO * ShapeFactor_2(Ix, Iy, Iz) * f_m_relperm[0] / watMu * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]);
					dRsideMdp -= ZERO_CONV * -SI_C * watRo *WAT_M_RO * ShapeFactor_2(Ix, Iy, Iz) * f_m_relperm[0] / watMu * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]);


					dRsidedp += fWtran[Ix + 1][Iy + 1][Iz + 1][0] + fWtran[Ix][Iy + 1][Iz + 1][0];
					dRsidedp += fWtran[Ix + 1][Iy + 1][Iz + 1][1] + fWtran[Ix + 1][Iy][Iz + 1][1];
					dRsidedp += fWtran[Ix + 1][Iy + 1][Iz + 1][2] + fWtran[Ix + 1][Iy + 1][Iz][2];


					//jac[BLNo+2*Nc][BLNo+(2*Nc)]=PCoeff*(dLsidedp+dRsidedp);
					Jac1Row[JRowIndex] = PCoeff * (dLsidedp + dRsidedp + PIw);
					Jac1Col[JRowIndex] = jacCol + (2 * Nc) - reCol;
					JRowIndex++;

					//jac[BLNo+2*Nc][BLNo+(2*Nc+1)]=dLsidedSw;

					dRsidedSw = 0;
					dRsideMdSw = 0;
					// Transfer function drside dsw
					dRsidedSw -= ZERO_CONV * SI_C *WAT_M_RO* f_m_drelperm[1][5] * watRo * ShapeFactor_2(Ix, Iy, Iz) / watMu * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) *((fP[Ix + 1][Iy + 1][Iz + 1][0] - P[Ix + 1][Iy + 1][Iz + 1][0]) + (blockFProps[Ix][Iy][Iz][BLOCK_PC][0] - fblockFProps[Ix][Iy][Iz][BLOCK_PC][0]));
					dRsideMdSw -= ZERO_CONV * SI_C *WAT_M_RO* f_m_drelperm[1][0] * watRo * ShapeFactor_2(Ix, Iy, Iz) / watMu * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) *((fP[Ix + 1][Iy + 1][Iz + 1][0] - P[Ix + 1][Iy + 1][Iz + 1][0]) + (blockFProps[Ix][Iy][Iz][BLOCK_PC][0] - fblockFProps[Ix][Iy][Iz][BLOCK_PC][0]));


					if (Ix < (Nx - 1)) {
						if (fphaseStat[Ix + 1][Iy][Iz]) reCol2 = Nc;
						else reCol2 = 0;
						mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + Iy * Nx + Ix + 1] - reCol2;
						Jac1Row[JRowIndex] = PCoeff * (-fWtran[Ix + 1][Iy + 1][Iz + 1][0]);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;

						dsw = fdWtran[Ix + 1][Iy + 1][Iz + 1][0] * (fP[Ix + 2][Iy + 1][Iz + 1][0] - fP[Ix + 1][Iy + 1][Iz + 1][0]) + G_ACC * watRo*fdWtran[Ix + 1][Iy + 1][Iz + 1][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][2][0]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;
					}
					if (Ix > 0) {
						if (fphaseStat[Ix - 1][Iy][Iz]) reCol2 = Nc;
						else reCol2 = 0;
						mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + Iy * Nx + Ix - 1] - reCol2;
						Jac1Row[JRowIndex] = PCoeff * (-fWtran[Ix][Iy + 1][Iz + 1][0]);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;

						dsw = -fdWtran[Ix][Iy + 1][Iz + 1][0] * (fP[Ix + 1][Iy + 1][Iz + 1][0] - fP[Ix][Iy + 1][Iz + 1][0]) - G_ACC * watRo*fdWtran[Ix][Iy + 1][Iz + 1][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						if (!ftransS[Ix][Iy + 1][Iz + 1][2][0]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;
					}


					if (Iy < (Ny - 1)) {
						if (fphaseStat[Ix][Iy + 1][Iz]) reCol2 = Nc;
						else reCol2 = 0;
						mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + (Iy + 1)*Nx + Ix] - reCol2;
						Jac1Row[JRowIndex] = PCoeff * (-fWtran[Ix + 1][Iy + 1][Iz + 1][1]);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;

						dsw = fdWtran[Ix + 1][Iy + 1][Iz + 1][1] * (fP[Ix + 1][Iy + 2][Iz + 1][0] - fP[Ix + 1][Iy + 1][Iz + 1][0]) + G_ACC * watRo*fdWtran[Ix + 1][Iy + 1][Iz + 1][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][2][1]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;
					}
					if (Iy > 0) {
						if (fphaseStat[Ix][Iy - 1][Iz]) reCol2 = Nc;
						else reCol2 = 0;
						mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + (Iy - 1)*Nx + Ix] - reCol2;
						Jac1Row[JRowIndex] = PCoeff * (-fWtran[Ix + 1][Iy][Iz + 1][1]);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;

						dsw = -fdWtran[Ix + 1][Iy][Iz + 1][1] * (fP[Ix + 1][Iy + 1][Iz + 1][0] - fP[Ix + 1][Iy][Iz + 1][0]) - G_ACC * watRo*fdWtran[Ix + 1][Iy][Iz + 1][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						if (!ftransS[Ix + 1][Iy][Iz + 1][2][1]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;
					}


					if (Iz < (Nz - 1)) {
						if (fphaseStat[Ix][Iy][Iz + 1]) reCol2 = Nc;
						else reCol2 = 0;
						mBLNo = preConRow[Nx*Ny*Nz + (Iz + 1)*(Nx*Ny) + Iy * Nx + Ix] - reCol2;
						Jac1Row[JRowIndex] = PCoeff * (-fWtran[Ix + 1][Iy + 1][Iz + 1][2]);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;

						dsw = fdWtran[Ix + 1][Iy + 1][Iz + 1][2] * (fP[Ix + 1][Iy + 1][Iz + 2][0] - fP[Ix + 1][Iy + 1][Iz + 1][0]) + G_ACC * watRo*fdWtran[Ix + 1][Iy + 1][Iz + 1][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][2][2]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;
					}
					if (Iz > 0) {
						if (fphaseStat[Ix][Iy][Iz - 1]) reCol2 = Nc;
						else reCol2 = 0;
						mBLNo = preConRow[Nx*Ny*Nz + (Iz - 1)*(Nx*Ny) + Iy * Nx + Ix] - reCol2;
						Jac1Row[JRowIndex] = PCoeff * (-fWtran[Ix + 1][Iy + 1][Iz][2]);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;

						dsw = -fdWtran[Ix + 1][Iy + 1][Iz][2] * (fP[Ix + 1][Iy + 1][Iz + 1][0] - fP[Ix + 1][Iy + 1][Iz][0]) - G_ACC * watRo*fdWtran[Ix + 1][Iy + 1][Iz][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						if (!ftransS[Ix + 1][Iy + 1][Iz][2][2]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;
					}

					Jac1Row[JRowIndex] = dLsidedSw - dRsidedSw;
					Jac1Col[JRowIndex] = jacCol + (2 * Nc + 1) - reCol;
					JRowIndex++;

					/////////////////////////////////////////////////Sadeq///////////////////////////////////
					//dRsideMdp = 0;
					Jac1Row[JRowIndex] = PCoeff * dRsideMdp;
					Jac1Col[JRowIndex] = MatrixEq + 2 * Nc - reColF1;
					JRowIndex++;
					//dRsideMdSw = 0;
					Jac1Row[JRowIndex] = dRsideMdSw;
					Jac1Col[JRowIndex] = MatrixEq + 2 * Nc + 1 - reColF1;
					JRowIndex++;
					//////////////////////////Sadeq/////////////////////////
				}

			}
			else if (BENo < (Nc + 2)) {
				Sxg = 0;

				for (i = 0; i < Nc; i++) {
					Sxg += fcomp[Ix][Iy][Iz][i][1];

					Jac1Row[JRowIndex] = 1;
					Jac1Col[JRowIndex] = jacCol + Nc + i - reCol;
					JRowIndex++;
				}

			}
			else if (BENo < (Nc + 3)) {
				Jac1Row[JRowIndex] = 1;
				Jac1Col[JRowIndex] = jacCol + 2 * Nc + 1 - reCol;
				JRowIndex++;			

				Jac1Row[JRowIndex] = 1;
				Jac1Col[JRowIndex] = jacCol + 2 * Nc + 3 - reCol - reCol3;
				JRowIndex++;
			}
			else {
				std::cout << Ix << '\t' << Iy << '\t' << Iz << '\t' << BENo << "\tFracture phase stat: " << fphaseStat[Ix][Iy][Iz] << std::endl;

				TerM("Global Index Error!");
			}

			break;
		case 0:
			reCol = 0;
			reCol3 = 0;

			if (BENo < Nc) {
				
				Al = 0;
				Bl = 0;
				Ag = 0;
				Bg = 0;
				for (i = 0; i < Nc; i++) {
					Bl += fcomp[Ix][Iy][Iz][i][0] * fluidProp[i][EOS_B];
					Bg += fcomp[Ix][Iy][Iz][i][1] * fluidProp[i][EOS_B];
					for (j = 0; j < Nc; j++) {
						tempSQR = sqrt(fluidProp[i][EOS_A] * fluidProp[j][EOS_A])*bic[i][j];
						Al += fcomp[Ix][Iy][Iz][i][0] * fcomp[Ix][Iy][Iz][j][0] * tempSQR;
						Ag += fcomp[Ix][Iy][Iz][i][1] * fcomp[Ix][Iy][Iz][j][1] * tempSQR;
					}
				}

				Cal = Al;
				Cbl = Bl;
				Cag = Ag;
				Cbg = Bg;
				Al *= fP[Ix + 1][Iy + 1][Iz + 1][1] / (RGAS*RGAS*resTemp*resTemp);
				Bl *= fP[Ix + 1][Iy + 1][Iz + 1][1] / (RGAS*resTemp);
				Ag *= fP[Ix + 1][Iy + 1][Iz + 1][2] / (RGAS*RGAS*resTemp*resTemp);
				Bg *= fP[Ix + 1][Iy + 1][Iz + 1][2] / (RGAS*resTemp);

				dAdpl = Cal / (RGAS*RGAS*resTemp*resTemp);
				dAdpg = Cag / (RGAS*RGAS*resTemp*resTemp);
				dBdpl = Cbl / (RGAS*resTemp);
				dBdpg = Cbg / (RGAS*resTemp);


				Zl = fP[Ix + 1][Iy + 1][Iz + 1][1] / (fblockFProps[Ix][Iy][Iz][RO][0] * RGAS*resTemp);
				Zg = fP[Ix + 1][Iy + 1][Iz + 1][2] / (fblockFProps[Ix][Iy][Iz][RO][1] * RGAS*resTemp);


				dZdpl = (1 - fdE[Ix][Iy][Iz][Nc][0] * RGAS*resTemp*Zl)*(Zl / fP[Ix + 1][Iy + 1][Iz + 1][1]);
				dZdpg = (1 - fdE[Ix][Iy][Iz][Nc][1] * RGAS*resTemp*Zg)*(Zg / fP[Ix + 1][Iy + 1][Iz + 1][2]);

				if (SRK) {
					d1 = 1;
					d2 = 0;
				}
				else if (PR) {
					d1 = 1 + SQRT2;
					d2 = 1 - SQRT2;
				}

				i = BENo;

				tl = 0;
				tg = 0;
				for (j = 0; j < Nc; j++) {	//FFSS
					tempSQR = sqrt(fluidProp[i][EOS_A] * fluidProp[j][EOS_A])*bic[i][j];
					tl += fcomp[Ix][Iy][Iz][j][0] * tempSQR;
					tg += fcomp[Ix][Iy][Iz][j][1] * tempSQR;
				}
				t1l = fluidProp[i][EOS_B] / Cbl;
				t1g = fluidProp[i][EOS_B] / Cbg;

				EEl = 2 * tl / Cal - t1l;
				EEg = 2 * tg / Cag - t1g;

				DDl = Al / (Bl*(d1 - d2));
				DDg = Ag / (Bg*(d1 - d2));

				FFl = log((Zl + d2 * Bl) / (Zl + d1 * Bl));
				FFg = log((Zg + d2 * Bg) / (Zg + d1 * Bg));

				phiL = exp(t1l*(Zl - 1) - log(Zl - Bl) + DDl * EEl*FFl);
				phiG = exp(t1g*(Zg - 1) - log(Zg - Bg) + DDg * EEg*FFg);

				dAAdpl = fluidProp[i][EOS_B] * dZdpl / Cbl;
				dAAdpg = fluidProp[i][EOS_B] * dZdpg / Cbg;

				dBBdpl = (dBdpl - dZdpl) / (Zl - Bl);
				dBBdpg = (dBdpg - dZdpg) / (Zg - Bg);

				dDDdpl = (Bl*dAdpl - Al * dBdpl) / (Bl*Bl*(d1 - d2));
				dDDdpg = (Bg*dAdpg - Ag * dBdpg) / (Bg*Bg*(d1 - d2));

				dFFdpl = (dZdpl + d2 * dBdpl) / (Zl + d2 * Bl) - (dZdpl + d1 * dBdpl) / (Zl + d1 * Bl);
				dFFdpg = (dZdpg + d2 * dBdpg) / (Zg + d2 * Bg) - (dZdpg + d1 * dBdpg) / (Zg + d1 * Bg);

				dPhidpl = phiL * (dAAdpl + dBBdpl + EEl * (dDDdpl*FFl + DDl * dFFdpl));
				dPhidpg = phiG * (dAAdpg + dBBdpg + EEg * (dDDdpg*FFg + DDg * dFFdpg));

				//jac[BLNo+i][BLNo+(2*Nc)]=PCoeff*(fcomp[Ix][Iy][Iz][i][0]*(phiL+fP[Ix+1][Iy+1][Iz+1][1]*dPhidpl)-fcomp[Ix][Iy][Iz][i][1]*(phiG+fP[Ix+1][Iy+1][Iz+1][2]*dPhidpg));
				Jac1Row[JRowIndex] = PCoeff * (fcomp[Ix][Iy][Iz][i][0] * (phiL + fP[Ix + 1][Iy + 1][Iz + 1][1] * dPhidpl) - fcomp[Ix][Iy][Iz][i][1] * (phiG + fP[Ix + 1][Iy + 1][Iz + 1][2] * dPhidpg));
				Jac1Col[JRowIndex] = jacCol + (2 * Nc);
				JRowIndex++;



				//i: Row of Jac
				//k: Col of Jac
				for (k = 0; k < Nc; k++) {		//for all x
					dAdxl = 0;
					dAdxg = 0;
					for (n = 0; n < Nc; n++) {		//SSFF
						tempSQR = sqrt(fluidProp[k][EOS_A] * fluidProp[n][EOS_A])*bic[k][n];
						dAdxl += fcomp[Ix][Iy][Iz][n][0] * tempSQR;
						dAdxg += fcomp[Ix][Iy][Iz][n][1] * tempSQR;
						//This loop can be reduced
					}
					dAdxl *= 2 * fP[Ix + 1][Iy + 1][Iz + 1][1] / (RGAS*RGAS*resTemp*resTemp);
					dAdxg *= 2 * fP[Ix + 1][Iy + 1][Iz + 1][2] / (RGAS*RGAS*resTemp*resTemp);
					dBdxl = fluidProp[k][EOS_B] * fP[Ix + 1][Iy + 1][Iz + 1][1] / (RGAS*resTemp);
					dBdxg = fluidProp[k][EOS_B] * fP[Ix + 1][Iy + 1][Iz + 1][2] / (RGAS*resTemp);

					dZdxl = -fdE[Ix][Iy][Iz][k][0] * RGAS*resTemp*Zl*Zl / fP[Ix + 1][Iy + 1][Iz + 1][1];
					dZdxg = -fdE[Ix][Iy][Iz][k][1] * RGAS*resTemp*Zg*Zg / fP[Ix + 1][Iy + 1][Iz + 1][2];

					dAAdxl = -fluidProp[k][EOS_B] * fluidProp[i][EOS_B] * (Zl - 1) / (Cbl*Cbl) + fluidProp[i][EOS_B] * dZdxl / Cbl;
					dAAdxg = -fluidProp[k][EOS_B] * fluidProp[i][EOS_B] * (Zg - 1) / (Cbg*Cbg) + fluidProp[i][EOS_B] * dZdxg / Cbg;

					dBBdxl = (dBdxl - dZdxl) / (Zl - Bl);
					dBBdxg = (dBdxg - dZdxg) / (Zg - Bg);

					dDDdxl = (dAdxl*Bl - dBdxl * Al) / (Bl*Bl*(d1 - d2));
					dDDdxg = (dAdxg*Bg - dBdxg * Ag) / (Bg*Bg*(d1 - d2));

					dFFdxl = (dZdxl + d2 * dBdxl) / (Zl + d2 * Bl) - (dZdxl + d1 * dBdxl) / (Zl + d1 * Bl);
					dFFdxg = (dZdxg + d2 * dBdxg) / (Zg + d2 * Bg) - (dZdxg + d1 * dBdxg) / (Zg + d1 * Bg);

					tempSQR = sqrt(fluidProp[i][EOS_A] * fluidProp[k][EOS_A])*bic[i][k];
					dEEdxl = 2 * (tempSQR / Cal - dAdxl * RGAS*RGAS*resTemp*resTemp*tl / (fP[Ix + 1][Iy + 1][Iz + 1][1] * Cal*Cal)) + fluidProp[i][EOS_B] * fluidProp[k][EOS_B] / (Cbl*Cbl);
					dEEdxg = 2 * (tempSQR / Cag - dAdxg * RGAS*RGAS*resTemp*resTemp*tg / (fP[Ix + 1][Iy + 1][Iz + 1][2] * Cag*Cag)) + fluidProp[i][EOS_B] * fluidProp[k][EOS_B] / (Cbg*Cbg);

					dPhidxl = phiL * (dAAdxl + dBBdxl + dDDdxl * EEl*FFl + DDl * dEEdxl*FFl + DDl * EEl*dFFdxl);
					dPhidxg = phiG * (dAAdxg + dBBdxg + dDDdxg * EEg*FFg + DDg * dEEdxg*FFg + DDg * EEg*dFFdxg);

					if (i == k) {
						//jac[BLNo+i][BLNo+k]=fP[Ix+1][Iy+1][Iz+1][1]*phiL+fP[Ix+1][Iy+1][Iz+1][1]*fcomp[Ix][Iy][Iz][i][0]*dPhidxl;
						Jac1Row[JRowIndex] = fP[Ix + 1][Iy + 1][Iz + 1][1] * phiL + fP[Ix + 1][Iy + 1][Iz + 1][1] * fcomp[Ix][Iy][Iz][i][0] * dPhidxl;
						Jac1Col[JRowIndex] = jacCol + k;
						JRowIndex++;

						//jac[BLNo+i][BLNo+Nc+k]=-(fP[Ix+1][Iy+1][Iz+1][2]*phiG+fP[Ix+1][Iy+1][Iz+1][2]*fcomp[Ix][Iy][Iz][i][1]*dPhidxg);
						Jac1Row[JRowIndex] = -(fP[Ix + 1][Iy + 1][Iz + 1][2] * phiG + fP[Ix + 1][Iy + 1][Iz + 1][2] * fcomp[Ix][Iy][Iz][i][1] * dPhidxg);
						Jac1Col[JRowIndex] = jacCol + Nc + k;
						JRowIndex++;
					}
					else {
						//jac[BLNo+i][BLNo+k]=fP[Ix+1][Iy+1][Iz+1][1]*fcomp[Ix][Iy][Iz][i][0]*dPhidxl;
						Jac1Row[JRowIndex] = fP[Ix + 1][Iy + 1][Iz + 1][1] * fcomp[Ix][Iy][Iz][i][0] * dPhidxl;
						Jac1Col[JRowIndex] = jacCol + k;
						JRowIndex++;

						//jac[BLNo+i][BLNo+Nc+k]=-fP[Ix+1][Iy+1][Iz+1][2]*fcomp[Ix][Iy][Iz][i][1]*dPhidxg;
						Jac1Row[JRowIndex] = -fP[Ix + 1][Iy + 1][Iz + 1][2] * fcomp[Ix][Iy][Iz][i][1] * dPhidxg;
						Jac1Col[JRowIndex] = jacCol + Nc + k;
						JRowIndex++;
					}


				}
			}
			else if (BENo < (2 * Nc + 1)) {

#pragma region sadeq
				Mporpor = porosity[Ix][Iy][Iz] * (1 + cpor * (P[Ix + 1][Iy + 1][Iz + 1][1] - refP) + dcpor * (P[Ix + 1][Iy + 1][Iz + 1][1] - refP)*(P[Ix + 1][Iy + 1][Iz + 1][1] - refP));
				MdPordp = porosity[Ix][Iy][Iz] * (cpor + 2 * dcpor*(P[Ix + 1][Iy + 1][Iz + 1][1] - refP));

				if (P[Ix + 1][Iy + 1][Iz + 1][1] >= fP[Ix + 1][Iy + 1][Iz + 1][1])
				{
					f_m_relperm[1] = relPerm[Ix][Iy][Iz][1];//oil relperm between matrix and fracture
					f_m_drelperm[1][1] = dRelPerm[Ix][Iy][Iz][1];//dkrodsw
					f_m_drelperm[1][2] = dRelPerm[Ix][Iy][Iz][2];//dkrodsg
					f_m_drelperm[1][4] = dRelPerm[Ix][Iy][Iz][4];//dkrodso

					f_m_drelperm[1][9] = 0;
					f_m_drelperm[1][7] = 0;
					f_m_drelperm[1][6] = 0;
				}
				else
				{
					f_m_relperm[1] = frelPerm[Ix][Iy][Iz][1];
					f_m_drelperm[1][6] = fdRelPerm[Ix][Iy][Iz][1];//fdkrofdsw
					f_m_drelperm[1][7] = fdRelPerm[Ix][Iy][Iz][2];//fdkrofdsg
					f_m_drelperm[1][9] = fdRelPerm[Ix][Iy][Iz][4];//fdkrofdso

					f_m_drelperm[1][4] = 0;
					f_m_drelperm[1][2] = 0;
					f_m_drelperm[1][1] = 0;
				}
				if (P[Ix + 1][Iy + 1][Iz + 1][2] >= fP[Ix + 1][Iy + 1][Iz + 1][2])
				{
					f_m_relperm[2] = relPerm[Ix][Iy][Iz][2];//gas relperm between matrix and fracture
					f_m_drelperm[2][3] = dRelPerm[Ix][Iy][Iz][3];//dkrgdsg

					f_m_drelperm[2][8] = 0;
				}
				else
				{
					f_m_relperm[2] = frelPerm[Ix][Iy][Iz][2];
					f_m_drelperm[2][8] = fdRelPerm[Ix][Iy][Iz][3];//fdkrgfdsg

					f_m_drelperm[2][3] = 0;
				}

				if (P[Ix + 1][Iy + 1][Iz + 1][0] >= fP[Ix + 1][Iy + 1][Iz + 1][0])
				{
					f_m_relperm[0] = relPerm[Ix][Iy][Iz][0];
					f_m_drelperm[1][0] = dRelPerm[Ix][Iy][Iz][0];//dkrwdsw

					f_m_drelperm[1][5] = 0;
				}
				else
				{
					f_m_relperm[0] = frelPerm[Ix][Iy][Iz][0];//water relperm between matrix and fracture
					f_m_drelperm[1][5] = fdRelPerm[Ix][Iy][Iz][0];//fdkrwfdsw

					f_m_drelperm[1][0] = 0;
				}
#pragma endregion

#pragma region Wells&Commons For Fracture 
				porpor = fporosity[Ix][Iy][Iz] * (1 + cpor * (fP[Ix + 1][Iy + 1][Iz + 1][1] - refP) + dcpor * (fP[Ix + 1][Iy + 1][Iz + 1][1] - refP)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - refP));
				dPordp = fporosity[Ix][Iy][Iz] * (cpor + 2 * dcpor*(fP[Ix + 1][Iy + 1][Iz + 1][1] - refP));




				Qw = 0;
				Qo = 0;
				Qg = 0;

				PIw = 0;
				PIo = 0;
				PIg = 0;

				Vb = gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz];

				iWell = -1;
				for (i = 0; i < wellNO; i++) {
					if ((Ix == welli[i][1]) && (Iy == welli[i][2]) && (Iz >= welli[i][3]) && (Iz <= welli[i][4])) {
						//Re = Calc_Re(Ix, Iy, Iz, i);
						Re = Re_f;
						if ((welli[i][0] == 0) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {
							//if ((welli[i][0] == 0) && ((fabs(simTime - wellf[i][4]) <= TSTEPIF) && (fabs(simTime - wellf[i][5]) <= TSTEPIF))) {		//Constant Pwf Pressure - Production

							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][1] * fperm[Ix][Iy][Iz][0]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);

							PIw = S1 * watRo*WAT_M_RO*frelPerm[Ix][Iy][Iz][0] / watMu;
							PIo = S1 * fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / fblockFProps[Ix][Iy][Iz][BMU][0];
							PIg = S1 * fblockFProps[Ix][Iy][Iz][RO][1] * frelPerm[Ix][Iy][Iz][2] / fblockFProps[Ix][Iy][Iz][BMU][1];

							Qw = PIw * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][0]);
							Qo = PIo * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
							Qg = PIg * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

						

							/*if ((wellf[i][1]) && ((-Qo) > wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								SSo1 = 0;
								for (j = welli[i][3]; j <= welli[i][4]; j++) {
									S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
									SSo1 += fblockFProps[Ix][Iy][j][RO][0] * S2*frelPerm[Ix][Iy][j][1] / fblockFProps[Ix][Iy][Iz][BMU][0];
									S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
									SSo1 += blockFProps[Ix][Iy][j][RO][0] * S2*relPerm[Ix][Iy][j][1] / blockFProps[Ix][Iy][Iz][BMU][0];
								}
								S1 = gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][0] * fperm[Ix][Iy][Iz][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);

								if (SSo1) {
									if (SURFACE_RATES) Qo = -S1 * oilRateCh(Ix, Iy, Iz, frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fblockFProps[Ix][Iy][Iz][BMU][0] / (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fblockFProps[Ix][Iy][Iz][BMU][1]))*wellf[i][1] * fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / (fblockFProps[Ix][Iy][Iz][BMU][0] * SSo1);
									else Qo = -S1 * wellf[i][1] * fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / (fblockFProps[Ix][Iy][Iz][BMU][0] * SSo1);
								}
								Qw = Qo * frelPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*fblockFProps[Ix][Iy][Iz][BMU][0] / (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * watMu);
								Qg = Qo * frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fblockFProps[Ix][Iy][Iz][BMU][0] / (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fblockFProps[Ix][Iy][Iz][BMU][1]);

							}*/

							if (fP[Ix + 1][Iy + 1][Iz + 1][1] < WELL_MIN_P) {
								Qw = 0;
								Qo = 0;
								Qg = 0;

								PIw = 0;
								PIo = 0;
								PIg = 0;
							}
							else if ((wellf[i][1]) && ((-Qo) > wellf[i][1])) {
								Qo = -wellf[i][1];
								Qw = Qo * frelPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*fblockFProps[Ix][Iy][Iz][BMU][0] / (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * watMu);
								Qg = Qo * frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fblockFProps[Ix][Iy][Iz][BMU][0] / (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fblockFProps[Ix][Iy][Iz][BMU][1]);
								PIw = 0;
								PIo = 0;
								PIg = 0;
							}
							if ((Qw > 0) || ((Qw - Qw) != 0)) {
								Qw = 0;
								PIw = 0;
							}
							if ((Qo > 0) || ((Qo - Qo) != 0)) {
								Qo = 0;
								PIo = 0;
							}
							if ((Qg > 0) || ((Qg - Qg) != 0)) {
								Qg = 0;
								PIg = 0;
							}


							QoProduced = Qo;
							Qoprod += Qo + Qg;
							//MethQM += Qo * (1 - fcomp[Ix][Iy][Iz][0][0]) + Qg * (1 - fcomp[Ix][Iy][Iz][0][1]);
							//Qoprod = Qo*(1 - fcomp[Ix][Iy][Iz][0][0])+ Qg*(1 - fcomp[Ix][Iy][Iz][0][1]);
							WellCompSadeq[0] += Qo * (fcomp[Ix][Iy][Iz][0][0]) + Qg * (fcomp[Ix][Iy][Iz][0][1]);
							WellCompSadeq[1] += Qo * (fcomp[Ix][Iy][Iz][1][0]) + Qg * (fcomp[Ix][Iy][Iz][1][1]);
							WellCompSadeq[2] += Qo * (fcomp[Ix][Iy][Iz][2][0]) + Qg * (fcomp[Ix][Iy][Iz][2][1]);
							WellCompSadeq2[0] += (Qo*(fcomp[Ix][Iy][Iz][0][0]) + Qg * (fcomp[Ix][Iy][Iz][0][1]));
							WellCompSadeq2[1] += (Qo*(fcomp[Ix][Iy][Iz][1][0]) + Qg * (fcomp[Ix][Iy][Iz][1][1]));
							WellCompSadeq2[2] += (Qo*(fcomp[Ix][Iy][Iz][2][0]) + Qg * (fcomp[Ix][Iy][Iz][2][1]));
						}

						else if ((welli[i][0] == 1) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {		//Constant Pwf- Gas Production
																																																					//Re = Re_f;
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][1] * fperm[Ix][Iy][Iz][0]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);

							PIw = S1 * watRo*WAT_M_RO*frelPerm[Ix][Iy][Iz][0] / watMu;
							PIo = S1 * fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / fblockFProps[Ix][Iy][Iz][BMU][0];
							PIg = S1 * fblockFProps[Ix][Iy][Iz][RO][1] * frelPerm[Ix][Iy][Iz][2] / fblockFProps[Ix][Iy][Iz][BMU][1];

							Qw = PIw * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][0]);
							Qo = PIo * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
							Qg = PIg * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

							if ((Qw > 0) || ((Qw - Qw) != 0)) {
								Qw = 0;
								PIw = 0;
							}
							if ((Qo > 0) || ((Qo - Qo) != 0)) {
								Qo = 0;
								PIo = 0;
							}
							if ((Qg > 0) || ((Qg - Qg) != 0)) {
								Qg = 0;
								PIg = 0;
							}

							if ((wellf[i][1]) && ((-Qg) > wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								SSo1 = 0;
								for (j = welli[i][3]; j <= welli[i][4]; j++) {
									S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
									SSo1 += fblockFProps[Ix][Iy][j][RO][1] * S2*frelPerm[Ix][Iy][j][2] / fblockFProps[Ix][Iy][Iz][BMU][1];
									S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
									SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][Iz][BMU][1];
								}
								S1 = gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][0] * fperm[Ix][Iy][Iz][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);

								if (SSo1) {
									if (SURFACE_RATES) Qg = -S1 * gasRateCh(Ix, Iy, Iz, (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fblockFProps[Ix][Iy][Iz][BMU][1]) / (frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fblockFProps[Ix][Iy][Iz][BMU][0]))*wellf[i][1] * fblockFProps[Ix][Iy][Iz][RO][1] * frelPerm[Ix][Iy][Iz][2] / (fblockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
									else Qg = -S1 * wellf[i][1] * fblockFProps[Ix][Iy][Iz][RO][1] * frelPerm[Ix][Iy][Iz][2] / (fblockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
								}
								Qw = Qg * frelPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*fblockFProps[Ix][Iy][Iz][BMU][1] / (frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * watMu);
								Qo = Qg * frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fblockFProps[Ix][Iy][Iz][BMU][1] / (frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fblockFProps[Ix][Iy][Iz][BMU][0]);

							}

							//QoProd=oilRateCh2(Ix, Iy, Iz, -Qo, -Qg);
							QoProduced = Qo;
						}

						else if ((welli[i][0] == 2) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {			//Constant Pwf Pressure - Water Injection
																																																						//Re = Re_f;
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][1] * fperm[Ix][Iy][Iz][0]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);

							PIw = S1 * watRo*WAT_M_RO*frelPerm[Ix][Iy][Iz][0] / watMu;
							Qw = PIw * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][0]);


							if ((Qw < 0) || ((Qw - Qw) != 0)) {
								Qw = 0;
								PIw = 0;
							}

							if ((wellf[i][1]) && (Qw > wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								SSo1 = 0;
								for (j = welli[i][3]; j <= welli[i][4]; j++) {
									S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
									SSo1 += watRo * S2*frelPerm[Ix][Iy][j][0] / watMu;
									S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
									SSo1 += watRo * S2*relPerm[Ix][Iy][j][0] / watMu;
								}
								S1 = gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][0] * fperm[Ix][Iy][Iz][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);

								if (SSo1) Qw = S1 * wellf[i][1] * watRo*WAT_M_RO * frelPerm[Ix][Iy][Iz][0] / (watMu * SSo1);
							}
						}

						else if ((welli[i][0] == 3) && (((fabs(simTime - wellf[i][Nc + 4]) <= TSTEPIF) || (fabs(simTime - wellf[i][Nc + 5]) <= TSTEPIF)) || ((simTime >= wellf[i][Nc + 4]) && (simTime <= wellf[i][Nc + 5])))) {		//Constant Pwf Pressure - Gas Injection
																																																										//Re = Re_f;

							for (j = 0; j < Nc; j++) IComp[j] = wellf[i][4 + j];
							FlashInjection(IComp, wellf[i][0], IOComp, IGComp, iOF, iGF, iOD, iGD, iOV, iGV);
							//Re = Calc_Re(Ix, Iy, Iz, i);
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][1] * fperm[Ix][Iy][Iz][0]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
							//S2 = sgt[Nsgt-1][1] / iGV;
							//S2 = relPerm[Ix][Iy][Iz][2] / blockFProps[Ix][Iy][Iz][BMU][1];

							PIg = S1 * iGD * sgt[Nsgt - 1][1] * iGF / iGV;
							Qg = PIg * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
							//PIo = S1*iOD * swt[0][2]*iOF / iOV;
							PIo = PIg * iOF / iGF;
							Qo = PIo * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

							if ((Qo < 0) || ((Qo - Qo) != 0)) {
								Qo = 0;
								PIo = 0;
							}
							if ((Qg < 0) || ((Qg - Qg) != 0)) {
								Qg = 0;
								PIg = 0;
							}

							iWell = i;

							if ((wellf[i][1]) && (Qg > wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								SSo1 = 0;
								for (j = welli[i][3]; j <= welli[i][4]; j++) {
									S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
									//SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][Iz][BMU][1];
									SSo1 += S2;
									S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
									//SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][Iz][BMU][1];
									SSo1 += S2;
								}
								S1 = gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][0] * fperm[Ix][Iy][Iz][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);

								//if (SSo1) Qg = S1*wellf[i][1] * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / (blockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
								if (SSo1) Qg = S1 * wellf[i][1] / SSo1;
								if (SSo1) Qo = Qg * iOF / iGF;
							}

							Qginj = Qg + Qo;
						}

						else if ((welli[i][0] == 4) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {		//Constant Oil Rate
							SSo1 = 0;
							for (j = welli[i][3]; j <= welli[i][4]; j++) {
								S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
								SSo1 += fblockFProps[Ix][Iy][j][RO][0] * S2*frelPerm[Ix][Iy][j][1] / fblockFProps[Ix][Iy][Iz][BMU][0];
								S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
								SSo1 += blockFProps[Ix][Iy][j][RO][0] * S2*relPerm[Ix][Iy][j][1] / blockFProps[Ix][Iy][Iz][BMU][0];
							}
							S1 = gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][0] * fperm[Ix][Iy][Iz][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);

							if (SSo1) {
								if (SURFACE_RATES) Qo = -S1 * oilRateCh(Ix, Iy, Iz, frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fblockFProps[Ix][Iy][Iz][BMU][0] / (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fblockFProps[Ix][Iy][Iz][BMU][1]))*wellf[i][0] * fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / (fblockFProps[Ix][Iy][Iz][BMU][0] * SSo1);
								else Qo = -S1 * wellf[i][0] * fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / (fblockFProps[Ix][Iy][Iz][BMU][0] * SSo1);
							}
							Qw = Qo * frelPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*fblockFProps[Ix][Iy][Iz][BMU][0] / (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * watMu);
							Qg = Qo * frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fblockFProps[Ix][Iy][Iz][BMU][0] / (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fblockFProps[Ix][Iy][Iz][BMU][1]);

							//Re = Re_f;
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][1] * fperm[Ix][Iy][Iz][0]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
							Pwf = fP[Ix + 1][Iy + 1][Iz + 1][1] - Qo / (S1*fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / fblockFProps[Ix][Iy][Iz][BMU][0]);

							if ((wellf[i][1]) && (Pwf < wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								PIw = S1 * watRo*WAT_M_RO*frelPerm[Ix][Iy][Iz][0] / watMu;
								PIo = S1 * fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / fblockFProps[Ix][Iy][Iz][BMU][0];
								PIg = S1 * fblockFProps[Ix][Iy][Iz][RO][1] * frelPerm[Ix][Iy][Iz][2] / fblockFProps[Ix][Iy][Iz][BMU][1];

								Qw = PIw * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][0]);
								Qo = PIo * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
								Qg = PIg * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

								if ((Qw > 0) || ((Qw - Qw) != 0)) {
									Qw = 0;
									PIw = 0;
								}
								if ((Qo > 0) || ((Qo - Qo) != 0)) {
									Qo = 0;
									PIo = 0;
								}
								if ((Qg > 0) || ((Qg - Qg) != 0)) {
									Qg = 0;
									PIg = 0;
								}
							}

							/*Qw = 0;
							Qo = -6.553168256220581e-07 / Nz;
							Qg = 0;
							PIw = 0;
							PIo = 0;
							PIg = 0;

							if (fP[Ix + 1][Iy + 1][Iz + 1][1] < 10600000) Qo = 0;*/

							QoProduced = Qo;
							Qoprod = Qo + Qg;
						}

						else if ((welli[i][0] == 5) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {		//Constant Gas Rate
							SSo1 = 0;
							for (j = welli[i][3]; j <= welli[i][4]; j++) {
								S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
								SSo1 += fblockFProps[Ix][Iy][j][RO][1] * S2*frelPerm[Ix][Iy][j][2] / fblockFProps[Ix][Iy][Iz][BMU][1];
								S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
								SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][Iz][BMU][1];
							}
							S1 = gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][0] * fperm[Ix][Iy][Iz][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);

							if (SSo1) {
								if (SURFACE_RATES) Qg = -S1 * gasRateCh(Ix, Iy, Iz, (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fblockFProps[Ix][Iy][Iz][BMU][1]) / (frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fblockFProps[Ix][Iy][Iz][BMU][0]))*wellf[i][1] * fblockFProps[Ix][Iy][Iz][RO][1] * frelPerm[Ix][Iy][Iz][2] / (fblockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
								else Qg = -S1 * wellf[i][1] * fblockFProps[Ix][Iy][Iz][RO][1] * frelPerm[Ix][Iy][Iz][2] / (fblockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
							}
							Qw = Qg * frelPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*fblockFProps[Ix][Iy][Iz][BMU][1] / (frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * watMu);
							Qo = Qg * frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fblockFProps[Ix][Iy][Iz][BMU][1] / (frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fblockFProps[Ix][Iy][Iz][BMU][0]);

							//Re = Re_f;
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][1] * fperm[Ix][Iy][Iz][0]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
							Pwf = fP[Ix + 1][Iy + 1][Iz + 1][2] - Qg / (S1*fblockFProps[Ix][Iy][Iz][RO][1] * frelPerm[Ix][Iy][Iz][2] / fblockFProps[Ix][Iy][Iz][BMU][1]);

							if ((wellf[i][1]) && (Pwf < wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								PIw = S1 * watRo*WAT_M_RO*frelPerm[Ix][Iy][Iz][0] / watMu;
								PIo = S1 * fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / fblockFProps[Ix][Iy][Iz][BMU][0];
								PIg = S1 * fblockFProps[Ix][Iy][Iz][RO][1] * frelPerm[Ix][Iy][Iz][2] / fblockFProps[Ix][Iy][Iz][BMU][1];

								Qw = PIw * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][0]);
								Qo = PIo * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
								Qg = PIg * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

								if ((Qw > 0) || ((Qw - Qw) != 0)) {
									Qw = 0;
									PIw = 0;
								}
								if ((Qo > 0) || ((Qo - Qo) != 0)) {
									Qo = 0;
									PIo = 0;
								}
								if ((Qg > 0) || ((Qg - Qg) != 0)) {
									Qg = 0;
									PIg = 0;
								}
							}
						}

						else if ((welli[i][0] == 6) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {		//Constant Total Production Rate
							SSw = 0;
							SSo = 0;
							SSg = 0;
							SSo1 = 0;
							for (j = welli[i][3]; j <= welli[i][4]; j++) {
								S1 = (frelPerm[Ix][Iy][j][0] / watMu) + (frelPerm[Ix][Iy][j][1] / fblockFProps[Ix][Iy][j][BMU][0]) + (frelPerm[Ix][Iy][j][2] / fblockFProps[Ix][Iy][j][BMU][1]);
								SSw += (frelPerm[Ix][Iy][j][0] / watMu) / S1;
								SSo += (frelPerm[Ix][Iy][j][1] / fblockFProps[Ix][Iy][j][BMU][0]) / S1;
								SSg += (frelPerm[Ix][Iy][j][2] / fblockFProps[Ix][Iy][j][BMU][1]) / S1;

								S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
								SSo1 += fblockFProps[Ix][Iy][j][RO][0] * S2*frelPerm[Ix][Iy][j][1] / fblockFProps[Ix][Iy][Iz][BMU][0];

								S1 = (relPerm[Ix][Iy][j][0] / watMu) + (relPerm[Ix][Iy][j][1] / blockFProps[Ix][Iy][j][BMU][0]) + (relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][j][BMU][1]);
								SSw += (relPerm[Ix][Iy][j][0] / watMu) / S1;
								SSo += (relPerm[Ix][Iy][j][1] / blockFProps[Ix][Iy][j][BMU][0]) / S1;
								SSg += (relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][j][BMU][1]) / S1;

								S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
								SSo1 += blockFProps[Ix][Iy][j][RO][0] * S2*relPerm[Ix][Iy][j][1] / blockFProps[Ix][Iy][Iz][BMU][0];

							}
							QoP = SSo * wellf[i][0] / (SSw + SSo + SSg);

							S1 = gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][0] * fperm[Ix][Iy][Iz][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
							if (SSo1) Qo = -S1 * QoP*fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / (fblockFProps[Ix][Iy][Iz][BMU][0] * SSo1);
							Qw = Qo * frelPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*fblockFProps[Ix][Iy][Iz][BMU][0] / (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * watMu);
							Qg = Qo * frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fblockFProps[Ix][Iy][Iz][BMU][0] / (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fblockFProps[Ix][Iy][Iz][BMU][1]);


							//Re = Re_f;
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][1] * fperm[Ix][Iy][Iz][0]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
							Pwf = fP[Ix + 1][Iy + 1][Iz + 1][1] - (Qw + Qo + Qg) / (S1*(watRo*WAT_M_RO*frelPerm[Ix][Iy][Iz][0] / watMu + fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / fblockFProps[Ix][Iy][Iz][BMU][0] + fblockFProps[Ix][Iy][Iz][RO][1] * frelPerm[Ix][Iy][Iz][2] / fblockFProps[Ix][Iy][Iz][BMU][1]));

							if ((wellf[i][1]) && (Pwf < wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								PIw = S1 * watRo*WAT_M_RO*frelPerm[Ix][Iy][Iz][0] / watMu;
								PIo = S1 * fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / fblockFProps[Ix][Iy][Iz][BMU][0];
								PIg = S1 * fblockFProps[Ix][Iy][Iz][RO][1] * frelPerm[Ix][Iy][Iz][2] / fblockFProps[Ix][Iy][Iz][BMU][1];

								Qw = PIw * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][0]);
								Qo = PIo * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
								Qg = PIg * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

								if ((Qw > 0) || ((Qw - Qw) != 0)) {
									Qw = 0;
									PIw = 0;
								}
								if ((Qo > 0) || ((Qo - Qo) != 0)) {
									Qo = 0;
									PIo = 0;
								}
								if ((Qg > 0) || ((Qg - Qg) != 0)) {
									Qg = 0;
									PIg = 0;
								}
							}
						}

						else if ((welli[i][0] == 7) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {			//Constant Water Injection Rate
							SSw = 0;
							for (j = welli[i][3]; j <= welli[i][4]; j++) {
								S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
								SSo1 += S2 * frelPerm[Ix][Iy][j][0];
								S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
								SSo1 += S2 * relPerm[Ix][Iy][j][0];
							}
							S1 = gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][0] * fperm[Ix][Iy][Iz][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
							if (SSw) Qw = S1 * wellf[i][0] * frelPerm[Ix][Iy][Iz][1] / SSw;

							//Re = Re_f;
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][1] * fperm[Ix][Iy][Iz][0]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
							Pwf = fP[Ix + 1][Iy + 1][Iz + 1][0] - Qw / (S1*watRo*WAT_M_RO * frelPerm[Ix][Iy][Iz][1] / watMu);
							if ((wellf[i][1]) && (Pwf > wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								PIw = S1 * watRo*WAT_M_RO*frelPerm[Ix][Iy][Iz][0] / watMu;
								Qw = PIw * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][0]);

								if ((Qw < 0) || ((Qw - Qw) != 0)) {
									Qw = 0;
									PIw = 0;
								}
							}
						}

						else if ((welli[i][0] == 8) && (((fabs(simTime - wellf[i][Nc + 4]) <= TSTEPIF) || (fabs(simTime - wellf[i][Nc + 5]) <= TSTEPIF)) || ((simTime >= wellf[i][Nc + 4]) && (simTime <= wellf[i][Nc + 5])))) {			//Constant Gas Injection Rate
							for (j = 0; j < Nc; j++) IComp[j] = wellf[i][4 + j];
							FlashInjection(IComp, wellf[i][1], IOComp, IGComp, iOF, iGF, iOD, iGD, iOV, iGV);

							SSo1 = 0;
							for (j = welli[i][3]; j <= welli[i][4]; j++) {
								S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
								//SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][Iz][BMU][1];
								//SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*sgt[Nsgt-1][1] / blockFProps[Ix][Iy][Iz][BMU][1];
								SSo1 += S2;

								S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
								//SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][Iz][BMU][1];
								//SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*sgt[Nsgt-1][1] / blockFProps[Ix][Iy][Iz][BMU][1];
								SSo1 += S2;
							}
							S1 = gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][0] * fperm[Ix][Iy][Iz][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);

							//if (SSo1) Qg = S1*wellf[i][0] * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / (blockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
							//if (SSo1) Qg = S1*wellf[i][0] * blockFProps[Ix][Iy][Iz][RO][1] * sgt[Nsgt - 1][1] / (blockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
							if (SSo1) Qg = S1 * wellf[i][0] / SSo1;
							if (SSo1) Qo = Qg * iOF / iGF;
							//Re = 0.14*sqrt(sqrt(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0])*gridDim[Ix] * gridDim[Ix] + sqrt(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1])*gridDim[Nx + Iy] * gridDim[Nx + Iy]);
							//Re /= 0.5*(pow(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0], 0.25) + pow(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1], 0.25));



							//Re = Calc_Re(Ix, Iy, Iz, i);
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][1] * fperm[Ix][Iy][Iz][0]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
							//Pwf = P[Ix + 1][Iy + 1][Iz + 1][2] - Qg / (S1*blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / blockFProps[Ix][Iy][Iz][BMU][1]);
							//Pwf = P[Ix + 1][Iy + 1][Iz + 1][2] - Qg / (S1*blockFProps[Ix][Iy][Iz][RO][1] * sgt[Nsgt - 1][1] / blockFProps[Ix][Iy][Iz][BMU][1]);
							Pwf = fP[Ix + 1][Iy + 1][Iz + 1][2] - Qg / (S1*iGD * sgt[Nsgt - 1][1] / iGV);

							if ((wellf[i][1]) && (Pwf > wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								PIg = S1 * iGD * sgt[Nsgt - 1][1] * iGF / iGV;
								Qg = PIg * (wellf[i][1] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
								//PIo = S1*iOD * swt[0][2]*iOF / iOV;
								PIo = PIg * iOF / iGF;
								Qo = PIo * (wellf[i][1] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

								if ((Qo < 0) || ((Qo - Qo) != 0)) {
									Qo = 0;
									PIo = 0;
								}
								if ((Qg < 0) || ((Qg - Qg) != 0)) {
									Qg = 0;
									PIg = 0;
								}
							}


							if (fP[Ix + 1][Iy + 1][Iz + 1][1] > WELL_MAX_P) {
								Qw = 0;
								Qo = 0;
								Qg = 0;
								IOComp[0] = 0;
								IOComp[1] = 0;
								IGComp[0] = 0;
								IGComp[1] = 0;
								PIw = 0;
								PIo = 0;
								PIg = 0;
							}

							QgInjected = Qg;


							QgInj = Qg;

							iWell = i;
							gasInjStat = -1;

							Qginj += Qg + Qo;
						}


					}
					QwT += Qw;
					QoT += Qo;
					QgT += Qg;
				}



#pragma endregion
			
				if (BENo < (2 * Nc - 1)) {
					i = BENo - Nc;
					
					LSide = (Vb / Dt)*(porpor*(fcomp[Ix][Iy][Iz][i][0] * fblockFProps[Ix][Iy][Iz][RO][0] * fsat[Ix][Iy][Iz][1] + fcomp[Ix][Iy][Iz][i][1] * fblockFProps[Ix][Iy][Iz][RO][1] * fsat[Ix][Iy][Iz][2]) - fpreProp[Ix][Iy][Iz][i]);
					RSide = fcomp[(Ix + ftransS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][0][0] * (fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) - fcomp[(Ix - 1 + ftransS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix][Iy + 1][Iz + 1][0][0] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);
					RSide += fcomp[Ix][(Iy + ftransS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][0][1] * (fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) - fcomp[Ix][(Iy - 1 + ftransS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy][Iz + 1][0][1] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);
					RSide += fcomp[Ix][Iy][(Iz + ftransS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][0][2] * (fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) - fcomp[Ix][Iy][(Iz - 1 + ftransS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz][0][2] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);
					RSide += fcomp[(Ix + ftransS[Ix + 1][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][1][0] * (fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]) - fcomp[(Ix - 1 + ftransS[Ix][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * ftrans[Ix][Iy + 1][Iz + 1][1][0] * (fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);
					RSide += fcomp[Ix][(Iy + ftransS[Ix + 1][Iy + 1][Iz + 1][1][1])][Iz][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][1][1] * (fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]) - fcomp[Ix][(Iy - 1 + ftransS[Ix + 1][Iy][Iz + 1][1][1])][Iz][i][1] * ftrans[Ix + 1][Iy][Iz + 1][1][1] * (fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);
					RSide += fcomp[Ix][Iy][(Iz + ftransS[Ix + 1][Iy + 1][Iz + 1][1][2])][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][1][2] * (fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]) - fcomp[Ix][Iy][(Iz - 1 + ftransS[Ix + 1][Iy + 1][Iz][1][2])][i][1] * ftrans[Ix + 1][Iy + 1][Iz][1][2] * (fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);

					RSide += fcomp[(Ix + ftransS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][2][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - fcomp[(Ix - 1 + ftransS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix][Iy + 1][Iz + 1][2][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
					RSide += fcomp[Ix][(Iy + ftransS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][2][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - fcomp[Ix][(Iy - 1 + ftransS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy][Iz + 1][2][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
					RSide += fcomp[Ix][Iy][(Iz + ftransS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][2][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]) - fcomp[Ix][Iy][(Iz - 1 + ftransS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz][2][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
					RSide += fcomp[(Ix + ftransS[Ix + 1][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][3][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - fcomp[(Ix - 1 + ftransS[Ix][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * ftrans[Ix][Iy + 1][Iz + 1][3][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
					RSide += fcomp[Ix][(Iy + ftransS[Ix + 1][Iy + 1][Iz + 1][1][1])][Iz][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][3][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - fcomp[Ix][(Iy - 1 + ftransS[Ix + 1][Iy][Iz + 1][1][1])][Iz][i][1] * ftrans[Ix + 1][Iy][Iz + 1][3][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
					RSide += fcomp[Ix][Iy][(Iz + ftransS[Ix + 1][Iy + 1][Iz + 1][1][2])][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][3][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]) - fcomp[Ix][Iy][(Iz - 1 + ftransS[Ix + 1][Iy + 1][Iz][1][2])][i][1] * ftrans[Ix + 1][Iy + 1][Iz][3][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);


					////////////////////////////Transfer Function

					//	if (comp[Ix][Iy][Iz][i][0] > fcomp[Ix][Iy][Iz][i][0]) f_m_diffusion[0] = diffusion[Ix][Iy][Iz][i][0];
					//else f_m_diffusion[0] = fdiffusion[Ix][Iy][Iz][i][0];

					//		if (comp[Ix][Iy][Iz][i][1] > fcomp[Ix][Iy][Iz][i][1]) f_m_diffusion[1] = diffusion[Ix][Iy][Iz][i][1];
					//	else f_m_diffusion[1] = fdiffusion[Ix][Iy][Iz][i][1];
					//Transfer function Rside 
					RSide -= ZERO_CONV * SI_C *comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
					RSide -= ZERO_CONV * SI_C * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor) / (porpor + Mporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (1))//only Liq in Fracture & Matrix
						RSide -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (-1))//only Gas in Fracture & Matrix
						RSide -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0)) {
						RSide -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);

						RSide -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

					}

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
						//RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);

						RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
					}

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (1)) {
						//RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);

						RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
					}

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1)) {
						//RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);

						RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);

						RSide -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
					}

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1)) {
						RSide -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

						//RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);

						RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
					}

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0)) {
						//RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);

						RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);

						RSide -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
					}

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0)) {
						RSide -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

						//RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);

						RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
					}
					//	
					/////////////////////////////////////////
					if (iWell == (-1)) {
						gComp = fcomp[Ix][Iy][Iz][i][1];
						oComp = fcomp[Ix][Iy][Iz][i][0];
					}
					else {
						if (welli[iWell][0] == 3) {
							gComp = IGComp[i];
							oComp = IOComp[i];
						}
						else if (welli[iWell][0] == 8) {
							//gComp = wellf[iWell][i + 4];
							gComp = IGComp[i];
							oComp = IOComp[i];
						}
					}

					/*
					if (iWell == (-1)) {
					gComp = fcomp[Ix][Iy][Iz][i][1];
					}
					else {
					if (welli[iWell][0] == 3) {
					gComp = wellf[iWell][i + 4];
					}
					else if (welli[iWell][0] == 8) {
					gComp = wellf[iWell][i + 4];
					}
					}*/

					RSide += oComp * Qo + gComp * Qg;

					dLsidedp = (Vb / Dt)*(fcomp[Ix][Iy][Iz][i][0] * fsat[Ix][Iy][Iz][1] * (fblockFProps[Ix][Iy][Iz][RO][0] * dPordp + fdE[Ix][Iy][Iz][Nc][0] * porpor) + fcomp[Ix][Iy][Iz][i][1] * fsat[Ix][Iy][Iz][2] * (fblockFProps[Ix][Iy][Iz][RO][1] * dPordp + fdE[Ix][Iy][Iz][Nc][1] * porpor));
					dLsidedSo = (Vb / Dt)*(fcomp[Ix][Iy][Iz][i][0] * porpor*fblockFProps[Ix][Iy][Iz][RO][0]);
					dLsidedSg = (Vb / Dt)*(fcomp[Ix][Iy][Iz][i][1] * porpor*fblockFProps[Ix][Iy][Iz][RO][1]);

					dRsideMdp = 0;
					dRsidedp = 0;
					// Transfer function drside dp mdp
					//moshtagh transfer Function jabejaie naft nesbat be feshar matrix
					dRsideMdp -= ZERO_CONV * SI_C * dE[Ix][Iy][Iz][Nc][0] * comp[Ix][Iy][Iz][i][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
					dRsideMdp -= ZERO_CONV * -SI_C * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor));
					dRsideMdp -= ZERO_CONV * -SI_C * (DiffVisco(Ix, Iy, Iz, Nc, 0) * Mporpor + MdPordp * blockFProps[Ix][Iy][Iz][BMU][0]) * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor)*(blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) * (porpor + Mporpor);
					dRsideMdp -= ZERO_CONV * SI_C * MdPordp * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / (blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					//moshtagh transfer Function jabejaie gaz nesbat be feshar matrix
					dRsideMdp -= ZERO_CONV * SI_C * dE[Ix][Iy][Iz][Nc][1] * comp[Ix][Iy][Iz][i][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor) / (porpor + Mporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));
					dRsideMdp -= ZERO_CONV * -SI_C * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor) / (porpor + Mporpor));
					dRsideMdp -= ZERO_CONV * -SI_C * (DiffVisco(Ix, Iy, Iz, Nc, 1) * Mporpor + MdPordp * blockFProps[Ix][Iy][Iz][BMU][1]) * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor)*(blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1])) * (porpor + Mporpor);
					dRsideMdp -= ZERO_CONV * SI_C * MdPordp * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / (blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (1)) { // //moshtagh transfer Function nofuze oil-oil nesbat be feshar matrix 
						dRsideMdp -= ZERO_DIFF * MdPordp * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
						dRsideMdp -= ZERO_DIFF * dE[Ix][Iy][Iz][Nc][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
						dRsideMdp -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
					}

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (-1)) { // //moshtagh transfer Function nofuze gas-gas nesbat be feshar matrix 
						dRsideMdp -= ZERO_DIFF * MdPordp * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
						dRsideMdp -= ZERO_DIFF * dE[Ix][Iy][Iz][Nc][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
						dRsideMdp -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
					}

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0)) {
						dRsideMdp -= ZERO_DIFF * MdPordp * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
						dRsideMdp -= ZERO_DIFF * dE[Ix][Iy][Iz][Nc][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
						dRsideMdp -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);

						dRsideMdp -= ZERO_DIFF * MdPordp * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
						dRsideMdp -= ZERO_DIFF * dE[Ix][Iy][Iz][Nc][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
						dRsideMdp -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
					}

					//if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
					//	dRsideMdp -= ZERO_DIFF * MdPordp * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
					//	dRsideMdp -= ZERO_DIFF * dE[Ix][Iy][Iz][Nc][0] * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
					//	dRsideMdp -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 0) * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
					//}

					//if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (1)) {
					//	dRsideMdp -= ZERO_DIFF * MdPordp * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
					//	dRsideMdp -= ZERO_DIFF * dE[Ix][Iy][Iz][Nc][1] * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
					//	dRsideMdp -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 1) * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
					//}

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1)) {
						//dRsideMdp -= ZERO_DIFF * MdPordp * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
						//dRsideMdp -= ZERO_DIFF * dE[Ix][Iy][Iz][Nc][1] * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
						//dRsideMdp -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 1) * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);

						dRsideMdp -= ZERO_DIFF * MdPordp * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
						dRsideMdp -= ZERO_DIFF * dE[Ix][Iy][Iz][Nc][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
						dRsideMdp -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
					}

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1)) {
						dRsideMdp -= ZERO_DIFF * MdPordp * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
						dRsideMdp -= ZERO_DIFF * dE[Ix][Iy][Iz][Nc][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
						dRsideMdp -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

						//dRsideMdp -= ZERO_DIFF * MdPordp * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
						//dRsideMdp -= ZERO_DIFF * dE[Ix][Iy][Iz][Nc][0] * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
						//dRsideMdp -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 0) * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
					}

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0)) {
						//dRsideMdp -= ZERO_DIFF * MdPordp * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
						//dRsideMdp -= ZERO_DIFF * dE[Ix][Iy][Iz][Nc][0] * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
						//dRsideMdp -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 0) * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);

						dRsideMdp -= ZERO_DIFF * MdPordp * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
						dRsideMdp -= ZERO_DIFF * dE[Ix][Iy][Iz][Nc][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
						dRsideMdp -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
					}

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0)) {
						dRsideMdp -= ZERO_DIFF * MdPordp * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
						dRsideMdp -= ZERO_DIFF * dE[Ix][Iy][Iz][Nc][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
						dRsideMdp -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

						//dRsideMdp -= ZERO_DIFF * MdPordp * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
						//dRsideMdp -= ZERO_DIFF * dE[Ix][Iy][Iz][Nc][1] * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
						//dRsideMdp -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 1) * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
					}


					//moshtagh transfer Function jabejaie naft nesbat be feshar Fracture
					dRsidedp -= ZERO_CONV * SI_C * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor));
					dRsidedp -= ZERO_CONV * -SI_C * (fDiffVisco(Ix, Iy, Iz, Nc, 0) * porpor + dPordp * fblockFProps[Ix][Iy][Iz][BMU][0]) * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor)*(blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) * (porpor + Mporpor);
					dRsidedp -= ZERO_CONV * SI_C * dPordp * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / (blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					//moshtagh transfer Function jabejaie gaz nesbat be feshar Fracture
					dRsidedp -= ZERO_CONV * SI_C * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor) / (porpor + Mporpor));
					dRsidedp -= ZERO_CONV * -SI_C * (fDiffVisco(Ix, Iy, Iz, Nc, 1) * porpor + dPordp * fblockFProps[Ix][Iy][Iz][BMU][1]) * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor)*(blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1])) * (porpor + Mporpor);
					dRsidedp -= ZERO_CONV * SI_C * dPordp * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / (blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
						dRsidedp -= ZERO_DIFF * dPordp * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
						dRsidedp -= ZERO_DIFF * fdE[Ix][Iy][Iz][Nc][1] * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
						dRsidedp -= ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, Nc, 1) * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
					}

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (1)) {
						dRsidedp -= ZERO_DIFF * dPordp * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
						dRsidedp -= ZERO_DIFF * fdE[Ix][Iy][Iz][Nc][0] * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
						dRsidedp -= ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, Nc, 0) * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
					}

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1)) {
						dRsidedp -= ZERO_DIFF * dPordp * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
						dRsidedp -= ZERO_DIFF * fdE[Ix][Iy][Iz][Nc][0] * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
						dRsidedp -= ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, Nc, 0) * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
					}

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0)) {
						dRsidedp -= ZERO_DIFF * dPordp * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
						dRsidedp -= ZERO_DIFF * fdE[Ix][Iy][Iz][Nc][1] * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
						dRsidedp -= ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, Nc, 1) * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
					}

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1)) {
						dRsidedp -= ZERO_DIFF * dPordp * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
						dRsidedp -= ZERO_DIFF * fdE[Ix][Iy][Iz][Nc][1] * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
						dRsidedp -= ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, Nc, 1) * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
					}

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0)) {
						dRsidedp -= ZERO_DIFF * dPordp * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
						dRsidedp -= ZERO_DIFF * fdE[Ix][Iy][Iz][Nc][0] * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
						dRsidedp -= ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, Nc, 0) * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
					}

					//


					dRsidedp += fcomp[(Ix + ftransS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][0][0] + fcomp[(Ix - 1 + ftransS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix][Iy + 1][Iz + 1][0][0];
					dRsidedp += fcomp[Ix][(Iy + ftransS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][0][1] + fcomp[Ix][(Iy - 1 + ftransS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy][Iz + 1][0][1];
					dRsidedp += fcomp[Ix][Iy][(Iz + ftransS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][0][2] + fcomp[Ix][Iy][(Iz - 1 + ftransS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz][0][2];
					dRsidedp += fcomp[(Ix + ftransS[Ix + 1][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][1][0] + fcomp[(Ix - 1 + ftransS[Ix][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * ftrans[Ix][Iy + 1][Iz + 1][1][0];
					dRsidedp += fcomp[Ix][(Iy + ftransS[Ix + 1][Iy + 1][Iz + 1][1][1])][Iz][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][1][1] + fcomp[Ix][(Iy - 1 + ftransS[Ix + 1][Iy][Iz + 1][1][1])][Iz][i][1] * ftrans[Ix + 1][Iy][Iz + 1][1][1];
					dRsidedp += fcomp[Ix][Iy][(Iz + ftransS[Ix + 1][Iy + 1][Iz + 1][1][2])][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][1][2] + fcomp[Ix][Iy][(Iz - 1 + ftransS[Ix + 1][Iy + 1][Iz][1][2])][i][1] * ftrans[Ix + 1][Iy + 1][Iz][1][2];

					//jac[BLNo+Nc+i][BLNo+(2*Nc)]=PCoeff*(dLsidedp+dRsidedp);

					//jac[BLNo+Nc+i][BLNo+(2*Nc+2)]=dLsidedSo;
					if (fphaseStat[Ix][Iy][Iz] == (-1)) dCoefl = 0;
					else dCoefl = 1;
					if (fphaseStat[Ix][Iy][Iz] == 1) dCoefg = 0;
					else dCoefg = 1;

					dMul = fDiffVisco(Ix, Iy, Iz, Nc, 0);
					dMug = fDiffVisco(Ix, Iy, Iz, Nc, 1);
					dDiffdpl = fDifDiffusion(Ix, Iy, Iz, i, Nc, 0);
					dDiffdpg = fDifDiffusion(Ix, Iy, Iz, i, Nc, 1);

					dRsidedSw = 0;
					dRsidedSg = 0;
					dRsidedSo = 0;
					dRsideMdSg = 0;
					dRsideMdSw = 0;
					dRsideMdSo = 0;

					//Transfer function drside saturation 
					// moshtagh transfer Function jabejaie naft nesbat be So Matrix
					dRsideMdSo -= ZERO_CONV * SI_C * f_m_drelperm[1][4] * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (1))
						dRsideMdSo -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0))
						dRsideMdSo -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);

					//if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (-1))
						//dRsideMdSo -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0)) {
						//dRsideMdSo -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);

						dRsideMdSo -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
					}


					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1))
						dRsideMdSo -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);

					//if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1))
						//dRsideMdSo -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);



					// moshtagh transfer Function jabejaie naft nesbat be So Fracture
					dRsidedSo -= ZERO_CONV * SI_C * f_m_drelperm[1][9] * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (1))
						dRsidedSo -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1))
						dRsidedSo -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0))
						dRsidedSo -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);


					// moshtagh transfer Function jabejaie naft nesbat be Sg Matrix
					dRsideMdSg -= ZERO_CONV * SI_C * f_m_drelperm[1][2] * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					// moshtagh transfer Function jabejaie gaz nesbat be Sg Matrix
					dRsideMdSg -= ZERO_CONV * SI_C * f_m_drelperm[2][3] * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor) / (porpor + Mporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (-1))
						dRsideMdSg -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0))
						dRsideMdSg -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

					//if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (1))
						//dRsideMdSg -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1))
						dRsideMdSg -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0)) {
						dRsideMdSg -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
						//dRsideMdSg -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
					}

					// moshtagh transfer Function jabejaie naft nesbat be Sg Fracture
					dRsidedSg -= ZERO_CONV * SI_C * f_m_drelperm[1][7] * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					// moshtagh transfer Function jabejaie gaz nesbat be Sg Fracture
					dRsidedSg -= ZERO_CONV * SI_C * f_m_drelperm[2][8] * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor) / (porpor + Mporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (-1))
						dRsidedSg -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0))
						dRsidedSg -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1))
						dRsidedSg -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);


					// moshtagh transfer Function jabejaie naft nesbat be Sw Matrix
					dRsideMdSw -= ZERO_CONV * SI_C * f_m_drelperm[1][1] * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);


					// moshtagh transfer Function jabejaie naft nesbat be Sw Fracture
					dRsidedSw -= ZERO_CONV * SI_C * f_m_drelperm[1][6] * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
					//


					if (Ix<(Nx - 1)) {
						if (fphaseStat[Ix + 1][Iy][Iz]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + Iy * Nx + Ix + 1] - reCol2;

						dsw = fcomp[(Ix + ftransS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][4][0] * (fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) + fcomp[(Ix + ftransS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][6][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][0]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dsgo = fcomp[(Ix + ftransS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][8][0] * (fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) + fcomp[(Ix + ftransS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][9][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						dsgg = fcomp[(Ix + ftransS[Ix + 1][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][5][0] * (fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]) + fcomp[(Ix + ftransS[Ix + 1][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][7][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][0]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix + 1][Iy][Iz] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][1][0]) {
							Jac1Row[JRowIndex] += (fphaseStat[Ix + 1][Iy][Iz] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;

						//oil to oil
						dso = fcomp[(Ix + ftransS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][10][0] * (fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) + fcomp[(Ix + ftransS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][11][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][0]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix + 1][Iy][Iz] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;
						//////////////////////////////////////////////////////////
						/////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (fphaseStat[Ix + 1][Iy][Iz] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][RO][0] * gridDim[Ix + 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][BMU][0] * gridDim[Ix + 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][0] * gridDim[Ix] * Makhraj - dMul * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix + 1][Iy][Iz][Nc][0] * gridDim[Ix + 1] * Coef*Makhraj - fDiffVisco(Ix + 1, Iy, Iz, Nc, 0)*gridDim[Ix + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Ix] * (fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][Nc][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Ix + 1] * (fblockFProps[Ix + 1][Iy][Iz][BGAM][0] * fdE[Ix + 1][Iy][Iz][Nc][0] / fblockFProps[Ix + 1][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][BGAM][0] * gridDim[Ix + 1] * Coef) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][0]) {
							dRsidedp -= fcomp[Ix + 1][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][1] * Moshtaq*(fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = (fcomp[Ix + 1][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][1] * Bmoshtaq)*(fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= fcomp[Ix + 1][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (fcomp[Ix + 1][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= (fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}

						porpor2 = fporosity[Ix + 1][Iy][Iz] * (1 + cpor * (fP[Ix + 2][Iy + 1][Iz + 1][1] - refP) + dcpor * (fP[Ix + 2][Iy + 1][Iz + 1][1] - refP)*(fP[Ix + 2][Iy + 1][Iz + 1][1] - refP));
						dPordp2 = fporosity[Ix + 1][Iy][Iz] * (cpor + 2 * dcpor*(fP[Ix + 2][Iy + 1][Iz + 1][1] - refP));
						if (fcomp[Ix + 1][Iy][Iz][i][0]>fcomp[Ix][Iy][Iz][i][0]) {
							DupStream = fdiffusion[Ix + 1][Iy][Iz][i][0];
							dDdp = 0;
							dDdp2 = fDifDiffusion(Ix + 1, Iy, Iz, i, Nc, 0);
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][0];
							dDdp = dDiffdpl;
							dDdp2 = 0;
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix + 1][Iy][Iz] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = fblockFProps[Ix + 1][Iy][Iz][RO][0] * gridDim[Ix + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] * dCoefl;
						AAd *= (fsat[Ix + 1][Iy][Iz][1] * gridDim[Ix + 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Ix] * dCoefl) / (gridDim[Ix + 1] + gridDim[Ix]);
						BBd = gridDim[Ix + 1] * Coef / porpor2 + gridDim[Ix] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz] / (gridDim[Ix + 1] + gridDim[Ix]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = fcomp[Ix + 1][Iy][Iz][i][0] - fcomp[Ix][Iy][Iz][i][0];
						RSide += DTran * DeltaX;

						dAAddp = fdE[Ix][Iy][Iz][Nc][0] * gridDim[Ix] * dCoefl;
						dAAddp2 = fdE[Ix + 1][Iy][Iz][Nc][0] * gridDim[Ix + 1] * Coef;
						dBBddp = -dPordp * gridDim[Ix] * dCoefl / (porpor*porpor);
						dBBddp2 = -dPordp2 * gridDim[Ix + 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefl) {
							dRsidedp += -NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}

						if (fphaseStat[Ix + 1][Iy][Iz] == 1) Coef = 0;
						else Coef = 1;
						Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][RO][1] * gridDim[Ix + 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][BMU][1] * gridDim[Ix + 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][1] * gridDim[Ix] * Makhraj - dMug * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix + 1][Iy][Iz][Nc][1] * gridDim[Ix + 1] * Coef*Makhraj - fDiffVisco(Ix + 1, Iy, Iz, Nc, 1)*gridDim[Ix + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Ix] * (fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][Nc][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Ix + 1] * (fblockFProps[Ix + 1][Iy][Iz][BGAM][1] * fdE[Ix + 1][Iy][Iz][Nc][1] / fblockFProps[Ix + 1][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][BGAM][1] * gridDim[Ix + 1] * Coef) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

						if (ftransS[Ix + 1][Iy + 1][Iz + 1][1][0]) {
							dRsidedp -= fcomp[Ix + 1][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][2] * Moshtaq*(fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += (fcomp[Ix + 1][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][2] * Bmoshtaq)*(fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= fcomp[Ix + 1][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (fcomp[Ix + 1][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= (fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);

						}
						//////////////////////////////////////////////////////
						if (fcomp[Ix + 1][Iy][Iz][i][1]>fcomp[Ix][Iy][Iz][i][1]) {
							DupStream = fdiffusion[Ix + 1][Iy][Iz][i][1];
							dDdp = 0;
							dDdp2 = fDifDiffusion(Ix + 1, Iy, Iz, i, Nc, 1);
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][1];
							dDdp = dDiffdpg;
							dDdp2 = 0;
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix + 1][Iy][Iz] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = fblockFProps[Ix + 1][Iy][Iz][RO][1] * gridDim[Ix + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] * dCoefg;
						AAd *= (fsat[Ix + 1][Iy][Iz][2] * gridDim[Ix + 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Ix] * dCoefg) / (gridDim[Ix + 1] + gridDim[Ix]);
						BBd = gridDim[Ix + 1] * Coef / porpor2 + gridDim[Ix] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Nx+Iy]*gridDim[Nx+Ny+Iz]/(gridDim[Ix+1]+gridDim[Ix]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = fcomp[Ix + 1][Iy][Iz][i][1] - fcomp[Ix][Iy][Iz][i][1];
						RSide += DTran * DeltaX;

						dAAddp = fdE[Ix][Iy][Iz][Nc][1] * gridDim[Ix] * dCoefg;
						dAAddp2 = fdE[Ix + 1][Iy][Iz][Nc][1] * gridDim[Ix + 1] * Coef;
						dBBddp = -dPordp * gridDim[Ix] * dCoefg / (porpor*porpor);
						dBBddp2 = -dPordp2 * gridDim[Ix + 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefg) {
							dRsidedp += -NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}


						//////////////////////////////////////////////////////
						Jac1Row[JRowIndex] = PCoeff * (-fcomp[(Ix + ftransS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][0][0] - fcomp[(Ix + ftransS[Ix + 1][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][1][0] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;

					}

					if (Ix>0) {
						if (fphaseStat[Ix - 1][Iy][Iz]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + Iy * Nx + Ix - 1] - reCol2;

						dsw = -fcomp[(Ix - 1 + ftransS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix][Iy + 1][Iz + 1][4][0] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]) - fcomp[(Ix - 1 + ftransS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix][Iy + 1][Iz + 1][6][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						if (!ftransS[Ix][Iy + 1][Iz + 1][0][0]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dso = -fcomp[(Ix - 1 + ftransS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix][Iy + 1][Iz + 1][10][0] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]) - fcomp[(Ix - 1 + ftransS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix][Iy + 1][Iz + 1][11][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						if (!ftransS[Ix][Iy + 1][Iz + 1][0][0]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix - 1][Iy][Iz] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;

						dsgo = -fcomp[(Ix - 1 + ftransS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix][Iy + 1][Iz + 1][8][0] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]) - fcomp[(Ix - 1 + ftransS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix][Iy + 1][Iz + 1][9][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						dsgg = -fcomp[(Ix - 1 + ftransS[Ix][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * ftrans[Ix][Iy + 1][Iz + 1][5][0] * (fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]) - fcomp[(Ix - 1 + ftransS[Ix][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * ftrans[Ix][Iy + 1][Iz + 1][7][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						if (!ftransS[Ix][Iy + 1][Iz + 1][0][0]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix - 1][Iy][Iz] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}
						if (!ftransS[Ix][Iy + 1][Iz + 1][1][0]) {
							Jac1Row[JRowIndex] += (fphaseStat[Ix - 1][Iy][Iz] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;
						/////////////////////////////////////////////////////////////
						////////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (fphaseStat[Ix - 1][Iy][Iz] == (-1)) Coef = 0;
						else Coef = 1;
						Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][RO][0] * gridDim[Ix - 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][BMU][0] * gridDim[Ix - 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][0] * gridDim[Ix] * Makhraj - dMul * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix - 1][Iy][Iz][Nc][0] * gridDim[Ix - 1] * Coef*Makhraj - fDiffVisco(Ix - 1, Iy, Iz, Nc, 0)*gridDim[Ix - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Ix] * (fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][Nc][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Ix - 1] * (fblockFProps[Ix - 1][Iy][Iz][BGAM][0] * fdE[Ix - 1][Iy][Iz][Nc][0] / fblockFProps[Ix - 1][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][BGAM][0] * gridDim[Ix - 1] * Coef) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

						if (ftransS[Ix][Iy + 1][Iz + 1][0][0]) {
							dRsidedp += (fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);
							dBsidedp = -fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);

							dRsidedp += (fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][1])*(Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
							dBsidedp -= fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp += fcomp[Ix - 1][Iy][Iz][i][0] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][1] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);
							dBsidedp = -(fcomp[Ix - 1][Iy][Iz][i][0] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);

							dRsidedp += fcomp[Ix - 1][Iy][Iz][i][0] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
							dBsidedp -= (fcomp[Ix - 1][Iy][Iz][i][0] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][1])*(Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						}

						porpor2 = fporosity[Ix - 1][Iy][Iz] * (1 + cpor * (fP[Ix][Iy + 1][Iz + 1][1] - refP) + dcpor * (fP[Ix][Iy + 1][Iz + 1][1] - refP)*(fP[Ix][Iy + 1][Iz + 1][1] - refP));
						dPordp2 = fporosity[Ix - 1][Iy][Iz] * (cpor + 2 * dcpor*(fP[Ix][Iy + 1][Iz + 1][1] - refP));
						if (fcomp[Ix - 1][Iy][Iz][i][0]>fcomp[Ix][Iy][Iz][i][0]) {
							DupStream = fdiffusion[Ix - 1][Iy][Iz][i][0];
							dDdp = 0;
							dDdp2 = fDifDiffusion(Ix - 1, Iy, Iz, i, Nc, 0);
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][0];
							dDdp = dDiffdpl;
							dDdp2 = 0;
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix - 1][Iy][Iz] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = fblockFProps[Ix - 1][Iy][Iz][RO][0] * gridDim[Ix - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] * dCoefl;
						AAd *= (fsat[Ix - 1][Iy][Iz][1] * gridDim[Ix - 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Ix] * dCoefl) / (gridDim[Ix - 1] + gridDim[Ix]);
						BBd = gridDim[Ix - 1] * Coef / porpor2 + gridDim[Ix] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz] / (gridDim[Ix - 1] + gridDim[Ix]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = fcomp[Ix][Iy][Iz][i][0] - fcomp[Ix - 1][Iy][Iz][i][0];
						RSide -= DTran * DeltaX;

						dAAddp = fdE[Ix][Iy][Iz][Nc][0] * gridDim[Ix] * dCoefl;
						dAAddp2 = fdE[Ix - 1][Iy][Iz][Nc][0] * gridDim[Ix - 1] * Coef;
						dBBddp = -dPordp * gridDim[Ix] * dCoefl / (porpor*porpor);
						dBBddp2 = -dPordp2 * gridDim[Ix - 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefl) {
							dRsidedp += NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += -NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}

						if (fphaseStat[Ix - 1][Iy][Iz] == 1) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][RO][1] * gridDim[Ix - 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][BMU][1] * gridDim[Ix - 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][1] * gridDim[Ix] * Makhraj - dMug * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix - 1][Iy][Iz][Nc][1] * gridDim[Ix - 1] * Coef*Makhraj - fDiffVisco(Ix - 1, Iy, Iz, Nc, 1)*gridDim[Ix - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Ix] * (fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][Nc][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Ix - 1] * (fblockFProps[Ix - 1][Iy][Iz][BGAM][1] * fdE[Ix - 1][Iy][Iz][Nc][1] / fblockFProps[Ix - 1][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][BGAM][1] * gridDim[Ix - 1] * Coef) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

						if (ftransS[Ix][Iy + 1][Iz + 1][1][0]) {
							dRsidedp += (fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);
							dBsidedp = -fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);

							dRsidedp += (fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
							dBsidedp -= fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp += fcomp[Ix - 1][Iy][Iz][i][1] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][2] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);
							dBsidedp = -(fcomp[Ix - 1][Iy][Iz][i][1] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);

							dRsidedp += fcomp[Ix - 1][Iy][Iz][i][1] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
							dBsidedp -= (fcomp[Ix - 1][Iy][Iz][i][1] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						}
						//////////////////////////////////////////////////////////////
						if (fcomp[Ix - 1][Iy][Iz][i][1]>fcomp[Ix][Iy][Iz][i][1]) {
							DupStream = fdiffusion[Ix - 1][Iy][Iz][i][1];
							dDdp = 0;
							dDdp2 = fDifDiffusion(Ix - 1, Iy, Iz, i, Nc, 1);
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][1];
							dDdp = dDiffdpg;
							dDdp2 = 0;
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix - 1][Iy][Iz] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = fblockFProps[Ix - 1][Iy][Iz][RO][1] * gridDim[Ix - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] * dCoefg;
						AAd *= (fsat[Ix - 1][Iy][Iz][2] * gridDim[Ix - 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Ix] * dCoefg) / (gridDim[Ix - 1] + gridDim[Ix]);
						BBd = gridDim[Ix - 1] * Coef / porpor2 + gridDim[Ix] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Nx+Iy]*gridDim[Nx+Ny+Iz]/(gridDim[Ix-1]+gridDim[Ix]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = fcomp[Ix][Iy][Iz][i][1] - fcomp[Ix - 1][Iy][Iz][i][1];
						RSide -= DTran * DeltaX;

						dAAddp = fdE[Ix][Iy][Iz][Nc][1] * gridDim[Ix] * dCoefg;
						dAAddp2 = fdE[Ix - 1][Iy][Iz][Nc][1] * gridDim[Ix - 1] * Coef;
						dBBddp = -dPordp * gridDim[Ix] * dCoefg / (porpor*porpor);
						dBBddp2 = -dPordp2 * gridDim[Ix - 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefg) {
							dRsidedp += NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += -NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}

						///////////////////////////////////////////////////////////////
						Jac1Row[JRowIndex] = PCoeff * (-fcomp[(Ix - 1 + ftransS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix][Iy + 1][Iz + 1][0][0] - fcomp[(Ix - 1 + ftransS[Ix][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * ftrans[Ix][Iy + 1][Iz + 1][1][0] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;
					}

					if (Iy<(Ny - 1)) {
						if (fphaseStat[Ix][Iy + 1][Iz]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + (Iy + 1)*Nx + Ix] - reCol2;

						dsw = fcomp[Ix][(Iy + ftransS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][4][1] * (fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) + fcomp[Ix][(Iy + ftransS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][6][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dso = fcomp[Ix][(Iy + ftransS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][10][1] * (fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) + fcomp[Ix][(Iy + ftransS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][11][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix][Iy + 1][Iz] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;

						dsgo = fcomp[Ix][(Iy + ftransS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][8][1] * (fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) + fcomp[Ix][(Iy + ftransS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][9][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						dsgg = fcomp[Ix][(Iy + ftransS[Ix + 1][Iy + 1][Iz + 1][1][1])][Iz][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][5][1] * (fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]) + fcomp[Ix][(Iy + ftransS[Ix + 1][Iy + 1][Iz + 1][1][1])][Iz][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][7][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix][Iy + 1][Iz] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][1][1]) {
							Jac1Row[JRowIndex] += (fphaseStat[Ix][Iy + 1][Iz] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;
						//////////////////////////////////////////////////////////////////////////////
						/////////////////////////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (fphaseStat[Ix][Iy + 1][Iz] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][RO][0] * gridDim[Nx + Iy + 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][BMU][0] * gridDim[Nx + Iy + 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Iy] * Makhraj - dMul * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix][Iy + 1][Iz][Nc][0] * gridDim[Nx + Iy + 1] * Coef*Makhraj - fDiffVisco(Ix, Iy + 1, Iz, Nc, 0)*gridDim[Nx + Iy + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Iy] * (fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][Nc][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Iy + 1] * (fblockFProps[Ix][Iy + 1][Iz][BGAM][0] * fdE[Ix][Iy + 1][Iz][Nc][0] / fblockFProps[Ix][Iy + 1][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][BGAM][0] * gridDim[Nx + Iy + 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][1]) {
							dRsidedp -= fcomp[Ix][Iy + 1][Iz][i][0] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][1] * Moshtaq*(fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = (fcomp[Ix][Iy + 1][Iz][i][0] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= fcomp[Ix][Iy + 1][Iz][i][0] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (fcomp[Ix][Iy + 1][Iz][i][0] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= (fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}

						porpor2 = fporosity[Ix][Iy + 1][Iz] * (1 + cpor * (fP[Ix + 1][Iy + 2][Iz + 1][1] - refP) + dcpor * (fP[Ix + 1][Iy + 2][Iz + 1][1] - refP)*(fP[Ix + 1][Iy + 2][Iz + 1][1] - refP));
						dPordp2 = fporosity[Ix][Iy + 1][Iz] * (cpor + 2 * dcpor*(fP[Ix + 1][Iy + 2][Iz + 1][1] - refP));
						if (fcomp[Ix][Iy + 1][Iz][i][0]>fcomp[Ix][Iy][Iz][i][0]) {
							DupStream = fdiffusion[Ix][Iy + 1][Iz][i][0];
							dDdp = 0;
							dDdp2 = fDifDiffusion(Ix, Iy + 1, Iz, i, Nc, 0);
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][0];
							dDdp = dDiffdpl;
							dDdp2 = 0;
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix][Iy + 1][Iz] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = fblockFProps[Ix][Iy + 1][Iz][RO][0] * gridDim[Nx + Iy + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] * dCoefl;
						AAd *= (fsat[Ix][Iy + 1][Iz][1] * gridDim[Nx + Iy + 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Nx + Iy] * dCoefl) / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
						BBd = gridDim[Nx + Iy + 1] * Coef / porpor2 + gridDim[Nx + Iy] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Ix] * gridDim[Nx + Ny + Iz] / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = fcomp[Ix][Iy + 1][Iz][i][0] - fcomp[Ix][Iy][Iz][i][0];
						RSide += DTran * DeltaX;

						dAAddp = fdE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Iy] * dCoefl;
						dAAddp2 = fdE[Ix][Iy + 1][Iz][Nc][0] * gridDim[Nx + Iy + 1] * Coef;
						dBBddp = -dPordp * gridDim[Nx + Iy] * dCoefl / (porpor*porpor);
						dBBddp2 = -dPordp2 * gridDim[Nx + Iy + 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefl) {
							dRsidedp += -NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}

						if (fphaseStat[Ix][Iy + 1][Iz] == 1) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][RO][1] * gridDim[Nx + Iy + 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][BMU][1] * gridDim[Nx + Iy + 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Iy] * Makhraj - dMug * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix][Iy + 1][Iz][Nc][1] * gridDim[Nx + Iy + 1] * Coef*Makhraj - fDiffVisco(Ix, Iy + 1, Iz, Nc, 1)*gridDim[Nx + Iy + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = Coef * gridDim[Nx + Iy] * (fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][Nc][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);
						BmoshtaqGama = gridDim[Nx + Iy + 1] * (fblockFProps[Ix][Iy + 1][Iz][BGAM][1] * fdE[Ix][Iy + 1][Iz][Nc][1] / fblockFProps[Ix][Iy + 1][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][BGAM][1] * gridDim[Nx + Iy + 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

						if (ftransS[Ix + 1][Iy + 1][Iz + 1][1][1]) {
							dRsidedp -= fcomp[Ix][Iy + 1][Iz][i][1] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][2] * Moshtaq*(fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += (fcomp[Ix][Iy + 1][Iz][i][1] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= fcomp[Ix][Iy + 1][Iz][i][1] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (fcomp[Ix][Iy + 1][Iz][i][1] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= (fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}

						/////////////////////////////////////////////////////////////////////////////
						if (fcomp[Ix][Iy + 1][Iz][i][1]>fcomp[Ix][Iy][Iz][i][1]) {
							DupStream = fdiffusion[Ix][Iy + 1][Iz][i][1];
							dDdp = 0;
							dDdp2 = fDifDiffusion(Ix, Iy + 1, Iz, i, Nc, 1);
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][1];
							dDdp = dDiffdpg;
							dDdp2 = 0;
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix][Iy + 1][Iz] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = fblockFProps[Ix][Iy + 1][Iz][RO][1] * gridDim[Nx + Iy + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] * dCoefg;
						AAd *= (fsat[Ix][Iy + 1][Iz][2] * gridDim[Nx + Iy + 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Nx + Iy] * dCoefg) / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
						BBd = gridDim[Nx + Iy + 1] * Coef / porpor2 + gridDim[Nx + Iy] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Ix]*gridDim[Nx+Ny+Iz]/(gridDim[Nx+Iy+1]+gridDim[Nx+Iy]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = fcomp[Ix][Iy + 1][Iz][i][1] - fcomp[Ix][Iy][Iz][i][1];
						RSide += DTran * DeltaX;

						dAAddp = fdE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Iy] * dCoefg;
						dAAddp2 = fdE[Ix][Iy + 1][Iz][Nc][1] * gridDim[Nx + Iy + 1] * Coef;
						dBBddp = -dPordp * gridDim[Nx + Iy] * dCoefg / (porpor*porpor);
						dBBddp2 = -dPordp2 * gridDim[Nx + Iy + 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefg) {
							dRsidedp += -NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}
						/////////////////////////////////////////////////////////////////////////////
						Jac1Row[JRowIndex] = PCoeff * (-fcomp[Ix][(Iy + ftransS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][0][1] - fcomp[Ix][(Iy + ftransS[Ix + 1][Iy + 1][Iz + 1][1][1])][Iz][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][1][1] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;
					}

					if (Iy>0) {
						if (fphaseStat[Ix][Iy - 1][Iz]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + (Iy - 1)*Nx + Ix] - reCol2;

						dsw = -fcomp[Ix][(Iy - 1 + ftransS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy][Iz + 1][4][1] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]) - fcomp[Ix][(Iy - 1 + ftransS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy][Iz + 1][6][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						if (!ftransS[Ix + 1][Iy][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dso = -fcomp[Ix][(Iy - 1 + ftransS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy][Iz + 1][10][1] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]) - fcomp[Ix][(Iy - 1 + ftransS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy][Iz + 1][11][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						if (!ftransS[Ix + 1][Iy][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix][Iy - 1][Iz] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;

						dsgo = -fcomp[Ix][(Iy - 1 + ftransS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy][Iz + 1][8][1] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]) - fcomp[Ix][(Iy - 1 + ftransS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy][Iz + 1][9][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						dsgg = -fcomp[Ix][(Iy - 1 + ftransS[Ix + 1][Iy][Iz + 1][1][1])][Iz][i][1] * ftrans[Ix + 1][Iy][Iz + 1][5][1] * (fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]) - fcomp[Ix][(Iy - 1 + ftransS[Ix + 1][Iy][Iz + 1][1][1])][Iz][i][1] * ftrans[Ix + 1][Iy][Iz + 1][7][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						if (!ftransS[Ix + 1][Iy][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix][Iy - 1][Iz] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}
						if (!ftransS[Ix + 1][Iy][Iz + 1][1][1]) {
							Jac1Row[JRowIndex] += (fphaseStat[Ix][Iy - 1][Iz] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;

						//////////////////////////////////////////////////////////////////
						/////////////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (fphaseStat[Ix][Iy - 1][Iz] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][RO][0] * gridDim[Nx + Iy - 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][BMU][0] * gridDim[Nx + Iy - 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Iy] * Makhraj - dMul * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix][Iy - 1][Iz][Nc][0] * gridDim[Nx + Iy - 1] * Coef*Makhraj - fDiffVisco(Ix, Iy - 1, Iz, Nc, 0)*gridDim[Nx + Iy - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Iy] * (fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][Nc][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Iy - 1] * (fblockFProps[Ix][Iy - 1][Iz][BGAM][0] * fdE[Ix][Iy - 1][Iz][Nc][0] / fblockFProps[Ix][Iy - 1][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][BGAM][0] * gridDim[Nx + Iy - 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

						if (ftransS[Ix + 1][Iy][Iz + 1][0][1]) {
							dRsidedp += (fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);
							dBsidedp = -fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);

							dRsidedp += (fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][1])*(Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
							dBsidedp -= fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						}
						else {
							dRsidedp += fcomp[Ix][Iy - 1][Iz][i][0] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][1] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);
							dBsidedp = -(fcomp[Ix][Iy - 1][Iz][i][0] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);

							dRsidedp += fcomp[Ix][Iy - 1][Iz][i][0] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
							dBsidedp -= (fcomp[Ix][Iy - 1][Iz][i][0] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][1])*(Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						}

						porpor2 = fporosity[Ix][Iy - 1][Iz] * (1 + cpor * (fP[Ix + 1][Iy][Iz + 1][1] - refP) + dcpor * (fP[Ix + 1][Iy][Iz + 1][1] - refP)*(fP[Ix + 1][Iy][Iz + 1][1] - refP));
						dPordp2 = fporosity[Ix][Iy - 1][Iz] * (cpor + 2 * dcpor*(fP[Ix + 1][Iy][Iz + 1][1] - refP));
						if (fcomp[Ix][Iy - 1][Iz][i][0]>fcomp[Ix][Iy][Iz][i][0]) {
							DupStream = fdiffusion[Ix][Iy - 1][Iz][i][0];
							dDdp = 0;
							dDdp2 = fDifDiffusion(Ix, Iy - 1, Iz, i, Nc, 0);
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][0];
							dDdp = dDiffdpl;
							dDdp2 = 0;
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix][Iy - 1][Iz] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = fblockFProps[Ix][Iy - 1][Iz][RO][0] * gridDim[Nx + Iy - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] * dCoefl;
						AAd *= (fsat[Ix][Iy - 1][Iz][1] * gridDim[Nx + Iy - 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Nx + Iy] * dCoefl) / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
						BBd = gridDim[Nx + Iy - 1] * Coef / porpor2 + gridDim[Nx + Iy] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Ix] * gridDim[Nx + Ny + Iz] / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = fcomp[Ix][Iy][Iz][i][0] - fcomp[Ix][Iy - 1][Iz][i][0];
						RSide -= DTran * DeltaX;

						dAAddp = fdE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Iy] * dCoefl;
						dAAddp2 = fdE[Ix][Iy - 1][Iz][Nc][0] * gridDim[Nx + Iy - 1] * Coef;
						dBBddp = -dPordp * gridDim[Nx + Iy] * dCoefl / (porpor*porpor);
						dBBddp2 = -dPordp2 * gridDim[Nx + Iy - 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefl) {
							dRsidedp += NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += -NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}

						if (fphaseStat[Ix][Iy - 1][Iz] == 1) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][RO][1] * gridDim[Nx + Iy - 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][BMU][1] * gridDim[Nx + Iy - 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Iy] * Makhraj - dMug * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix][Iy - 1][Iz][Nc][1] * gridDim[Nx + Iy - 1] * Coef*Makhraj - fDiffVisco(Ix, Iy - 1, Iz, Nc, 1)*gridDim[Nx + Iy - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Iy] * (fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][Nc][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Iy - 1] * (fblockFProps[Ix][Iy - 1][Iz][BGAM][1] * fdE[Ix][Iy - 1][Iz][Nc][1] / fblockFProps[Ix][Iy - 1][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][BGAM][1] * gridDim[Nx + Iy - 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

						if (ftransS[Ix + 1][Iy][Iz + 1][1][1]) {
							dRsidedp += (fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);
							dBsidedp -= fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);

							dRsidedp += (fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
							dBsidedp -= fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						}
						else {
							dRsidedp += fcomp[Ix][Iy - 1][Iz][i][1] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][2] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);
							dBsidedp -= (fcomp[Ix][Iy - 1][Iz][i][1] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);

							dRsidedp += fcomp[Ix][Iy - 1][Iz][i][1] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
							dBsidedp -= (fcomp[Ix][Iy - 1][Iz][i][1] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						}

						///////////////////////////////////////////////////////////////////
						if (fcomp[Ix][Iy - 1][Iz][i][1]>fcomp[Ix][Iy][Iz][i][1]) {
							DupStream = fdiffusion[Ix][Iy - 1][Iz][i][1];
							dDdp = 0;
							dDdp2 = fDifDiffusion(Ix, Iy - 1, Iz, i, Nc, 1);
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][1];
							dDdp = dDiffdpg;
							dDdp2 = 0;
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix][Iy - 1][Iz] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = fblockFProps[Ix][Iy - 1][Iz][RO][1] * gridDim[Nx + Iy - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] * dCoefg;
						AAd *= (fsat[Ix][Iy - 1][Iz][2] * gridDim[Nx + Iy - 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Nx + Iy] * dCoefg) / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
						BBd = gridDim[Nx + Iy - 1] * Coef / porpor2 + gridDim[Nx + Iy] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Ix]*gridDim[Nx+Ny+Iz]/(gridDim[Nx+Iy-1]+gridDim[Nx+Iy]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = fcomp[Ix][Iy][Iz][i][1] - fcomp[Ix][Iy - 1][Iz][i][1];
						RSide -= DTran * DeltaX;

						dAAddp = fdE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Iy] * dCoefg;
						dAAddp2 = fdE[Ix][Iy - 1][Iz][Nc][1] * gridDim[Nx + Iy - 1] * Coef;
						dBBddp = -dPordp * gridDim[Nx + Iy] * dCoefg / (porpor*porpor);
						dBBddp2 = -dPordp2 * gridDim[Nx + Iy - 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefg) {
							dRsidedp += NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += -NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}

						//////////////////////////////////////////////////////////////////
						Jac1Row[JRowIndex] = PCoeff * (-fcomp[Ix][(Iy - 1 + ftransS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy][Iz + 1][0][1] - fcomp[Ix][(Iy - 1 + ftransS[Ix + 1][Iy][Iz + 1][1][1])][Iz][i][1] * ftrans[Ix + 1][Iy][Iz + 1][1][1] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;
					}

					if (Iz<(Nz - 1)) {
						if (fphaseStat[Ix][Iy][Iz + 1]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[Nx*Ny*Nz + (Iz + 1)*(Nx*Ny) + Iy * Nx + Ix] - reCol2;

						dsw = fcomp[Ix][Iy][(Iz + ftransS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][4][2] * (fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) + fcomp[Ix][Iy][(Iz + ftransS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][6][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][2]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dso = fcomp[Ix][Iy][(Iz + ftransS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][10][2] * (fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) + fcomp[Ix][Iy][(Iz + ftransS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][11][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][2]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix][Iy][Iz + 1] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;

						dsgo = fcomp[Ix][Iy][(Iz + ftransS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][8][2] * (fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) + fcomp[Ix][Iy][(Iz + ftransS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][9][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						dsgg = fcomp[Ix][Iy][(Iz + ftransS[Ix + 1][Iy + 1][Iz + 1][1][2])][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][5][2] * (fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]) + fcomp[Ix][Iy][(Iz + ftransS[Ix + 1][Iy + 1][Iz + 1][1][2])][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][7][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][2]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix][Iy][Iz + 1] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][1][2]) {
							Jac1Row[JRowIndex] += (fphaseStat[Ix][Iy][Iz + 1] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;
						///////////////////////////////////////////////////////////////////////////
						////////////////////////////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (fphaseStat[Ix][Iy][Iz + 1] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][RO][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][BMU][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Ny + Iz] * Makhraj - dMul * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix][Iy][Iz + 1][Nc][0] * gridDim[Nx + Ny + Iz + 1] * Coef*Makhraj - fDiffVisco(Ix, Iy, Iz + 1, Nc, 0)*gridDim[Nx + Ny + Iz + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Ny + Iz] * (fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][Nc][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz + 1] * (fblockFProps[Ix][Iy][Iz + 1][BGAM][0] * fdE[Ix][Iy][Iz + 1][Nc][0] / fblockFProps[Ix][Iy][Iz + 1][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][BGAM][0] * gridDim[Nx + Ny + Iz + 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][2]) {
							dRsidedp -= fcomp[Ix][Iy][Iz + 1][i][0] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][1] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = (fcomp[Ix][Iy][Iz + 1][i][0] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= fcomp[Ix][Iy][Iz + 1][i][0] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (fcomp[Ix][Iy][Iz + 1][i][0] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= (fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}

						porpor2 = fporosity[Ix][Iy][Iz + 1] * (1 + cpor * (fP[Ix + 1][Iy + 1][Iz + 2][1] - refP) + dcpor * (fP[Ix + 1][Iy + 1][Iz + 2][1] - refP)*(fP[Ix + 1][Iy + 1][Iz + 2][1] - refP));
						dPordp2 = fporosity[Ix][Iy][Iz + 1] * (cpor + 2 * dcpor*(fP[Ix + 1][Iy + 1][Iz + 2][1] - refP));
						if (fcomp[Ix][Iy][Iz + 1][i][0]>fcomp[Ix][Iy][Iz][i][0]) {
							DupStream = fdiffusion[Ix][Iy][Iz + 1][i][0];
							dDdp = 0;
							dDdp2 = fDifDiffusion(Ix, Iy, Iz + 1, i, Nc, 0);
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][0];
							dDdp = dDiffdpl;
							dDdp2 = 0;
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix][Iy][Iz + 1] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = fblockFProps[Ix][Iy][Iz + 1][RO][0] * gridDim[Nx + Ny + Iz + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] * dCoefl;
						AAd *= (fsat[Ix][Iy][Iz + 1][1] * gridDim[Nx + Ny + Iz + 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Nx + Ny + Iz] * dCoefl) / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
						BBd = gridDim[Nx + Ny + Iz + 1] * Coef / porpor2 + gridDim[Nx + Ny + Iz] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Ix] * gridDim[Nx + Iy] / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = fcomp[Ix][Iy][Iz + 1][i][0] - fcomp[Ix][Iy][Iz][i][0];
						RSide += DTran * DeltaX;

						dAAddp = fdE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Ny + Iz] * dCoefl;
						dAAddp2 = fdE[Ix][Iy][Iz + 1][Nc][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
						dBBddp = -dPordp * gridDim[Nx + Ny + Iz] * dCoefl / (porpor*porpor);
						dBBddp2 = -dPordp2 * gridDim[Nx + Ny + Iz + 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefl) {
							dRsidedp += -NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}

						if (fphaseStat[Ix][Iy][Iz + 1] == 1) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][RO][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][BMU][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Ny + Iz] * Makhraj - dMug * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix][Iy][Iz + 1][Nc][1] * gridDim[Nx + Ny + Iz + 1] * Coef*Makhraj - fDiffVisco(Ix, Iy, Iz + 1, Nc, 1)*gridDim[Nx + Ny + Iz + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Ny + Iz] * (fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][Nc][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz + 1] * (fblockFProps[Ix][Iy][Iz + 1][BGAM][1] * fdE[Ix][Iy][Iz + 1][Nc][1] / fblockFProps[Ix][Iy][Iz + 1][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][BGAM][1] * gridDim[Nx + Ny + Iz + 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

						if (ftransS[Ix + 1][Iy + 1][Iz + 1][1][2]) {
							dRsidedp -= fcomp[Ix][Iy][Iz + 1][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][2] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += (fcomp[Ix][Iy][Iz + 1][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= fcomp[Ix][Iy][Iz + 1][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (fcomp[Ix][Iy][Iz + 1][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= (fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						///////////////////////////////////////////////////////////////////////////////
						if (fcomp[Ix][Iy][Iz + 1][i][1]>fcomp[Ix][Iy][Iz][i][1]) {
							DupStream = fdiffusion[Ix][Iy][Iz + 1][i][1];
							dDdp = 0;
							dDdp2 = fDifDiffusion(Ix, Iy, Iz + 1, i, Nc, 1);
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][1];
							dDdp = dDiffdpg;
							dDdp2 = 0;
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix][Iy][Iz + 1] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = fblockFProps[Ix][Iy][Iz + 1][RO][1] * gridDim[Nx + Ny + Iz + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] * dCoefg;
						AAd *= (fsat[Ix][Iy][Iz + 1][2] * gridDim[Nx + Ny + Iz + 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Nx + Ny + Iz] * dCoefg) / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
						BBd = gridDim[Nx + Ny + Iz + 1] * Coef / porpor2 + gridDim[Nx + Ny + Iz] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Ix]*gridDim[Nx+Iy]/(gridDim[Nx+Ny+Iz+1]+gridDim[Nx+Ny+Iz]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = fcomp[Ix][Iy][Iz + 1][i][1] - fcomp[Ix][Iy][Iz][i][1];
						RSide += DTran * DeltaX;

						dAAddp = fdE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Ny + Iz] * dCoefg;
						dAAddp2 = fdE[Ix][Iy][Iz + 1][Nc][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
						dBBddp = -dPordp * gridDim[Nx + Ny + Iz] * dCoefg / (porpor*porpor);
						dBBddp2 = -dPordp2 * gridDim[Nx + Ny + Iz + 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefg) {
							dRsidedp += -NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}

						//////////////////////////////////////////////////////////////////////////////
						Jac1Row[JRowIndex] = PCoeff * (-fcomp[Ix][Iy][(Iz + ftransS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][0][2] - fcomp[Ix][Iy][(Iz + ftransS[Ix + 1][Iy + 1][Iz + 1][1][2])][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][1][2] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;
					}

					if (Iz>0) {
						if (fphaseStat[Ix][Iy][Iz - 1]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[Nx*Ny*Nz + (Iz - 1)*(Nx*Ny) + Iy * Nx + Ix] - reCol2;

						dsw = -fcomp[Ix][Iy][(Iz - 1 + ftransS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz][4][2] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]) - fcomp[Ix][Iy][(Iz - 1 + ftransS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz][6][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						if (!ftransS[Ix + 1][Iy + 1][Iz][0][2]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dso = -fcomp[Ix][Iy][(Iz - 1 + ftransS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz][10][2] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]) - fcomp[Ix][Iy][(Iz - 1 + ftransS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz][11][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						if (!ftransS[Ix + 1][Iy + 1][Iz][0][2]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix][Iy][Iz - 1] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;

						dsgo = -fcomp[Ix][Iy][(Iz - 1 + ftransS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz][8][2] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]) - fcomp[Ix][Iy][(Iz - 1 + ftransS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz][9][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						dsgg = -fcomp[Ix][Iy][(Iz - 1 + ftransS[Ix + 1][Iy + 1][Iz][1][2])][i][1] * ftrans[Ix + 1][Iy + 1][Iz][5][2] * (fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]) - fcomp[Ix][Iy][(Iz - 1 + ftransS[Ix + 1][Iy + 1][Iz][1][2])][i][1] * ftrans[Ix + 1][Iy + 1][Iz][7][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						if (!ftransS[Ix + 1][Iy + 1][Iz][0][2]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix][Iy][Iz - 1] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}
						if (!ftransS[Ix + 1][Iy + 1][Iz][1][2]) {
							Jac1Row[JRowIndex] += (fphaseStat[Ix][Iy][Iz - 1] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;

						///////////////////////////////////////////////////////////////
						///////////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (fphaseStat[Ix][Iy][Iz - 1] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][RO][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][BMU][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Ny + Iz] * Makhraj - dMul * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix][Iy][Iz - 1][Nc][0] * gridDim[Nx + Ny + Iz - 1] * Coef*Makhraj - fDiffVisco(Ix, Iy, Iz - 1, Nc, 0)*gridDim[Nx + Ny + Iz - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Ny + Iz] * (fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][Nc][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz - 1] * (fblockFProps[Ix][Iy][Iz - 1][BGAM][0] * fdE[Ix][Iy][Iz - 1][Nc][0] / fblockFProps[Ix][Iy][Iz - 1][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][BGAM][0] * gridDim[Nx + Ny + Iz - 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

						if (ftransS[Ix + 1][Iy + 1][Iz][0][2]) {
							dRsidedp += (fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);
							dBsidedp = -fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);

							dRsidedp += (fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][1])*(Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							dBsidedp -= fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						}
						else {
							dRsidedp += fcomp[Ix][Iy][Iz - 1][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][1] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);
							dBsidedp = -(fcomp[Ix][Iy][Iz - 1][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);

							dRsidedp += fcomp[Ix][Iy][Iz - 1][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							dBsidedp -= (fcomp[Ix][Iy][Iz - 1][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][1])*(Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						}

						porpor2 = fporosity[Ix][Iy][Iz - 1] * (1 + cpor * (fP[Ix + 1][Iy + 1][Iz][1] - refP) + dcpor * (fP[Ix + 1][Iy + 1][Iz][1] - refP)*(fP[Ix + 1][Iy + 1][Iz][1] - refP));
						dPordp2 = fporosity[Ix][Iy][Iz - 1] * (cpor + 2 * dcpor*(fP[Ix + 1][Iy + 1][Iz][1] - refP));
						if (fcomp[Ix][Iy][Iz - 1][i][0]>fcomp[Ix][Iy][Iz][i][0]) {
							DupStream = fdiffusion[Ix][Iy][Iz - 1][i][0];
							dDdp = 0;
							dDdp2 = fDifDiffusion(Ix, Iy, Iz - 1, i, Nc, 0);
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][0];
							dDdp = dDiffdpl;
							dDdp2 = 0;
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix][Iy][Iz - 1] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = fblockFProps[Ix][Iy][Iz - 1][RO][0] * gridDim[Nx + Ny + Iz - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] * dCoefl;
						AAd *= (fsat[Ix][Iy][Iz - 1][1] * gridDim[Nx + Ny + Iz - 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Nx + Ny + Iz] * dCoefl) / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
						BBd = gridDim[Nx + Ny + Iz - 1] * Coef / porpor2 + gridDim[Nx + Ny + Iz] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Ix] * gridDim[Nx + Iy] / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = fcomp[Ix][Iy][Iz][i][0] - fcomp[Ix][Iy][Iz - 1][i][0];
						RSide -= DTran * DeltaX;

						dAAddp = fdE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Ny + Iz] * dCoefl;
						dAAddp2 = fdE[Ix][Iy][Iz - 1][Nc][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
						dBBddp = -dPordp * gridDim[Nx + Ny + Iz] * dCoefl / (porpor*porpor);
						dBBddp2 = -dPordp2 * gridDim[Nx + Ny + Iz - 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefl) {
							dRsidedp += NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += -NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}

						if (fphaseStat[Ix][Iy][Iz - 1] == 1) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][RO][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][BMU][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Ny + Iz] * Makhraj - dMug * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix][Iy][Iz - 1][Nc][1] * gridDim[Nx + Ny + Iz - 1] * Coef*Makhraj - fDiffVisco(Ix, Iy, Iz - 1, Nc, 1)*gridDim[Nx + Ny + Iz - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Ny + Iz] * (fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][Nc][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz - 1] * (fblockFProps[Ix][Iy][Iz - 1][BGAM][1] * fdE[Ix][Iy][Iz - 1][Nc][1] / fblockFProps[Ix][Iy][Iz - 1][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][BGAM][1] * gridDim[Nx + Ny + Iz - 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

						if (ftransS[Ix + 1][Iy + 1][Iz][1][2]) {
							dRsidedp += (fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);
							dBsidedp -= fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);

							dRsidedp += (fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							dBsidedp -= fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						}
						else {
							dRsidedp += fcomp[Ix][Iy][Iz - 1][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][2] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);
							dBsidedp -= (fcomp[Ix][Iy][Iz - 1][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);

							dRsidedp += fcomp[Ix][Iy][Iz - 1][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							dBsidedp -= (fcomp[Ix][Iy][Iz - 1][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						}
						//////////////////////////////////////////////////////////////////
						if (fcomp[Ix][Iy][Iz - 1][i][1]>fcomp[Ix][Iy][Iz][i][1]) {
							DupStream = fdiffusion[Ix][Iy][Iz - 1][i][1];
							dDdp = 0;
							dDdp2 = fDifDiffusion(Ix, Iy, Iz - 1, i, Nc, 1);
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][1];
							dDdp = dDiffdpg;
							dDdp2 = 0;
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix][Iy][Iz - 1] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = fblockFProps[Ix][Iy][Iz - 1][RO][1] * gridDim[Nx + Ny + Iz - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] * dCoefg;
						AAd *= (fsat[Ix][Iy][Iz - 1][2] * gridDim[Nx + Ny + Iz - 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Nx + Ny + Iz] * dCoefg) / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
						BBd = gridDim[Nx + Ny + Iz - 1] * Coef / porpor2 + gridDim[Nx + Ny + Iz] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Ix]*gridDim[Nx+Iy]/(gridDim[Nx+Ny+Iz-1]+gridDim[Nx+Ny+Iz]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = fcomp[Ix][Iy][Iz][i][1] - fcomp[Ix][Iy][Iz - 1][i][1];
						RSide -= DTran * DeltaX;

						dAAddp = fdE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Ny + Iz] * dCoefg;
						dAAddp2 = fdE[Ix][Iy][Iz - 1][Nc][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
						dBBddp = -dPordp * gridDim[Nx + Ny + Iz] * dCoefg / (porpor*porpor);
						dBBddp2 = -dPordp2 * gridDim[Nx + Ny + Iz - 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefg) {
							dRsidedp += NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += -NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}
						//////////////////////////////////////////////////////////////////
						Jac1Row[JRowIndex] = PCoeff * (-fcomp[Ix][Iy][(Iz - 1 + ftransS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz][0][2] - fcomp[Ix][Iy][(Iz - 1 + ftransS[Ix + 1][Iy + 1][Iz][1][2])][i][1] * ftrans[Ix + 1][Iy + 1][Iz][1][2] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;
					}

					Jac1Row[JRowIndex] = PCoeff * (dLsidedp + dRsidedp + fcomp[Ix][Iy][Iz][i][0] * PIo + gComp * PIg);
					Jac1Col[JRowIndex] = jacCol + (2 * Nc) - reCol;
					JRowIndex++;

					
					if (fphaseStat[Ix][Iy][Iz] != -1) {
						Jac1Row[JRowIndex] = -dRsidedSw;
						Jac1Col[JRowIndex] = jacCol + (2 * Nc + 1) - reCol;
						JRowIndex++;
						Jac1Row[JRowIndex] = dLsidedSo - dRsidedSo;
						Jac1Col[JRowIndex] = jacCol + (2 * Nc + 2) - reCol;
						JRowIndex++;
						//reCol1 = 0;
						reCol3 = 0;
					}
					else {
						//reCol1 = 2;
						reCol3 = 1;
					}

					if (fphaseStat[Ix][Iy][Iz] != 1) {
						Jac1Row[JRowIndex] = dLsidedSg - dRsidedSg;
						Jac1Col[JRowIndex] = jacCol + (2 * Nc + 3) - reCol - reCol3;
						JRowIndex++;
					}

					/////////////////////////////////////////////////Sadeq///////////////////////////////////
					if (phaseStat[Ix][Iy][Iz] == 1) {
						reColF1 = Nc;
						//reColF2
						//dRsideMdSo = 0;
						Jac1Row[JRowIndex] = dRsideMdSo;
						Jac1Col[JRowIndex] = MatrixEq + 2 * Nc + 2 - reColF1;
						JRowIndex++;
					}
					else if (phaseStat[Ix][Iy][Iz] == (-1)) {
						reColF1 = Nc;
						//reColF2 = Nc;
						//dRsideMdSg = 0;
						Jac1Row[JRowIndex] = dRsideMdSg;
						Jac1Col[JRowIndex] = MatrixEq + 2 * Nc + 2 - reColF1;
						JRowIndex++;
					}
					else {
						reColF1 = 0;
						//reColF2 = 0;
						//dRsideMdSo = 0;
						Jac1Row[JRowIndex] = dRsideMdSo;
						Jac1Col[JRowIndex] = MatrixEq + 2 * Nc + 2 - reColF1;
						JRowIndex++;
						//dRsideMdSg = 0;
						Jac1Row[JRowIndex] = dRsideMdSg;
						Jac1Col[JRowIndex] = MatrixEq + 2 * Nc + 3 - reColF1;
						JRowIndex++;
					}
					//dRsideMdp = 0;
					Jac1Row[JRowIndex] = PCoeff * dRsideMdp;
					Jac1Col[JRowIndex] = MatrixEq + 2 * Nc - reColF1;
					JRowIndex++;
					//dRsideMdSw = 0;
					Jac1Row[JRowIndex] = dRsideMdSw;
					Jac1Col[JRowIndex] = MatrixEq + 2 * Nc + 1 - reColF1;
					JRowIndex++;
					//////////////////////////Sadeq///////////////////////////////


					for (k = 0; k<Nc; k++) {
						dRsidedxl = 0;
						dRsidedxg = 0;
						dRsideMdxl = 0;
						dRsideMdxg = 0;

						dMul = fDiffVisco(Ix, Iy, Iz, k, 0);
						dMug = fDiffVisco(Ix, Iy, Iz, k, 1);
						dDiffdxl = fDifDiffusion(Ix, Iy, Iz, i, k, 0);
						dDiffdxg = fDifDiffusion(Ix, Iy, Iz, i, k, 1);


						if (k == i) {
							// Transfer function drside dxl dxg 
							// moshtagh transfer Function jabejaie naft nesbat be xl Matrix
							dRsideMdxl -= ZERO_CONV * SI_C * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
							dRsideMdxl -= ZERO_CONV * SI_C * dE[Ix][Iy][Iz][k][0] * comp[Ix][Iy][Iz][i][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
							dRsideMdxl -= ZERO_CONV * -SI_C * DiffVisco(Ix, Iy, Iz, k, 0) * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] * Mporpor / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor)*(blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) * (porpor + Mporpor);

							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (1)) {
								dRsideMdxl -= ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
								dRsideMdxl -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								dRsideMdxl -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsideMdxl -= ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
								dRsideMdxl -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								dRsideMdxl -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
							}

							//if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								//dRsideMdxl -= ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
								//dRsideMdxl -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								//dRsideMdxl -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
							//}

							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0)) {
								//dRsideMdxl -= ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
								//dRsideMdxl -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								//dRsideMdxl -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);

								dRsideMdxl -= ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
								dRsideMdxl -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								dRsideMdxl -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1)) {
								dRsideMdxl -= ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
								dRsideMdxl -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								dRsideMdxl -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
							}

							//if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								//dRsideMdxl -= ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
								//dRsideMdxl -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								//dRsideMdxl -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
						//	}


							// moshtagh transfer Function jabejaie naft nesbat be xl Fracture
							dRsidedxl -= ZERO_CONV * -SI_C * fDiffVisco(Ix, Iy, Iz, k, 0) * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] * porpor / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor)*(blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) * (porpor + Mporpor);

							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (1)) {
								dRsidedxl -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsidedxl -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
							}

							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (1)) {
								dRsidedxl -= ZERO_DIFF * fdE[Ix][Iy][Iz][k][0] * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
								dRsidedxl -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0];
								dRsidedxl -= ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1)) {
								dRsidedxl -= ZERO_DIFF * fdE[Ix][Iy][Iz][k][0] * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
								dRsidedxl -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0];
								dRsidedxl -= ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);

								dRsidedxl -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
							}

							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsidedxl -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
							}

							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsidedxl -= ZERO_DIFF * fdE[Ix][Iy][Iz][k][0] * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
								dRsidedxl -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0];
								dRsidedxl -= ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
							}

							// moshtagh transfer Function jabejaie gaz nesbat be xg Matrix
							dRsideMdxg -= ZERO_CONV * SI_C * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor) / (porpor + Mporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));
							dRsideMdxg -= ZERO_CONV * SI_C * dE[Ix][Iy][Iz][k][1] * comp[Ix][Iy][Iz][i][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor) / (porpor + Mporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));
							dRsideMdxg -= ZERO_CONV * -SI_C * DiffVisco(Ix, Iy, Iz, k, 1) * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] * Mporpor / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor)*(blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1])) * (porpor + Mporpor);

							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								dRsideMdxg -= ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
								dRsideMdxg -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								dRsideMdxg -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsideMdxg -= ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
								dRsideMdxg -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								dRsideMdxg -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
							}

							//if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (1)) {
							//	dRsideMdxg -= ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
							//	dRsideMdxg -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
							//	dRsideMdxg -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
							/*}*/


							//if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1)) {
							//	dRsideMdxg -= ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
							//	dRsideMdxg -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
							//	dRsideMdxg -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
							//}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								dRsideMdxg -= ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
								dRsideMdxg -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								dRsideMdxg -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
							}

							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsideMdxg -= ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
								dRsideMdxg -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								dRsideMdxg -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

								///dRsideMdxg -= ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
								//dRsideMdxg -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								//dRsideMdxg -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
							}

							// moshtagh transfer Function jabejaie gaz nesbat be xg Fracture
							dRsidedxg -= ZERO_CONV * -SI_C * fDiffVisco(Ix, Iy, Iz, k, 1) * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] * porpor / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor)*(blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1])) * (porpor + Mporpor);

							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								dRsidedxg -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsidedxg -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
							}

							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								dRsidedxg -= ZERO_DIFF * fdE[Ix][Iy][Iz][k][1] * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
								dRsidedxg -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1];
								dRsidedxg -= ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								dRsidedxg -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];

								dRsidedxg -= ZERO_DIFF * fdE[Ix][Iy][Iz][k][1] * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
								dRsidedxg -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1];
								dRsidedxg -= ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
							}

							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsidedxg -= ZERO_DIFF * fdE[Ix][Iy][Iz][k][1] * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
								dRsidedxg -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1];
								dRsidedxg -= ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
							}

							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsidedxg -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
							}
							//

							dLsidedxl = fblockFProps[Ix][Iy][Iz][RO][0] + fcomp[Ix][Iy][Iz][i][0] * fdE[Ix][Iy][Iz][k][0];
							dLsidedxg = fblockFProps[Ix][Iy][Iz][RO][1] + fcomp[Ix][Iy][Iz][i][1] * fdE[Ix][Iy][Iz][k][1];
							if (iWell != (-1)) {
								dQdxl = 0;
								dQdxg = 0;
							}
							else {
								dQdxl = Qo;
								dQdxg = Qg;
							}

							if (Ix<(Nx - 1)) {
								if (fphaseStat[Ix + 1][Iy][Iz] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][RO][0] * gridDim[Ix + 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][BMU][0] * gridDim[Ix + 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][0] * gridDim[Ix] * Makhraj - dMul * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix + 1][Iy][Iz][k][0] * gridDim[Ix + 1] * Coef*Makhraj - fDiffVisco(Ix + 1, Iy, Iz, k, 0)*gridDim[Ix + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Ix] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][k][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Ix + 1] * (G_ACCG*fblockFProps[Ix + 1][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix + 1][Iy][Iz][BGAM][0] * fdE[Ix + 1][Iy][Iz][k][0] / fblockFProps[Ix + 1][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][BGAM][0] * gridDim[Ix + 1] * Coef) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

								if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][0]) {
									dRsidedxl += fcomp[Ix + 1][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][1] * Moshtaq*(fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = (ftrans[Ix + 1][Iy + 1][Iz + 1][0][0] + fcomp[Ix + 1][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][1] * Bmoshtaq)*(fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

									//dRsidedxl+=comp[Ix+1][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxl+=(trans[Ix+1][Iy+1][Iz+1][2][0]+comp[Ix+1][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}
								else {
									dRsidedxl += (ftrans[Ix + 1][Iy + 1][Iz + 1][0][0] + fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

									//dRsidedxl+=(trans[Ix+1][Iy+1][Iz+1][2][0]+comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxl+=comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}

								porpor2 = fporosity[Ix + 1][Iy][Iz] * (1 + cpor * (fP[Ix + 2][Iy + 1][Iz + 1][1] - refP) + dcpor * (fP[Ix + 2][Iy + 1][Iz + 1][1] - refP)*(fP[Ix + 2][Iy + 1][Iz + 1][1] - refP));
								if (fcomp[Ix + 1][Iy][Iz][i][0]>fcomp[Ix][Iy][Iz][i][0]) {
									DupStream = fdiffusion[Ix + 1][Iy][Iz][i][0];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix + 1, Iy, Iz, i, k, 0);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix + 1][Iy][Iz][RO][0] * gridDim[Ix + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] * dCoefl;
								AAd *= (fsat[Ix + 1][Iy][Iz][1] * gridDim[Ix + 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Ix] * dCoefl) / (gridDim[Ix + 1] + gridDim[Ix]);
								BBd = gridDim[Ix + 1] * Coef / porpor2 + gridDim[Ix] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz] / (gridDim[Ix + 1] + gridDim[Ix]);
								DeltaX = fcomp[Ix + 1][Iy][Iz][i][0] - fcomp[Ix][Iy][Iz][i][0];

								dAAddx = fdE[Ix][Iy][Iz][k][0] * gridDim[Ix] * dCoefl;
								dAAddx2 = fdE[Ix + 1][Iy][Iz][k][0] * gridDim[Ix + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + Iy * Nx + Ix + 1];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;



								if (fphaseStat[Ix + 1][Iy][Iz] == 1) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][RO][1] * gridDim[Ix + 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][BMU][1] * gridDim[Ix + 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][1] * gridDim[Ix] * Makhraj - dMug * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix + 1][Iy][Iz][k][1] * gridDim[Ix + 1] * Coef*Makhraj - fDiffVisco(Ix + 1, Iy, Iz, k, 1)*gridDim[Ix + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Ix] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][k][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Ix + 1] * (G_ACCG*fblockFProps[Ix + 1][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix + 1][Iy][Iz][BGAM][1] * fdE[Ix + 1][Iy][Iz][k][1] / fblockFProps[Ix + 1][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][BGAM][1] * gridDim[Ix + 1] * Coef) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

								if (ftransS[Ix + 1][Iy + 1][Iz + 1][1][0]) {
									dRsidedxg += fcomp[Ix + 1][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][2] * Moshtaq*(fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = (ftrans[Ix + 1][Iy + 1][Iz + 1][1][0] + fcomp[Ix + 1][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][2] * Bmoshtaq)*(fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

									//dRsidedxg+=comp[Ix+1][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxg+=(trans[Ix+1][Iy+1][Iz+1][3][0]+comp[Ix+1][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}
								else {
									dRsidedxg += (ftrans[Ix + 1][Iy + 1][Iz + 1][1][0] + fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

									//dRsidedxg+=(trans[Ix+1][Iy+1][Iz+1][3][0]+comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxg+=comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);

								}

								if (fcomp[Ix + 1][Iy][Iz][i][1]>fcomp[Ix][Iy][Iz][i][1]) {
									DupStream = fdiffusion[Ix + 1][Iy][Iz][i][1];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix + 1, Iy, Iz, i, k, 1);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix + 1][Iy][Iz][RO][1] * gridDim[Ix + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] * dCoefg;
								AAd *= (fsat[Ix + 1][Iy][Iz][2] * gridDim[Ix + 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Ix] * dCoefg) / (gridDim[Ix + 1] + gridDim[Ix]);
								BBd = gridDim[Ix + 1] * Coef / porpor2 + gridDim[Ix] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Nx+Iy]*gridDim[Nx+Ny+Iz]/(gridDim[Ix+1]+gridDim[Ix]);
								DeltaX = fcomp[Ix + 1][Iy][Iz][i][1] - fcomp[Ix][Iy][Iz][i][1];

								dAAddx = fdE[Ix][Iy][Iz][k][1] * gridDim[Ix] * dCoefg;
								dAAddx2 = fdE[Ix + 1][Iy][Iz][k][1] * gridDim[Ix + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								if (fphaseStat[Ix + 1][Iy][Iz]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;


							}

							if (Ix>0) {
								if (fphaseStat[Ix - 1][Iy][Iz] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][RO][0] * gridDim[Ix - 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][BMU][0] * gridDim[Ix - 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][0] * gridDim[Ix] * Makhraj - dMul * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix - 1][Iy][Iz][k][0] * gridDim[Ix - 1] * Coef*Makhraj - fDiffVisco(Ix - 1, Iy, Iz, k, 0)*gridDim[Ix - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Ix] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][k][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Ix - 1] * (G_ACCG*fblockFProps[Ix - 1][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix - 1][Iy][Iz][BGAM][0] * fdE[Ix - 1][Iy][Iz][k][0] / fblockFProps[Ix - 1][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][BGAM][0] * gridDim[Ix - 1] * Coef) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

								if (ftransS[Ix][Iy + 1][Iz + 1][0][0]) {
									dRsidedxl -= (ftrans[Ix][Iy + 1][Iz + 1][0][0] + fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);
									dBsidedxl = -fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);

									//dRsidedxl-=(trans[Ix][Iy+1][Iz+1][2][0]+comp[Ix][Iy][Iz][i][0]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1])*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
									//dBsidedxl-=comp[Ix][Iy][Iz][i][0]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								}
								else {
									dRsidedxl -= fcomp[Ix - 1][Iy][Iz][i][0] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][1] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);
									dBsidedxl = -(ftrans[Ix][Iy + 1][Iz + 1][0][0] + fcomp[Ix - 1][Iy][Iz][i][0] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);

									//dRsidedxl-=comp[Ix-1][Iy][Iz][i][0]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
									//dBsidedxl-=(trans[Ix][Iy+1][Iz+1][2][0]+comp[Ix-1][Iy][Iz][i][0]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][1])*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								}

								porpor2 = fporosity[Ix - 1][Iy][Iz] * (1 + cpor * (fP[Ix][Iy + 1][Iz + 1][1] - refP) + dcpor * (fP[Ix][Iy + 1][Iz + 1][1] - refP)*(fP[Ix][Iy + 1][Iz + 1][1] - refP));
								if (fcomp[Ix - 1][Iy][Iz][i][0]>fcomp[Ix][Iy][Iz][i][0]) {
									DupStream = fdiffusion[Ix - 1][Iy][Iz][i][0];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix - 1, Iy, Iz, i, k, 0);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix - 1][Iy][Iz][RO][0] * gridDim[Ix - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] * dCoefl;
								AAd *= (fsat[Ix - 1][Iy][Iz][1] * gridDim[Ix - 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Ix] * dCoefl) / (gridDim[Ix - 1] + gridDim[Ix]);
								BBd = gridDim[Ix - 1] * Coef / porpor2 + gridDim[Ix] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz] / (gridDim[Ix - 1] + gridDim[Ix]);
								DeltaX = fcomp[Ix - 1][Iy][Iz][i][0] - fcomp[Ix][Iy][Iz][i][0];

								dAAddx = fdE[Ix][Iy][Iz][k][0] * gridDim[Ix] * dCoefl;
								dAAddx2 = fdE[Ix - 1][Iy][Iz][k][0] * gridDim[Ix - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += -NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += -NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + Iy * Nx + Ix - 1];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;


								if (fphaseStat[Ix - 1][Iy][Iz] == 1) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][RO][1] * gridDim[Ix - 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][BMU][1] * gridDim[Ix - 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][1] * gridDim[Ix] * Makhraj - dMug * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix - 1][Iy][Iz][k][1] * gridDim[Ix - 1] * Coef*Makhraj - fDiffVisco(Ix - 1, Iy, Iz, k, 1)*gridDim[Ix - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Ix] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][k][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);
								BmoshtaqGama = gridDim[Ix - 1] * (G_ACCG*fblockFProps[Ix - 1][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix - 1][Iy][Iz][BGAM][1] * fdE[Ix - 1][Iy][Iz][k][1] / fblockFProps[Ix - 1][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][BGAM][1] * gridDim[Ix - 1] * Coef) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

								if (ftransS[Ix][Iy + 1][Iz + 1][1][0]) {
									dRsidedxg -= (ftrans[Ix][Iy + 1][Iz + 1][1][0] + fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);
									dBsidedxg = -fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);

									//dRsidedxg-=(trans[Ix][Iy+1][Iz+1][3][0]+comp[Ix][Iy][Iz][i][1]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
									//dBsidedxg-=comp[Ix][Iy][Iz][i][1]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								}
								else {
									dRsidedxg -= fcomp[Ix - 1][Iy][Iz][i][1] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][2] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);
									dBsidedxg = -(ftrans[Ix][Iy + 1][Iz + 1][1][0] + fcomp[Ix - 1][Iy][Iz][i][1] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);

									//dRsidedxg-=comp[Ix-1][Iy][Iz][i][1]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
									//dBsidedxg-=(trans[Ix][Iy+1][Iz+1][3][0]+comp[Ix-1][Iy][Iz][i][1]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								}


								if (fcomp[Ix - 1][Iy][Iz][i][1]>fcomp[Ix][Iy][Iz][i][1]) {
									DupStream = fdiffusion[Ix - 1][Iy][Iz][i][1];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix - 1, Iy, Iz, i, k, 1);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix - 1][Iy][Iz][RO][1] * gridDim[Ix - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] * dCoefg;
								AAd *= (fsat[Ix - 1][Iy][Iz][2] * gridDim[Ix - 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Ix] * dCoefg) / (gridDim[Ix - 1] + gridDim[Ix]);
								BBd = gridDim[Ix - 1] * Coef / porpor2 + gridDim[Ix] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Nx+Iy]*gridDim[Nx+Ny+Iz]/(gridDim[Ix-1]+gridDim[Ix]);
								DeltaX = fcomp[Ix - 1][Iy][Iz][i][1] - fcomp[Ix][Iy][Iz][i][1];

								dAAddx = fdE[Ix][Iy][Iz][k][1] * gridDim[Ix] * dCoefg;
								dAAddx2 = fdE[Ix - 1][Iy][Iz][k][1] * gridDim[Ix - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += -NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += -NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}


								if (fphaseStat[Ix - 1][Iy][Iz]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;

							}

							if (Iy<(Ny - 1)) {
								if (fphaseStat[Ix][Iy + 1][Iz] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][RO][0] * gridDim[Nx + Iy + 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][BMU][0] * gridDim[Nx + Iy + 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][0] * gridDim[Nx + Iy] * Makhraj - dMul * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix][Iy + 1][Iz][k][0] * gridDim[Nx + Iy + 1] * Coef*Makhraj - fDiffVisco(Ix, Iy + 1, Iz, k, 0)*gridDim[Nx + Iy + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][k][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Iy + 1] * (G_ACCG*fblockFProps[Ix][Iy + 1][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy + 1][Iz][BGAM][0] * fdE[Ix][Iy + 1][Iz][k][0] / fblockFProps[Ix][Iy + 1][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][BGAM][0] * gridDim[Nx + Iy + 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

								if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][1]) {
									dRsidedxl += fcomp[Ix][Iy + 1][Iz][i][0] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][1] * Moshtaq*(fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = (ftrans[Ix + 1][Iy + 1][Iz + 1][0][1] + fcomp[Ix][Iy + 1][Iz][i][0] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

									//dRsidedxl+=comp[Ix][Iy+1][Iz][i][0]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxl+=(trans[Ix+1][Iy+1][Iz+1][2][1]+comp[Ix][Iy+1][Iz][i][0]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}
								else {
									dRsidedxl += (ftrans[Ix + 1][Iy + 1][Iz + 1][0][1] + fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

									//dRsidedxl+=(trans[Ix+1][Iy+1][Iz+1][2][1]+comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxl+=comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}

								porpor2 = fporosity[Ix][Iy + 1][Iz] * (1 + cpor * (fP[Ix + 1][Iy + 2][Iz + 1][1] - refP) + dcpor * (fP[Ix + 1][Iy + 2][Iz + 1][1] - refP)*(fP[Ix + 1][Iy + 2][Iz + 1][1] - refP));
								if (fcomp[Ix][Iy + 1][Iz][i][0]>fcomp[Ix][Iy][Iz][i][0]) {
									DupStream = fdiffusion[Ix][Iy + 1][Iz][i][0];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix, Iy + 1, Iz, i, k, 0);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix][Iy + 1][Iz][RO][0] * gridDim[Nx + Iy + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] * dCoefl;
								AAd *= (fsat[Ix][Iy + 1][Iz][1] * gridDim[Nx + Iy + 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Nx + Iy] * dCoefl) / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
								BBd = gridDim[Nx + Iy + 1] * Coef / porpor2 + gridDim[Nx + Iy] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Ix] * gridDim[Nx + Ny + Iz] / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
								DeltaX = fcomp[Ix][Iy + 1][Iz][i][0] - fcomp[Ix][Iy][Iz][i][0];

								dAAddx = fdE[Ix][Iy][Iz][k][0] * gridDim[Nx + Iy] * dCoefl;
								dAAddx2 = fdE[Ix][Iy + 1][Iz][k][0] * gridDim[Nx + Iy + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + (Iy + 1)*Nx + Ix];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;


								if (fphaseStat[Ix][Iy + 1][Iz] == 1) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][RO][1] * gridDim[Nx + Iy + 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][BMU][1] * gridDim[Nx + Iy + 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][1] * gridDim[Nx + Iy] * Makhraj - dMug * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix][Iy + 1][Iz][k][1] * gridDim[Nx + Iy + 1] * Coef*Makhraj - fDiffVisco(Ix, Iy + 1, Iz, k, 1)*gridDim[Nx + Iy + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][k][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Iy + 1] * (G_ACCG*fblockFProps[Ix][Iy + 1][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy + 1][Iz][BGAM][1] * fdE[Ix][Iy + 1][Iz][k][1] / fblockFProps[Ix][Iy + 1][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][BGAM][1] * gridDim[Nx + Iy + 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

								if (ftransS[Ix + 1][Iy + 1][Iz + 1][1][1]) {
									dRsidedxg += fcomp[Ix][Iy + 1][Iz][i][1] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][2] * Moshtaq*(fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = (ftrans[Ix + 1][Iy + 1][Iz + 1][1][1] + fcomp[Ix][Iy + 1][Iz][i][1] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

									//dRsidedxg+=comp[Ix][Iy+1][Iz][i][1]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxg+=(trans[Ix+1][Iy+1][Iz+1][3][1]+comp[Ix][Iy+1][Iz][i][1]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}
								else {
									dRsidedxg += (ftrans[Ix + 1][Iy + 1][Iz + 1][1][1] + fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

									//dRsidedxg+=(trans[Ix+1][Iy+1][Iz+1][3][1]+comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxg+=comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);

								}

								if (fcomp[Ix][Iy + 1][Iz][i][1]>fcomp[Ix][Iy][Iz][i][1]) {
									DupStream = fdiffusion[Ix][Iy + 1][Iz][i][1];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix, Iy + 1, Iz, i, k, 1);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix][Iy + 1][Iz][RO][1] * gridDim[Nx + Iy + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] * dCoefg;
								AAd *= (fsat[Ix][Iy + 1][Iz][2] * gridDim[Nx + Iy + 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Nx + Iy] * dCoefg) / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
								BBd = gridDim[Nx + Iy + 1] * Coef / porpor2 + gridDim[Nx + Iy] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Ix]*gridDim[Nx+Ny+Iz]/(gridDim[Nx+Iy+1]+gridDim[Nx+Iy]);
								DeltaX = fcomp[Ix][Iy + 1][Iz][i][1] - fcomp[Ix][Iy][Iz][i][1];

								dAAddx = fdE[Ix][Iy][Iz][k][1] * gridDim[Nx + Iy] * dCoefg;
								dAAddx2 = fdE[Ix][Iy + 1][Iz][k][1] * gridDim[Nx + Iy + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								if (fphaseStat[Ix][Iy + 1][Iz]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;
							}

							if (Iy>0) {
								if (fphaseStat[Ix][Iy - 1][Iz] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][RO][0] * gridDim[Nx + Iy - 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][BMU][0] * gridDim[Nx + Iy - 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][0] * gridDim[Nx + Iy] * Makhraj - dMul * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix][Iy - 1][Iz][k][0] * gridDim[Nx + Iy - 1] * Coef*Makhraj - fDiffVisco(Ix, Iy - 1, Iz, k, 0)*gridDim[Nx + Iy - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][k][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Iy - 1] * (G_ACCG*fblockFProps[Ix][Iy - 1][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy - 1][Iz][BGAM][0] * fdE[Ix][Iy - 1][Iz][k][0] / fblockFProps[Ix][Iy - 1][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][BGAM][0] * gridDim[Nx + Iy - 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

								if (ftransS[Ix + 1][Iy][Iz + 1][0][1]) {
									dRsidedxl -= (ftrans[Ix + 1][Iy][Iz + 1][0][1] + fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);
									dBsidedxl = -fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);

									//dRsidedxl-=(trans[Ix+1][Iy][Iz+1][2][1]+comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][1])*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
									//dBsidedxl-=comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								}
								else {
									dRsidedxl -= fcomp[Ix][Iy - 1][Iz][i][0] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][1] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);
									dBsidedxl = -(ftrans[Ix + 1][Iy][Iz + 1][0][1] + fcomp[Ix][Iy - 1][Iz][i][0] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);

									//dRsidedxl-=comp[Ix][Iy-1][Iz][i][0]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
									//dBsidedxl-=(trans[Ix+1][Iy][Iz+1][2][1]+comp[Ix][Iy-1][Iz][i][0]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][1])*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								}

								porpor2 = fporosity[Ix][Iy - 1][Iz] * (1 + cpor * (fP[Ix + 1][Iy][Iz + 1][1] - refP) + dcpor * (fP[Ix + 1][Iy][Iz + 1][1] - refP)*(fP[Ix + 1][Iy][Iz + 1][1] - refP));
								if (fcomp[Ix][Iy - 1][Iz][i][0]>fcomp[Ix][Iy][Iz][i][0]) {
									DupStream = fdiffusion[Ix][Iy - 1][Iz][i][0];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix, Iy - 1, Iz, i, k, 0);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix][Iy - 1][Iz][RO][0] * gridDim[Nx + Iy - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] * dCoefl;
								AAd *= (fsat[Ix][Iy - 1][Iz][1] * gridDim[Nx + Iy - 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Nx + Iy] * dCoefl) / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
								BBd = gridDim[Nx + Iy - 1] * Coef / porpor2 + gridDim[Nx + Iy] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Ix] * gridDim[Nx + Ny + Iz] / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
								DeltaX = fcomp[Ix][Iy - 1][Iz][i][0] - fcomp[Ix][Iy][Iz][i][0];

								dAAddx = fdE[Ix][Iy][Iz][k][0] * gridDim[Nx + Iy] * dCoefl;
								dAAddx2 = fdE[Ix][Iy - 1][Iz][k][0] * gridDim[Nx + Iy - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += -NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += -NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + (Iy - 1)*Nx + Ix];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;


								if (fphaseStat[Ix][Iy - 1][Iz] == 1) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][RO][1] * gridDim[Nx + Iy - 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][BMU][1] * gridDim[Nx + Iy - 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][1] * gridDim[Nx + Iy] * Makhraj - dMug * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix][Iy - 1][Iz][k][1] * gridDim[Nx + Iy - 1] * Coef*Makhraj - fDiffVisco(Ix, Iy - 1, Iz, k, 1)*gridDim[Nx + Iy - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][k][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Iy - 1] * (G_ACCG*fblockFProps[Ix][Iy - 1][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy - 1][Iz][BGAM][1] * fdE[Ix][Iy - 1][Iz][k][1] / fblockFProps[Ix][Iy - 1][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][BGAM][1] * gridDim[Nx + Iy - 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

								if (ftransS[Ix + 1][Iy][Iz + 1][1][1]) {
									dRsidedxg -= (ftrans[Ix + 1][Iy][Iz + 1][1][1] + fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);
									dBsidedxg = -fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);

									//dRsidedxg-=(trans[Ix+1][Iy][Iz+1][3][1]+comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
									//dBsidedxg-=comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								}
								else {
									dRsidedxg -= fcomp[Ix][Iy - 1][Iz][i][1] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][2] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);
									dBsidedxg = -(ftrans[Ix + 1][Iy][Iz + 1][1][1] + fcomp[Ix][Iy - 1][Iz][i][1] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);

									//dRsidedxg-=comp[Ix][Iy-1][Iz][i][1]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
									//dBsidedxg-=(trans[Ix+1][Iy][Iz+1][3][1]+comp[Ix][Iy-1][Iz][i][1]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								}

								if (fcomp[Ix][Iy - 1][Iz][i][1]>fcomp[Ix][Iy][Iz][i][1]) {
									DupStream = fdiffusion[Ix][Iy - 1][Iz][i][1];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix, Iy - 1, Iz, i, k, 1);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix][Iy - 1][Iz][RO][1] * gridDim[Nx + Iy - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] * dCoefg;
								AAd *= (fsat[Ix][Iy - 1][Iz][2] * gridDim[Nx + Iy - 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Nx + Iy] * dCoefg) / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
								BBd = gridDim[Nx + Iy - 1] * Coef / porpor2 + gridDim[Nx + Iy] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Ix]*gridDim[Nx+Ny+Iz]/(gridDim[Nx+Iy-1]+gridDim[Nx+Iy]);
								DeltaX = fcomp[Ix][Iy - 1][Iz][i][1] - fcomp[Ix][Iy][Iz][i][1];

								dAAddx = fdE[Ix][Iy][Iz][k][1] * gridDim[Nx + Iy] * dCoefg;
								dAAddx2 = fdE[Ix][Iy - 1][Iz][k][1] * gridDim[Nx + Iy - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += -NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += -NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}



								if (fphaseStat[Ix][Iy - 1][Iz]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;
							}

							if (Iz<(Nz - 1)) {
								if (fphaseStat[Ix][Iy][Iz + 1] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][RO][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][BMU][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][0] * gridDim[Nx + Ny + Iz] * Makhraj - dMul * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix][Iy][Iz + 1][k][0] * gridDim[Nx + Ny + Iz + 1] * Coef*Makhraj - fDiffVisco(Ix, Iy, Iz + 1, k, 0)*gridDim[Nx + Ny + Iz + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][k][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz + 1] * (G_ACCG*fblockFProps[Ix][Iy][Iz + 1][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz + 1][BGAM][0] * fdE[Ix][Iy][Iz + 1][k][0] / fblockFProps[Ix][Iy][Iz + 1][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][BGAM][0] * gridDim[Nx + Ny + Iz + 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

								if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][2]) {
									dRsidedxl += fcomp[Ix][Iy][Iz + 1][i][0] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][1] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = (ftrans[Ix + 1][Iy + 1][Iz + 1][0][2] + fcomp[Ix][Iy][Iz + 1][i][0] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

									dRsidedxl += fcomp[Ix][Iy][Iz + 1][i][0] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz + 1][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
									dBsidedxl += (ftrans[Ix + 1][Iy + 1][Iz + 1][2][2] + fcomp[Ix][Iy][Iz + 1][i][0] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
								}
								else {
									dRsidedxl += (ftrans[Ix + 1][Iy + 1][Iz + 1][0][2] + fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

									dRsidedxl += (ftrans[Ix + 1][Iy + 1][Iz + 1][2][2] + fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
									dBsidedxl += fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
								}

								porpor2 = fporosity[Ix][Iy][Iz + 1] * (1 + cpor * (fP[Ix + 1][Iy + 1][Iz + 2][1] - refP) + dcpor * (fP[Ix + 1][Iy + 1][Iz + 2][1] - refP)*(fP[Ix + 1][Iy + 1][Iz + 2][1] - refP));
								if (fcomp[Ix][Iy][Iz + 1][i][0]>fcomp[Ix][Iy][Iz][i][0]) {
									DupStream = fdiffusion[Ix][Iy][Iz + 1][i][0];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix, Iy, Iz + 1, i, k, 0);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix][Iy][Iz + 1][RO][0] * gridDim[Nx + Ny + Iz + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] * dCoefl;
								AAd *= (fsat[Ix][Iy][Iz + 1][1] * gridDim[Nx + Ny + Iz + 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Nx + Ny + Iz] * dCoefl) / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
								BBd = gridDim[Nx + Ny + Iz + 1] * Coef / porpor2 + gridDim[Nx + Ny + Iz] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Ix] * gridDim[Nx + Iy] / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
								DeltaX = fcomp[Ix][Iy][Iz + 1][i][0] - fcomp[Ix][Iy][Iz][i][0];

								dAAddx = fdE[Ix][Iy][Iz][k][0] * gridDim[Nx + Ny + Iz] * dCoefl;
								dAAddx2 = fdE[Ix][Iy][Iz + 1][k][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								mBLNo = preConRow[Nx*Ny*Nz + (Iz + 1)*(Nx*Ny) + Iy * Nx + Ix];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;


								if (fphaseStat[Ix][Iy][Iz + 1] == 1) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][RO][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][BMU][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][1] * gridDim[Nx + Ny + Iz] * Makhraj - dMug * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix][Iy][Iz + 1][k][1] * gridDim[Nx + Ny + Iz + 1] * Coef*Makhraj - fDiffVisco(Ix, Iy, Iz + 1, k, 1)*gridDim[Nx + Ny + Iz + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][k][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz + 1] * (G_ACCG*fblockFProps[Ix][Iy][Iz + 1][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz + 1][BGAM][1] * fdE[Ix][Iy][Iz + 1][k][1] / fblockFProps[Ix][Iy][Iz + 1][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][BGAM][1] * gridDim[Nx + Ny + Iz + 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

								if (ftransS[Ix + 1][Iy + 1][Iz + 1][1][2]) {
									dRsidedxg += fcomp[Ix][Iy][Iz + 1][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][2] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = (ftrans[Ix + 1][Iy + 1][Iz + 1][1][2] + fcomp[Ix][Iy][Iz + 1][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

									dRsidedxg += fcomp[Ix][Iy][Iz + 1][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
									dBsidedxg += (ftrans[Ix + 1][Iy + 1][Iz + 1][3][2] + fcomp[Ix][Iy][Iz + 1][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
								}
								else {
									dRsidedxg += (ftrans[Ix + 1][Iy + 1][Iz + 1][1][2] + fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

									dRsidedxg += (ftrans[Ix + 1][Iy + 1][Iz + 1][3][2] + fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
									dBsidedxg += fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);

								}

								if (fcomp[Ix][Iy][Iz + 1][i][1]>fcomp[Ix][Iy][Iz][i][1]) {
									DupStream = fdiffusion[Ix][Iy][Iz + 1][i][1];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix, Iy, Iz + 1, i, k, 1);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix][Iy][Iz + 1][RO][1] * gridDim[Nx + Ny + Iz + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] * dCoefg;
								AAd *= (fsat[Ix][Iy][Iz + 1][2] * gridDim[Nx + Ny + Iz + 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Nx + Ny + Iz] * dCoefg) / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
								BBd = gridDim[Nx + Ny + Iz + 1] * Coef / porpor2 + gridDim[Nx + Ny + Iz] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Ix]*gridDim[Nx+Iy]/(gridDim[Nx+Ny+Iz+1]+gridDim[Nx+Ny+Iz]);
								DeltaX = fcomp[Ix][Iy][Iz + 1][i][1] - fcomp[Ix][Iy][Iz][i][1];

								dAAddx = fdE[Ix][Iy][Iz][k][1] * gridDim[Nx + Ny + Iz] * dCoefg;
								dAAddx2 = fdE[Ix][Iy][Iz + 1][k][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}


								if (fphaseStat[Ix][Iy][Iz + 1]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;
							}

							if (Iz>0) {
								if (fphaseStat[Ix][Iy][Iz - 1] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][RO][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][BMU][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][0] * gridDim[Nx + Ny + Iz] * Makhraj - dMul * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix][Iy][Iz - 1][k][0] * gridDim[Nx + Ny + Iz - 1] * Coef*Makhraj - fDiffVisco(Ix, Iy, Iz - 1, k, 0)*gridDim[Nx + Ny + Iz - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][k][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz - 1] * (G_ACCG*fblockFProps[Ix][Iy][Iz - 1][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz - 1][BGAM][0] * fdE[Ix][Iy][Iz - 1][k][0] / fblockFProps[Ix][Iy][Iz - 1][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][BGAM][0] * gridDim[Nx + Ny + Iz - 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

								if (ftransS[Ix + 1][Iy + 1][Iz][0][2]) {
									dRsidedxl -= (ftrans[Ix + 1][Iy + 1][Iz][0][2] + fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);
									dBsidedxl = -fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);

									dRsidedxl -= (ftrans[Ix + 1][Iy + 1][Iz][2][2] + fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
									dBsidedxl -= fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								}
								else {
									dRsidedxl -= fcomp[Ix][Iy][Iz - 1][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][1] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);
									dBsidedxl = -(ftrans[Ix + 1][Iy + 1][Iz][0][2] + fcomp[Ix][Iy][Iz - 1][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);

									dRsidedxl -= fcomp[Ix][Iy][Iz - 1][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
									dBsidedxl -= (ftrans[Ix + 1][Iy + 1][Iz][2][2] + fcomp[Ix][Iy][Iz - 1][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								}

								porpor2 = fporosity[Ix][Iy][Iz - 1] * (1 + cpor * (fP[Ix + 1][Iy + 1][Iz][1] - refP) + dcpor * (fP[Ix + 1][Iy + 1][Iz][1] - refP)*(fP[Ix + 1][Iy + 1][Iz][1] - refP));
								if (fcomp[Ix][Iy][Iz - 1][i][0]>fcomp[Ix][Iy][Iz][i][0]) {
									DupStream = fdiffusion[Ix][Iy][Iz - 1][i][0];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix, Iy, Iz - 1, i, k, 0);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix][Iy][Iz - 1][RO][0] * gridDim[Nx + Ny + Iz - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] * dCoefl;
								AAd *= (fsat[Ix][Iy][Iz - 1][1] * gridDim[Nx + Ny + Iz - 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Nx + Ny + Iz] * dCoefl) / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
								BBd = gridDim[Nx + Ny + Iz - 1] * Coef / porpor2 + gridDim[Nx + Ny + Iz] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Ix] * gridDim[Nx + Iy] / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
								DeltaX = fcomp[Ix][Iy][Iz - 1][i][0] - fcomp[Ix][Iy][Iz][i][0];

								dAAddx = fdE[Ix][Iy][Iz][k][0] * gridDim[Nx + Ny + Iz] * dCoefl;
								dAAddx2 = fdE[Ix][Iy][Iz - 1][k][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += -NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += -NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								mBLNo = preConRow[Nx*Ny*Nz + (Iz - 1)*(Nx*Ny) + Iy * Nx + Ix];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;


								if (fphaseStat[Ix][Iy][Iz - 1] == 1) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][RO][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][BMU][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][1] * gridDim[Nx + Ny + Iz] * Makhraj - dMug * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix][Iy][Iz - 1][k][1] * gridDim[Nx + Ny + Iz - 1] * Coef*Makhraj - fDiffVisco(Ix, Iy, Iz - 1, k, 1)*gridDim[Nx + Ny + Iz - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][k][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz - 1] * (G_ACCG*fblockFProps[Ix][Iy][Iz - 1][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz - 1][BGAM][1] * fdE[Ix][Iy][Iz - 1][k][1] / fblockFProps[Ix][Iy][Iz - 1][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][BGAM][1] * gridDim[Nx + Ny + Iz - 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

								if (ftransS[Ix + 1][Iy + 1][Iz][1][2]) {
									dRsidedxg -= (ftrans[Ix + 1][Iy + 1][Iz][1][2] + fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);
									dBsidedxg = -fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);

									dRsidedxg -= (ftrans[Ix + 1][Iy + 1][Iz][3][2] + fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
									dBsidedxg -= fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								}
								else {
									dRsidedxg -= fcomp[Ix][Iy][Iz - 1][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][2] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);
									dBsidedxg = -(ftrans[Ix + 1][Iy + 1][Iz][1][2] + fcomp[Ix][Iy][Iz - 1][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);

									dRsidedxg -= fcomp[Ix][Iy][Iz - 1][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
									dBsidedxg -= (ftrans[Ix + 1][Iy + 1][Iz][3][2] + fcomp[Ix][Iy][Iz - 1][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								}

								if (fcomp[Ix][Iy][Iz - 1][i][1]>fcomp[Ix][Iy][Iz][i][1]) {
									DupStream = fdiffusion[Ix][Iy][Iz - 1][i][1];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix, Iy, Iz - 1, i, k, 1);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix][Iy][Iz - 1][RO][1] * gridDim[Nx + Ny + Iz - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] * dCoefg;
								AAd *= (fsat[Ix][Iy][Iz - 1][2] * gridDim[Nx + Ny + Iz - 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Nx + Ny + Iz] * dCoefg) / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
								BBd = gridDim[Nx + Ny + Iz - 1] * Coef / porpor2 + gridDim[Nx + Ny + Iz] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Ix]*gridDim[Nx+Iy]/(gridDim[Nx+Ny+Iz-1]+gridDim[Nx+Ny+Iz]);
								DeltaX = fcomp[Ix][Iy][Iz - 1][i][1] - fcomp[Ix][Iy][Iz][i][1];

								dAAddx = fdE[Ix][Iy][Iz][k][1] * gridDim[Nx + Ny + Iz] * dCoefg;
								dAAddx2 = fdE[Ix][Iy][Iz - 1][k][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += -NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += -NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}


								if (fphaseStat[Ix][Iy][Iz - 1]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;
							}

							/////////////////////////////////////////////////Sadeq//k=i/////////////////////////////////
							if (phaseStat[Ix][Iy][Iz] == 1) {
								//dRsideMdxl = 0;
								Jac1Row[JRowIndex] = dRsideMdxl;
								Jac1Col[JRowIndex] = MatrixEq + k;
								JRowIndex++;
							}
							else if (phaseStat[Ix][Iy][Iz] == (-1)) {
								//dRsideMdxg = 0;
								Jac1Row[JRowIndex] = dRsideMdxg;
								Jac1Col[JRowIndex] = MatrixEq + k;
								JRowIndex++;
							}
							else {
								//dRsideMdxl = 0;
								Jac1Row[JRowIndex] = dRsideMdxl;
								Jac1Col[JRowIndex] = MatrixEq + k;
								JRowIndex++;
								//dRsideMdxg = 0;
								Jac1Row[JRowIndex] = dRsideMdxg;
								Jac1Col[JRowIndex] = MatrixEq + Nc + k;
								JRowIndex++;
							}
							////////////////////////sadeq/////////////////////////
						}
						else {
							// Transfer function drside dxl dxg 
							// moshtagh transfer Function jabejaie naft nesbat be xl Matrix
							//dRsideMdxl -= ZERO_CONV * SI_C * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
							dRsideMdxl -= ZERO_CONV * SI_C * dE[Ix][Iy][Iz][k][0] * comp[Ix][Iy][Iz][i][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
							dRsideMdxl -= ZERO_CONV * -SI_C * DiffVisco(Ix, Iy, Iz, k, 0) * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] * Mporpor / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor)*(blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) * (porpor + Mporpor);

							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (1)) {
								dRsideMdxl -= ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
								//dRsideMdxl -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								dRsideMdxl -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsideMdxl -= ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
								//dRsideMdxl -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								dRsideMdxl -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
							}

							//if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								//dRsideMdxl -= ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
								//dRsideMdxl -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
							//	dRsideMdxl -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
							//}

							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0)) {
								//dRsideMdxl -= ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
								//dRsideMdxl -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								//dRsideMdxl -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);

								dRsideMdxl -= ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
								//dRsideMdxl -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								dRsideMdxl -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1)) {
								dRsideMdxl -= ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
								//dRsideMdxl -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								dRsideMdxl -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
							}

							//if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								//dRsideMdxl -= ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
								//dRsideMdxl -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								//dRsideMdxl -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
							//}


							// moshtagh transfer Function jabejaie naft nesbat be xl Fracture
							dRsidedxl -= ZERO_CONV * -SI_C * fDiffVisco(Ix, Iy, Iz, k, 0) * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] * porpor / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor)*(blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) * (porpor + Mporpor);

							//if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (1)) {
								//dRsidedxl -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
							//}

							//if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0)) {
								//dRsidedxl -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
							/*}*/

							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (1)) {
								dRsidedxl -= ZERO_DIFF * fdE[Ix][Iy][Iz][k][0] * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
								//dRsidedxl -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0];
								dRsidedxl -= ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1)) {
								dRsidedxl -= ZERO_DIFF * fdE[Ix][Iy][Iz][k][0] * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
								//dRsidedxl -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0];
								dRsidedxl -= ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);

								//dRsidedxl -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
							}

							//if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0)) {
								//dRsidedxl -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
							//}

							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsidedxl -= ZERO_DIFF * fdE[Ix][Iy][Iz][k][0] * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
								//dRsidedxl -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0];
								dRsidedxl -= ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
							}

							// moshtagh transfer Function jabejaie gaz nesbat be xg Matrix
							//dRsideMdxg -= ZERO_CONV * SI_C * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor) / (porpor + Mporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));
							dRsideMdxg -= ZERO_CONV * SI_C * dE[Ix][Iy][Iz][k][1] * comp[Ix][Iy][Iz][i][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor) / (porpor + Mporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));
							dRsideMdxg -= ZERO_CONV * -SI_C * DiffVisco(Ix, Iy, Iz, k, 1) * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] * Mporpor / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor)*(blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1])) * (porpor + Mporpor);

							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								dRsideMdxg -= ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
								//dRsideMdxg -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								dRsideMdxg -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsideMdxg -= ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
								//dRsideMdxg -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								dRsideMdxg -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
							}

							//if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (1)) {
								//dRsideMdxg -= ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
								//dRsideMdxg -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								//dRsideMdxg -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
							//}


							//if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1)) {
								//dRsideMdxg -= ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
								//dRsideMdxg -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								//dRsideMdxg -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
						//	}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								dRsideMdxg -= ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
								//dRsideMdxg -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								dRsideMdxg -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
							}

							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsideMdxg -= ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
								//dRsideMdxg -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								dRsideMdxg -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

								//dRsideMdxg -= ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
								//dRsideMdxg -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								//dRsideMdxg -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
							}

							// moshtagh transfer Function jabejaie gaz nesbat be xg Fracture
							dRsidedxg -= ZERO_CONV * -SI_C * fDiffVisco(Ix, Iy, Iz, k, 1) * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] * porpor / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor)*(blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1])) * (porpor + Mporpor);

							//if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								//dRsidedxg -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
							//}

							//if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0)) {
								//dRsidedxg -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
							//}

							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								dRsidedxg -= ZERO_DIFF * fdE[Ix][Iy][Iz][k][1] * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
								//dRsidedxg -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1];
								dRsidedxg -= ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								//dRsidedxg -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];

								dRsidedxg -= ZERO_DIFF * fdE[Ix][Iy][Iz][k][1] * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
								//dRsidedxg -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1];
								dRsidedxg -= ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
							}

							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsidedxg -= ZERO_DIFF * fdE[Ix][Iy][Iz][k][1] * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
								//dRsidedxg -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1];
								dRsidedxg -= ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
							}

							//if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0)) {
								//dRsidedxg -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
							//}
							//

							dLsidedxl = fcomp[Ix][Iy][Iz][i][0] * fdE[Ix][Iy][Iz][k][0];
							dLsidedxg = fcomp[Ix][Iy][Iz][i][1] * fdE[Ix][Iy][Iz][k][1];
							dQdxl = 0;
							dQdxg = 0;



							if (Ix<(Nx - 1)) {
								if (fphaseStat[Ix + 1][Iy][Iz] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][RO][0] * gridDim[Ix + 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][BMU][0] * gridDim[Ix + 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][0] * gridDim[Ix] * Makhraj - dMul * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix + 1][Iy][Iz][k][0] * gridDim[Ix + 1] * Coef*Makhraj - fDiffVisco(Ix + 1, Iy, Iz, k, 0)*gridDim[Ix + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Ix] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][k][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Ix + 1] * (G_ACCG*fblockFProps[Ix + 1][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix + 1][Iy][Iz][BGAM][0] * fdE[Ix + 1][Iy][Iz][k][0] / fblockFProps[Ix + 1][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][BGAM][0] * gridDim[Ix + 1] * Coef) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

								if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][0]) {
									dRsidedxl += fcomp[Ix + 1][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][1] * Moshtaq*(fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = (fcomp[Ix + 1][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][1] * Bmoshtaq)*(fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

									//dRsidedxl+=comp[Ix+1][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxl+=(comp[Ix+1][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}
								else {
									dRsidedxl += (fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][0] * frelPerm[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][0] * frelPerm[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

									//dRsidedxl+=(comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxl+=comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}

								porpor2 = fporosity[Ix + 1][Iy][Iz] * (1 + cpor * (fP[Ix + 2][Iy + 1][Iz + 1][1] - refP) + dcpor * (fP[Ix + 2][Iy + 1][Iz + 1][1] - refP)*(fP[Ix + 2][Iy + 1][Iz + 1][1] - refP));
								if (fcomp[Ix + 1][Iy][Iz][i][0]>fcomp[Ix][Iy][Iz][i][0]) {
									DupStream = fdiffusion[Ix + 1][Iy][Iz][i][0];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix + 1, Iy, Iz, i, k, 0);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix + 1][Iy][Iz][RO][0] * gridDim[Ix + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] * dCoefl;
								AAd *= (fsat[Ix + 1][Iy][Iz][1] * gridDim[Ix + 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Ix] * dCoefl) / (gridDim[Ix + 1] + gridDim[Ix]);
								BBd = gridDim[Ix + 1] * Coef / porpor2 + gridDim[Ix] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz] / (gridDim[Ix + 1] + gridDim[Ix]);
								DeltaX = fcomp[Ix + 1][Iy][Iz][i][0] - fcomp[Ix][Iy][Iz][i][0];

								dAAddx = fdE[Ix][Iy][Iz][k][0] * gridDim[Ix] * dCoefl;
								dAAddx2 = fdE[Ix + 1][Iy][Iz][k][0] * gridDim[Ix + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + Iy * Nx + Ix + 1];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;


								if (fphaseStat[Ix + 1][Iy][Iz] == 1) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][RO][1] * gridDim[Ix + 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][BMU][1] * gridDim[Ix + 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][1] * gridDim[Ix] * Makhraj - dMug * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix + 1][Iy][Iz][k][1] * gridDim[Ix + 1] * Coef*Makhraj - fDiffVisco(Ix + 1, Iy, Iz, k, 1)*gridDim[Ix + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Ix] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][k][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Ix + 1] * (G_ACCG*fblockFProps[Ix + 1][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix + 1][Iy][Iz][BGAM][1] * fdE[Ix + 1][Iy][Iz][k][1] / fblockFProps[Ix + 1][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][BGAM][1] * gridDim[Ix + 1] * Coef) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

								if (ftransS[Ix + 1][Iy + 1][Iz + 1][1][0]) {
									dRsidedxg += fcomp[Ix + 1][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][2] * Moshtaq*(fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = (fcomp[Ix + 1][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][2] * Bmoshtaq)*(fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

									//dRsidedxg+=comp[Ix+1][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxg+=(comp[Ix+1][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}
								else {
									dRsidedxg += (fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

									//dRsidedxg+=(comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxg+=comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);

								}

								if (fcomp[Ix + 1][Iy][Iz][i][1]>fcomp[Ix][Iy][Iz][i][1]) {
									DupStream = fdiffusion[Ix + 1][Iy][Iz][i][1];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix + 1, Iy, Iz, i, k, 1);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix + 1][Iy][Iz][RO][1] * gridDim[Ix + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] * dCoefg;
								AAd *= (fsat[Ix + 1][Iy][Iz][2] * gridDim[Ix + 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Ix] * dCoefg) / (gridDim[Ix + 1] + gridDim[Ix]);
								BBd = gridDim[Ix + 1] * Coef / porpor2 + gridDim[Ix] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Nx+Iy]*gridDim[Nx+Ny+Iz]/(gridDim[Ix+1]+gridDim[Ix]);
								DeltaX = fcomp[Ix + 1][Iy][Iz][i][1] - fcomp[Ix][Iy][Iz][i][1];

								dAAddx = fdE[Ix][Iy][Iz][k][1] * gridDim[Ix] * dCoefg;
								dAAddx2 = fdE[Ix + 1][Iy][Iz][k][1] * gridDim[Ix + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}


								if (fphaseStat[Ix + 1][Iy][Iz]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;
							}

							if (Ix>0) {
								if (fphaseStat[Ix - 1][Iy][Iz] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][RO][0] * gridDim[Ix - 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][BMU][0] * gridDim[Ix - 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][0] * gridDim[Ix] * Makhraj - dMul * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix - 1][Iy][Iz][k][0] * gridDim[Ix - 1] * Coef*Makhraj - fDiffVisco(Ix - 1, Iy, Iz, k, 0)*gridDim[Ix - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Ix] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][k][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Ix - 1] * (G_ACCG*fblockFProps[Ix - 1][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix - 1][Iy][Iz][BGAM][0] * fdE[Ix - 1][Iy][Iz][k][0] / fblockFProps[Ix - 1][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][BGAM][0] * gridDim[Ix - 1] * Coef) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

								if (ftransS[Ix][Iy + 1][Iz + 1][0][0]) {
									dRsidedxl -= (fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);
									dBsidedxl = -fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);

									//dRsidedxl-=(comp[Ix][Iy][Iz][i][0]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1])*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
									//dBsidedxl-=comp[Ix][Iy][Iz][i][0]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								}
								else {
									dRsidedxl -= fcomp[Ix - 1][Iy][Iz][i][0] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][1] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);
									dBsidedxl = -(fcomp[Ix - 1][Iy][Iz][i][0] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);

									//dRsidedxl-=comp[Ix-1][Iy][Iz][i][0]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
									//dBsidedxl-=(comp[Ix-1][Iy][Iz][i][0]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][1])*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								}

								porpor2 = fporosity[Ix - 1][Iy][Iz] * (1 + cpor * (fP[Ix][Iy + 1][Iz + 1][1] - refP) + dcpor * (fP[Ix][Iy + 1][Iz + 1][1] - refP)*(fP[Ix][Iy + 1][Iz + 1][1] - refP));
								if (fcomp[Ix - 1][Iy][Iz][i][0]>fcomp[Ix][Iy][Iz][i][0]) {
									DupStream = fdiffusion[Ix - 1][Iy][Iz][i][0];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix - 1, Iy, Iz, i, k, 0);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix - 1][Iy][Iz][RO][0] * gridDim[Ix - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] * dCoefl;
								AAd *= (fsat[Ix - 1][Iy][Iz][1] * gridDim[Ix - 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Ix] * dCoefl) / (gridDim[Ix - 1] + gridDim[Ix]);
								BBd = gridDim[Ix - 1] * Coef / porpor2 + gridDim[Ix] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz] / (gridDim[Ix - 1] + gridDim[Ix]);
								DeltaX = fcomp[Ix - 1][Iy][Iz][i][0] - fcomp[Ix][Iy][Iz][i][0];

								dAAddx = fdE[Ix][Iy][Iz][k][0] * gridDim[Ix] * dCoefl;
								dAAddx2 = fdE[Ix - 1][Iy][Iz][k][0] * gridDim[Ix - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += -NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += -NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}


								mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + Iy * Nx + Ix - 1];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;


								if (fphaseStat[Ix - 1][Iy][Iz]) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][RO][1] * gridDim[Ix - 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][BMU][1] * gridDim[Ix - 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][1] * gridDim[Ix] * Makhraj - dMug * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix - 1][Iy][Iz][k][1] * gridDim[Ix - 1] * Coef*Makhraj - fDiffVisco(Ix - 1, Iy, Iz, k, 1)*gridDim[Ix - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Ix] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][k][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Ix - 1] * (G_ACCG*fblockFProps[Ix - 1][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix - 1][Iy][Iz][BGAM][1] * fdE[Ix - 1][Iy][Iz][k][1] / fblockFProps[Ix - 1][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][BGAM][1] * gridDim[Ix - 1] * Coef) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

								if (ftransS[Ix][Iy + 1][Iz + 1][1][0]) {
									dRsidedxg -= (fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);
									dBsidedxg = -fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);

									//dRsidedxg-=(comp[Ix][Iy][Iz][i][1]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
									//dBsidedxg-=comp[Ix][Iy][Iz][i][1]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								}
								else {
									dRsidedxg -= fcomp[Ix - 1][Iy][Iz][i][1] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][2] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);
									dBsidedxg = -(fcomp[Ix - 1][Iy][Iz][i][1] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);

									//dRsidedxg-=comp[Ix-1][Iy][Iz][i][1]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
									//dBsidedxg-=(comp[Ix-1][Iy][Iz][i][1]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								}

								if (fcomp[Ix - 1][Iy][Iz][i][1]>fcomp[Ix][Iy][Iz][i][1]) {
									DupStream = fdiffusion[Ix - 1][Iy][Iz][i][1];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix - 1, Iy, Iz, i, k, 1);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix - 1][Iy][Iz][RO][1] * gridDim[Ix - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] * dCoefg;
								AAd *= (fsat[Ix - 1][Iy][Iz][2] * gridDim[Ix - 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Ix] * dCoefg) / (gridDim[Ix - 1] + gridDim[Ix]);
								BBd = gridDim[Ix - 1] * Coef / porpor2 + gridDim[Ix] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Nx+Iy]*gridDim[Nx+Ny+Iz]/(gridDim[Ix-1]+gridDim[Ix]);
								DeltaX = fcomp[Ix - 1][Iy][Iz][i][1] - fcomp[Ix][Iy][Iz][i][1];

								dAAddx = fdE[Ix][Iy][Iz][k][1] * gridDim[Ix] * dCoefg;
								dAAddx2 = fdE[Ix - 1][Iy][Iz][k][1] * gridDim[Ix - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += -NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += -NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}


								if (fphaseStat[Ix - 1][Iy][Iz]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;
							}

							if (Iy<(Ny - 1)) {
								if (fphaseStat[Ix][Iy + 1][Iz] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][RO][0] * gridDim[Nx + Iy + 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][BMU][0] * gridDim[Nx + Iy + 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][0] * gridDim[Nx + Iy] * Makhraj - dMul * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix][Iy + 1][Iz][k][0] * gridDim[Nx + Iy + 1] * Coef*Makhraj - fDiffVisco(Ix, Iy + 1, Iz, k, 0)*gridDim[Nx + Iy + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][k][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Iy + 1] * (G_ACCG*fblockFProps[Ix][Iy + 1][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy + 1][Iz][BGAM][0] * fdE[Ix][Iy + 1][Iz][k][0] / fblockFProps[Ix][Iy + 1][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][BGAM][0] * gridDim[Nx + Iy + 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

								if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][1]) {
									dRsidedxl += fcomp[Ix][Iy + 1][Iz][i][0] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][1] * Moshtaq*(fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = (fcomp[Ix][Iy + 1][Iz][i][0] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

									//dRsidedxl+=comp[Ix][Iy+1][Iz][i][0]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxl+=(comp[Ix][Iy+1][Iz][i][0]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}
								else {
									dRsidedxl += (fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

									//dRsidedxl+=(comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxl+=comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}

								porpor2 = fporosity[Ix][Iy + 1][Iz] * (1 + cpor * (fP[Ix + 1][Iy + 2][Iz + 1][1] - refP) + dcpor * (fP[Ix + 1][Iy + 2][Iz + 1][1] - refP)*(fP[Ix + 1][Iy + 2][Iz + 1][1] - refP));
								if (fcomp[Ix][Iy + 1][Iz][i][0]>fcomp[Ix][Iy][Iz][i][0]) {
									DupStream = fdiffusion[Ix][Iy + 1][Iz][i][0];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix, Iy + 1, Iz, i, k, 0);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix][Iy + 1][Iz][RO][0] * gridDim[Nx + Iy + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] * dCoefl;
								AAd *= (fsat[Ix][Iy + 1][Iz][1] * gridDim[Nx + Iy + 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Nx + Iy] * dCoefl) / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
								BBd = gridDim[Nx + Iy + 1] * Coef / porpor2 + gridDim[Nx + Iy] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Ix] * gridDim[Nx + Ny + Iz] / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
								DeltaX = fcomp[Ix][Iy + 1][Iz][i][0] - fcomp[Ix][Iy][Iz][i][0];

								dAAddx = fdE[Ix][Iy][Iz][k][0] * gridDim[Nx + Iy] * dCoefl;
								dAAddx2 = fdE[Ix][Iy + 1][Iz][k][0] * gridDim[Nx + Iy + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}


								mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + (Iy + 1)*Nx + Ix];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;


								if (fphaseStat[Ix][Iy + 1][Iz] == 1) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][RO][1] * gridDim[Nx + Iy + 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][BMU][1] * gridDim[Nx + Iy + 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][1] * gridDim[Nx + Iy] * Makhraj - dMug * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix][Iy + 1][Iz][k][1] * gridDim[Nx + Iy + 1] * Coef*Makhraj - fDiffVisco(Ix, Iy + 1, Iz, k, 1)*gridDim[Nx + Iy + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][k][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Iy + 1] * (G_ACCG*fblockFProps[Ix][Iy + 1][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy + 1][Iz][BGAM][1] * fdE[Ix][Iy + 1][Iz][k][1] / fblockFProps[Ix][Iy + 1][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][BGAM][1] * gridDim[Nx + Iy + 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

								if (ftransS[Ix + 1][Iy + 1][Iz + 1][1][1]) {
									dRsidedxg += fcomp[Ix][Iy + 1][Iz][i][1] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][2] * Moshtaq*(fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = (fcomp[Ix][Iy + 1][Iz][i][1] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

									//dRsidedxg+=comp[Ix][Iy+1][Iz][i][1]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxg+=(comp[Ix][Iy+1][Iz][i][1]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}
								else {
									dRsidedxg += (fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

									//dRsidedxg+=(comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxg+=comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);

								}

								if (fcomp[Ix][Iy + 1][Iz][i][1]>fcomp[Ix][Iy][Iz][i][1]) {
									DupStream = fdiffusion[Ix][Iy + 1][Iz][i][1];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix, Iy + 1, Iz, i, k, 1);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix][Iy + 1][Iz][RO][1] * gridDim[Nx + Iy + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] * dCoefg;
								AAd *= (fsat[Ix][Iy + 1][Iz][2] * gridDim[Nx + Iy + 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Nx + Iy] * dCoefg) / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
								BBd = gridDim[Nx + Iy + 1] * Coef / porpor2 + gridDim[Nx + Iy] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Ix]*gridDim[Nx+Ny+Iz]/(gridDim[Nx+Iy+1]+gridDim[Nx+Iy]);
								DeltaX = fcomp[Ix][Iy + 1][Iz][i][1] - fcomp[Ix][Iy][Iz][i][1];

								dAAddx = fdE[Ix][Iy][Iz][k][1] * gridDim[Nx + Iy] * dCoefg;
								dAAddx2 = fdE[Ix][Iy + 1][Iz][k][1] * gridDim[Nx + Iy + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								if (fphaseStat[Ix][Iy + 1][Iz]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;
							}

							if (Iy>0) {
								if (fphaseStat[Ix][Iy - 1][Iz] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][RO][0] * gridDim[Nx + Iy - 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][BMU][0] * gridDim[Nx + Iy - 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][0] * gridDim[Nx + Iy] * Makhraj - dMul * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix][Iy - 1][Iz][k][0] * gridDim[Nx + Iy - 1] * Coef*Makhraj - fDiffVisco(Ix, Iy - 1, Iz, k, 0)*gridDim[Nx + Iy - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][k][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Iy - 1] * (G_ACCG*fblockFProps[Ix][Iy - 1][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy - 1][Iz][BGAM][0] * fdE[Ix][Iy - 1][Iz][k][0] / fblockFProps[Ix][Iy - 1][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][BGAM][0] * gridDim[Nx + Iy - 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

								if (ftransS[Ix + 1][Iy][Iz + 1][0][1]) {
									dRsidedxl -= (fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);
									dBsidedxl = -fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);

									//dRsidedxl-=(comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][1])*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
									//dBsidedxl-=comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								}
								else {
									dRsidedxl -= fcomp[Ix][Iy - 1][Iz][i][0] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][1] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);
									dBsidedxl = -(fcomp[Ix][Iy - 1][Iz][i][0] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);

									//dRsidedxl-=comp[Ix][Iy-1][Iz][i][0]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
									//dBsidedxl-=(comp[Ix][Iy-1][Iz][i][0]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][1])*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								}

								porpor2 = fporosity[Ix][Iy - 1][Iz] * (1 + cpor * (fP[Ix + 1][Iy][Iz + 1][1] - refP) + dcpor * (fP[Ix + 1][Iy][Iz + 1][1] - refP)*(fP[Ix + 1][Iy][Iz + 1][1] - refP));
								if (fcomp[Ix][Iy - 1][Iz][i][0]>fcomp[Ix][Iy][Iz][i][0]) {
									DupStream = fdiffusion[Ix][Iy - 1][Iz][i][0];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix, Iy - 1, Iz, i, k, 0);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix][Iy - 1][Iz][RO][0] * gridDim[Nx + Iy - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] * dCoefl;
								AAd *= (fsat[Ix][Iy - 1][Iz][1] * gridDim[Nx + Iy - 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Nx + Iy] * dCoefl) / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
								BBd = gridDim[Nx + Iy - 1] * Coef / porpor2 + gridDim[Nx + Iy] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Ix] * gridDim[Nx + Ny + Iz] / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
								DeltaX = fcomp[Ix][Iy - 1][Iz][i][0] - fcomp[Ix][Iy][Iz][i][0];

								dAAddx = fdE[Ix][Iy][Iz][k][0] * gridDim[Nx + Iy] * dCoefl;
								dAAddx2 = fdE[Ix][Iy - 1][Iz][k][0] * gridDim[Nx + Iy - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += -NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += -NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}


								mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + (Iy - 1)*Nx + Ix];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;


								if (fphaseStat[Ix][Iy - 1][Iz] == 1) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][RO][1] * gridDim[Nx + Iy - 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][BMU][1] * gridDim[Nx + Iy - 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][1] * gridDim[Nx + Iy] * Makhraj - dMug * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix][Iy - 1][Iz][k][1] * gridDim[Nx + Iy - 1] * Coef*Makhraj - fDiffVisco(Ix, Iy - 1, Iz, k, 1)*gridDim[Nx + Iy - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][k][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Iy - 1] * (G_ACCG*fblockFProps[Ix][Iy - 1][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy - 1][Iz][BGAM][1] * fdE[Ix][Iy - 1][Iz][k][1] / fblockFProps[Ix][Iy - 1][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][BGAM][1] * gridDim[Nx + Iy - 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

								if (ftransS[Ix + 1][Iy][Iz + 1][1][1]) {
									dRsidedxg -= (fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);
									dBsidedxg = -fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);

									//dRsidedxg-=(comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
									//dBsidedxg-=comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								}
								else {
									dRsidedxg -= fcomp[Ix][Iy - 1][Iz][i][1] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][2] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);
									dBsidedxg = -(fcomp[Ix][Iy - 1][Iz][i][1] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);

									//dRsidedxg-=comp[Ix][Iy-1][Iz][i][1]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
									//dBsidedxg-=(comp[Ix][Iy-1][Iz][i][1]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								}

								if (fcomp[Ix][Iy - 1][Iz][i][1]>fcomp[Ix][Iy][Iz][i][1]) {
									DupStream = fdiffusion[Ix][Iy - 1][Iz][i][1];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix, Iy - 1, Iz, i, k, 1);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix][Iy - 1][Iz][RO][1] * gridDim[Nx + Iy - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] * dCoefg;
								AAd *= (fsat[Ix][Iy - 1][Iz][2] * gridDim[Nx + Iy - 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Nx + Iy] * dCoefg) / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
								BBd = gridDim[Nx + Iy - 1] * Coef / porpor2 + gridDim[Nx + Iy] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Ix]*gridDim[Nx+Ny+Iz]/(gridDim[Nx+Iy-1]+gridDim[Nx+Iy]);
								DeltaX = fcomp[Ix][Iy - 1][Iz][i][1] - fcomp[Ix][Iy][Iz][i][1];

								dAAddx = fdE[Ix][Iy][Iz][k][1] * gridDim[Nx + Iy] * dCoefg;
								dAAddx2 = fdE[Ix][Iy - 1][Iz][k][1] * gridDim[Nx + Iy - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += -NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += -NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}


								if (fphaseStat[Ix][Iy - 1][Iz]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;
							}

							if (Iz<(Nz - 1)) {
								if (fphaseStat[Ix][Iy][Iz + 1] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][RO][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][BMU][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][0] * gridDim[Nx + Ny + Iz] * Makhraj - dMul * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix][Iy][Iz + 1][k][0] * gridDim[Nx + Ny + Iz + 1] * Coef*Makhraj - fDiffVisco(Ix, Iy, Iz + 1, k, 0)*gridDim[Nx + Ny + Iz + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][k][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz + 1] * (G_ACCG*fblockFProps[Ix][Iy][Iz + 1][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz + 1][BGAM][0] * fdE[Ix][Iy][Iz + 1][k][0] / fblockFProps[Ix][Iy][Iz + 1][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][BGAM][0] * gridDim[Nx + Ny + Iz + 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

								if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][2]) {
									dRsidedxl += fcomp[Ix][Iy][Iz + 1][i][0] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][1] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = (fcomp[Ix][Iy][Iz + 1][i][0] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

									dRsidedxl += fcomp[Ix][Iy][Iz + 1][i][0] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
									dBsidedxl += (fcomp[Ix][Iy][Iz + 1][i][0] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
								}
								else {
									dRsidedxl += (fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

									dRsidedxl += (fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
									dBsidedxl += fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
								}

								porpor2 = fporosity[Ix][Iy][Iz + 1] * (1 + cpor * (fP[Ix + 1][Iy + 1][Iz + 2][1] - refP) + dcpor * (fP[Ix + 1][Iy + 1][Iz + 2][1] - refP)*(fP[Ix + 1][Iy + 1][Iz + 2][1] - refP));
								if (fcomp[Ix][Iy][Iz + 1][i][0]>fcomp[Ix][Iy][Iz][i][0]) {
									DupStream = fdiffusion[Ix][Iy][Iz + 1][i][0];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix, Iy, Iz + 1, i, k, 0);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix][Iy][Iz + 1][RO][0] * gridDim[Nx + Ny + Iz + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] * dCoefl;
								AAd *= (fsat[Ix][Iy][Iz + 1][1] * gridDim[Nx + Ny + Iz + 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Nx + Ny + Iz] * dCoefl) / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
								BBd = gridDim[Nx + Ny + Iz + 1] * Coef / porpor2 + gridDim[Nx + Ny + Iz] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Ix] * gridDim[Nx + Iy] / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
								DeltaX = fcomp[Ix][Iy][Iz + 1][i][0] - fcomp[Ix][Iy][Iz][i][0];

								dAAddx = fdE[Ix][Iy][Iz][k][0] * gridDim[Nx + Ny + Iz] * dCoefl;
								dAAddx2 = fdE[Ix][Iy][Iz + 1][k][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								mBLNo = preConRow[Nx*Ny*Nz + (Iz + 1)*(Nx*Ny) + Iy * Nx + Ix];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;


								if (fphaseStat[Ix][Iy][Iz + 1] == 1) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][RO][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][BMU][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][1] * gridDim[Nx + Ny + Iz] * Makhraj - dMug * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix][Iy][Iz + 1][k][1] * gridDim[Nx + Ny + Iz + 1] * Coef*Makhraj - fDiffVisco(Ix, Iy, Iz + 1, k, 1)*gridDim[Nx + Ny + Iz + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][k][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz + 1] * (G_ACCG*fblockFProps[Ix][Iy][Iz + 1][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz + 1][BGAM][1] * fdE[Ix][Iy][Iz + 1][k][1] / fblockFProps[Ix][Iy][Iz + 1][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][BGAM][1] * gridDim[Nx + Ny + Iz + 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

								if (ftransS[Ix + 1][Iy + 1][Iz + 1][1][2]) {
									dRsidedxg += fcomp[Ix][Iy][Iz + 1][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][2] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = (fcomp[Ix][Iy][Iz + 1][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

									dRsidedxg += fcomp[Ix][Iy][Iz + 1][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
									dBsidedxg += (fcomp[Ix][Iy][Iz + 1][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
								}
								else {
									dRsidedxg += (fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

									dRsidedxg += (fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
									dBsidedxg += fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);

								}

								if (fcomp[Ix][Iy][Iz + 1][i][1]>fcomp[Ix][Iy][Iz][i][1]) {
									DupStream = fdiffusion[Ix][Iy][Iz + 1][i][1];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix, Iy, Iz + 1, i, k, 1);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix][Iy][Iz + 1][RO][1] * gridDim[Nx + Ny + Iz + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] * dCoefg;
								AAd *= (fsat[Ix][Iy][Iz + 1][2] * gridDim[Nx + Ny + Iz + 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Nx + Ny + Iz] * dCoefg) / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
								BBd = gridDim[Nx + Ny + Iz + 1] * Coef / porpor2 + gridDim[Nx + Ny + Iz] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Ix]*gridDim[Nx+Iy]/(gridDim[Nx+Ny+Iz+1]+gridDim[Nx+Ny+Iz]);
								DeltaX = fcomp[Ix][Iy][Iz + 1][i][1] - fcomp[Ix][Iy][Iz][i][1];

								dAAddx = fdE[Ix][Iy][Iz][k][1] * gridDim[Nx + Ny + Iz] * dCoefg;
								dAAddx2 = fdE[Ix][Iy][Iz + 1][k][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}


								if (fphaseStat[Ix][Iy][Iz + 1]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;
							}

							if (Iz>0) {
								if (fphaseStat[Ix][Iy][Iz - 1] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][RO][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][BMU][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][0] * gridDim[Nx + Ny + Iz] * Makhraj - dMul * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix][Iy][Iz - 1][k][0] * gridDim[Nx + Ny + Iz - 1] * Coef*Makhraj - fDiffVisco(Ix, Iy, Iz - 1, k, 0)*gridDim[Nx + Ny + Iz - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][k][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz - 1] * (G_ACCG*fblockFProps[Ix][Iy][Iz - 1][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz - 1][BGAM][0] * fdE[Ix][Iy][Iz - 1][k][0] / fblockFProps[Ix][Iy][Iz - 1][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][BGAM][0] * gridDim[Nx + Ny + Iz - 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

								if (ftransS[Ix + 1][Iy + 1][Iz][0][2]) {
									dRsidedxl -= (fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);
									dBsidedxl = -fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);

									dRsidedxl -= (fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][1])*(Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
									dBsidedxl -= fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								}
								else {
									dRsidedxl -= fcomp[Ix][Iy][Iz - 1][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][1] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);
									dBsidedxl = -(fcomp[Ix][Iy][Iz - 1][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);

									dRsidedxl -= -fcomp[Ix][Iy][Iz - 1][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
									dBsidedxl -= -(fcomp[Ix][Iy][Iz - 1][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][1])*(Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								}

								porpor2 = fporosity[Ix][Iy][Iz - 1] * (1 + cpor * (fP[Ix + 1][Iy + 1][Iz][1] - refP) + dcpor * (fP[Ix + 1][Iy + 1][Iz][1] - refP)*(fP[Ix + 1][Iy + 1][Iz][1] - refP));
								if (fcomp[Ix][Iy][Iz - 1][i][0]>fcomp[Ix][Iy][Iz][i][0]) {
									DupStream = fdiffusion[Ix][Iy][Iz - 1][i][0];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix, Iy, Iz - 1, i, k, 0);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix][Iy][Iz - 1][RO][0] * gridDim[Nx + Ny + Iz - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] * dCoefl;
								AAd *= (fsat[Ix][Iy][Iz - 1][1] * gridDim[Nx + Ny + Iz - 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Nx + Ny + Iz] * dCoefl) / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
								BBd = gridDim[Nx + Ny + Iz - 1] * Coef / porpor2 + gridDim[Nx + Ny + Iz] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Ix] * gridDim[Nx + Iy] / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
								DeltaX = fcomp[Ix][Iy][Iz - 1][i][0] - fcomp[Ix][Iy][Iz][i][0];

								dAAddx = fdE[Ix][Iy][Iz][k][0] * gridDim[Nx + Ny + Iz] * dCoefl;
								dAAddx2 = fdE[Ix][Iy][Iz - 1][k][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += -NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += -NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								mBLNo = preConRow[Nx*Ny*Nz + (Iz - 1)*(Nx*Ny) + Iy * Nx + Ix];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;


								if (fphaseStat[Ix][Iy][Iz - 1] == 1) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][RO][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][BMU][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][1] * gridDim[Nx + Ny + Iz] * Makhraj - dMug * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix][Iy][Iz - 1][k][1] * gridDim[Nx + Ny + Iz - 1] * Coef*Makhraj - fDiffVisco(Ix, Iy, Iz - 1, k, 1)*gridDim[Nx + Ny + Iz - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][k][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz - 1] * (G_ACCG*fblockFProps[Ix][Iy][Iz - 1][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz - 1][BGAM][1] * fdE[Ix][Iy][Iz - 1][k][1] / fblockFProps[Ix][Iy][Iz - 1][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][BGAM][1] * gridDim[Nx + Ny + Iz - 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

								if (ftransS[Ix + 1][Iy + 1][Iz][1][2]) {
									dRsidedxg -= (fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);
									dBsidedxg = -fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);

									dRsidedxg -= (fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
									dBsidedxg -= fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								}
								else {
									dRsidedxg -= fcomp[Ix][Iy][Iz - 1][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][2] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);
									dBsidedxg = -(fcomp[Ix][Iy][Iz - 1][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);

									dRsidedxg -= fcomp[Ix][Iy][Iz - 1][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
									dBsidedxg -= (fcomp[Ix][Iy][Iz - 1][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								}

								if (fcomp[Ix][Iy][Iz - 1][i][1]>fcomp[Ix][Iy][Iz][i][1]) {
									DupStream = fdiffusion[Ix][Iy][Iz - 1][i][1];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix, Iy, Iz - 1, i, k, 1);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix][Iy][Iz - 1][RO][1] * gridDim[Nx + Ny + Iz - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] * dCoefg;
								AAd *= (fsat[Ix][Iy][Iz - 1][2] * gridDim[Nx + Ny + Iz - 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Nx + Ny + Iz] * dCoefg) / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
								BBd = gridDim[Nx + Ny + Iz - 1] * Coef / porpor2 + gridDim[Nx + Ny + Iz] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Ix]*gridDim[Nx+Iy]/(gridDim[Nx+Ny+Iz-1]+gridDim[Nx+Ny+Iz]);
								DeltaX = fcomp[Ix][Iy][Iz - 1][i][1] - fcomp[Ix][Iy][Iz][i][1];

								dAAddx = fdE[Ix][Iy][Iz][k][1] * gridDim[Nx + Ny + Iz] * dCoefg;
								dAAddx2 = fdE[Ix][Iy][Iz - 1][k][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += -NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += -NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}



								if (fphaseStat[Ix][Iy][Iz - 1]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;
							}

							/////////////////////////////////////////////////Sadeq//k!=i/////////////////////////////////
							if (phaseStat[Ix][Iy][Iz] == 1) {
								//dRsideMdxl = 0;
								Jac1Row[JRowIndex] = dRsideMdxl;
								Jac1Col[JRowIndex] = MatrixEq + k;
								JRowIndex++;
							}
							else if (phaseStat[Ix][Iy][Iz] == (-1)) {
								//dRsideMdxg = 0;
								Jac1Row[JRowIndex] = dRsideMdxg;
								Jac1Col[JRowIndex] = MatrixEq + k;
								JRowIndex++;
							}
							else {
								//dRsideMdxl = 0;
								Jac1Row[JRowIndex] = dRsideMdxl;
								Jac1Col[JRowIndex] = MatrixEq + k;
								JRowIndex++;
								//dRsideMdxg = 0;
								Jac1Row[JRowIndex] = dRsideMdxg;
								Jac1Col[JRowIndex] = MatrixEq + Nc + k;
								JRowIndex++;
							}
							////////////////////////sadeq/////////////////////////
						}
						//jac[BLNo+Nc+i][BLNo+k]=(Vb/Dt)*porpor*sat[Ix][Iy][Iz][1]*dLsidedxl-dQdxl;
						if (fphaseStat[Ix][Iy][Iz] != -1) {
							Jac1Row[JRowIndex] = (Vb / Dt)*porpor*fsat[Ix][Iy][Iz][1] * dLsidedxl - dQdxl - dRsidedxl;
							//Jac1Row[JRowIndex]=(Vb/Dt)*porpor*sat[Ix][Iy][Iz][1]*dLsidedxl-dQdxl;
							Jac1Col[JRowIndex] = jacCol + k;
							JRowIndex++;
						}

						//jac[BLNo+Nc+i][BLNo+Nc+k]=(Vb/Dt)*porpor*sat[Ix][Iy][Iz][2]*dLsidedxg-dQdxg;
						if (fphaseStat[Ix][Iy][Iz] != 1) {
							Jac1Row[JRowIndex] = (Vb / Dt)*porpor*fsat[Ix][Iy][Iz][2] * dLsidedxg - dQdxg - dRsidedxg;
							//Jac1Row[JRowIndex]=(Vb/Dt)*porpor*sat[Ix][Iy][Iz][2]*dLsidedxg-dQdxg;
							Jac1Col[JRowIndex] = jacCol + Nc + k - reCol;
							JRowIndex++;
						}

					}
				}
				else if (BENo < (2 * Nc)) {
					LSide = (Vb / Dt)*(porpor*(fblockFProps[Ix][Iy][Iz][RO][0] * fsat[Ix][Iy][Iz][1] + fblockFProps[Ix][Iy][Iz][RO][1] * fsat[Ix][Iy][Iz][2]) - fpreProp[Ix][Iy][Iz][Nc - 1]);
					RSide = ftrans[Ix + 1][Iy + 1][Iz + 1][0][0] * (fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) - ftrans[Ix][Iy + 1][Iz + 1][0][0] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);
					RSide += ftrans[Ix + 1][Iy + 1][Iz + 1][0][1] * (fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) - ftrans[Ix + 1][Iy][Iz + 1][0][1] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);
					RSide += ftrans[Ix + 1][Iy + 1][Iz + 1][0][2] * (fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) - ftrans[Ix + 1][Iy + 1][Iz][0][2] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);
					RSide += ftrans[Ix + 1][Iy + 1][Iz + 1][1][0] * (fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]) - ftrans[Ix][Iy + 1][Iz + 1][1][0] * (fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);
					RSide += ftrans[Ix + 1][Iy + 1][Iz + 1][1][1] * (fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]) - ftrans[Ix + 1][Iy][Iz + 1][1][1] * (fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);
					RSide += ftrans[Ix + 1][Iy + 1][Iz + 1][1][2] * (fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]) - ftrans[Ix + 1][Iy + 1][Iz][1][2] * (fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);

					RSide += ftrans[Ix + 1][Iy + 1][Iz + 1][2][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - ftrans[Ix][Iy + 1][Iz + 1][2][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
					RSide += ftrans[Ix + 1][Iy + 1][Iz + 1][2][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - ftrans[Ix + 1][Iy][Iz + 1][2][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
					RSide += ftrans[Ix + 1][Iy + 1][Iz + 1][2][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]) - ftrans[Ix + 1][Iy + 1][Iz][2][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
					RSide += ftrans[Ix + 1][Iy + 1][Iz + 1][3][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - ftrans[Ix][Iy + 1][Iz + 1][3][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
					RSide += ftrans[Ix + 1][Iy + 1][Iz + 1][3][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - ftrans[Ix + 1][Iy][Iz + 1][3][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
					RSide += ftrans[Ix + 1][Iy + 1][Iz + 1][3][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]) - ftrans[Ix + 1][Iy + 1][Iz][3][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);

					///////////////////////////////////Transfer Function 

					RSide -= ZERO_CONV * SI_C *blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
					RSide -= ZERO_CONV * SI_C *blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor) / (porpor + Mporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));

					/////////////////////////////////////
					RSide += Qo + Qg;
					

					dLsidedp = (Vb / Dt)*(fsat[Ix][Iy][Iz][1] * (fblockFProps[Ix][Iy][Iz][RO][0] * dPordp + fdE[Ix][Iy][Iz][Nc][0] * porpor) + fsat[Ix][Iy][Iz][2] * (fblockFProps[Ix][Iy][Iz][RO][1] * dPordp + fdE[Ix][Iy][Iz][Nc][1] * porpor));
					dLsidedSo = (Vb / Dt)*(porpor*fblockFProps[Ix][Iy][Iz][RO][0]);
					dLsidedSg = (Vb / Dt)*(porpor*fblockFProps[Ix][Iy][Iz][RO][1]);

					dRsideMdp = 0;
					dRsidedp = 0;
					//Transfer function dRside dp mdp
					//moshtagh transfer Function jabejaie naft nesbat be feshar matrix
					dRsideMdp -= ZERO_CONV * SI_C * dE[Ix][Iy][Iz][Nc][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
					dRsideMdp -= ZERO_CONV * -SI_C * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor));
					dRsideMdp -= ZERO_CONV * -SI_C * (DiffVisco(Ix, Iy, Iz, Nc, 0) * Mporpor + MdPordp * blockFProps[Ix][Iy][Iz][BMU][0]) * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor)*(blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) * (porpor + Mporpor);
					dRsideMdp -= ZERO_CONV * SI_C * MdPordp * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / (blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					//moshtagh transfer Function jabejaie gaz nesbat be feshar matrix
					dRsideMdp -= ZERO_CONV * SI_C * dE[Ix][Iy][Iz][Nc][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor) / (porpor + Mporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));
					dRsideMdp -= ZERO_CONV * -SI_C * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor) / (porpor + Mporpor));
					dRsideMdp -= ZERO_CONV * -SI_C * (DiffVisco(Ix, Iy, Iz, Nc, 1) * Mporpor + MdPordp * blockFProps[Ix][Iy][Iz][BMU][1]) * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor)*(blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1])) * (porpor + Mporpor);
					dRsideMdp -= ZERO_CONV * SI_C * MdPordp * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / (blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));

					//moshtagh transfer Function jabejaie naft nesbat be feshar Fracture
					dRsidedp -= ZERO_CONV * SI_C * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor));
					dRsidedp -= ZERO_CONV * -SI_C * (fDiffVisco(Ix, Iy, Iz, Nc, 0) * porpor + dPordp * fblockFProps[Ix][Iy][Iz][BMU][0]) * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor)*(blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) * (porpor + Mporpor);
					dRsidedp -= ZERO_CONV * SI_C * dPordp * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / (blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					//moshtagh transfer Function jabejaie gaz nesbat be feshar Fracture
					dRsidedp -= ZERO_CONV * SI_C * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor) / (porpor + Mporpor));
					dRsidedp -= ZERO_CONV * -SI_C * (fDiffVisco(Ix, Iy, Iz, Nc, 1) * porpor + dPordp * fblockFProps[Ix][Iy][Iz][BMU][1]) * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor)*(blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1])) * (porpor + Mporpor);
					dRsidedp -= ZERO_CONV * SI_C * dPordp * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / (blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));
					//

					dRsidedp += ftrans[Ix + 1][Iy + 1][Iz + 1][0][0] + ftrans[Ix][Iy + 1][Iz + 1][0][0];
					dRsidedp += ftrans[Ix + 1][Iy + 1][Iz + 1][0][1] + ftrans[Ix + 1][Iy][Iz + 1][0][1];
					dRsidedp += ftrans[Ix + 1][Iy + 1][Iz + 1][0][2] + ftrans[Ix + 1][Iy + 1][Iz][0][2];
					dRsidedp += ftrans[Ix + 1][Iy + 1][Iz + 1][1][0] + ftrans[Ix][Iy + 1][Iz + 1][1][0];
					dRsidedp += ftrans[Ix + 1][Iy + 1][Iz + 1][1][1] + ftrans[Ix + 1][Iy][Iz + 1][1][1];
					dRsidedp += ftrans[Ix + 1][Iy + 1][Iz + 1][1][2] + ftrans[Ix + 1][Iy + 1][Iz][1][2];

					//jac[BLNo+2*Nc-1][BLNo+(2*Nc)]=PCoeff*(dLsidedp+dRsidedp);
					dMul = fDiffVisco(Ix, Iy, Iz, Nc, 0);
					dMug = fDiffVisco(Ix, Iy, Iz, Nc, 1);

					dRsidedSw = 0;
					dRsidedSg = 0;
					dRsidedSo = 0;
					dRsideMdSo = 0;
					dRsideMdSg = 0;
					dRsideMdSw = 0;
					//transfer function drside dso
					// moshtagh transfer Function jabejaie naft nesbat be So Matrix
					dRsideMdSo -= ZERO_CONV * SI_C * f_m_drelperm[1][4] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					// moshtagh transfer Function jabejaie naft nesbat be So Fracture
					dRsidedSo -= ZERO_CONV * SI_C * f_m_drelperm[1][9] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					// moshtagh transfer Function jabejaie naft nesbat be Sg Matrix
					dRsideMdSg -= ZERO_CONV * SI_C * f_m_drelperm[1][2] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					// moshtagh transfer Function jabejaie gaz nesbat be Sg Matrix
					dRsideMdSg -= ZERO_CONV * SI_C * f_m_drelperm[2][3] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor) / (porpor + Mporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));

					// moshtagh transfer Function jabejaie naft nesbat be Sg Fracture
					dRsidedSg -= ZERO_CONV * SI_C * f_m_drelperm[1][7] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					// moshtagh transfer Function jabejaie gaz nesbat be Sg Fracture
					dRsidedSg -= ZERO_CONV * SI_C * f_m_drelperm[2][8] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor) / (porpor + Mporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));

					// moshtagh transfer Function jabejaie naft nesbat be Sw Matrix
					dRsideMdSw -= ZERO_CONV * SI_C * f_m_drelperm[1][1] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					// moshtagh transfer Function jabejaie naft nesbat be Sw Fracture
					dRsidedSw -= ZERO_CONV * SI_C * f_m_drelperm[1][6] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
					//
					if (Ix<(Nx - 1)) {
						if (fphaseStat[Ix + 1][Iy][Iz]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + Iy * Nx + Ix + 1] - reCol2;

						dsw = ftrans[Ix + 1][Iy + 1][Iz + 1][4][0] * (fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) + ftrans[Ix + 1][Iy + 1][Iz + 1][6][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][0]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dso = ftrans[Ix + 1][Iy + 1][Iz + 1][10][0] * (fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) + ftrans[Ix + 1][Iy + 1][Iz + 1][11][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][0]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix + 1][Iy][Iz] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;

						dsgo = ftrans[Ix + 1][Iy + 1][Iz + 1][8][0] * (fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) + ftrans[Ix + 1][Iy + 1][Iz + 1][9][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						dsgg = ftrans[Ix + 1][Iy + 1][Iz + 1][5][0] * (fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]) + ftrans[Ix + 1][Iy + 1][Iz + 1][7][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][0]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix + 1][Iy][Iz] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][1][0]) {
							Jac1Row[JRowIndex] += (fphaseStat[Ix + 1][Iy][Iz] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;
						///////////////////////////////////////////////////////////////////
						//////////////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (fphaseStat[Ix + 1][Iy][Iz] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][RO][0] * gridDim[Ix + 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][BMU][0] * gridDim[Ix + 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][0] * gridDim[Ix] * Makhraj - dMul * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix + 1][Iy][Iz][Nc][0] * gridDim[Ix + 1] * Coef*Makhraj - fDiffVisco(Ix + 1, Iy, Iz, Nc, 0)*gridDim[Ix + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Ix] * (fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][Nc][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Ix + 1] * (fblockFProps[Ix + 1][Iy][Iz][BGAM][0] * fdE[Ix + 1][Iy][Iz][Nc][0] / fblockFProps[Ix + 1][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][BGAM][0] * gridDim[Ix + 1] * Coef) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][0]) {
							dRsidedp -= fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][1] * Moshtaq*(fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = (fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][1] * Bmoshtaq)*(fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= (fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}

						if (fphaseStat[Ix + 1][Iy][Iz] == 1) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][RO][1] * gridDim[Ix + 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][BMU][1] * gridDim[Ix + 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][1] * gridDim[Ix] * Makhraj - dMug * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix + 1][Iy][Iz][Nc][1] * gridDim[Ix + 1] * Coef*Makhraj - fDiffVisco(Ix + 1, Iy, Iz, Nc, 1)*gridDim[Ix + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Ix] * (fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][Nc][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Ix + 1] * (fblockFProps[Ix + 1][Iy][Iz][BGAM][1] * fdE[Ix + 1][Iy][Iz][Nc][1] / fblockFProps[Ix + 1][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][BGAM][1] * gridDim[Ix + 1] * Coef) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

						if (ftransS[Ix + 1][Iy + 1][Iz + 1][1][0]) {
							dRsidedp -= fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][2] * Moshtaq*(fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += (fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][2] * Bmoshtaq)*(fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= (fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);

						}
						////////////////////////////////////////////////////////////////////
						////////////////////////////////////////////////////////////////////
						Jac1Row[JRowIndex] = PCoeff * (-ftrans[Ix + 1][Iy + 1][Iz + 1][0][0] - ftrans[Ix + 1][Iy + 1][Iz + 1][1][0] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;
					}

					if (Ix>0) {
						if (fphaseStat[Ix - 1][Iy][Iz]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + Iy * Nx + Ix - 1] - reCol2;

						dsw = -ftrans[Ix][Iy + 1][Iz + 1][4][0] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]) - ftrans[Ix][Iy + 1][Iz + 1][6][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						if (!ftransS[Ix][Iy + 1][Iz + 1][0][0]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dso = -ftrans[Ix][Iy + 1][Iz + 1][10][0] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]) - ftrans[Ix][Iy + 1][Iz + 1][11][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						if (!ftransS[Ix][Iy + 1][Iz + 1][0][0]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix - 1][Iy][Iz] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;

						dsgo = -ftrans[Ix][Iy + 1][Iz + 1][8][0] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]) - ftrans[Ix][Iy + 1][Iz + 1][9][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						dsgg = -ftrans[Ix][Iy + 1][Iz + 1][5][0] * (fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]) - ftrans[Ix][Iy + 1][Iz + 1][7][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						if (!ftransS[Ix][Iy + 1][Iz + 1][0][0]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix - 1][Iy][Iz] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}
						if (!ftransS[Ix][Iy + 1][Iz + 1][1][0]) {
							Jac1Row[JRowIndex] += (fphaseStat[Ix - 1][Iy][Iz] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;
						////////////////////////////////////////////////////////
						//////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (fphaseStat[Ix - 1][Iy][Iz] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][RO][0] * gridDim[Ix - 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][BMU][0] * gridDim[Ix - 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][0] * gridDim[Ix] * Makhraj - dMul * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix - 1][Iy][Iz][Nc][0] * gridDim[Ix - 1] * Coef*Makhraj - fDiffVisco(Ix - 1, Iy, Iz, Nc, 0)*gridDim[Ix - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Ix] * (fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][Nc][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Ix - 1] * (fblockFProps[Ix - 1][Iy][Iz][BGAM][0] * fdE[Ix - 1][Iy][Iz][Nc][0] / fblockFProps[Ix - 1][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][BGAM][0] * gridDim[Ix - 1] * Coef) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

						if (ftransS[Ix][Iy + 1][Iz + 1][0][0]) {
							dRsidedp += (fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);
							dBsidedp = -fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);

							dRsidedp += (fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][1])*(Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
							dBsidedp -= fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp += fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][1] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);
							dBsidedp = -(fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);

							dRsidedp += fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
							dBsidedp -= (fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][1])*(Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						}

						if (fphaseStat[Ix - 1][Iy][Iz] == 1) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][RO][1] * gridDim[Ix - 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][BMU][1] * gridDim[Ix - 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][1] * gridDim[Ix] * Makhraj - dMug * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix - 1][Iy][Iz][Nc][1] * gridDim[Ix - 1] * Coef*Makhraj - fDiffVisco(Ix - 1, Iy, Iz, Nc, 1)*gridDim[Ix - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Ix] * (fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][Nc][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Ix - 1] * (fblockFProps[Ix - 1][Iy][Iz][BGAM][1] * fdE[Ix - 1][Iy][Iz][Nc][1] / fblockFProps[Ix - 1][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][BGAM][1] * gridDim[Ix - 1] * Coef) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

						if (ftransS[Ix][Iy + 1][Iz + 1][1][0]) {
							dRsidedp += (fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);
							dBsidedp -= fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);

							dRsidedp += (fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
							dBsidedp -= fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp += fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][2] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);
							dBsidedp -= (fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);

							dRsidedp += fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
							dBsidedp -= (fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						}
						///////////////////////////////////////////////////////////
						///////////////////////////////////////////////////////////
						Jac1Row[JRowIndex] = PCoeff * (-ftrans[Ix][Iy + 1][Iz + 1][0][0] - ftrans[Ix][Iy + 1][Iz + 1][1][0] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;
					}


					if (Iy<(Ny - 1)) {
						if (fphaseStat[Ix][Iy + 1][Iz]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + (Iy + 1)*Nx + Ix] - reCol2;

						dsw = ftrans[Ix + 1][Iy + 1][Iz + 1][4][1] * (fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) + ftrans[Ix + 1][Iy + 1][Iz + 1][6][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dso = ftrans[Ix + 1][Iy + 1][Iz + 1][10][1] * (fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) + ftrans[Ix + 1][Iy + 1][Iz + 1][11][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix][Iy + 1][Iz] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;

						dsgo = ftrans[Ix + 1][Iy + 1][Iz + 1][8][1] * (fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) + ftrans[Ix + 1][Iy + 1][Iz + 1][9][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						dsgg = ftrans[Ix + 1][Iy + 1][Iz + 1][5][1] * (fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]) + ftrans[Ix + 1][Iy + 1][Iz + 1][7][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix][Iy + 1][Iz] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][1][1]) {
							Jac1Row[JRowIndex] += (fphaseStat[Ix][Iy + 1][Iz] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;
						//////////////////////////////////////////////////////////////////////////////
						/////////////////////////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (fphaseStat[Ix][Iy + 1][Iz] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][RO][0] * gridDim[Nx + Iy + 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][BMU][0] * gridDim[Nx + Iy + 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Iy] * Makhraj - dMul * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix][Iy + 1][Iz][Nc][0] * gridDim[Nx + Iy + 1] * Coef*Makhraj - fDiffVisco(Ix, Iy + 1, Iz, Nc, 0)*gridDim[Nx + Iy + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Iy] * (fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][Nc][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Iy + 1] * (fblockFProps[Ix][Iy + 1][Iz][BGAM][0] * fdE[Ix][Iy + 1][Iz][Nc][0] / fblockFProps[Ix][Iy + 1][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][BGAM][0] * gridDim[Nx + Iy + 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][1]) {
							dRsidedp -= fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][1] * Moshtaq*(fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = (fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= (fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}

						if (fphaseStat[Ix][Iy + 1][Iz] == 1) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][RO][1] * gridDim[Nx + Iy + 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][BMU][1] * gridDim[Nx + Iy + 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Iy] * Makhraj - dMug * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix][Iy + 1][Iz][Nc][1] * gridDim[Nx + Iy + 1] * Coef*Makhraj - fDiffVisco(Ix, Iy + 1, Iz, Nc, 1)*gridDim[Nx + Iy + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Iy] * (fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][Nc][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Iy + 1] * (fblockFProps[Ix][Iy + 1][Iz][BGAM][1] * fdE[Ix][Iy + 1][Iz][Nc][1] / fblockFProps[Ix][Iy + 1][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][BGAM][1] * gridDim[Nx + Iy + 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

						if (ftransS[Ix + 1][Iy + 1][Iz + 1][1][1]) {
							dRsidedp -= fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][2] * Moshtaq*(fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += (fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= (fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}

						/////////////////////////////////////////////////////////////////////////////
						/////////////////////////////////////////////////////////////////////////////
						Jac1Row[JRowIndex] = PCoeff * (-ftrans[Ix + 1][Iy + 1][Iz + 1][0][1] - ftrans[Ix + 1][Iy + 1][Iz + 1][1][1] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;
					}
					if (Iy>0) {
						if (fphaseStat[Ix][Iy - 1][Iz]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + (Iy - 1)*Nx + Ix + 1] - reCol2;

						dsw = -ftrans[Ix + 1][Iy][Iz + 1][4][1] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]) - ftrans[Ix + 1][Iy][Iz + 1][6][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						if (!ftransS[Ix + 1][Iy][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dso = -ftrans[Ix + 1][Iy][Iz + 1][10][1] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]) - ftrans[Ix + 1][Iy][Iz + 1][11][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						if (!ftransS[Ix + 1][Iy][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix][Iy - 1][Iz] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;

						dsgo = -ftrans[Ix + 1][Iy][Iz + 1][8][1] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]) - ftrans[Ix + 1][Iy][Iz + 1][9][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						dsgg = -ftrans[Ix + 1][Iy][Iz + 1][5][1] * (fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]) - ftrans[Ix + 1][Iy][Iz + 1][7][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						if (!ftransS[Ix + 1][Iy][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix][Iy - 1][Iz] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}
						if (!ftransS[Ix + 1][Iy][Iz + 1][1][1]) {
							Jac1Row[JRowIndex] += (fphaseStat[Ix][Iy - 1][Iz] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;


						//////////////////////////////////////////////////////////////////
						/////////////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (fphaseStat[Ix][Iy - 1][Iz] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][RO][0] * gridDim[Nx + Iy - 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][BMU][0] * gridDim[Nx + Iy - 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Iy] * Makhraj - dMul * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix][Iy - 1][Iz][Nc][0] * gridDim[Nx + Iy - 1] * Coef*Makhraj - fDiffVisco(Ix, Iy - 1, Iz, Nc, 0)*gridDim[Nx + Iy - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Iy] * (fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][Nc][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Iy - 1] * (fblockFProps[Ix][Iy - 1][Iz][BGAM][0] * fdE[Ix][Iy - 1][Iz][Nc][0] / fblockFProps[Ix][Iy - 1][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][BGAM][0] * gridDim[Nx + Iy - 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

						if (ftransS[Ix + 1][Iy][Iz + 1][0][1]) {
							dRsidedp += (fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);
							dBsidedp = -fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);

							dRsidedp += (fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][1])*(Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
							dBsidedp -= fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						}
						else {
							dRsidedp += fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][1] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);
							dBsidedp = -(fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);

							dRsidedp += fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
							dBsidedp = -(fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][1])*(Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						}

						if (fphaseStat[Ix][Iy - 1][Iz] == 1) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][RO][1] * gridDim[Nx + Iy - 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][BMU][1] * gridDim[Nx + Iy - 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Iy] * Makhraj - dMug * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix][Iy - 1][Iz][Nc][1] * gridDim[Nx + Iy - 1] * Coef*Makhraj - fDiffVisco(Ix, Iy - 1, Iz, Nc, 1)*gridDim[Nx + Iy - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Iy] * (fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][Nc][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Iy - 1] * (fblockFProps[Ix][Iy - 1][Iz][BGAM][1] * fdE[Ix][Iy - 1][Iz][Nc][1] / fblockFProps[Ix][Iy - 1][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][BGAM][1] * gridDim[Nx + Iy - 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

						if (ftransS[Ix + 1][Iy][Iz + 1][1][1]) {
							dRsidedp += (fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);
							dBsidedp -= fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);

							dRsidedp += (fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
							dBsidedp -= fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						}
						else {
							dRsidedp += fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][2] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);
							dBsidedp = -(fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);

							dRsidedp += fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
							dBsidedp -= (fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						}
						///////////////////////////////////////////////////////////////////
						//////////////////////////////////////////////////////////////////
						Jac1Row[JRowIndex] = PCoeff * (-ftrans[Ix + 1][Iy][Iz + 1][0][1] - ftrans[Ix + 1][Iy][Iz + 1][1][1] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;
					}

					if (Iz<(Nz - 1)) {
						if (fphaseStat[Ix][Iy][Iz + 1]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[Nx*Ny*Nz + (Iz + 1)*(Nx*Ny) + Iy * Nx + Ix] - reCol2;

						dsw = ftrans[Ix + 1][Iy + 1][Iz + 1][4][2] * (fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) + ftrans[Ix + 1][Iy + 1][Iz + 1][6][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][2]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dso = ftrans[Ix + 1][Iy + 1][Iz + 1][10][2] * (fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) + ftrans[Ix + 1][Iy + 1][Iz + 1][11][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][2]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix][Iy][Iz + 1] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;

						dsgo = ftrans[Ix + 1][Iy + 1][Iz + 1][8][2] * (fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) + ftrans[Ix + 1][Iy + 1][Iz + 1][9][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						dsgg = ftrans[Ix + 1][Iy + 1][Iz + 1][5][2] * (fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]) + ftrans[Ix + 1][Iy + 1][Iz + 1][7][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][2]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix][Iy][Iz + 1] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][1][2]) {
							Jac1Row[JRowIndex] += (fphaseStat[Ix][Iy][Iz + 1] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;
						///////////////////////////////////////////////////////////////////////////
						////////////////////////////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (fphaseStat[Ix][Iy][Iz + 1] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][RO][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][BMU][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Ny + Iz] * Makhraj - dMul * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix][Iy][Iz + 1][Nc][0] * gridDim[Nx + Ny + Iz + 1] * Coef*Makhraj - fDiffVisco(Ix, Iy, Iz + 1, Nc, 0)*gridDim[Nx + Ny + Iz + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Ny + Iz] * (fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][Nc][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz + 1] * (fblockFProps[Ix][Iy][Iz + 1][BGAM][0] * fdE[Ix][Iy][Iz + 1][Nc][0] / fblockFProps[Ix][Iy][Iz + 1][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][BGAM][0] * gridDim[Nx + Ny + Iz + 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][2]) {
							dRsidedp -= fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][1] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = (fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= (fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}

						if (fphaseStat[Ix][Iy][Iz + 1] == 1) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][RO][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][BMU][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Ny + Iz] * Makhraj - dMug * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix][Iy][Iz + 1][Nc][1] * gridDim[Nx + Ny + Iz + 1] * Coef*Makhraj - fDiffVisco(Ix, Iy, Iz + 1, Nc, 1)*gridDim[Nx + Ny + Iz + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Ny + Iz] * (fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][Nc][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz + 1] * (fblockFProps[Ix][Iy][Iz + 1][BGAM][1] * fdE[Ix][Iy][Iz + 1][Nc][1] / fblockFProps[Ix][Iy][Iz + 1][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][BGAM][1] * gridDim[Nx + Ny + Iz + 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

						if (ftransS[Ix + 1][Iy + 1][Iz + 1][1][2]) {
							dRsidedp -= fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][2] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += (fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= (fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						///////////////////////////////////////////////////////////////////////////////
						//////////////////////////////////////////////////////////////////////////////

						Jac1Row[JRowIndex] = PCoeff * (-ftrans[Ix + 1][Iy + 1][Iz + 1][0][2] - ftrans[Ix + 1][Iy + 1][Iz + 1][1][2] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;
					}

					if (Iz>0) {
						if (fphaseStat[Ix][Iy][Iz - 1]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[Nx*Ny*Nz + (Iz - 1)*(Nx*Ny) + Iy * Nx + Ix + 1] - reCol2;

						dsw = -ftrans[Ix + 1][Iy + 1][Iz][4][2] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]) - ftrans[Ix + 1][Iy + 1][Iz][6][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						if (!ftransS[Ix + 1][Iy + 1][Iz][0][2]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dso = -ftrans[Ix + 1][Iy + 1][Iz][10][2] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]) - ftrans[Ix + 1][Iy + 1][Iz][11][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						if (!ftransS[Ix + 1][Iy + 1][Iz][0][2]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix][Iy][Iz - 1] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;

						dsgo = -ftrans[Ix + 1][Iy + 1][Iz][8][2] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]) - ftrans[Ix + 1][Iy + 1][Iz][9][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						dsgg = -ftrans[Ix + 1][Iy + 1][Iz][5][2] * (fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]) - ftrans[Ix + 1][Iy + 1][Iz][7][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						if (!ftransS[Ix + 1][Iy + 1][Iz][0][2]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix][Iy][Iz - 1] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}
						if (!ftransS[Ix + 1][Iy + 1][Iz][1][2]) {
							Jac1Row[JRowIndex] += (fphaseStat[Ix][Iy][Iz - 1] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;
						///////////////////////////////////////////////////////////////
						///////////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (fphaseStat[Ix][Iy][Iz - 1] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][RO][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][BMU][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Ny + Iz] * Makhraj - dMul * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix][Iy][Iz - 1][Nc][0] * gridDim[Nx + Ny + Iz - 1] * Coef*Makhraj - fDiffVisco(Ix, Iy, Iz - 1, Nc, 0)*gridDim[Nx + Ny + Iz - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Ny + Iz] * (fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][Nc][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz - 1] * (fblockFProps[Ix][Iy][Iz - 1][BGAM][0] * fdE[Ix][Iy][Iz - 1][Nc][0] / fblockFProps[Ix][Iy][Iz - 1][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][BGAM][0] * gridDim[Nx + Ny + Iz - 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

						if (ftransS[Ix + 1][Iy + 1][Iz][0][2]) {
							dRsidedp += (fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);
							dBsidedp = -fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);

							dRsidedp += (fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][1])*(Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							dBsidedp -= fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						}
						else {
							dRsidedp += fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][1] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);
							dBsidedp = -(fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);

							dRsidedp += fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							dBsidedp -= (fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][1])*(Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						}

						if (fphaseStat[Ix][Iy][Iz - 1] == 1) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][RO][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][BMU][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Ny + Iz] * Makhraj - dMug * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix][Iy][Iz - 1][Nc][1] * gridDim[Nx + Ny + Iz - 1] * Coef*Makhraj - fDiffVisco(Ix, Iy, Iz - 1, Nc, 1)*gridDim[Nx + Ny + Iz - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Ny + Iz] * (fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][Nc][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz - 1] * (fblockFProps[Ix][Iy][Iz - 1][BGAM][1] * fdE[Ix][Iy][Iz - 1][Nc][1] / fblockFProps[Ix][Iy][Iz - 1][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][BGAM][1] * gridDim[Nx + Ny + Iz - 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

						if (ftransS[Ix + 1][Iy + 1][Iz][1][2]) {
							dRsidedp += (fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);
							dBsidedp -= fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);

							dRsidedp += (fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							dBsidedp -= fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						}
						else {
							dRsidedp += fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][2] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);
							dBsidedp -= (fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);

							dRsidedp += fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							dBsidedp -= (fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						}
						//////////////////////////////////////////////////////////////////
						//////////////////////////////////////////////////////////////////
						Jac1Row[JRowIndex] = PCoeff * (-ftrans[Ix + 1][Iy + 1][Iz][0][2] - ftrans[Ix + 1][Iy + 1][Iz][1][2] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;
					}

					Jac1Row[JRowIndex] = PCoeff * (dLsidedp + dRsidedp + PIo + PIg);
					Jac1Col[JRowIndex] = jacCol + (2 * Nc) - reCol;
					JRowIndex++;



					if (fphaseStat[Ix][Iy][Iz] != -1) {
						Jac1Row[JRowIndex] = -dRsidedSw;
						Jac1Col[JRowIndex] = jacCol + (2 * Nc + 1) - reCol;
						JRowIndex++;

						Jac1Row[JRowIndex] = dLsidedSo - dRsidedSo;
						Jac1Col[JRowIndex] = jacCol + (2 * Nc + 2) - reCol;
						JRowIndex++;
					}

					if (fphaseStat[Ix][Iy][Iz] != 1) {
						Jac1Row[JRowIndex] = dLsidedSg - dRsidedSg;
						Jac1Col[JRowIndex] = jacCol + (2 * Nc + 3) - reCol - reCol3;
						JRowIndex++;
					}
					//////////////////////////////////////////////


					/////////////////////////////////////////////////Sadeq///////////////////////////////////
					if (phaseStat[Ix][Iy][Iz] == 1) {
						//dRsideMdSo = 0;
						Jac1Row[JRowIndex] = dRsideMdSo;
						Jac1Col[JRowIndex] = MatrixEq + 2 * Nc + 2 - reColF1;
						JRowIndex++;
					}
					else if (phaseStat[Ix][Iy][Iz] == (-1)) {
						//dRsideMdSg = 0;
						Jac1Row[JRowIndex] = dRsideMdSg;
						Jac1Col[JRowIndex] = MatrixEq + 2 * Nc + 2 - reColF1;
						JRowIndex++;
					}
					else {
						//dRsideMdSo = 0;
						Jac1Row[JRowIndex] = dRsideMdSo;
						Jac1Col[JRowIndex] = MatrixEq + 2 * Nc + 2 - reColF1;
						JRowIndex++;
						//dRsideMdSg = 0;
						Jac1Row[JRowIndex] = dRsideMdSg;
						Jac1Col[JRowIndex] = MatrixEq + 2 * Nc + 3 - reColF1;
						JRowIndex++;
					}
					//dRsideMdp = 0;
					Jac1Row[JRowIndex] = PCoeff * dRsideMdp;
					Jac1Col[JRowIndex] = MatrixEq + 2 * Nc - reColF1;
					JRowIndex++;
					//dRsideMdSw = 0;
					Jac1Row[JRowIndex] = dRsideMdSw;
					Jac1Col[JRowIndex] = MatrixEq + 2 * Nc + 1 - reColF1;
					JRowIndex++;
					//////////////////////////Sadeq///////////////////////////////


					for (k = 0; k<Nc; k++) {
						dRsidedxl = 0;
						dRsidedxg = 0;
						dRsideMdxl = 0;
						dRsideMdxg = 0;


						dLsidedxl = fdE[Ix][Iy][Iz][k][0];
						dLsidedxg = fdE[Ix][Iy][Iz][k][1];
						dQdxl = 0;
						dQdxg = 0;

						dMul = fDiffVisco(Ix, Iy, Iz, k, 0);
						dMug = fDiffVisco(Ix, Iy, Iz, k, 1);
						// Transfer function dRside dxl
						// moshtagh transfer Function jabejaie naft nesbat be xl Matrix
						dRsideMdxl -= ZERO_CONV * SI_C * dE[Ix][Iy][Iz][k][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
						dRsideMdxl -= ZERO_CONV * -SI_C * DiffVisco(Ix, Iy, Iz, k, 0) * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] * Mporpor / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor)*(blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) * (porpor + Mporpor);

						// moshtagh transfer Function jabejaie naft nesbat be xl Fracture
						dRsidedxl -= ZERO_CONV * -SI_C * fDiffVisco(Ix, Iy, Iz, k, 0) * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] * porpor / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor)*(blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) * (porpor + Mporpor);

						// moshtagh transfer Function jabejaie gaz nesbat be xg Matrix
						dRsideMdxg -= ZERO_CONV * SI_C * dE[Ix][Iy][Iz][k][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor) / (porpor + Mporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));
						dRsideMdxg -= ZERO_CONV * -SI_C * DiffVisco(Ix, Iy, Iz, k, 1) * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] * Mporpor / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor)*(blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1])) * (porpor + Mporpor);

						// moshtagh transfer Function jabejaie gaz nesbat be xg Fracture
						dRsidedxg -= ZERO_CONV * -SI_C * fDiffVisco(Ix, Iy, Iz, k, 1) * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] * porpor / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor)*(blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1])) * (porpor + Mporpor);
						//

						if (Ix<(Nx - 1)) {
							if (fphaseStat[Ix + 1][Iy][Iz] == (-1)) Coef = 0;
							else Coef = 1;

							Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][RO][0] * gridDim[Ix + 1] * Coef;
							Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][BMU][0] * gridDim[Ix + 1] * Coef;
							Moshtaq = (fdE[Ix][Iy][Iz][k][0] * gridDim[Ix] * Makhraj - dMul * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (fdE[Ix + 1][Iy][Iz][k][0] * gridDim[Ix + 1] * Coef*Makhraj - fDiffVisco(Ix + 1, Iy, Iz, k, 0)*gridDim[Ix + 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Ix] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][k][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Ix + 1] * (G_ACCG*fblockFProps[Ix + 1][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix + 1][Iy][Iz][BGAM][0] * fdE[Ix + 1][Iy][Iz][k][0] / fblockFProps[Ix + 1][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

							tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][BGAM][0] * gridDim[Ix + 1] * Coef) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

							if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][0]) {
								dRsidedxl += fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][1] * Moshtaq*(fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
								dBsidedxl = (fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][1] * Bmoshtaq)*(fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

								//dRsidedxl+=IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								//dBsidedxl+=(IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
							}
							else {
								dRsidedxl += (fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
								dBsidedxl = fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

								//dRsidedxl+=(IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								//dBsidedxl+=IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
							}

							mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + Iy * Nx + Ix + 1];
							Jac1Row[JRowIndex] = -dBsidedxl * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo + k;
							JRowIndex++;


							if (fphaseStat[Ix + 1][Iy][Iz] == 1) Coef = 0;
							else Coef = 1;

							Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][RO][1] * gridDim[Ix + 1] * Coef;
							Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][BMU][1] * gridDim[Ix + 1] * Coef;
							Moshtaq = (fdE[Ix][Iy][Iz][k][1] * gridDim[Ix] * Makhraj - dMug * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (fdE[Ix + 1][Iy][Iz][k][1] * gridDim[Ix + 1] * Coef*Makhraj - fDiffVisco(Ix + 1, Iy, Iz, k, 1)*gridDim[Ix + 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Ix] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][k][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Ix + 1] * (G_ACCG*fblockFProps[Ix + 1][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix + 1][Iy][Iz][BGAM][1] * fdE[Ix + 1][Iy][Iz][k][1] / fblockFProps[Ix + 1][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

							tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][BGAM][1] * gridDim[Ix + 1] * Coef) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

							if (ftransS[Ix + 1][Iy + 1][Iz + 1][1][0]) {
								dRsidedxg += fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][2] * Moshtaq*(fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
								dBsidedxg = (fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][2] * Bmoshtaq)*(fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

								//dRsidedxg+=IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								//dBsidedxg+=(IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
							}
							else {
								dRsidedxg += (fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
								dBsidedxg = fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

								//dRsidedxg+=(IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								//dBsidedxg+=IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);

							}

							if (fphaseStat[Ix + 1][Iy][Iz]) reCol2 = Nc;
							else reCol2 = 0;
							Jac1Row[JRowIndex] = -dBsidedxg * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
							JRowIndex++;
						}

						if (Ix>0) {
							if (fphaseStat[Ix - 1][Iy][Iz] == (-1)) Coef = 0;
							else Coef = 1;

							Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][RO][0] * gridDim[Ix - 1] * Coef;
							Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][BMU][0] * gridDim[Ix - 1] * Coef;
							Moshtaq = (fdE[Ix][Iy][Iz][k][0] * gridDim[Ix] * Makhraj - dMul * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (fdE[Ix - 1][Iy][Iz][k][0] * gridDim[Ix - 1] * Coef*Makhraj - fDiffVisco(Ix - 1, Iy, Iz, k, 0)*gridDim[Ix - 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Ix] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][k][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Ix - 1] * (G_ACCG*fblockFProps[Ix - 1][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix - 1][Iy][Iz][BGAM][0] * fdE[Ix - 1][Iy][Iz][k][0] / fblockFProps[Ix - 1][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

							tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][BGAM][0] * gridDim[Ix - 1] * Coef) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

							if (ftransS[Ix][Iy + 1][Iz + 1][0][0]) {
								dRsidedxl -= (fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);
								dBsidedxl = -fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);

								//dRsidedxl-=(IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1])*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								//dBsidedxl-=IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
							}
							else {
								dRsidedxl -= fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][1] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);
								dBsidedxl = -(fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);

								//dRsidedxl-=IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								//dBsidedxl-=(IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][1])*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
							}

							mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + Iy * Nx + Ix - 1];
							Jac1Row[JRowIndex] = -dBsidedxl * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo + k;
							JRowIndex++;


							if (fphaseStat[Ix - 1][Iy][Iz] == 1) Coef = 0;
							else Coef = 1;

							Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][RO][1] * gridDim[Ix - 1] * Coef;
							Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][BMU][1] * gridDim[Ix - 1] * Coef;
							Moshtaq = (fdE[Ix][Iy][Iz][k][1] * gridDim[Ix] * Makhraj - dMug * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (fdE[Ix - 1][Iy][Iz][k][1] * gridDim[Ix - 1] * Coef*Makhraj - fDiffVisco(Ix - 1, Iy, Iz, k, 1)*gridDim[Ix - 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Ix] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][k][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Ix - 1] * (G_ACCG*fblockFProps[Ix - 1][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix - 1][Iy][Iz][BGAM][1] * fdE[Ix - 1][Iy][Iz][k][1] / fblockFProps[Ix - 1][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

							tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][BGAM][1] * gridDim[Ix - 1] * Coef) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

							if (ftransS[Ix][Iy + 1][Iz + 1][1][0]) {
								dRsidedxg -= (fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);
								dBsidedxg = -fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);

								//dRsidedxg-=(IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								//dBsidedxg-=IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
							}
							else {
								dRsidedxg -= fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][2] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);
								dBsidedxg = -(fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);

								//dRsidedxg-=IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								//dBsidedxg-=(IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
							}


							if (fphaseStat[Ix - 1][Iy][Iz]) reCol2 = Nc;
							else reCol2 = 0;
							Jac1Row[JRowIndex] = -dBsidedxg * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
							JRowIndex++;
						}

						if (Iy<(Ny - 1)) {
							if (fphaseStat[Ix][Iy + 1][Iz] == (-1)) Coef = 0;
							else Coef = 1;

							Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][RO][0] * gridDim[Nx + Iy + 1] * Coef;
							Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][BMU][0] * gridDim[Nx + Iy + 1] * Coef;
							Moshtaq = (fdE[Ix][Iy][Iz][k][0] * gridDim[Nx + Iy] * Makhraj - dMul * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (fdE[Ix][Iy + 1][Iz][k][0] * gridDim[Nx + Iy + 1] * Coef*Makhraj - fDiffVisco(Ix, Iy + 1, Iz, k, 0)*gridDim[Nx + Iy + 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][k][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Nx + Iy + 1] * (G_ACCG*fblockFProps[Ix][Iy + 1][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy + 1][Iz][BGAM][0] * fdE[Ix][Iy + 1][Iz][k][0] / fblockFProps[Ix][Iy + 1][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

							tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][BGAM][0] * gridDim[Nx + Iy + 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

							if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][1]) {
								dRsidedxl += fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][1] * Moshtaq*(fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
								dBsidedxl = (fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

								//dRsidedxl+=IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								//dBsidedxl+=(IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
							}
							else {
								dRsidedxl += (fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
								dBsidedxl = fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

								//dRsidedxl+=(IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								//dBsidedxl+=IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
							}

							mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + (Iy + 1)*Nx + Ix];
							Jac1Row[JRowIndex] = -dBsidedxl * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo + k;
							JRowIndex++;


							if (fphaseStat[Ix][Iy + 1][Iz] == 1) Coef = 0;
							else Coef = 1;

							Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][RO][1] * gridDim[Nx + Iy + 1] * Coef;
							Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][BMU][1] * gridDim[Nx + Iy + 1] * Coef;
							Moshtaq = (fdE[Ix][Iy][Iz][k][1] * gridDim[Nx + Iy] * Makhraj - dMug * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (fdE[Ix][Iy + 1][Iz][k][1] * gridDim[Nx + Iy + 1] * Coef*Makhraj - fDiffVisco(Ix, Iy + 1, Iz, k, 1)*gridDim[Nx + Iy + 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][k][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Nx + Iy + 1] * (G_ACCG*fblockFProps[Ix][Iy + 1][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy + 1][Iz][BGAM][1] * fdE[Ix][Iy + 1][Iz][k][1] / fblockFProps[Ix][Iy + 1][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

							tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][BGAM][1] * gridDim[Nx + Iy + 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

							if (ftransS[Ix + 1][Iy + 1][Iz + 1][1][1]) {
								dRsidedxg += fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][2] * Moshtaq*(fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
								dBsidedxg = (fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

								//dRsidedxg+=IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								//dBsidedxg+=(IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
							}
							else {
								dRsidedxg += (fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
								dBsidedxg = fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

								//dRsidedxg+=(IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								//dBsidedxg+=IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);

							}

							if (fphaseStat[Ix][Iy + 1][Iz]) reCol2 = Nc;
							else reCol2 = 0;
							Jac1Row[JRowIndex] = -dBsidedxg * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
							JRowIndex++;
						}

						if (Iy>0) {
							if (fphaseStat[Ix][Iy - 1][Iz] == (-1)) Coef = 0;
							else Coef = 1;

							Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][RO][0] * gridDim[Nx + Iy - 1] * Coef;
							Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][BMU][0] * gridDim[Nx + Iy - 1] * Coef;
							Moshtaq = (fdE[Ix][Iy][Iz][k][0] * gridDim[Nx + Iy] * Makhraj - dMul * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (fdE[Ix][Iy - 1][Iz][k][0] * gridDim[Nx + Iy - 1] * Coef*Makhraj - fDiffVisco(Ix, Iy - 1, Iz, k, 0)*gridDim[Nx + Iy - 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][k][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Nx + Iy - 1] * (G_ACCG*fblockFProps[Ix][Iy - 1][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy - 1][Iz][BGAM][0] * fdE[Ix][Iy - 1][Iz][k][0] / fblockFProps[Ix][Iy - 1][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

							tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][BGAM][0] * gridDim[Nx + Iy - 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

							if (ftransS[Ix + 1][Iy][Iz + 1][0][1]) {
								dRsidedxl -= (fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);
								dBsidedxl = -fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);

								//dRsidedxl-=(IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][1])*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								//dBsidedxl-=IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
							}
							else {
								dRsidedxl -= fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][1] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);
								dBsidedxl = -(fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);

								//dRsidedxl-=IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								//dBsidedxl-=(IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][1])*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
							}

							mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + (Iy - 1)*Nx + Ix];
							Jac1Row[JRowIndex] = -dBsidedxl * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo + k;
							JRowIndex++;


							if (fphaseStat[Ix][Iy - 1][Iz] == 1) Coef = 0;
							else Coef = 1;

							Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][RO][1] * gridDim[Nx + Iy - 1] * Coef;
							Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][BMU][1] * gridDim[Nx + Iy - 1] * Coef;
							Moshtaq = (fdE[Ix][Iy][Iz][k][1] * gridDim[Nx + Iy] * Makhraj - dMug * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (fdE[Ix][Iy - 1][Iz][k][1] * gridDim[Nx + Iy - 1] * Coef*Makhraj - fDiffVisco(Ix, Iy - 1, Iz, k, 1)*gridDim[Nx + Iy - 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][k][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Nx + Iy - 1] * (G_ACCG*fblockFProps[Ix][Iy - 1][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy - 1][Iz][BGAM][1] * fdE[Ix][Iy - 1][Iz][k][1] / fblockFProps[Ix][Iy - 1][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

							tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][BGAM][1] * gridDim[Nx + Iy - 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

							if (ftransS[Ix + 1][Iy][Iz + 1][1][1]) {
								dRsidedxg -= (fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);
								dBsidedxg = -fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);

								//dRsidedxg-=(IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								//dBsidedxg-=IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
							}
							else {
								dRsidedxg -= fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][2] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);
								dBsidedxg = -(fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);

								//dRsidedxg-=IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								//dBsidedxg-=(IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
							}


							if (fphaseStat[Ix][Iy - 1][Iz]) reCol2 = Nc;
							else reCol2 = 0;
							Jac1Row[JRowIndex] = -dBsidedxg * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
							JRowIndex++;
						}

						if (Iz<(Nz - 1)) {
							if (fphaseStat[Ix][Iy][Iz + 1] == (-1)) Coef = 0;
							else Coef = 1;

							Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][RO][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
							Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][BMU][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
							Moshtaq = (fdE[Ix][Iy][Iz][k][0] * gridDim[Nx + Ny + Iz] * Makhraj - dMul * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (fdE[Ix][Iy][Iz + 1][k][0] * gridDim[Nx + Ny + Iz + 1] * Coef*Makhraj - fDiffVisco(Ix, Iy, Iz + 1, k, 0)*gridDim[Nx + Ny + Iz + 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][k][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz + 1] * (G_ACCG*fblockFProps[Ix][Iy][Iz + 1][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz + 1][BGAM][0] * fdE[Ix][Iy][Iz + 1][k][0] / fblockFProps[Ix][Iy][Iz + 1][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

							tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][BGAM][0] * gridDim[Nx + Ny + Iz + 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

							if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][2]) {
								dRsidedxl += fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][1] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
								dBsidedxl = (fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

								dRsidedxl += fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
								dBsidedxl += (fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							}
							else {
								dRsidedxl += (fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
								dBsidedxl = fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

								dRsidedxl += (fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
								dBsidedxl += fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							}

							mBLNo = preConRow[Nx*Ny*Nz + (Iz + 1)*(Nx*Ny) + Iy * Nx + Ix];
							Jac1Row[JRowIndex] = -dBsidedxl * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo + k;
							JRowIndex++;


							if (fphaseStat[Ix][Iy][Iz + 1] == 1) Coef = 0;
							else Coef = 1;

							Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][RO][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
							Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][BMU][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
							Moshtaq = (fdE[Ix][Iy][Iz][k][1] * gridDim[Nx + Ny + Iz] * Makhraj - dMug * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (fdE[Ix][Iy][Iz + 1][k][1] * gridDim[Nx + Ny + Iz + 1] * Coef*Makhraj - fDiffVisco(Ix, Iy, Iz + 1, k, 1)*gridDim[Nx + Ny + Iz + 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][k][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz + 1] * (G_ACCG*fblockFProps[Ix][Iy][Iz + 1][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz + 1][BGAM][1] * fdE[Ix][Iy][Iz + 1][k][1] / fblockFProps[Ix][Iy][Iz + 1][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

							tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][BGAM][1] * gridDim[Nx + Ny + Iz + 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

							if (ftransS[Ix + 1][Iy + 1][Iz + 1][1][2]) {
								dRsidedxg += fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][2] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
								dBsidedxg = (fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

								dRsidedxg += fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
								dBsidedxg += (fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							}
							else {
								dRsidedxg += (fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
								dBsidedxg = fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

								dRsidedxg += (fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
								dBsidedxg += fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);

							}

							if (fphaseStat[Ix][Iy][Iz + 1]) reCol2 = Nc;
							else reCol2 = 0;
							Jac1Row[JRowIndex] = -dBsidedxg * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
							JRowIndex++;
						}

						if (Iz>0) {
							if (fphaseStat[Ix][Iy][Iz - 1] == (-1)) Coef = 0;
							else Coef = 1;

							Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][RO][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
							Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][BMU][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
							Moshtaq = (fdE[Ix][Iy][Iz][k][0] * gridDim[Nx + Ny + Iz] * Makhraj - dMul * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (fdE[Ix][Iy][Iz - 1][k][0] * gridDim[Nx + Ny + Iz - 1] * Coef*Makhraj - fDiffVisco(Ix, Iy, Iz - 1, k, 0)*gridDim[Nx + Ny + Iz - 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][k][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz - 1] * (G_ACCG*fblockFProps[Ix][Iy][Iz - 1][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz - 1][BGAM][0] * fdE[Ix][Iy][Iz - 1][k][0] / fblockFProps[Ix][Iy][Iz - 1][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

							tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][BGAM][0] * gridDim[Nx + Ny + Iz - 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

							if (ftransS[Ix + 1][Iy + 1][Iz][0][2]) {
								dRsidedxl -= (fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);
								dBsidedxl = -fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);

								dRsidedxl -= (fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][1])*(Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								dBsidedxl -= fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							}
							else {
								dRsidedxl -= fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][1] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);
								dBsidedxl = -(fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);

								dRsidedxl -= fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								dBsidedxl -= (fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][1])*(Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							}

							mBLNo = preConRow[Nx*Ny*Nz + (Iz - 1)*(Nx*Ny) + Iy * Nx + Ix];
							Jac1Row[JRowIndex] = -dBsidedxl * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo + k;
							JRowIndex++;


							if (fphaseStat[Ix][Iy][Iz - 1] == 1) Coef = 0;
							else Coef = 1;

							Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][RO][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
							Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][BMU][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
							Moshtaq = (fdE[Ix][Iy][Iz][k][1] * gridDim[Nx + Ny + Iz] * Makhraj - dMug * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (fdE[Ix][Iy][Iz - 1][k][1] * gridDim[Nx + Ny + Iz - 1] * Coef*Makhraj - fDiffVisco(Ix, Iy, Iz - 1, k, 1)*gridDim[Nx + Ny + Iz - 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][k][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz - 1] * (G_ACCG*fblockFProps[Ix][Iy][Iz - 1][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz - 1][BGAM][1] * fdE[Ix][Iy][Iz - 1][k][1] / fblockFProps[Ix][Iy][Iz - 1][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

							tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][BGAM][1] * gridDim[Nx + Ny + Iz - 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

							if (ftransS[Ix + 1][Iy + 1][Iz][1][2]) {
								dRsidedxg -= (fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);
								dBsidedxg = -fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);

								dRsidedxg -= (fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								dBsidedxg -= fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							}
							else {
								dRsidedxg -= fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][2] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);
								dBsidedxg = -(fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);

								dRsidedxg -= fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								dBsidedxg -= (fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							}


							if (fphaseStat[Ix][Iy][Iz - 1]) reCol2 = Nc;
							else reCol2 = 0;
							Jac1Row[JRowIndex] = -dBsidedxg * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
							JRowIndex++;
						}
						//jac[BLNo+2*Nc-1][BLNo+k]=(Vb/Dt)*porpor*sat[Ix][Iy][Iz][1]*dE[Ix][Iy][Iz][k][0];
						if (fphaseStat[Ix][Iy][Iz] != -1) {
							Jac1Row[JRowIndex] = (Vb / Dt)*porpor*fsat[Ix][Iy][Iz][1] * fdE[Ix][Iy][Iz][k][0] - dRsidedxl;
							//Jac1Row[JRowIndex]=(Vb/Dt)*porpor*sat[Ix][Iy][Iz][1]*dE[Ix][Iy][Iz][k][0];
							Jac1Col[JRowIndex] = jacCol + k;
							JRowIndex++;
						}

						//jac[BLNo+2*Nc-1][BLNo+Nc+k]=(Vb/Dt)*porpor*sat[Ix][Iy][Iz][2]*dE[Ix][Iy][Iz][k][1];
						if (fphaseStat[Ix][Iy][Iz] != 1) {
							//Jac1Row[JRowIndex]=(Vb/Dt)*porpor*sat[Ix][Iy][Iz][2]*dE[Ix][Iy][Iz][k][1];
							Jac1Row[JRowIndex] = (Vb / Dt)*porpor*fsat[Ix][Iy][Iz][2] * fdE[Ix][Iy][Iz][k][1] - dRsidedxg;
							Jac1Col[JRowIndex] = jacCol + Nc + k - reCol;
							JRowIndex++;
						}

						/////////////////////////////////////////////////Sadeq////////////////////////////////////
						if (phaseStat[Ix][Iy][Iz] == 1) {
							//dRsideMdxl = 0;
							Jac1Row[JRowIndex] = dRsideMdxl;
							Jac1Col[JRowIndex] = MatrixEq + k;
							JRowIndex++;
						}
						else if (phaseStat[Ix][Iy][Iz] == (-1)) {
							//dRsideMdxg = 0;
							Jac1Row[JRowIndex] = dRsideMdxg;
							Jac1Col[JRowIndex] = MatrixEq + k;
							JRowIndex++;
						}
						else {
							//dRsideMdxl = 0;
							Jac1Row[JRowIndex] = dRsideMdxl;
							Jac1Col[JRowIndex] = MatrixEq + k;
							JRowIndex++;
							//dRsideMdxg = 0;
							Jac1Row[JRowIndex] = dRsideMdxg;
							Jac1Col[JRowIndex] = MatrixEq + Nc + k;
							JRowIndex++;
						}
						////////////////////////sadeq/////////////////////////
					}


				}
				else {
					LSide = (Vb / Dt)*(porpor*watRo*WAT_M_RO*fsat[Ix][Iy][Iz][0] - fpreProp[Ix][Iy][Iz][Nc]);
					RSide = fWtran[Ix + 1][Iy + 1][Iz + 1][0] * (fP[Ix + 2][Iy + 1][Iz + 1][0] - fP[Ix + 1][Iy + 1][Iz + 1][0]) - fWtran[Ix][Iy + 1][Iz + 1][0] * (fP[Ix + 1][Iy + 1][Iz + 1][0] - fP[Ix][Iy + 1][Iz + 1][0]);
					RSide += fWtran[Ix + 1][Iy + 1][Iz + 1][1] * (fP[Ix + 1][Iy + 2][Iz + 1][0] - fP[Ix + 1][Iy + 1][Iz + 1][0]) - fWtran[Ix + 1][Iy][Iz + 1][1] * (fP[Ix + 1][Iy + 1][Iz + 1][0] - fP[Ix + 1][Iy][Iz + 1][0]);
					RSide += fWtran[Ix + 1][Iy + 1][Iz + 1][2] * (fP[Ix + 1][Iy + 1][Iz + 2][0] - fP[Ix + 1][Iy + 1][Iz + 1][0]) - fWtran[Ix + 1][Iy + 1][Iz][2] * (fP[Ix + 1][Iy + 1][Iz + 1][0] - fP[Ix + 1][Iy + 1][Iz][0]);

					RSide += G_ACC * watRo*fWtran[Ix + 1][Iy + 1][Iz + 1][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - G_ACC * watRo*fWtran[Ix][Iy + 1][Iz + 1][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
					RSide += G_ACC * watRo*fWtran[Ix + 1][Iy + 1][Iz + 1][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - G_ACC * watRo*fWtran[Ix + 1][Iy][Iz + 1][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
					RSide += G_ACC * watRo*fWtran[Ix + 1][Iy + 1][Iz + 1][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]) - G_ACC * watRo*fWtran[Ix + 1][Iy + 1][Iz][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);

					/////////////////////////////Transfer Function


					RSide -= ZERO_CONV * SI_C* watRo *WAT_M_RO * ShapeFactor_2(Ix, Iy, Iz) * f_m_relperm[0] / watMu * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) *((fP[Ix + 1][Iy + 1][Iz + 1][0] - P[Ix + 1][Iy + 1][Iz + 1][0]) + (blockFProps[Ix][Iy][Iz][BLOCK_PC][0] - fblockFProps[Ix][Iy][Iz][BLOCK_PC][0]));

					////////////////////////////////////////////
					RSide += Qw;
					ans[CSRrowIndex] = -LSide + RSide;
					CSRrowIndex++;


					dLsidedp = (Vb / Dt)*watRo*WAT_M_RO*fsat[Ix][Iy][Iz][0] * dPordp;
					dLsidedSw = (Vb / Dt)*(porpor*watRo*WAT_M_RO);

					dRsidedp = 0;
					dRsideMdp = 0;
					//Transfer function dRside dp
					dRsidedp -= ZERO_CONV * SI_C * watRo *WAT_M_RO * ShapeFactor_2(Ix, Iy, Iz) * f_m_relperm[0] / watMu * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]);
					dRsideMdp -= ZERO_CONV * -SI_C * watRo *WAT_M_RO * ShapeFactor_2(Ix, Iy, Iz) * f_m_relperm[0] / watMu * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]);


					dRsidedp += fWtran[Ix + 1][Iy + 1][Iz + 1][0] + fWtran[Ix][Iy + 1][Iz + 1][0];
					dRsidedp += fWtran[Ix + 1][Iy + 1][Iz + 1][1] + fWtran[Ix + 1][Iy][Iz + 1][1];
					dRsidedp += fWtran[Ix + 1][Iy + 1][Iz + 1][2] + fWtran[Ix + 1][Iy + 1][Iz][2];


					//jac[BLNo+2*Nc][BLNo+(2*Nc)]=PCoeff*(dLsidedp+dRsidedp);
					Jac1Row[JRowIndex] = PCoeff * (dLsidedp + dRsidedp + PIw);
					Jac1Col[JRowIndex] = jacCol + (2 * Nc) - reCol;
					JRowIndex++;

					//jac[BLNo+2*Nc][BLNo+(2*Nc+1)]=dLsidedSw;

					dRsidedSw = 0;
					dRsideMdSw = 0;
					// Transfer function drside dsw
					dRsidedSw -= ZERO_CONV * SI_C *WAT_M_RO* f_m_drelperm[1][5] * watRo * ShapeFactor_2(Ix, Iy, Iz) / watMu * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) *((fP[Ix + 1][Iy + 1][Iz + 1][0] - P[Ix + 1][Iy + 1][Iz + 1][0]) + (blockFProps[Ix][Iy][Iz][BLOCK_PC][0] - fblockFProps[Ix][Iy][Iz][BLOCK_PC][0]));
					dRsideMdSw -= ZERO_CONV * SI_C *WAT_M_RO* f_m_drelperm[1][0] * watRo * ShapeFactor_2(Ix, Iy, Iz) / watMu * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) *((fP[Ix + 1][Iy + 1][Iz + 1][0] - P[Ix + 1][Iy + 1][Iz + 1][0]) + (blockFProps[Ix][Iy][Iz][BLOCK_PC][0] - fblockFProps[Ix][Iy][Iz][BLOCK_PC][0]));


					if (Ix < (Nx - 1)) {
						if (fphaseStat[Ix + 1][Iy][Iz]) reCol2 = Nc;
						else reCol2 = 0;
						mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + Iy * Nx + Ix + 1] - reCol2;
						Jac1Row[JRowIndex] = PCoeff * (-fWtran[Ix + 1][Iy + 1][Iz + 1][0]);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;

						dsw = fdWtran[Ix + 1][Iy + 1][Iz + 1][0] * (fP[Ix + 2][Iy + 1][Iz + 1][0] - fP[Ix + 1][Iy + 1][Iz + 1][0]) + G_ACC * watRo*fdWtran[Ix + 1][Iy + 1][Iz + 1][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][2][0]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;
					}
					if (Ix > 0) {
						if (fphaseStat[Ix - 1][Iy][Iz]) reCol2 = Nc;
						else reCol2 = 0;
						mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + Iy * Nx + Ix - 1] - reCol2;
						Jac1Row[JRowIndex] = PCoeff * (-fWtran[Ix][Iy + 1][Iz + 1][0]);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;

						dsw = -fdWtran[Ix][Iy + 1][Iz + 1][0] * (fP[Ix + 1][Iy + 1][Iz + 1][0] - fP[Ix][Iy + 1][Iz + 1][0]) - G_ACC * watRo*fdWtran[Ix][Iy + 1][Iz + 1][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						if (!ftransS[Ix][Iy + 1][Iz + 1][2][0]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;
					}


					if (Iy < (Ny - 1)) {
						if (fphaseStat[Ix][Iy + 1][Iz]) reCol2 = Nc;
						else reCol2 = 0;
						mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + (Iy + 1)*Nx + Ix] - reCol2;
						Jac1Row[JRowIndex] = PCoeff * (-fWtran[Ix + 1][Iy + 1][Iz + 1][1]);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;

						dsw = fdWtran[Ix + 1][Iy + 1][Iz + 1][1] * (fP[Ix + 1][Iy + 2][Iz + 1][0] - fP[Ix + 1][Iy + 1][Iz + 1][0]) + G_ACC * watRo*fdWtran[Ix + 1][Iy + 1][Iz + 1][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][2][1]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;
					}
					if (Iy > 0) {
						if (fphaseStat[Ix][Iy - 1][Iz]) reCol2 = Nc;
						else reCol2 = 0;
						mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + (Iy - 1)*Nx + Ix] - reCol2;
						Jac1Row[JRowIndex] = PCoeff * (-fWtran[Ix + 1][Iy][Iz + 1][1]);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;

						dsw = -fdWtran[Ix + 1][Iy][Iz + 1][1] * (fP[Ix + 1][Iy + 1][Iz + 1][0] - fP[Ix + 1][Iy][Iz + 1][0]) - G_ACC * watRo*fdWtran[Ix + 1][Iy][Iz + 1][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						if (!ftransS[Ix + 1][Iy][Iz + 1][2][1]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;
					}


					if (Iz < (Nz - 1)) {
						if (fphaseStat[Ix][Iy][Iz + 1]) reCol2 = Nc;
						else reCol2 = 0;
						mBLNo = preConRow[Nx*Ny*Nz + (Iz + 1)*(Nx*Ny) + Iy * Nx + Ix] - reCol2;
						Jac1Row[JRowIndex] = PCoeff * (-fWtran[Ix + 1][Iy + 1][Iz + 1][2]);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;

						dsw = fdWtran[Ix + 1][Iy + 1][Iz + 1][2] * (fP[Ix + 1][Iy + 1][Iz + 2][0] - fP[Ix + 1][Iy + 1][Iz + 1][0]) + G_ACC * watRo*fdWtran[Ix + 1][Iy + 1][Iz + 1][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][2][2]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;
					}
					if (Iz > 0) {
						if (fphaseStat[Ix][Iy][Iz - 1]) reCol2 = Nc;
						else reCol2 = 0;
						mBLNo = preConRow[Nx*Ny*Nz + (Iz - 1)*(Nx*Ny) + Iy * Nx + Ix] - reCol2;
						Jac1Row[JRowIndex] = PCoeff * (-fWtran[Ix + 1][Iy + 1][Iz][2]);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;

						dsw = -fdWtran[Ix + 1][Iy + 1][Iz][2] * (fP[Ix + 1][Iy + 1][Iz + 1][0] - fP[Ix + 1][Iy + 1][Iz][0]) - G_ACC * watRo*fdWtran[Ix + 1][Iy + 1][Iz][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						if (!ftransS[Ix + 1][Iy + 1][Iz][2][2]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;
					}

					Jac1Row[JRowIndex] = dLsidedSw - dRsidedSw;
					Jac1Col[JRowIndex] = jacCol + (2 * Nc + 1) - reCol;
					JRowIndex++;

					/////////////////////////////////////////////////Sadeq///////////////////////////////////
					//dRsideMdp = 0;
					Jac1Row[JRowIndex] = PCoeff * dRsideMdp;
					Jac1Col[JRowIndex] = MatrixEq + 2 * Nc - reColF1;
					JRowIndex++;
					//dRsideMdSw = 0;
					Jac1Row[JRowIndex] = dRsideMdSw;
					Jac1Col[JRowIndex] = MatrixEq + 2 * Nc + 1 - reColF1;
					JRowIndex++;
					//////////////////////////Sadeq/////////////////////////
				}

			}
			else if (BENo < (2 * Nc + 2)) {
				Sxl = 0;
				
				for (i = 0; i < Nc; i++) {
					Sxl += fcomp[Ix][Iy][Iz][i][0];

					Jac1Row[JRowIndex] = 1;
					Jac1Col[JRowIndex] = jacCol + i;
					JRowIndex++;
				}
			}
			else if (BENo < (2 * Nc + 3)) {
				Sxg = 0;

				for (i = 0; i < Nc; i++) {
					Sxg += fcomp[Ix][Iy][Iz][i][1];

					Jac1Row[JRowIndex] = 1;
					Jac1Col[JRowIndex] = jacCol + Nc + i - reCol;
					JRowIndex++;
				}

			}
			else if (BENo < (2 * Nc + 4)) {
				Jac1Row[JRowIndex] = 1;
				Jac1Col[JRowIndex] = jacCol + 2 * Nc + 1 - reCol;
				JRowIndex++;

				Jac1Row[JRowIndex] = 1;
				Jac1Col[JRowIndex] = jacCol + 2 * Nc + 2 - reCol;
				JRowIndex++;

				Jac1Row[JRowIndex] = 1;
				Jac1Col[JRowIndex] = jacCol + 2 * Nc + 3 - reCol - reCol3;
				JRowIndex++;
			}
			else {
				std::cout << Ix << '\t' << Iy << '\t' << Iz << '\t' << BENo << "\tFracture phase stat: " << fphaseStat[Ix][Iy][Iz] << std::endl;

				TerM("Global Index Error!");
			}

			break;

		case 1:
			reCol = Nc;
			reCol3 = 0;

			if (BENo < (Nc + 1)) {

#pragma region sadeq

				
				Mporpor = porosity[Ix][Iy][Iz] * (1 + cpor * (P[Ix + 1][Iy + 1][Iz + 1][1] - refP) + dcpor * (P[Ix + 1][Iy + 1][Iz + 1][1] - refP)*(P[Ix + 1][Iy + 1][Iz + 1][1] - refP));
				MdPordp = porosity[Ix][Iy][Iz] * (cpor + 2 * dcpor*(P[Ix + 1][Iy + 1][Iz + 1][1] - refP));

				if (P[Ix + 1][Iy + 1][Iz + 1][1] >= fP[Ix + 1][Iy + 1][Iz + 1][1])
				{
					f_m_relperm[1] = relPerm[Ix][Iy][Iz][1];//oil relperm between matrix and fracture
					f_m_drelperm[1][1] = dRelPerm[Ix][Iy][Iz][1];//dkrodsw
					f_m_drelperm[1][2] = dRelPerm[Ix][Iy][Iz][2];//dkrodsg
					f_m_drelperm[1][4] = dRelPerm[Ix][Iy][Iz][4];//dkrodso

					f_m_drelperm[1][9] = 0;
					f_m_drelperm[1][7] = 0;
					f_m_drelperm[1][6] = 0;
				}
				else
				{
					f_m_relperm[1] = frelPerm[Ix][Iy][Iz][1];
					f_m_drelperm[1][6] = fdRelPerm[Ix][Iy][Iz][1];//fdkrofdsw
					f_m_drelperm[1][7] = fdRelPerm[Ix][Iy][Iz][2];//fdkrofdsg
					f_m_drelperm[1][9] = fdRelPerm[Ix][Iy][Iz][4];//fdkrofdso

					f_m_drelperm[1][4] = 0;
					f_m_drelperm[1][2] = 0;
					f_m_drelperm[1][1] = 0;
				}
				if (P[Ix + 1][Iy + 1][Iz + 1][2] >= fP[Ix + 1][Iy + 1][Iz + 1][2])
				{
					f_m_relperm[2] = relPerm[Ix][Iy][Iz][2];//gas relperm between matrix and fracture
					f_m_drelperm[2][3] = dRelPerm[Ix][Iy][Iz][3];//dkrgdsg

					f_m_drelperm[2][8] = 0;
				}
				else
				{
					f_m_relperm[2] = frelPerm[Ix][Iy][Iz][2];
					f_m_drelperm[2][8] = fdRelPerm[Ix][Iy][Iz][3];//fdkrgfdsg

					f_m_drelperm[2][3] = 0;
				}

				if (P[Ix + 1][Iy + 1][Iz + 1][0] >= fP[Ix + 1][Iy + 1][Iz + 1][0])
				{
					f_m_relperm[0] = relPerm[Ix][Iy][Iz][0];
					f_m_drelperm[1][0] = dRelPerm[Ix][Iy][Iz][0];//dkrwdsw

					f_m_drelperm[1][5] = 0;
				}
				else
				{
					f_m_relperm[0] = frelPerm[Ix][Iy][Iz][0];//water relperm between matrix and fracture
					f_m_drelperm[1][5] = fdRelPerm[Ix][Iy][Iz][0];//fdkrwfdsw

					f_m_drelperm[1][0] = 0;
				}
#pragma endregion

#pragma region Wells&Commons For Fracture 
				porpor = fporosity[Ix][Iy][Iz] * (1 + cpor * (fP[Ix + 1][Iy + 1][Iz + 1][1] - refP) + dcpor * (fP[Ix + 1][Iy + 1][Iz + 1][1] - refP)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - refP));
				dPordp = fporosity[Ix][Iy][Iz] * (cpor + 2 * dcpor*(fP[Ix + 1][Iy + 1][Iz + 1][1] - refP));




				Qw = 0;
				Qo = 0;
				Qg = 0;

				PIw = 0;
				PIo = 0;
				PIg = 0;

				Vb = gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz];

				iWell = -1;
				for (i = 0; i < wellNO; i++) {
					if ((Ix == welli[i][1]) && (Iy == welli[i][2]) && (Iz >= welli[i][3]) && (Iz <= welli[i][4])) {
						//Re = Calc_Re(Ix, Iy, Iz, i);
						Re = Re_f;
						if ((welli[i][0] == 0) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {
							//if ((welli[i][0] == 0) && ((fabs(simTime - wellf[i][4]) <= TSTEPIF) && (fabs(simTime - wellf[i][5]) <= TSTEPIF))) {		//Constant Pwf Pressure - Production

							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][1] * fperm[Ix][Iy][Iz][0]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);

							PIw = S1 * watRo*WAT_M_RO*frelPerm[Ix][Iy][Iz][0] / watMu;
							PIo = S1 * fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / fblockFProps[Ix][Iy][Iz][BMU][0];
							PIg = S1 * fblockFProps[Ix][Iy][Iz][RO][1] * frelPerm[Ix][Iy][Iz][2] / fblockFProps[Ix][Iy][Iz][BMU][1];

							Qw = PIw * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][0]);
							Qo = PIo * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
							Qg = PIg * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

							

							/*if ((wellf[i][1]) && ((-Qo) > wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								SSo1 = 0;
								for (j = welli[i][3]; j <= welli[i][4]; j++) {
									S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
									SSo1 += fblockFProps[Ix][Iy][j][RO][0] * S2*frelPerm[Ix][Iy][j][1] / fblockFProps[Ix][Iy][Iz][BMU][0];
									S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
									SSo1 += blockFProps[Ix][Iy][j][RO][0] * S2*relPerm[Ix][Iy][j][1] / blockFProps[Ix][Iy][Iz][BMU][0];
								}
								S1 = gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][0] * fperm[Ix][Iy][Iz][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);

								if (SSo1) {
									if (SURFACE_RATES) Qo = -S1 * oilRateCh(Ix, Iy, Iz, frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fblockFProps[Ix][Iy][Iz][BMU][0] / (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fblockFProps[Ix][Iy][Iz][BMU][1]))*wellf[i][1] * fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / (fblockFProps[Ix][Iy][Iz][BMU][0] * SSo1);
									else Qo = -S1 * wellf[i][1] * fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / (fblockFProps[Ix][Iy][Iz][BMU][0] * SSo1);
								}
								Qw = Qo * frelPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*fblockFProps[Ix][Iy][Iz][BMU][0] / (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * watMu);
								Qg = Qo * frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fblockFProps[Ix][Iy][Iz][BMU][0] / (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fblockFProps[Ix][Iy][Iz][BMU][1]);

							}*/

							if (fP[Ix + 1][Iy + 1][Iz + 1][1] < WELL_MIN_P) {
								Qw = 0;
								Qo = 0;
								Qg = 0;

								PIw = 0;
								PIo = 0;
								PIg = 0;
							}
							else if ((wellf[i][1]) && ((-Qo) > wellf[i][1])) {
								Qo = -wellf[i][1];
								Qw = Qo * frelPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*fblockFProps[Ix][Iy][Iz][BMU][0] / (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * watMu);
								Qg = Qo * frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fblockFProps[Ix][Iy][Iz][BMU][0] / (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fblockFProps[Ix][Iy][Iz][BMU][1]);
								PIw = 0;
								PIo = 0;
								PIg = 0;
							}
							if ((Qw > 0) || ((Qw - Qw) != 0)) {
								Qw = 0;
								PIw = 0;
							}
							if ((Qo > 0) || ((Qo - Qo) != 0)) {
								Qo = 0;
								PIo = 0;
							}
							if ((Qg > 0) || ((Qg - Qg) != 0)) {
								Qg = 0;
								PIg = 0;
							}

							QoProduced = Qo;
							Qoprod += Qo + Qg;
							//MethQM += Qo * (1 - fcomp[Ix][Iy][Iz][0][0]) + Qg * (1 - fcomp[Ix][Iy][Iz][0][1]);
							//Qoprod = Qo*(1 - fcomp[Ix][Iy][Iz][0][0])+ Qg*(1 - fcomp[Ix][Iy][Iz][0][1]);
							WellCompSadeq[0] += Qo * (fcomp[Ix][Iy][Iz][0][0]) + Qg * (fcomp[Ix][Iy][Iz][0][1]);
							WellCompSadeq[1] += Qo * (fcomp[Ix][Iy][Iz][1][0]) + Qg * (fcomp[Ix][Iy][Iz][1][1]);
							WellCompSadeq[2] += Qo * (fcomp[Ix][Iy][Iz][2][0]) + Qg * (fcomp[Ix][Iy][Iz][2][1]);
							WellCompSadeq2[0] += (Qo*(fcomp[Ix][Iy][Iz][0][0]) + Qg * (fcomp[Ix][Iy][Iz][0][1]));
							WellCompSadeq2[1] += (Qo*(fcomp[Ix][Iy][Iz][1][0]) + Qg * (fcomp[Ix][Iy][Iz][1][1]));
							WellCompSadeq2[2] += (Qo*(fcomp[Ix][Iy][Iz][2][0]) + Qg * (fcomp[Ix][Iy][Iz][2][1]));
						}

						else if ((welli[i][0] == 1) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {		//Constant Pwf- Gas Production
																																																					//Re = Re_f;
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][1] * fperm[Ix][Iy][Iz][0]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);

							PIw = S1 * watRo*WAT_M_RO*frelPerm[Ix][Iy][Iz][0] / watMu;
							PIo = S1 * fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / fblockFProps[Ix][Iy][Iz][BMU][0];
							PIg = S1 * fblockFProps[Ix][Iy][Iz][RO][1] * frelPerm[Ix][Iy][Iz][2] / fblockFProps[Ix][Iy][Iz][BMU][1];

							Qw = PIw * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][0]);
							Qo = PIo * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
							Qg = PIg * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

							if ((Qw > 0) || ((Qw - Qw) != 0)) {
								Qw = 0;
								PIw = 0;
							}
							if ((Qo > 0) || ((Qo - Qo) != 0)) {
								Qo = 0;
								PIo = 0;
							}
							if ((Qg > 0) || ((Qg - Qg) != 0)) {
								Qg = 0;
								PIg = 0;
							}

							if ((wellf[i][1]) && ((-Qg) > wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								SSo1 = 0;
								for (j = welli[i][3]; j <= welli[i][4]; j++) {
									S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
									SSo1 += fblockFProps[Ix][Iy][j][RO][1] * S2*frelPerm[Ix][Iy][j][2] / fblockFProps[Ix][Iy][Iz][BMU][1];
									S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
									SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][Iz][BMU][1];
								}
								S1 = gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][0] * fperm[Ix][Iy][Iz][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);

								if (SSo1) {
									if (SURFACE_RATES) Qg = -S1 * gasRateCh(Ix, Iy, Iz, (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fblockFProps[Ix][Iy][Iz][BMU][1]) / (frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fblockFProps[Ix][Iy][Iz][BMU][0]))*wellf[i][1] * fblockFProps[Ix][Iy][Iz][RO][1] * frelPerm[Ix][Iy][Iz][2] / (fblockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
									else Qg = -S1 * wellf[i][1] * fblockFProps[Ix][Iy][Iz][RO][1] * frelPerm[Ix][Iy][Iz][2] / (fblockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
								}
								Qw = Qg * frelPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*fblockFProps[Ix][Iy][Iz][BMU][1] / (frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * watMu);
								Qo = Qg * frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fblockFProps[Ix][Iy][Iz][BMU][1] / (frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fblockFProps[Ix][Iy][Iz][BMU][0]);

							}

							//QoProd=oilRateCh2(Ix, Iy, Iz, -Qo, -Qg);
							QoProduced = Qo;
						}

						else if ((welli[i][0] == 2) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {			//Constant Pwf Pressure - Water Injection
																																																						//Re = Re_f;
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][1] * fperm[Ix][Iy][Iz][0]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);

							PIw = S1 * watRo*WAT_M_RO*frelPerm[Ix][Iy][Iz][0] / watMu;
							Qw = PIw * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][0]);


							if ((Qw < 0) || ((Qw - Qw) != 0)) {
								Qw = 0;
								PIw = 0;
							}

							if ((wellf[i][1]) && (Qw > wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								SSo1 = 0;
								for (j = welli[i][3]; j <= welli[i][4]; j++) {
									S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
									SSo1 += watRo * S2*frelPerm[Ix][Iy][j][0] / watMu;
									S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
									SSo1 += watRo * S2*relPerm[Ix][Iy][j][0] / watMu;
								}
								S1 = gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][0] * fperm[Ix][Iy][Iz][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);

								if (SSo1) Qw = S1 * wellf[i][1] * watRo*WAT_M_RO * frelPerm[Ix][Iy][Iz][0] / (watMu * SSo1);
							}
						}

						else if ((welli[i][0] == 3) && (((fabs(simTime - wellf[i][Nc + 4]) <= TSTEPIF) || (fabs(simTime - wellf[i][Nc + 5]) <= TSTEPIF)) || ((simTime >= wellf[i][Nc + 4]) && (simTime <= wellf[i][Nc + 5])))) {		//Constant Pwf Pressure - Gas Injection
																																																										//Re = Re_f;

							for (j = 0; j < Nc; j++) IComp[j] = wellf[i][4 + j];
							FlashInjection(IComp, wellf[i][0], IOComp, IGComp, iOF, iGF, iOD, iGD, iOV, iGV);
							//Re = Calc_Re(Ix, Iy, Iz, i);
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][1] * fperm[Ix][Iy][Iz][0]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
							//S2 = sgt[Nsgt-1][1] / iGV;
							//S2 = relPerm[Ix][Iy][Iz][2] / blockFProps[Ix][Iy][Iz][BMU][1];

							PIg = S1 * iGD * sgt[Nsgt - 1][1] * iGF / iGV;
							Qg = PIg * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
							//PIo = S1*iOD * swt[0][2]*iOF / iOV;
							PIo = PIg * iOF / iGF;
							Qo = PIo * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

							if ((Qo < 0) || ((Qo - Qo) != 0)) {
								Qo = 0;
								PIo = 0;
							}
							if ((Qg < 0) || ((Qg - Qg) != 0)) {
								Qg = 0;
								PIg = 0;
							}

							iWell = i;

							if ((wellf[i][1]) && (Qg > wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								SSo1 = 0;
								for (j = welli[i][3]; j <= welli[i][4]; j++) {
									S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
									//SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][Iz][BMU][1];
									SSo1 += S2;
									S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
									//SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][Iz][BMU][1];
									SSo1 += S2;
								}
								S1 = gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][0] * fperm[Ix][Iy][Iz][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);

								//if (SSo1) Qg = S1*wellf[i][1] * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / (blockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
								if (SSo1) Qg = S1 * wellf[i][1] / SSo1;
								if (SSo1) Qo = Qg * iOF / iGF;
							}

							Qginj = Qg + Qo;
						}

						else if ((welli[i][0] == 4) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {		//Constant Oil Rate
							SSo1 = 0;
							for (j = welli[i][3]; j <= welli[i][4]; j++) {
								S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
								SSo1 += fblockFProps[Ix][Iy][j][RO][0] * S2*frelPerm[Ix][Iy][j][1] / fblockFProps[Ix][Iy][Iz][BMU][0];
								S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
								SSo1 += blockFProps[Ix][Iy][j][RO][0] * S2*relPerm[Ix][Iy][j][1] / blockFProps[Ix][Iy][Iz][BMU][0];
							}
							S1 = gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][0] * fperm[Ix][Iy][Iz][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);

							if (SSo1) {
								if (SURFACE_RATES) Qo = -S1 * oilRateCh(Ix, Iy, Iz, frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fblockFProps[Ix][Iy][Iz][BMU][0] / (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fblockFProps[Ix][Iy][Iz][BMU][1]))*wellf[i][0] * fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / (fblockFProps[Ix][Iy][Iz][BMU][0] * SSo1);
								else Qo = -S1 * wellf[i][0] * fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / (fblockFProps[Ix][Iy][Iz][BMU][0] * SSo1);
							}
							Qw = Qo * frelPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*fblockFProps[Ix][Iy][Iz][BMU][0] / (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * watMu);
							Qg = Qo * frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fblockFProps[Ix][Iy][Iz][BMU][0] / (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fblockFProps[Ix][Iy][Iz][BMU][1]);

							//Re = Re_f;
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][1] * fperm[Ix][Iy][Iz][0]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
							Pwf = fP[Ix + 1][Iy + 1][Iz + 1][1] - Qo / (S1*fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / fblockFProps[Ix][Iy][Iz][BMU][0]);

							if ((wellf[i][1]) && (Pwf < wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								PIw = S1 * watRo*WAT_M_RO*frelPerm[Ix][Iy][Iz][0] / watMu;
								PIo = S1 * fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / fblockFProps[Ix][Iy][Iz][BMU][0];
								PIg = S1 * fblockFProps[Ix][Iy][Iz][RO][1] * frelPerm[Ix][Iy][Iz][2] / fblockFProps[Ix][Iy][Iz][BMU][1];

								Qw = PIw * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][0]);
								Qo = PIo * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
								Qg = PIg * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

								if ((Qw > 0) || ((Qw - Qw) != 0)) {
									Qw = 0;
									PIw = 0;
								}
								if ((Qo > 0) || ((Qo - Qo) != 0)) {
									Qo = 0;
									PIo = 0;
								}
								if ((Qg > 0) || ((Qg - Qg) != 0)) {
									Qg = 0;
									PIg = 0;
								}
							}

							/*Qw = 0;
							Qo = -6.553168256220581e-07 / Nz;
							Qg = 0;
							PIw = 0;
							PIo = 0;
							PIg = 0;
							if (fP[Ix + 1][Iy + 1][Iz + 1][1] < 10600000) Qo = 0;*/

							QoProduced = Qo;
							Qoprod = Qo + Qg;
						}

						else if ((welli[i][0] == 5) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {		//Constant Gas Rate
							SSo1 = 0;
							for (j = welli[i][3]; j <= welli[i][4]; j++) {
								S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
								SSo1 += fblockFProps[Ix][Iy][j][RO][1] * S2*frelPerm[Ix][Iy][j][2] / fblockFProps[Ix][Iy][Iz][BMU][1];
								S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
								SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][Iz][BMU][1];
							}
							S1 = gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][0] * fperm[Ix][Iy][Iz][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);

							if (SSo1) {
								if (SURFACE_RATES) Qg = -S1 * gasRateCh(Ix, Iy, Iz, (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fblockFProps[Ix][Iy][Iz][BMU][1]) / (frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fblockFProps[Ix][Iy][Iz][BMU][0]))*wellf[i][1] * fblockFProps[Ix][Iy][Iz][RO][1] * frelPerm[Ix][Iy][Iz][2] / (fblockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
								else Qg = -S1 * wellf[i][1] * fblockFProps[Ix][Iy][Iz][RO][1] * frelPerm[Ix][Iy][Iz][2] / (fblockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
							}
							Qw = Qg * frelPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*fblockFProps[Ix][Iy][Iz][BMU][1] / (frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * watMu);
							Qo = Qg * frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fblockFProps[Ix][Iy][Iz][BMU][1] / (frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fblockFProps[Ix][Iy][Iz][BMU][0]);

							//Re = Re_f;
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][1] * fperm[Ix][Iy][Iz][0]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
							Pwf = fP[Ix + 1][Iy + 1][Iz + 1][2] - Qg / (S1*fblockFProps[Ix][Iy][Iz][RO][1] * frelPerm[Ix][Iy][Iz][2] / fblockFProps[Ix][Iy][Iz][BMU][1]);

							if ((wellf[i][1]) && (Pwf < wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								PIw = S1 * watRo*WAT_M_RO*frelPerm[Ix][Iy][Iz][0] / watMu;
								PIo = S1 * fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / fblockFProps[Ix][Iy][Iz][BMU][0];
								PIg = S1 * fblockFProps[Ix][Iy][Iz][RO][1] * frelPerm[Ix][Iy][Iz][2] / fblockFProps[Ix][Iy][Iz][BMU][1];

								Qw = PIw * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][0]);
								Qo = PIo * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
								Qg = PIg * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

								if ((Qw > 0) || ((Qw - Qw) != 0)) {
									Qw = 0;
									PIw = 0;
								}
								if ((Qo > 0) || ((Qo - Qo) != 0)) {
									Qo = 0;
									PIo = 0;
								}
								if ((Qg > 0) || ((Qg - Qg) != 0)) {
									Qg = 0;
									PIg = 0;
								}
							}
						}

						else if ((welli[i][0] == 6) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {		//Constant Total Production Rate
							SSw = 0;
							SSo = 0;
							SSg = 0;
							SSo1 = 0;
							for (j = welli[i][3]; j <= welli[i][4]; j++) {
								S1 = (frelPerm[Ix][Iy][j][0] / watMu) + (frelPerm[Ix][Iy][j][1] / fblockFProps[Ix][Iy][j][BMU][0]) + (frelPerm[Ix][Iy][j][2] / fblockFProps[Ix][Iy][j][BMU][1]);
								SSw += (frelPerm[Ix][Iy][j][0] / watMu) / S1;
								SSo += (frelPerm[Ix][Iy][j][1] / fblockFProps[Ix][Iy][j][BMU][0]) / S1;
								SSg += (frelPerm[Ix][Iy][j][2] / fblockFProps[Ix][Iy][j][BMU][1]) / S1;

								S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
								SSo1 += fblockFProps[Ix][Iy][j][RO][0] * S2*frelPerm[Ix][Iy][j][1] / fblockFProps[Ix][Iy][Iz][BMU][0];

								S1 = (relPerm[Ix][Iy][j][0] / watMu) + (relPerm[Ix][Iy][j][1] / blockFProps[Ix][Iy][j][BMU][0]) + (relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][j][BMU][1]);
								SSw += (relPerm[Ix][Iy][j][0] / watMu) / S1;
								SSo += (relPerm[Ix][Iy][j][1] / blockFProps[Ix][Iy][j][BMU][0]) / S1;
								SSg += (relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][j][BMU][1]) / S1;

								S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
								SSo1 += blockFProps[Ix][Iy][j][RO][0] * S2*relPerm[Ix][Iy][j][1] / blockFProps[Ix][Iy][Iz][BMU][0];

							}
							QoP = SSo * wellf[i][0] / (SSw + SSo + SSg);

							S1 = gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][0] * fperm[Ix][Iy][Iz][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
							if (SSo1) Qo = -S1 * QoP*fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / (fblockFProps[Ix][Iy][Iz][BMU][0] * SSo1);
							Qw = Qo * frelPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*fblockFProps[Ix][Iy][Iz][BMU][0] / (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * watMu);
							Qg = Qo * frelPerm[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fblockFProps[Ix][Iy][Iz][BMU][0] / (frelPerm[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fblockFProps[Ix][Iy][Iz][BMU][1]);


							//Re = Re_f;
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][1] * fperm[Ix][Iy][Iz][0]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
							Pwf = fP[Ix + 1][Iy + 1][Iz + 1][1] - (Qw + Qo + Qg) / (S1*(watRo*WAT_M_RO*frelPerm[Ix][Iy][Iz][0] / watMu + fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / fblockFProps[Ix][Iy][Iz][BMU][0] + fblockFProps[Ix][Iy][Iz][RO][1] * frelPerm[Ix][Iy][Iz][2] / fblockFProps[Ix][Iy][Iz][BMU][1]));

							if ((wellf[i][1]) && (Pwf < wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								PIw = S1 * watRo*WAT_M_RO*frelPerm[Ix][Iy][Iz][0] / watMu;
								PIo = S1 * fblockFProps[Ix][Iy][Iz][RO][0] * frelPerm[Ix][Iy][Iz][1] / fblockFProps[Ix][Iy][Iz][BMU][0];
								PIg = S1 * fblockFProps[Ix][Iy][Iz][RO][1] * frelPerm[Ix][Iy][Iz][2] / fblockFProps[Ix][Iy][Iz][BMU][1];

								Qw = PIw * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][0]);
								Qo = PIo * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
								Qg = PIg * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

								if ((Qw > 0) || ((Qw - Qw) != 0)) {
									Qw = 0;
									PIw = 0;
								}
								if ((Qo > 0) || ((Qo - Qo) != 0)) {
									Qo = 0;
									PIo = 0;
								}
								if ((Qg > 0) || ((Qg - Qg) != 0)) {
									Qg = 0;
									PIg = 0;
								}
							}
						}

						else if ((welli[i][0] == 7) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {			//Constant Water Injection Rate
							SSw = 0;
							for (j = welli[i][3]; j <= welli[i][4]; j++) {
								S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
								SSo1 += S2 * frelPerm[Ix][Iy][j][0];
								S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
								SSo1 += S2 * relPerm[Ix][Iy][j][0];
							}
							S1 = gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][0] * fperm[Ix][Iy][Iz][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
							if (SSw) Qw = S1 * wellf[i][0] * frelPerm[Ix][Iy][Iz][1] / SSw;

							//Re = Re_f;
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][1] * fperm[Ix][Iy][Iz][0]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
							Pwf = fP[Ix + 1][Iy + 1][Iz + 1][0] - Qw / (S1*watRo*WAT_M_RO * frelPerm[Ix][Iy][Iz][1] / watMu);
							if ((wellf[i][1]) && (Pwf > wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								PIw = S1 * watRo*WAT_M_RO*frelPerm[Ix][Iy][Iz][0] / watMu;
								Qw = PIw * (wellf[i][0] - fP[Ix + 1][Iy + 1][Iz + 1][0]);

								if ((Qw < 0) || ((Qw - Qw) != 0)) {
									Qw = 0;
									PIw = 0;
								}
							}
						}

						else if ((welli[i][0] == 8) && (((fabs(simTime - wellf[i][Nc + 4]) <= TSTEPIF) || (fabs(simTime - wellf[i][Nc + 5]) <= TSTEPIF)) || ((simTime >= wellf[i][Nc + 4]) && (simTime <= wellf[i][Nc + 5])))) {			//Constant Gas Injection Rate
							for (j = 0; j < Nc; j++) IComp[j] = wellf[i][4 + j];
							FlashInjection(IComp, wellf[i][1], IOComp, IGComp, iOF, iGF, iOD, iGD, iOV, iGV);

							SSo1 = 0;
							for (j = welli[i][3]; j <= welli[i][4]; j++) {
								S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
								//SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][Iz][BMU][1];
								//SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*sgt[Nsgt-1][1] / blockFProps[Ix][Iy][Iz][BMU][1];
								SSo1 += S2;

								S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
								//SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][Iz][BMU][1];
								//SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*sgt[Nsgt-1][1] / blockFProps[Ix][Iy][Iz][BMU][1];
								SSo1 += S2;
							}
							S1 = gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][0] * fperm[Ix][Iy][Iz][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);

							//if (SSo1) Qg = S1*wellf[i][0] * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / (blockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
							//if (SSo1) Qg = S1*wellf[i][0] * blockFProps[Ix][Iy][Iz][RO][1] * sgt[Nsgt - 1][1] / (blockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
							if (SSo1) Qg = S1 * wellf[i][0] / SSo1;
							if (SSo1) Qo = Qg * iOF / iGF;
							//Re = 0.14*sqrt(sqrt(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0])*gridDim[Ix] * gridDim[Ix] + sqrt(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1])*gridDim[Nx + Iy] * gridDim[Nx + Iy]);
							//Re /= 0.5*(pow(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0], 0.25) + pow(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1], 0.25));



							//Re = Calc_Re(Ix, Iy, Iz, i);
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(fperm[Ix][Iy][Iz][1] * fperm[Ix][Iy][Iz][0]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
							//Pwf = P[Ix + 1][Iy + 1][Iz + 1][2] - Qg / (S1*blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / blockFProps[Ix][Iy][Iz][BMU][1]);
							//Pwf = P[Ix + 1][Iy + 1][Iz + 1][2] - Qg / (S1*blockFProps[Ix][Iy][Iz][RO][1] * sgt[Nsgt - 1][1] / blockFProps[Ix][Iy][Iz][BMU][1]);
							Pwf = fP[Ix + 1][Iy + 1][Iz + 1][2] - Qg / (S1*iGD * sgt[Nsgt - 1][1] / iGV);

							if ((wellf[i][1]) && (Pwf > wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								PIg = S1 * iGD * sgt[Nsgt - 1][1] * iGF / iGV;
								Qg = PIg * (wellf[i][1] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
								//PIo = S1*iOD * swt[0][2]*iOF / iOV;
								PIo = PIg * iOF / iGF;
								Qo = PIo * (wellf[i][1] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

								if ((Qo < 0) || ((Qo - Qo) != 0)) {
									Qo = 0;
									PIo = 0;
								}
								if ((Qg < 0) || ((Qg - Qg) != 0)) {
									Qg = 0;
									PIg = 0;
								}
							}

							if (fP[Ix + 1][Iy + 1][Iz + 1][1] > WELL_MAX_P) {
								Qw = 0;
								Qo = 0;
								Qg = 0;
								IOComp[0] = 0;
								IOComp[1] = 0;
								IGComp[0] = 0;
								IGComp[1] = 0;
								PIw = 0;
								PIo = 0;
								PIg = 0;
							}


							QgInjected = Qg;


							QgInj = Qg;

							iWell = i;
							gasInjStat = -1;

							Qginj += Qg + Qo;
						}


					}
					QwT += Qw;
					QoT += Qo;
					QgT += Qg;
				}



#pragma endregion

				if (BENo < (Nc - 1)) {
					i = BENo;

					LSide = (Vb / Dt)*(porpor*(fcomp[Ix][Iy][Iz][i][0] * fblockFProps[Ix][Iy][Iz][RO][0] * fsat[Ix][Iy][Iz][1] + fcomp[Ix][Iy][Iz][i][1] * fblockFProps[Ix][Iy][Iz][RO][1] * fsat[Ix][Iy][Iz][2]) - fpreProp[Ix][Iy][Iz][i]);
					RSide = fcomp[(Ix + ftransS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][0][0] * (fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) - fcomp[(Ix - 1 + ftransS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix][Iy + 1][Iz + 1][0][0] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);
					RSide += fcomp[Ix][(Iy + ftransS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][0][1] * (fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) - fcomp[Ix][(Iy - 1 + ftransS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy][Iz + 1][0][1] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);
					RSide += fcomp[Ix][Iy][(Iz + ftransS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][0][2] * (fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) - fcomp[Ix][Iy][(Iz - 1 + ftransS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz][0][2] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);
					RSide += fcomp[(Ix + ftransS[Ix + 1][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][1][0] * (fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]) - fcomp[(Ix - 1 + ftransS[Ix][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * ftrans[Ix][Iy + 1][Iz + 1][1][0] * (fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);
					RSide += fcomp[Ix][(Iy + ftransS[Ix + 1][Iy + 1][Iz + 1][1][1])][Iz][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][1][1] * (fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]) - fcomp[Ix][(Iy - 1 + ftransS[Ix + 1][Iy][Iz + 1][1][1])][Iz][i][1] * ftrans[Ix + 1][Iy][Iz + 1][1][1] * (fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);
					RSide += fcomp[Ix][Iy][(Iz + ftransS[Ix + 1][Iy + 1][Iz + 1][1][2])][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][1][2] * (fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]) - fcomp[Ix][Iy][(Iz - 1 + ftransS[Ix + 1][Iy + 1][Iz][1][2])][i][1] * ftrans[Ix + 1][Iy + 1][Iz][1][2] * (fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);

					RSide += fcomp[(Ix + ftransS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][2][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - fcomp[(Ix - 1 + ftransS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix][Iy + 1][Iz + 1][2][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
					RSide += fcomp[Ix][(Iy + ftransS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][2][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - fcomp[Ix][(Iy - 1 + ftransS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy][Iz + 1][2][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
					RSide += fcomp[Ix][Iy][(Iz + ftransS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][2][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]) - fcomp[Ix][Iy][(Iz - 1 + ftransS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz][2][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
					RSide += fcomp[(Ix + ftransS[Ix + 1][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][3][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - fcomp[(Ix - 1 + ftransS[Ix][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * ftrans[Ix][Iy + 1][Iz + 1][3][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
					RSide += fcomp[Ix][(Iy + ftransS[Ix + 1][Iy + 1][Iz + 1][1][1])][Iz][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][3][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - fcomp[Ix][(Iy - 1 + ftransS[Ix + 1][Iy][Iz + 1][1][1])][Iz][i][1] * ftrans[Ix + 1][Iy][Iz + 1][3][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
					RSide += fcomp[Ix][Iy][(Iz + ftransS[Ix + 1][Iy + 1][Iz + 1][1][2])][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][3][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]) - fcomp[Ix][Iy][(Iz - 1 + ftransS[Ix + 1][Iy + 1][Iz][1][2])][i][1] * ftrans[Ix + 1][Iy + 1][Iz][3][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);


					////////////////////////////Transfer Function

					//	if (comp[Ix][Iy][Iz][i][0] > fcomp[Ix][Iy][Iz][i][0]) f_m_diffusion[0] = diffusion[Ix][Iy][Iz][i][0];
					//else f_m_diffusion[0] = fdiffusion[Ix][Iy][Iz][i][0];

					//		if (comp[Ix][Iy][Iz][i][1] > fcomp[Ix][Iy][Iz][i][1]) f_m_diffusion[1] = diffusion[Ix][Iy][Iz][i][1];
					//	else f_m_diffusion[1] = fdiffusion[Ix][Iy][Iz][i][1];
					//Transfer function Rside 
					RSide -= ZERO_CONV * SI_C *comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
					RSide -= ZERO_CONV * SI_C * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor) / (porpor + Mporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (1))//only Liq in Fracture & Matrix
						RSide -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (-1))//only Gas in Fracture & Matrix
						RSide -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0)) {
						RSide -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);

						RSide -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

					}

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
						//RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);

						RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
					}

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (1)) {
						//RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);

						RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
					}

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1)) {
						//RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);

						RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);

						RSide -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
					}

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1)) {
						RSide -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

						//RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);

						RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
					}

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0)) {
						//RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);

						RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);

						RSide -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
					}

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0)) {
						RSide -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

						//RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);

						RSide -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
					}
					//	
					/////////////////////////////////////////
					if (iWell == (-1)) {
						gComp = fcomp[Ix][Iy][Iz][i][1];
						oComp = fcomp[Ix][Iy][Iz][i][0];
					}
					else {
						if (welli[iWell][0] == 3) {
							gComp = IGComp[i];
							oComp = IOComp[i];
						}
						else if (welli[iWell][0] == 8) {
							//gComp = wellf[iWell][i + 4];
							gComp = IGComp[i];
							oComp = IOComp[i];
						}
					}

					/*
					if (iWell == (-1)) {
					gComp = fcomp[Ix][Iy][Iz][i][1];
					}
					else {
					if (welli[iWell][0] == 3) {
					gComp = wellf[iWell][i + 4];
					}
					else if (welli[iWell][0] == 8) {
					gComp = wellf[iWell][i + 4];
					}
					}*/

					RSide += oComp * Qo + gComp * Qg;

					dLsidedp = (Vb / Dt)*(fcomp[Ix][Iy][Iz][i][0] * fsat[Ix][Iy][Iz][1] * (fblockFProps[Ix][Iy][Iz][RO][0] * dPordp + fdE[Ix][Iy][Iz][Nc][0] * porpor) + fcomp[Ix][Iy][Iz][i][1] * fsat[Ix][Iy][Iz][2] * (fblockFProps[Ix][Iy][Iz][RO][1] * dPordp + fdE[Ix][Iy][Iz][Nc][1] * porpor));
					dLsidedSo = (Vb / Dt)*(fcomp[Ix][Iy][Iz][i][0] * porpor*fblockFProps[Ix][Iy][Iz][RO][0]);
					dLsidedSg = (Vb / Dt)*(fcomp[Ix][Iy][Iz][i][1] * porpor*fblockFProps[Ix][Iy][Iz][RO][1]);

					dRsideMdp = 0;
					dRsidedp = 0;
					// Transfer function drside dp mdp
					//moshtagh transfer Function jabejaie naft nesbat be feshar matrix
					dRsideMdp -= ZERO_CONV * SI_C * dE[Ix][Iy][Iz][Nc][0] * comp[Ix][Iy][Iz][i][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
					dRsideMdp -= ZERO_CONV * -SI_C * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor));
					dRsideMdp -= ZERO_CONV * -SI_C * (DiffVisco(Ix, Iy, Iz, Nc, 0) * Mporpor + MdPordp * blockFProps[Ix][Iy][Iz][BMU][0]) * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor)*(blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) * (porpor + Mporpor);
					dRsideMdp -= ZERO_CONV * SI_C * MdPordp * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / (blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					//moshtagh transfer Function jabejaie gaz nesbat be feshar matrix
					dRsideMdp -= ZERO_CONV * SI_C * dE[Ix][Iy][Iz][Nc][1] * comp[Ix][Iy][Iz][i][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor) / (porpor + Mporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));
					dRsideMdp -= ZERO_CONV * -SI_C * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor) / (porpor + Mporpor));
					dRsideMdp -= ZERO_CONV * -SI_C * (DiffVisco(Ix, Iy, Iz, Nc, 1) * Mporpor + MdPordp * blockFProps[Ix][Iy][Iz][BMU][1]) * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor)*(blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1])) * (porpor + Mporpor);
					dRsideMdp -= ZERO_CONV * SI_C * MdPordp * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / (blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (1)) { // //moshtagh transfer Function nofuze oil-oil nesbat be feshar matrix 
						dRsideMdp -= ZERO_DIFF * MdPordp * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
						dRsideMdp -= ZERO_DIFF * dE[Ix][Iy][Iz][Nc][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
						dRsideMdp -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
					}

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (-1)) { // //moshtagh transfer Function nofuze gas-gas nesbat be feshar matrix 
						dRsideMdp -= ZERO_DIFF * MdPordp * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
						dRsideMdp -= ZERO_DIFF * dE[Ix][Iy][Iz][Nc][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
						dRsideMdp -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
					}

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0)) {
						dRsideMdp -= ZERO_DIFF * MdPordp * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
						dRsideMdp -= ZERO_DIFF * dE[Ix][Iy][Iz][Nc][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
						dRsideMdp -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);

						dRsideMdp -= ZERO_DIFF * MdPordp * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
						dRsideMdp -= ZERO_DIFF * dE[Ix][Iy][Iz][Nc][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
						dRsideMdp -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
					}

					//if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
						//dRsideMdp -= ZERO_DIFF * MdPordp * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
						//dRsideMdp -= ZERO_DIFF * dE[Ix][Iy][Iz][Nc][0] * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
						//dRsideMdp -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 0) * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
					//}

					//if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (1)) {
						//dRsideMdp -= ZERO_DIFF * MdPordp * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
						//dRsideMdp -= ZERO_DIFF * dE[Ix][Iy][Iz][Nc][1] * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
						//dRsideMdp -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 1) * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
					//}

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1)) {
						//dRsideMdp -= ZERO_DIFF * MdPordp * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
						//dRsideMdp -= ZERO_DIFF * dE[Ix][Iy][Iz][Nc][1] * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
						//dRsideMdp -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 1) * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);

						dRsideMdp -= ZERO_DIFF * MdPordp * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
						dRsideMdp -= ZERO_DIFF * dE[Ix][Iy][Iz][Nc][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
						dRsideMdp -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
					}

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1)) {
						dRsideMdp -= ZERO_DIFF * MdPordp * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
						dRsideMdp -= ZERO_DIFF * dE[Ix][Iy][Iz][Nc][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
						dRsideMdp -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

						//dRsideMdp -= ZERO_DIFF * MdPordp * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
						//dRsideMdp -= ZERO_DIFF * dE[Ix][Iy][Iz][Nc][0] * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
						//dRsideMdp -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 0) * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
					}

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0)) {
						//dRsideMdp -= ZERO_DIFF * MdPordp * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
						///dRsideMdp -= ZERO_DIFF * dE[Ix][Iy][Iz][Nc][0] * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
						//dRsideMdp -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 0) * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);

						dRsideMdp -= ZERO_DIFF * MdPordp * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
						dRsideMdp -= ZERO_DIFF * dE[Ix][Iy][Iz][Nc][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
						dRsideMdp -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
					}

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0)) {
						dRsideMdp -= ZERO_DIFF * MdPordp * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
						dRsideMdp -= ZERO_DIFF * dE[Ix][Iy][Iz][Nc][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
						dRsideMdp -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

						//dRsideMdp -= ZERO_DIFF * MdPordp * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
						//dRsideMdp -= ZERO_DIFF * dE[Ix][Iy][Iz][Nc][1] * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
						//dRsideMdp -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 1) * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
					}


					//moshtagh transfer Function jabejaie naft nesbat be feshar Fracture
					dRsidedp -= ZERO_CONV * SI_C * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor));
					dRsidedp -= ZERO_CONV * -SI_C * (fDiffVisco(Ix, Iy, Iz, Nc, 0) * porpor + dPordp * fblockFProps[Ix][Iy][Iz][BMU][0]) * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor)*(blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) * (porpor + Mporpor);
					dRsidedp -= ZERO_CONV * SI_C * dPordp * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / (blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					//moshtagh transfer Function jabejaie gaz nesbat be feshar Fracture
					dRsidedp -= ZERO_CONV * SI_C * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor) / (porpor + Mporpor));
					dRsidedp -= ZERO_CONV * -SI_C * (fDiffVisco(Ix, Iy, Iz, Nc, 1) * porpor + dPordp * fblockFProps[Ix][Iy][Iz][BMU][1]) * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor)*(blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1])) * (porpor + Mporpor);
					dRsidedp -= ZERO_CONV * SI_C * dPordp * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / (blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
						dRsidedp -= ZERO_DIFF * dPordp * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
						dRsidedp -= ZERO_DIFF * fdE[Ix][Iy][Iz][Nc][1] * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
						dRsidedp -= ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, Nc, 1) * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
					}

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (1)) {
						dRsidedp -= ZERO_DIFF * dPordp * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
						dRsidedp -= ZERO_DIFF * fdE[Ix][Iy][Iz][Nc][0] * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
						dRsidedp -= ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, Nc, 0) * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
					}

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1)) {
						dRsidedp -= ZERO_DIFF * dPordp * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
						dRsidedp -= ZERO_DIFF * fdE[Ix][Iy][Iz][Nc][0] * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
						dRsidedp -= ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, Nc, 0) * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
					}

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0)) {
						dRsidedp -= ZERO_DIFF * dPordp * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
						dRsidedp -= ZERO_DIFF * fdE[Ix][Iy][Iz][Nc][1] * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
						dRsidedp -= ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, Nc, 1) * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
					}

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1)) {
						dRsidedp -= ZERO_DIFF * dPordp * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
						dRsidedp -= ZERO_DIFF * fdE[Ix][Iy][Iz][Nc][1] * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
						dRsidedp -= ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, Nc, 1) * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
					}

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0)) {
						dRsidedp -= ZERO_DIFF * dPordp * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
						dRsidedp -= ZERO_DIFF * fdE[Ix][Iy][Iz][Nc][0] * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
						dRsidedp -= ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, Nc, 0) * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
					}

					//


					dRsidedp += fcomp[(Ix + ftransS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][0][0] + fcomp[(Ix - 1 + ftransS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix][Iy + 1][Iz + 1][0][0];
					dRsidedp += fcomp[Ix][(Iy + ftransS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][0][1] + fcomp[Ix][(Iy - 1 + ftransS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy][Iz + 1][0][1];
					dRsidedp += fcomp[Ix][Iy][(Iz + ftransS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][0][2] + fcomp[Ix][Iy][(Iz - 1 + ftransS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz][0][2];
					dRsidedp += fcomp[(Ix + ftransS[Ix + 1][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][1][0] + fcomp[(Ix - 1 + ftransS[Ix][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * ftrans[Ix][Iy + 1][Iz + 1][1][0];
					dRsidedp += fcomp[Ix][(Iy + ftransS[Ix + 1][Iy + 1][Iz + 1][1][1])][Iz][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][1][1] + fcomp[Ix][(Iy - 1 + ftransS[Ix + 1][Iy][Iz + 1][1][1])][Iz][i][1] * ftrans[Ix + 1][Iy][Iz + 1][1][1];
					dRsidedp += fcomp[Ix][Iy][(Iz + ftransS[Ix + 1][Iy + 1][Iz + 1][1][2])][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][1][2] + fcomp[Ix][Iy][(Iz - 1 + ftransS[Ix + 1][Iy + 1][Iz][1][2])][i][1] * ftrans[Ix + 1][Iy + 1][Iz][1][2];

					//jac[BLNo+Nc+i][BLNo+(2*Nc)]=PCoeff*(dLsidedp+dRsidedp);

					//jac[BLNo+Nc+i][BLNo+(2*Nc+2)]=dLsidedSo;
					if (fphaseStat[Ix][Iy][Iz] == (-1)) dCoefl = 0;
					else dCoefl = 1;
					if (fphaseStat[Ix][Iy][Iz] == 1) dCoefg = 0;
					else dCoefg = 1;

					dMul = fDiffVisco(Ix, Iy, Iz, Nc, 0);
					dMug = fDiffVisco(Ix, Iy, Iz, Nc, 1);
					dDiffdpl = fDifDiffusion(Ix, Iy, Iz, i, Nc, 0);
					dDiffdpg = fDifDiffusion(Ix, Iy, Iz, i, Nc, 1);

					dRsidedSw = 0;
					dRsidedSg = 0;
					dRsidedSo = 0;
					dRsideMdSg = 0;
					dRsideMdSw = 0;
					dRsideMdSo = 0;

					//Transfer function drside saturation 
					// moshtagh transfer Function jabejaie naft nesbat be So Matrix
					dRsideMdSo -= ZERO_CONV * SI_C * f_m_drelperm[1][4] * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (1))
						dRsideMdSo -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0))
						dRsideMdSo -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);

					//if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (-1))
						//dRsideMdSo -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0)) {
						//dRsideMdSo -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);

						dRsideMdSo -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
					}


					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1))
						dRsideMdSo -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);

					//if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1))
						//dRsideMdSo -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);



					// moshtagh transfer Function jabejaie naft nesbat be So Fracture
					dRsidedSo -= ZERO_CONV * SI_C * f_m_drelperm[1][9] * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (1))
						dRsidedSo -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1))
						dRsidedSo -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0))
						dRsidedSo -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);


					// moshtagh transfer Function jabejaie naft nesbat be Sg Matrix
					dRsideMdSg -= ZERO_CONV * SI_C * f_m_drelperm[1][2] * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					// moshtagh transfer Function jabejaie gaz nesbat be Sg Matrix
					dRsideMdSg -= ZERO_CONV * SI_C * f_m_drelperm[2][3] * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor) / (porpor + Mporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (-1))
						dRsideMdSg -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0))
						dRsideMdSg -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

					//if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (1))
						//dRsideMdSg -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1))
						dRsideMdSg -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0)) {
						dRsideMdSg -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
						//dRsideMdSg -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * Mporpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
					}

					// moshtagh transfer Function jabejaie naft nesbat be Sg Fracture
					dRsidedSg -= ZERO_CONV * SI_C * f_m_drelperm[1][7] * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					// moshtagh transfer Function jabejaie gaz nesbat be Sg Fracture
					dRsidedSg -= ZERO_CONV * SI_C * f_m_drelperm[2][8] * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor) / (porpor + Mporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (-1))
						dRsidedSg -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0))
						dRsidedSg -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1))
						dRsidedSg -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);


					// moshtagh transfer Function jabejaie naft nesbat be Sw Matrix
					dRsideMdSw -= ZERO_CONV * SI_C * f_m_drelperm[1][1] * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);


					// moshtagh transfer Function jabejaie naft nesbat be Sw Fracture
					dRsidedSw -= ZERO_CONV * SI_C * f_m_drelperm[1][6] * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
					//


					if (Ix<(Nx - 1)) {
						if (fphaseStat[Ix + 1][Iy][Iz]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + Iy * Nx + Ix + 1] - reCol2;

						dsw = fcomp[(Ix + ftransS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][4][0] * (fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) + fcomp[(Ix + ftransS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][6][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][0]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dsgo = fcomp[(Ix + ftransS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][8][0] * (fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) + fcomp[(Ix + ftransS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][9][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						dsgg = fcomp[(Ix + ftransS[Ix + 1][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][5][0] * (fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]) + fcomp[(Ix + ftransS[Ix + 1][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][7][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][0]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix + 1][Iy][Iz] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][1][0]) {
							Jac1Row[JRowIndex] += (fphaseStat[Ix + 1][Iy][Iz] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;

						//oil to oil
						dso = fcomp[(Ix + ftransS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][10][0] * (fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) + fcomp[(Ix + ftransS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][11][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][0]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix + 1][Iy][Iz] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;
						//////////////////////////////////////////////////////////
						/////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (fphaseStat[Ix + 1][Iy][Iz] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][RO][0] * gridDim[Ix + 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][BMU][0] * gridDim[Ix + 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][0] * gridDim[Ix] * Makhraj - dMul * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix + 1][Iy][Iz][Nc][0] * gridDim[Ix + 1] * Coef*Makhraj - fDiffVisco(Ix + 1, Iy, Iz, Nc, 0)*gridDim[Ix + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Ix] * (fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][Nc][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Ix + 1] * (fblockFProps[Ix + 1][Iy][Iz][BGAM][0] * fdE[Ix + 1][Iy][Iz][Nc][0] / fblockFProps[Ix + 1][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][BGAM][0] * gridDim[Ix + 1] * Coef) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][0]) {
							dRsidedp -= fcomp[Ix + 1][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][1] * Moshtaq*(fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = (fcomp[Ix + 1][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][1] * Bmoshtaq)*(fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= fcomp[Ix + 1][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (fcomp[Ix + 1][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= (fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}

						porpor2 = fporosity[Ix + 1][Iy][Iz] * (1 + cpor * (fP[Ix + 2][Iy + 1][Iz + 1][1] - refP) + dcpor * (fP[Ix + 2][Iy + 1][Iz + 1][1] - refP)*(fP[Ix + 2][Iy + 1][Iz + 1][1] - refP));
						dPordp2 = fporosity[Ix + 1][Iy][Iz] * (cpor + 2 * dcpor*(fP[Ix + 2][Iy + 1][Iz + 1][1] - refP));
						if (fcomp[Ix + 1][Iy][Iz][i][0]>fcomp[Ix][Iy][Iz][i][0]) {
							DupStream = fdiffusion[Ix + 1][Iy][Iz][i][0];
							dDdp = 0;
							dDdp2 = fDifDiffusion(Ix + 1, Iy, Iz, i, Nc, 0);
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][0];
							dDdp = dDiffdpl;
							dDdp2 = 0;
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix + 1][Iy][Iz] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = fblockFProps[Ix + 1][Iy][Iz][RO][0] * gridDim[Ix + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] * dCoefl;
						AAd *= (fsat[Ix + 1][Iy][Iz][1] * gridDim[Ix + 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Ix] * dCoefl) / (gridDim[Ix + 1] + gridDim[Ix]);
						BBd = gridDim[Ix + 1] * Coef / porpor2 + gridDim[Ix] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz] / (gridDim[Ix + 1] + gridDim[Ix]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = fcomp[Ix + 1][Iy][Iz][i][0] - fcomp[Ix][Iy][Iz][i][0];
						RSide += DTran * DeltaX;

						dAAddp = fdE[Ix][Iy][Iz][Nc][0] * gridDim[Ix] * dCoefl;
						dAAddp2 = fdE[Ix + 1][Iy][Iz][Nc][0] * gridDim[Ix + 1] * Coef;
						dBBddp = -dPordp * gridDim[Ix] * dCoefl / (porpor*porpor);
						dBBddp2 = -dPordp2 * gridDim[Ix + 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefl) {
							dRsidedp += -NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}

						if (fphaseStat[Ix + 1][Iy][Iz] == 1) Coef = 0;
						else Coef = 1;
						Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][RO][1] * gridDim[Ix + 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][BMU][1] * gridDim[Ix + 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][1] * gridDim[Ix] * Makhraj - dMug * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix + 1][Iy][Iz][Nc][1] * gridDim[Ix + 1] * Coef*Makhraj - fDiffVisco(Ix + 1, Iy, Iz, Nc, 1)*gridDim[Ix + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Ix] * (fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][Nc][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Ix + 1] * (fblockFProps[Ix + 1][Iy][Iz][BGAM][1] * fdE[Ix + 1][Iy][Iz][Nc][1] / fblockFProps[Ix + 1][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][BGAM][1] * gridDim[Ix + 1] * Coef) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

						if (ftransS[Ix + 1][Iy + 1][Iz + 1][1][0]) {
							dRsidedp -= fcomp[Ix + 1][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][2] * Moshtaq*(fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += (fcomp[Ix + 1][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][2] * Bmoshtaq)*(fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= fcomp[Ix + 1][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (fcomp[Ix + 1][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= (fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);

						}
						//////////////////////////////////////////////////////
						if (fcomp[Ix + 1][Iy][Iz][i][1]>fcomp[Ix][Iy][Iz][i][1]) {
							DupStream = fdiffusion[Ix + 1][Iy][Iz][i][1];
							dDdp = 0;
							dDdp2 = fDifDiffusion(Ix + 1, Iy, Iz, i, Nc, 1);
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][1];
							dDdp = dDiffdpg;
							dDdp2 = 0;
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix + 1][Iy][Iz] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = fblockFProps[Ix + 1][Iy][Iz][RO][1] * gridDim[Ix + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] * dCoefg;
						AAd *= (fsat[Ix + 1][Iy][Iz][2] * gridDim[Ix + 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Ix] * dCoefg) / (gridDim[Ix + 1] + gridDim[Ix]);
						BBd = gridDim[Ix + 1] * Coef / porpor2 + gridDim[Ix] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Nx+Iy]*gridDim[Nx+Ny+Iz]/(gridDim[Ix+1]+gridDim[Ix]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = fcomp[Ix + 1][Iy][Iz][i][1] - fcomp[Ix][Iy][Iz][i][1];
						RSide += DTran * DeltaX;

						dAAddp = fdE[Ix][Iy][Iz][Nc][1] * gridDim[Ix] * dCoefg;
						dAAddp2 = fdE[Ix + 1][Iy][Iz][Nc][1] * gridDim[Ix + 1] * Coef;
						dBBddp = -dPordp * gridDim[Ix] * dCoefg / (porpor*porpor);
						dBBddp2 = -dPordp2 * gridDim[Ix + 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefg) {
							dRsidedp += -NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}


						//////////////////////////////////////////////////////
						Jac1Row[JRowIndex] = PCoeff * (-fcomp[(Ix + ftransS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][0][0] - fcomp[(Ix + ftransS[Ix + 1][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][1][0] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;

					}

					if (Ix>0) {
						if (fphaseStat[Ix - 1][Iy][Iz]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + Iy * Nx + Ix - 1] - reCol2;

						dsw = -fcomp[(Ix - 1 + ftransS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix][Iy + 1][Iz + 1][4][0] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]) - fcomp[(Ix - 1 + ftransS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix][Iy + 1][Iz + 1][6][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						if (!ftransS[Ix][Iy + 1][Iz + 1][0][0]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dso = -fcomp[(Ix - 1 + ftransS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix][Iy + 1][Iz + 1][10][0] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]) - fcomp[(Ix - 1 + ftransS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix][Iy + 1][Iz + 1][11][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						if (!ftransS[Ix][Iy + 1][Iz + 1][0][0]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix - 1][Iy][Iz] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;

						dsgo = -fcomp[(Ix - 1 + ftransS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix][Iy + 1][Iz + 1][8][0] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]) - fcomp[(Ix - 1 + ftransS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix][Iy + 1][Iz + 1][9][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						dsgg = -fcomp[(Ix - 1 + ftransS[Ix][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * ftrans[Ix][Iy + 1][Iz + 1][5][0] * (fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]) - fcomp[(Ix - 1 + ftransS[Ix][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * ftrans[Ix][Iy + 1][Iz + 1][7][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						if (!ftransS[Ix][Iy + 1][Iz + 1][0][0]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix - 1][Iy][Iz] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}
						if (!ftransS[Ix][Iy + 1][Iz + 1][1][0]) {
							Jac1Row[JRowIndex] += (fphaseStat[Ix - 1][Iy][Iz] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;
						/////////////////////////////////////////////////////////////
						////////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (fphaseStat[Ix - 1][Iy][Iz] == (-1)) Coef = 0;
						else Coef = 1;
						Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][RO][0] * gridDim[Ix - 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][BMU][0] * gridDim[Ix - 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][0] * gridDim[Ix] * Makhraj - dMul * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix - 1][Iy][Iz][Nc][0] * gridDim[Ix - 1] * Coef*Makhraj - fDiffVisco(Ix - 1, Iy, Iz, Nc, 0)*gridDim[Ix - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Ix] * (fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][Nc][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Ix - 1] * (fblockFProps[Ix - 1][Iy][Iz][BGAM][0] * fdE[Ix - 1][Iy][Iz][Nc][0] / fblockFProps[Ix - 1][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][BGAM][0] * gridDim[Ix - 1] * Coef) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

						if (ftransS[Ix][Iy + 1][Iz + 1][0][0]) {
							dRsidedp += (fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);
							dBsidedp = -fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);

							dRsidedp += (fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][1])*(Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
							dBsidedp -= fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp += fcomp[Ix - 1][Iy][Iz][i][0] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][1] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);
							dBsidedp = -(fcomp[Ix - 1][Iy][Iz][i][0] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);

							dRsidedp += fcomp[Ix - 1][Iy][Iz][i][0] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
							dBsidedp -= (fcomp[Ix - 1][Iy][Iz][i][0] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][1])*(Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						}

						porpor2 = fporosity[Ix - 1][Iy][Iz] * (1 + cpor * (fP[Ix][Iy + 1][Iz + 1][1] - refP) + dcpor * (fP[Ix][Iy + 1][Iz + 1][1] - refP)*(fP[Ix][Iy + 1][Iz + 1][1] - refP));
						dPordp2 = fporosity[Ix - 1][Iy][Iz] * (cpor + 2 * dcpor*(fP[Ix][Iy + 1][Iz + 1][1] - refP));
						if (fcomp[Ix - 1][Iy][Iz][i][0]>fcomp[Ix][Iy][Iz][i][0]) {
							DupStream = fdiffusion[Ix - 1][Iy][Iz][i][0];
							dDdp = 0;
							dDdp2 = fDifDiffusion(Ix - 1, Iy, Iz, i, Nc, 0);
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][0];
							dDdp = dDiffdpl;
							dDdp2 = 0;
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix - 1][Iy][Iz] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = fblockFProps[Ix - 1][Iy][Iz][RO][0] * gridDim[Ix - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] * dCoefl;
						AAd *= (fsat[Ix - 1][Iy][Iz][1] * gridDim[Ix - 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Ix] * dCoefl) / (gridDim[Ix - 1] + gridDim[Ix]);
						BBd = gridDim[Ix - 1] * Coef / porpor2 + gridDim[Ix] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz] / (gridDim[Ix - 1] + gridDim[Ix]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = fcomp[Ix][Iy][Iz][i][0] - fcomp[Ix - 1][Iy][Iz][i][0];
						RSide -= DTran * DeltaX;

						dAAddp = fdE[Ix][Iy][Iz][Nc][0] * gridDim[Ix] * dCoefl;
						dAAddp2 = fdE[Ix - 1][Iy][Iz][Nc][0] * gridDim[Ix - 1] * Coef;
						dBBddp = -dPordp * gridDim[Ix] * dCoefl / (porpor*porpor);
						dBBddp2 = -dPordp2 * gridDim[Ix - 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefl) {
							dRsidedp += NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += -NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}

						if (fphaseStat[Ix - 1][Iy][Iz] == 1) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][RO][1] * gridDim[Ix - 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][BMU][1] * gridDim[Ix - 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][1] * gridDim[Ix] * Makhraj - dMug * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix - 1][Iy][Iz][Nc][1] * gridDim[Ix - 1] * Coef*Makhraj - fDiffVisco(Ix - 1, Iy, Iz, Nc, 1)*gridDim[Ix - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Ix] * (fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][Nc][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Ix - 1] * (fblockFProps[Ix - 1][Iy][Iz][BGAM][1] * fdE[Ix - 1][Iy][Iz][Nc][1] / fblockFProps[Ix - 1][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][BGAM][1] * gridDim[Ix - 1] * Coef) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

						if (ftransS[Ix][Iy + 1][Iz + 1][1][0]) {
							dRsidedp += (fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);
							dBsidedp = -fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);

							dRsidedp += (fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
							dBsidedp -= fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp += fcomp[Ix - 1][Iy][Iz][i][1] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][2] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);
							dBsidedp = -(fcomp[Ix - 1][Iy][Iz][i][1] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);

							dRsidedp += fcomp[Ix - 1][Iy][Iz][i][1] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
							dBsidedp -= (fcomp[Ix - 1][Iy][Iz][i][1] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						}
						//////////////////////////////////////////////////////////////
						if (fcomp[Ix - 1][Iy][Iz][i][1]>fcomp[Ix][Iy][Iz][i][1]) {
							DupStream = fdiffusion[Ix - 1][Iy][Iz][i][1];
							dDdp = 0;
							dDdp2 = fDifDiffusion(Ix - 1, Iy, Iz, i, Nc, 1);
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][1];
							dDdp = dDiffdpg;
							dDdp2 = 0;
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix - 1][Iy][Iz] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = fblockFProps[Ix - 1][Iy][Iz][RO][1] * gridDim[Ix - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] * dCoefg;
						AAd *= (fsat[Ix - 1][Iy][Iz][2] * gridDim[Ix - 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Ix] * dCoefg) / (gridDim[Ix - 1] + gridDim[Ix]);
						BBd = gridDim[Ix - 1] * Coef / porpor2 + gridDim[Ix] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Nx+Iy]*gridDim[Nx+Ny+Iz]/(gridDim[Ix-1]+gridDim[Ix]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = fcomp[Ix][Iy][Iz][i][1] - fcomp[Ix - 1][Iy][Iz][i][1];
						RSide -= DTran * DeltaX;

						dAAddp = fdE[Ix][Iy][Iz][Nc][1] * gridDim[Ix] * dCoefg;
						dAAddp2 = fdE[Ix - 1][Iy][Iz][Nc][1] * gridDim[Ix - 1] * Coef;
						dBBddp = -dPordp * gridDim[Ix] * dCoefg / (porpor*porpor);
						dBBddp2 = -dPordp2 * gridDim[Ix - 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefg) {
							dRsidedp += NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += -NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}

						///////////////////////////////////////////////////////////////
						Jac1Row[JRowIndex] = PCoeff * (-fcomp[(Ix - 1 + ftransS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * ftrans[Ix][Iy + 1][Iz + 1][0][0] - fcomp[(Ix - 1 + ftransS[Ix][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * ftrans[Ix][Iy + 1][Iz + 1][1][0] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;
					}

					if (Iy<(Ny - 1)) {
						if (fphaseStat[Ix][Iy + 1][Iz]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + (Iy + 1)*Nx + Ix] - reCol2;

						dsw = fcomp[Ix][(Iy + ftransS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][4][1] * (fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) + fcomp[Ix][(Iy + ftransS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][6][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dso = fcomp[Ix][(Iy + ftransS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][10][1] * (fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) + fcomp[Ix][(Iy + ftransS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][11][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix][Iy + 1][Iz] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;

						dsgo = fcomp[Ix][(Iy + ftransS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][8][1] * (fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) + fcomp[Ix][(Iy + ftransS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][9][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						dsgg = fcomp[Ix][(Iy + ftransS[Ix + 1][Iy + 1][Iz + 1][1][1])][Iz][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][5][1] * (fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]) + fcomp[Ix][(Iy + ftransS[Ix + 1][Iy + 1][Iz + 1][1][1])][Iz][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][7][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix][Iy + 1][Iz] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][1][1]) {
							Jac1Row[JRowIndex] += (fphaseStat[Ix][Iy + 1][Iz] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;
						//////////////////////////////////////////////////////////////////////////////
						/////////////////////////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (fphaseStat[Ix][Iy + 1][Iz] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][RO][0] * gridDim[Nx + Iy + 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][BMU][0] * gridDim[Nx + Iy + 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Iy] * Makhraj - dMul * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix][Iy + 1][Iz][Nc][0] * gridDim[Nx + Iy + 1] * Coef*Makhraj - fDiffVisco(Ix, Iy + 1, Iz, Nc, 0)*gridDim[Nx + Iy + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Iy] * (fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][Nc][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Iy + 1] * (fblockFProps[Ix][Iy + 1][Iz][BGAM][0] * fdE[Ix][Iy + 1][Iz][Nc][0] / fblockFProps[Ix][Iy + 1][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][BGAM][0] * gridDim[Nx + Iy + 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][1]) {
							dRsidedp -= fcomp[Ix][Iy + 1][Iz][i][0] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][1] * Moshtaq*(fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = (fcomp[Ix][Iy + 1][Iz][i][0] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= fcomp[Ix][Iy + 1][Iz][i][0] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (fcomp[Ix][Iy + 1][Iz][i][0] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= (fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}

						porpor2 = fporosity[Ix][Iy + 1][Iz] * (1 + cpor * (fP[Ix + 1][Iy + 2][Iz + 1][1] - refP) + dcpor * (fP[Ix + 1][Iy + 2][Iz + 1][1] - refP)*(fP[Ix + 1][Iy + 2][Iz + 1][1] - refP));
						dPordp2 = fporosity[Ix][Iy + 1][Iz] * (cpor + 2 * dcpor*(fP[Ix + 1][Iy + 2][Iz + 1][1] - refP));
						if (fcomp[Ix][Iy + 1][Iz][i][0]>fcomp[Ix][Iy][Iz][i][0]) {
							DupStream = fdiffusion[Ix][Iy + 1][Iz][i][0];
							dDdp = 0;
							dDdp2 = fDifDiffusion(Ix, Iy + 1, Iz, i, Nc, 0);
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][0];
							dDdp = dDiffdpl;
							dDdp2 = 0;
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix][Iy + 1][Iz] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = fblockFProps[Ix][Iy + 1][Iz][RO][0] * gridDim[Nx + Iy + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] * dCoefl;
						AAd *= (fsat[Ix][Iy + 1][Iz][1] * gridDim[Nx + Iy + 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Nx + Iy] * dCoefl) / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
						BBd = gridDim[Nx + Iy + 1] * Coef / porpor2 + gridDim[Nx + Iy] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Ix] * gridDim[Nx + Ny + Iz] / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = fcomp[Ix][Iy + 1][Iz][i][0] - fcomp[Ix][Iy][Iz][i][0];
						RSide += DTran * DeltaX;

						dAAddp = fdE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Iy] * dCoefl;
						dAAddp2 = fdE[Ix][Iy + 1][Iz][Nc][0] * gridDim[Nx + Iy + 1] * Coef;
						dBBddp = -dPordp * gridDim[Nx + Iy] * dCoefl / (porpor*porpor);
						dBBddp2 = -dPordp2 * gridDim[Nx + Iy + 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefl) {
							dRsidedp += -NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}

						if (fphaseStat[Ix][Iy + 1][Iz] == 1) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][RO][1] * gridDim[Nx + Iy + 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][BMU][1] * gridDim[Nx + Iy + 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Iy] * Makhraj - dMug * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix][Iy + 1][Iz][Nc][1] * gridDim[Nx + Iy + 1] * Coef*Makhraj - fDiffVisco(Ix, Iy + 1, Iz, Nc, 1)*gridDim[Nx + Iy + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = Coef * gridDim[Nx + Iy] * (fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][Nc][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);
						BmoshtaqGama = gridDim[Nx + Iy + 1] * (fblockFProps[Ix][Iy + 1][Iz][BGAM][1] * fdE[Ix][Iy + 1][Iz][Nc][1] / fblockFProps[Ix][Iy + 1][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][BGAM][1] * gridDim[Nx + Iy + 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

						if (ftransS[Ix + 1][Iy + 1][Iz + 1][1][1]) {
							dRsidedp -= fcomp[Ix][Iy + 1][Iz][i][1] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][2] * Moshtaq*(fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += (fcomp[Ix][Iy + 1][Iz][i][1] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= fcomp[Ix][Iy + 1][Iz][i][1] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (fcomp[Ix][Iy + 1][Iz][i][1] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= (fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}

						/////////////////////////////////////////////////////////////////////////////
						if (fcomp[Ix][Iy + 1][Iz][i][1]>fcomp[Ix][Iy][Iz][i][1]) {
							DupStream = fdiffusion[Ix][Iy + 1][Iz][i][1];
							dDdp = 0;
							dDdp2 = fDifDiffusion(Ix, Iy + 1, Iz, i, Nc, 1);
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][1];
							dDdp = dDiffdpg;
							dDdp2 = 0;
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix][Iy + 1][Iz] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = fblockFProps[Ix][Iy + 1][Iz][RO][1] * gridDim[Nx + Iy + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] * dCoefg;
						AAd *= (fsat[Ix][Iy + 1][Iz][2] * gridDim[Nx + Iy + 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Nx + Iy] * dCoefg) / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
						BBd = gridDim[Nx + Iy + 1] * Coef / porpor2 + gridDim[Nx + Iy] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Ix]*gridDim[Nx+Ny+Iz]/(gridDim[Nx+Iy+1]+gridDim[Nx+Iy]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = fcomp[Ix][Iy + 1][Iz][i][1] - fcomp[Ix][Iy][Iz][i][1];
						RSide += DTran * DeltaX;

						dAAddp = fdE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Iy] * dCoefg;
						dAAddp2 = fdE[Ix][Iy + 1][Iz][Nc][1] * gridDim[Nx + Iy + 1] * Coef;
						dBBddp = -dPordp * gridDim[Nx + Iy] * dCoefg / (porpor*porpor);
						dBBddp2 = -dPordp2 * gridDim[Nx + Iy + 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefg) {
							dRsidedp += -NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}
						/////////////////////////////////////////////////////////////////////////////
						Jac1Row[JRowIndex] = PCoeff * (-fcomp[Ix][(Iy + ftransS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][0][1] - fcomp[Ix][(Iy + ftransS[Ix + 1][Iy + 1][Iz + 1][1][1])][Iz][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][1][1] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;
					}

					if (Iy>0) {
						if (fphaseStat[Ix][Iy - 1][Iz]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + (Iy - 1)*Nx + Ix] - reCol2;

						dsw = -fcomp[Ix][(Iy - 1 + ftransS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy][Iz + 1][4][1] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]) - fcomp[Ix][(Iy - 1 + ftransS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy][Iz + 1][6][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						if (!ftransS[Ix + 1][Iy][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dso = -fcomp[Ix][(Iy - 1 + ftransS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy][Iz + 1][10][1] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]) - fcomp[Ix][(Iy - 1 + ftransS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy][Iz + 1][11][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						if (!ftransS[Ix + 1][Iy][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix][Iy - 1][Iz] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;

						dsgo = -fcomp[Ix][(Iy - 1 + ftransS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy][Iz + 1][8][1] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]) - fcomp[Ix][(Iy - 1 + ftransS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy][Iz + 1][9][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						dsgg = -fcomp[Ix][(Iy - 1 + ftransS[Ix + 1][Iy][Iz + 1][1][1])][Iz][i][1] * ftrans[Ix + 1][Iy][Iz + 1][5][1] * (fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]) - fcomp[Ix][(Iy - 1 + ftransS[Ix + 1][Iy][Iz + 1][1][1])][Iz][i][1] * ftrans[Ix + 1][Iy][Iz + 1][7][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						if (!ftransS[Ix + 1][Iy][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix][Iy - 1][Iz] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}
						if (!ftransS[Ix + 1][Iy][Iz + 1][1][1]) {
							Jac1Row[JRowIndex] += (fphaseStat[Ix][Iy - 1][Iz] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;

						//////////////////////////////////////////////////////////////////
						/////////////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (fphaseStat[Ix][Iy - 1][Iz] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][RO][0] * gridDim[Nx + Iy - 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][BMU][0] * gridDim[Nx + Iy - 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Iy] * Makhraj - dMul * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix][Iy - 1][Iz][Nc][0] * gridDim[Nx + Iy - 1] * Coef*Makhraj - fDiffVisco(Ix, Iy - 1, Iz, Nc, 0)*gridDim[Nx + Iy - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Iy] * (fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][Nc][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Iy - 1] * (fblockFProps[Ix][Iy - 1][Iz][BGAM][0] * fdE[Ix][Iy - 1][Iz][Nc][0] / fblockFProps[Ix][Iy - 1][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][BGAM][0] * gridDim[Nx + Iy - 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

						if (ftransS[Ix + 1][Iy][Iz + 1][0][1]) {
							dRsidedp += (fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);
							dBsidedp = -fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);

							dRsidedp += (fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][1])*(Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
							dBsidedp -= fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						}
						else {
							dRsidedp += fcomp[Ix][Iy - 1][Iz][i][0] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][1] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);
							dBsidedp = -(fcomp[Ix][Iy - 1][Iz][i][0] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);

							dRsidedp += fcomp[Ix][Iy - 1][Iz][i][0] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
							dBsidedp -= (fcomp[Ix][Iy - 1][Iz][i][0] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][1])*(Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						}

						porpor2 = fporosity[Ix][Iy - 1][Iz] * (1 + cpor * (fP[Ix + 1][Iy][Iz + 1][1] - refP) + dcpor * (fP[Ix + 1][Iy][Iz + 1][1] - refP)*(fP[Ix + 1][Iy][Iz + 1][1] - refP));
						dPordp2 = fporosity[Ix][Iy - 1][Iz] * (cpor + 2 * dcpor*(fP[Ix + 1][Iy][Iz + 1][1] - refP));
						if (fcomp[Ix][Iy - 1][Iz][i][0]>fcomp[Ix][Iy][Iz][i][0]) {
							DupStream = fdiffusion[Ix][Iy - 1][Iz][i][0];
							dDdp = 0;
							dDdp2 = fDifDiffusion(Ix, Iy - 1, Iz, i, Nc, 0);
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][0];
							dDdp = dDiffdpl;
							dDdp2 = 0;
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix][Iy - 1][Iz] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = fblockFProps[Ix][Iy - 1][Iz][RO][0] * gridDim[Nx + Iy - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] * dCoefl;
						AAd *= (fsat[Ix][Iy - 1][Iz][1] * gridDim[Nx + Iy - 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Nx + Iy] * dCoefl) / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
						BBd = gridDim[Nx + Iy - 1] * Coef / porpor2 + gridDim[Nx + Iy] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Ix] * gridDim[Nx + Ny + Iz] / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = fcomp[Ix][Iy][Iz][i][0] - fcomp[Ix][Iy - 1][Iz][i][0];
						RSide -= DTran * DeltaX;

						dAAddp = fdE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Iy] * dCoefl;
						dAAddp2 = fdE[Ix][Iy - 1][Iz][Nc][0] * gridDim[Nx + Iy - 1] * Coef;
						dBBddp = -dPordp * gridDim[Nx + Iy] * dCoefl / (porpor*porpor);
						dBBddp2 = -dPordp2 * gridDim[Nx + Iy - 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefl) {
							dRsidedp += NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += -NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}

						if (fphaseStat[Ix][Iy - 1][Iz] == 1) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][RO][1] * gridDim[Nx + Iy - 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][BMU][1] * gridDim[Nx + Iy - 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Iy] * Makhraj - dMug * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix][Iy - 1][Iz][Nc][1] * gridDim[Nx + Iy - 1] * Coef*Makhraj - fDiffVisco(Ix, Iy - 1, Iz, Nc, 1)*gridDim[Nx + Iy - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Iy] * (fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][Nc][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Iy - 1] * (fblockFProps[Ix][Iy - 1][Iz][BGAM][1] * fdE[Ix][Iy - 1][Iz][Nc][1] / fblockFProps[Ix][Iy - 1][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][BGAM][1] * gridDim[Nx + Iy - 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

						if (ftransS[Ix + 1][Iy][Iz + 1][1][1]) {
							dRsidedp += (fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);
							dBsidedp -= fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);

							dRsidedp += (fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
							dBsidedp -= fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						}
						else {
							dRsidedp += fcomp[Ix][Iy - 1][Iz][i][1] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][2] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);
							dBsidedp -= (fcomp[Ix][Iy - 1][Iz][i][1] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);

							dRsidedp += fcomp[Ix][Iy - 1][Iz][i][1] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
							dBsidedp -= (fcomp[Ix][Iy - 1][Iz][i][1] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						}

						///////////////////////////////////////////////////////////////////
						if (fcomp[Ix][Iy - 1][Iz][i][1]>fcomp[Ix][Iy][Iz][i][1]) {
							DupStream = fdiffusion[Ix][Iy - 1][Iz][i][1];
							dDdp = 0;
							dDdp2 = fDifDiffusion(Ix, Iy - 1, Iz, i, Nc, 1);
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][1];
							dDdp = dDiffdpg;
							dDdp2 = 0;
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix][Iy - 1][Iz] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = fblockFProps[Ix][Iy - 1][Iz][RO][1] * gridDim[Nx + Iy - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] * dCoefg;
						AAd *= (fsat[Ix][Iy - 1][Iz][2] * gridDim[Nx + Iy - 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Nx + Iy] * dCoefg) / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
						BBd = gridDim[Nx + Iy - 1] * Coef / porpor2 + gridDim[Nx + Iy] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Ix]*gridDim[Nx+Ny+Iz]/(gridDim[Nx+Iy-1]+gridDim[Nx+Iy]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = fcomp[Ix][Iy][Iz][i][1] - fcomp[Ix][Iy - 1][Iz][i][1];
						RSide -= DTran * DeltaX;

						dAAddp = fdE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Iy] * dCoefg;
						dAAddp2 = fdE[Ix][Iy - 1][Iz][Nc][1] * gridDim[Nx + Iy - 1] * Coef;
						dBBddp = -dPordp * gridDim[Nx + Iy] * dCoefg / (porpor*porpor);
						dBBddp2 = -dPordp2 * gridDim[Nx + Iy - 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefg) {
							dRsidedp += NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += -NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}

						//////////////////////////////////////////////////////////////////
						Jac1Row[JRowIndex] = PCoeff * (-fcomp[Ix][(Iy - 1 + ftransS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * ftrans[Ix + 1][Iy][Iz + 1][0][1] - fcomp[Ix][(Iy - 1 + ftransS[Ix + 1][Iy][Iz + 1][1][1])][Iz][i][1] * ftrans[Ix + 1][Iy][Iz + 1][1][1] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;
					}

					if (Iz<(Nz - 1)) {
						if (fphaseStat[Ix][Iy][Iz + 1]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[Nx*Ny*Nz + (Iz + 1)*(Nx*Ny) + Iy * Nx + Ix] - reCol2;

						dsw = fcomp[Ix][Iy][(Iz + ftransS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][4][2] * (fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) + fcomp[Ix][Iy][(Iz + ftransS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][6][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][2]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dso = fcomp[Ix][Iy][(Iz + ftransS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][10][2] * (fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) + fcomp[Ix][Iy][(Iz + ftransS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][11][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][2]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix][Iy][Iz + 1] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;

						dsgo = fcomp[Ix][Iy][(Iz + ftransS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][8][2] * (fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) + fcomp[Ix][Iy][(Iz + ftransS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][9][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						dsgg = fcomp[Ix][Iy][(Iz + ftransS[Ix + 1][Iy + 1][Iz + 1][1][2])][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][5][2] * (fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]) + fcomp[Ix][Iy][(Iz + ftransS[Ix + 1][Iy + 1][Iz + 1][1][2])][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][7][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][2]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix][Iy][Iz + 1] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][1][2]) {
							Jac1Row[JRowIndex] += (fphaseStat[Ix][Iy][Iz + 1] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;
						///////////////////////////////////////////////////////////////////////////
						////////////////////////////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (fphaseStat[Ix][Iy][Iz + 1] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][RO][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][BMU][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Ny + Iz] * Makhraj - dMul * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix][Iy][Iz + 1][Nc][0] * gridDim[Nx + Ny + Iz + 1] * Coef*Makhraj - fDiffVisco(Ix, Iy, Iz + 1, Nc, 0)*gridDim[Nx + Ny + Iz + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Ny + Iz] * (fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][Nc][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz + 1] * (fblockFProps[Ix][Iy][Iz + 1][BGAM][0] * fdE[Ix][Iy][Iz + 1][Nc][0] / fblockFProps[Ix][Iy][Iz + 1][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][BGAM][0] * gridDim[Nx + Ny + Iz + 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][2]) {
							dRsidedp -= fcomp[Ix][Iy][Iz + 1][i][0] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][1] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = (fcomp[Ix][Iy][Iz + 1][i][0] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= fcomp[Ix][Iy][Iz + 1][i][0] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (fcomp[Ix][Iy][Iz + 1][i][0] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= (fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}

						porpor2 = fporosity[Ix][Iy][Iz + 1] * (1 + cpor * (fP[Ix + 1][Iy + 1][Iz + 2][1] - refP) + dcpor * (fP[Ix + 1][Iy + 1][Iz + 2][1] - refP)*(fP[Ix + 1][Iy + 1][Iz + 2][1] - refP));
						dPordp2 = fporosity[Ix][Iy][Iz + 1] * (cpor + 2 * dcpor*(fP[Ix + 1][Iy + 1][Iz + 2][1] - refP));
						if (fcomp[Ix][Iy][Iz + 1][i][0]>fcomp[Ix][Iy][Iz][i][0]) {
							DupStream = fdiffusion[Ix][Iy][Iz + 1][i][0];
							dDdp = 0;
							dDdp2 = fDifDiffusion(Ix, Iy, Iz + 1, i, Nc, 0);
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][0];
							dDdp = dDiffdpl;
							dDdp2 = 0;
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix][Iy][Iz + 1] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = fblockFProps[Ix][Iy][Iz + 1][RO][0] * gridDim[Nx + Ny + Iz + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] * dCoefl;
						AAd *= (fsat[Ix][Iy][Iz + 1][1] * gridDim[Nx + Ny + Iz + 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Nx + Ny + Iz] * dCoefl) / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
						BBd = gridDim[Nx + Ny + Iz + 1] * Coef / porpor2 + gridDim[Nx + Ny + Iz] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Ix] * gridDim[Nx + Iy] / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = fcomp[Ix][Iy][Iz + 1][i][0] - fcomp[Ix][Iy][Iz][i][0];
						RSide += DTran * DeltaX;

						dAAddp = fdE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Ny + Iz] * dCoefl;
						dAAddp2 = fdE[Ix][Iy][Iz + 1][Nc][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
						dBBddp = -dPordp * gridDim[Nx + Ny + Iz] * dCoefl / (porpor*porpor);
						dBBddp2 = -dPordp2 * gridDim[Nx + Ny + Iz + 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefl) {
							dRsidedp += -NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}

						if (fphaseStat[Ix][Iy][Iz + 1] == 1) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][RO][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][BMU][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Ny + Iz] * Makhraj - dMug * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix][Iy][Iz + 1][Nc][1] * gridDim[Nx + Ny + Iz + 1] * Coef*Makhraj - fDiffVisco(Ix, Iy, Iz + 1, Nc, 1)*gridDim[Nx + Ny + Iz + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Ny + Iz] * (fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][Nc][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz + 1] * (fblockFProps[Ix][Iy][Iz + 1][BGAM][1] * fdE[Ix][Iy][Iz + 1][Nc][1] / fblockFProps[Ix][Iy][Iz + 1][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][BGAM][1] * gridDim[Nx + Ny + Iz + 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

						if (ftransS[Ix + 1][Iy + 1][Iz + 1][1][2]) {
							dRsidedp -= fcomp[Ix][Iy][Iz + 1][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][2] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += (fcomp[Ix][Iy][Iz + 1][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= fcomp[Ix][Iy][Iz + 1][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (fcomp[Ix][Iy][Iz + 1][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= (fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						///////////////////////////////////////////////////////////////////////////////
						if (fcomp[Ix][Iy][Iz + 1][i][1]>fcomp[Ix][Iy][Iz][i][1]) {
							DupStream = fdiffusion[Ix][Iy][Iz + 1][i][1];
							dDdp = 0;
							dDdp2 = fDifDiffusion(Ix, Iy, Iz + 1, i, Nc, 1);
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][1];
							dDdp = dDiffdpg;
							dDdp2 = 0;
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix][Iy][Iz + 1] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = fblockFProps[Ix][Iy][Iz + 1][RO][1] * gridDim[Nx + Ny + Iz + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] * dCoefg;
						AAd *= (fsat[Ix][Iy][Iz + 1][2] * gridDim[Nx + Ny + Iz + 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Nx + Ny + Iz] * dCoefg) / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
						BBd = gridDim[Nx + Ny + Iz + 1] * Coef / porpor2 + gridDim[Nx + Ny + Iz] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Ix]*gridDim[Nx+Iy]/(gridDim[Nx+Ny+Iz+1]+gridDim[Nx+Ny+Iz]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = fcomp[Ix][Iy][Iz + 1][i][1] - fcomp[Ix][Iy][Iz][i][1];
						RSide += DTran * DeltaX;

						dAAddp = fdE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Ny + Iz] * dCoefg;
						dAAddp2 = fdE[Ix][Iy][Iz + 1][Nc][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
						dBBddp = -dPordp * gridDim[Nx + Ny + Iz] * dCoefg / (porpor*porpor);
						dBBddp2 = -dPordp2 * gridDim[Nx + Ny + Iz + 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefg) {
							dRsidedp += -NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}

						//////////////////////////////////////////////////////////////////////////////
						Jac1Row[JRowIndex] = PCoeff * (-fcomp[Ix][Iy][(Iz + ftransS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz + 1][0][2] - fcomp[Ix][Iy][(Iz + ftransS[Ix + 1][Iy + 1][Iz + 1][1][2])][i][1] * ftrans[Ix + 1][Iy + 1][Iz + 1][1][2] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;
					}

					if (Iz>0) {
						if (fphaseStat[Ix][Iy][Iz - 1]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[Nx*Ny*Nz + (Iz - 1)*(Nx*Ny) + Iy * Nx + Ix] - reCol2;

						dsw = -fcomp[Ix][Iy][(Iz - 1 + ftransS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz][4][2] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]) - fcomp[Ix][Iy][(Iz - 1 + ftransS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz][6][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						if (!ftransS[Ix + 1][Iy + 1][Iz][0][2]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dso = -fcomp[Ix][Iy][(Iz - 1 + ftransS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz][10][2] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]) - fcomp[Ix][Iy][(Iz - 1 + ftransS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz][11][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						if (!ftransS[Ix + 1][Iy + 1][Iz][0][2]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix][Iy][Iz - 1] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;

						dsgo = -fcomp[Ix][Iy][(Iz - 1 + ftransS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz][8][2] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]) - fcomp[Ix][Iy][(Iz - 1 + ftransS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz][9][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						dsgg = -fcomp[Ix][Iy][(Iz - 1 + ftransS[Ix + 1][Iy + 1][Iz][1][2])][i][1] * ftrans[Ix + 1][Iy + 1][Iz][5][2] * (fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]) - fcomp[Ix][Iy][(Iz - 1 + ftransS[Ix + 1][Iy + 1][Iz][1][2])][i][1] * ftrans[Ix + 1][Iy + 1][Iz][7][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						if (!ftransS[Ix + 1][Iy + 1][Iz][0][2]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix][Iy][Iz - 1] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}
						if (!ftransS[Ix + 1][Iy + 1][Iz][1][2]) {
							Jac1Row[JRowIndex] += (fphaseStat[Ix][Iy][Iz - 1] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;

						///////////////////////////////////////////////////////////////
						///////////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (fphaseStat[Ix][Iy][Iz - 1] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][RO][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][BMU][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Ny + Iz] * Makhraj - dMul * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix][Iy][Iz - 1][Nc][0] * gridDim[Nx + Ny + Iz - 1] * Coef*Makhraj - fDiffVisco(Ix, Iy, Iz - 1, Nc, 0)*gridDim[Nx + Ny + Iz - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Ny + Iz] * (fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][Nc][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz - 1] * (fblockFProps[Ix][Iy][Iz - 1][BGAM][0] * fdE[Ix][Iy][Iz - 1][Nc][0] / fblockFProps[Ix][Iy][Iz - 1][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][BGAM][0] * gridDim[Nx + Ny + Iz - 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

						if (ftransS[Ix + 1][Iy + 1][Iz][0][2]) {
							dRsidedp += (fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);
							dBsidedp = -fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);

							dRsidedp += (fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][1])*(Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							dBsidedp -= fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						}
						else {
							dRsidedp += fcomp[Ix][Iy][Iz - 1][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][1] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);
							dBsidedp = -(fcomp[Ix][Iy][Iz - 1][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);

							dRsidedp += fcomp[Ix][Iy][Iz - 1][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							dBsidedp -= (fcomp[Ix][Iy][Iz - 1][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][1])*(Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						}

						porpor2 = fporosity[Ix][Iy][Iz - 1] * (1 + cpor * (fP[Ix + 1][Iy + 1][Iz][1] - refP) + dcpor * (fP[Ix + 1][Iy + 1][Iz][1] - refP)*(fP[Ix + 1][Iy + 1][Iz][1] - refP));
						dPordp2 = fporosity[Ix][Iy][Iz - 1] * (cpor + 2 * dcpor*(fP[Ix + 1][Iy + 1][Iz][1] - refP));
						if (fcomp[Ix][Iy][Iz - 1][i][0]>fcomp[Ix][Iy][Iz][i][0]) {
							DupStream = fdiffusion[Ix][Iy][Iz - 1][i][0];
							dDdp = 0;
							dDdp2 = fDifDiffusion(Ix, Iy, Iz - 1, i, Nc, 0);
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][0];
							dDdp = dDiffdpl;
							dDdp2 = 0;
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix][Iy][Iz - 1] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = fblockFProps[Ix][Iy][Iz - 1][RO][0] * gridDim[Nx + Ny + Iz - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] * dCoefl;
						AAd *= (fsat[Ix][Iy][Iz - 1][1] * gridDim[Nx + Ny + Iz - 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Nx + Ny + Iz] * dCoefl) / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
						BBd = gridDim[Nx + Ny + Iz - 1] * Coef / porpor2 + gridDim[Nx + Ny + Iz] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Ix] * gridDim[Nx + Iy] / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = fcomp[Ix][Iy][Iz][i][0] - fcomp[Ix][Iy][Iz - 1][i][0];
						RSide -= DTran * DeltaX;

						dAAddp = fdE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Ny + Iz] * dCoefl;
						dAAddp2 = fdE[Ix][Iy][Iz - 1][Nc][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
						dBBddp = -dPordp * gridDim[Nx + Ny + Iz] * dCoefl / (porpor*porpor);
						dBBddp2 = -dPordp2 * gridDim[Nx + Ny + Iz - 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefl) {
							dRsidedp += NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += -NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}

						if (fphaseStat[Ix][Iy][Iz - 1] == 1) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][RO][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][BMU][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Ny + Iz] * Makhraj - dMug * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix][Iy][Iz - 1][Nc][1] * gridDim[Nx + Ny + Iz - 1] * Coef*Makhraj - fDiffVisco(Ix, Iy, Iz - 1, Nc, 1)*gridDim[Nx + Ny + Iz - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Ny + Iz] * (fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][Nc][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz - 1] * (fblockFProps[Ix][Iy][Iz - 1][BGAM][1] * fdE[Ix][Iy][Iz - 1][Nc][1] / fblockFProps[Ix][Iy][Iz - 1][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][BGAM][1] * gridDim[Nx + Ny + Iz - 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

						if (ftransS[Ix + 1][Iy + 1][Iz][1][2]) {
							dRsidedp += (fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);
							dBsidedp -= fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);

							dRsidedp += (fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							dBsidedp -= fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						}
						else {
							dRsidedp += fcomp[Ix][Iy][Iz - 1][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][2] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);
							dBsidedp -= (fcomp[Ix][Iy][Iz - 1][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);

							dRsidedp += fcomp[Ix][Iy][Iz - 1][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							dBsidedp -= (fcomp[Ix][Iy][Iz - 1][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						}
						//////////////////////////////////////////////////////////////////
						if (fcomp[Ix][Iy][Iz - 1][i][1]>fcomp[Ix][Iy][Iz][i][1]) {
							DupStream = fdiffusion[Ix][Iy][Iz - 1][i][1];
							dDdp = 0;
							dDdp2 = fDifDiffusion(Ix, Iy, Iz - 1, i, Nc, 1);
						}
						else {
							DupStream = fdiffusion[Ix][Iy][Iz][i][1];
							dDdp = dDiffdpg;
							dDdp2 = 0;
						}
						if ((fporosity[Ix][Iy][Iz] < 1e-10) || (fporosity[Ix][Iy][Iz - 1] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = fblockFProps[Ix][Iy][Iz - 1][RO][1] * gridDim[Nx + Ny + Iz - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] * dCoefg;
						AAd *= (fsat[Ix][Iy][Iz - 1][2] * gridDim[Nx + Ny + Iz - 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Nx + Ny + Iz] * dCoefg) / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
						BBd = gridDim[Nx + Ny + Iz - 1] * Coef / porpor2 + gridDim[Nx + Ny + Iz] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Ix]*gridDim[Nx+Iy]/(gridDim[Nx+Ny+Iz-1]+gridDim[Nx+Ny+Iz]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = fcomp[Ix][Iy][Iz][i][1] - fcomp[Ix][Iy][Iz - 1][i][1];
						RSide -= DTran * DeltaX;

						dAAddp = fdE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Ny + Iz] * dCoefg;
						dAAddp2 = fdE[Ix][Iy][Iz - 1][Nc][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
						dBBddp = -dPordp * gridDim[Nx + Ny + Iz] * dCoefg / (porpor*porpor);
						dBBddp2 = -dPordp2 * gridDim[Nx + Ny + Iz - 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefg) {
							dRsidedp += NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += -NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}
						//////////////////////////////////////////////////////////////////
						Jac1Row[JRowIndex] = PCoeff * (-fcomp[Ix][Iy][(Iz - 1 + ftransS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * ftrans[Ix + 1][Iy + 1][Iz][0][2] - fcomp[Ix][Iy][(Iz - 1 + ftransS[Ix + 1][Iy + 1][Iz][1][2])][i][1] * ftrans[Ix + 1][Iy + 1][Iz][1][2] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;
					}

					Jac1Row[JRowIndex] = PCoeff * (dLsidedp + dRsidedp + fcomp[Ix][Iy][Iz][i][0] * PIo + gComp * PIg);
					Jac1Col[JRowIndex] = jacCol + (2 * Nc) - reCol;
					JRowIndex++;


					if (fphaseStat[Ix][Iy][Iz] != -1) {
						Jac1Row[JRowIndex] = -dRsidedSw;
						Jac1Col[JRowIndex] = jacCol + (2 * Nc + 1) - reCol;
						JRowIndex++;
						Jac1Row[JRowIndex] = dLsidedSo - dRsidedSo;
						Jac1Col[JRowIndex] = jacCol + (2 * Nc + 2) - reCol;
						JRowIndex++;
						//reCol1 = 0;
						reCol3 = 0;
					}
					else {
						//reCol1 = 2;
						reCol3 = 1;
					}

					if (fphaseStat[Ix][Iy][Iz] != 1) {
						Jac1Row[JRowIndex] = dLsidedSg - dRsidedSg;
						Jac1Col[JRowIndex] = jacCol + (2 * Nc + 3) - reCol - reCol3;
						JRowIndex++;
					}

					/////////////////////////////////////////////////Sadeq///////////////////////////////////
					if (phaseStat[Ix][Iy][Iz] == 1) {
						reColF1 = Nc;
						//reColF2
						//dRsideMdSo = 0;
						Jac1Row[JRowIndex] = dRsideMdSo;
						Jac1Col[JRowIndex] = MatrixEq + 2 * Nc + 2 - reColF1;
						JRowIndex++;
					}
					else if (phaseStat[Ix][Iy][Iz] == (-1)) {
						reColF1 = Nc;
						//reColF2 = Nc;
						//dRsideMdSg = 0;
						Jac1Row[JRowIndex] = dRsideMdSg;
						Jac1Col[JRowIndex] = MatrixEq + 2 * Nc + 2 - reColF1;
						JRowIndex++;
					}
					else {
						reColF1 = 0;
						//reColF2 = 0;
						//dRsideMdSo = 0;
						Jac1Row[JRowIndex] = dRsideMdSo;
						Jac1Col[JRowIndex] = MatrixEq + 2 * Nc + 2 - reColF1;
						JRowIndex++;
						//dRsideMdSg = 0;
						Jac1Row[JRowIndex] = dRsideMdSg;
						Jac1Col[JRowIndex] = MatrixEq + 2 * Nc + 3 - reColF1;
						JRowIndex++;
					}
					//dRsideMdp = 0;
					Jac1Row[JRowIndex] = PCoeff * dRsideMdp;
					Jac1Col[JRowIndex] = MatrixEq + 2 * Nc - reColF1;
					JRowIndex++;
					//dRsideMdSw = 0;
					Jac1Row[JRowIndex] = dRsideMdSw;
					Jac1Col[JRowIndex] = MatrixEq + 2 * Nc + 1 - reColF1;
					JRowIndex++;
					//////////////////////////Sadeq///////////////////////////////


					for (k = 0; k<Nc; k++) {
						dRsidedxl = 0;
						dRsidedxg = 0;
						dRsideMdxl = 0;
						dRsideMdxg = 0;

						dMul = fDiffVisco(Ix, Iy, Iz, k, 0);
						dMug = fDiffVisco(Ix, Iy, Iz, k, 1);
						dDiffdxl = fDifDiffusion(Ix, Iy, Iz, i, k, 0);
						dDiffdxg = fDifDiffusion(Ix, Iy, Iz, i, k, 1);


						if (k == i) {
							// Transfer function drside dxl dxg 
							// moshtagh transfer Function jabejaie naft nesbat be xl Matrix
							dRsideMdxl -= ZERO_CONV * SI_C * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
							dRsideMdxl -= ZERO_CONV * SI_C * dE[Ix][Iy][Iz][k][0] * comp[Ix][Iy][Iz][i][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
							dRsideMdxl -= ZERO_CONV * -SI_C * DiffVisco(Ix, Iy, Iz, k, 0) * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] * Mporpor / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor)*(blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) * (porpor + Mporpor);

							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (1)) {
								dRsideMdxl -= ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
								dRsideMdxl -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								dRsideMdxl -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsideMdxl -= ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
								dRsideMdxl -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								dRsideMdxl -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
							}

							//if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								//dRsideMdxl -= ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
								//dRsideMdxl -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								//dRsideMdxl -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
							//}

							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0)) {
								//dRsideMdxl -= ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
								//dRsideMdxl -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								//dRsideMdxl -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);

								dRsideMdxl -= ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
								dRsideMdxl -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								dRsideMdxl -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1)) {
								dRsideMdxl -= ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
								dRsideMdxl -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								dRsideMdxl -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
							}

							//if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								//dRsideMdxl -= ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
								//dRsideMdxl -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								//dRsideMdxl -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
							//}


							// moshtagh transfer Function jabejaie naft nesbat be xl Fracture
							dRsidedxl -= ZERO_CONV * -SI_C * fDiffVisco(Ix, Iy, Iz, k, 0) * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] * porpor / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor)*(blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) * (porpor + Mporpor);

							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (1)) {
								dRsidedxl -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsidedxl -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
							}

							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (1)) {
								dRsidedxl -= ZERO_DIFF * fdE[Ix][Iy][Iz][k][0] * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
								dRsidedxl -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0];
								dRsidedxl -= ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1)) {
								dRsidedxl -= ZERO_DIFF * fdE[Ix][Iy][Iz][k][0] * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
								dRsidedxl -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0];
								dRsidedxl -= ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);

								dRsidedxl -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
							}

							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsidedxl -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
							}

							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsidedxl -= ZERO_DIFF * fdE[Ix][Iy][Iz][k][0] * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
								dRsidedxl -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0];
								dRsidedxl -= ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
							}

							// moshtagh transfer Function jabejaie gaz nesbat be xg Matrix
							dRsideMdxg -= ZERO_CONV * SI_C * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor) / (porpor + Mporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));
							dRsideMdxg -= ZERO_CONV * SI_C * dE[Ix][Iy][Iz][k][1] * comp[Ix][Iy][Iz][i][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor) / (porpor + Mporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));
							dRsideMdxg -= ZERO_CONV * -SI_C * DiffVisco(Ix, Iy, Iz, k, 1) * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] * Mporpor / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor)*(blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1])) * (porpor + Mporpor);

							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								dRsideMdxg -= ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
								dRsideMdxg -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								dRsideMdxg -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsideMdxg -= ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
								dRsideMdxg -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								dRsideMdxg -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
							}

							//if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (1)) {
							//	dRsideMdxg -= ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
							//	dRsideMdxg -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
							//	dRsideMdxg -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
							//}


							//if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1)) {
							//	dRsideMdxg -= ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
							///	dRsideMdxg -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
							//	dRsideMdxg -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
							//}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								dRsideMdxg -= ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
								dRsideMdxg -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								dRsideMdxg -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
							}

							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsideMdxg -= ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
								dRsideMdxg -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								dRsideMdxg -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

								//dRsideMdxg -= ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
								//dRsideMdxg -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								//dRsideMdxg -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
							}

							// moshtagh transfer Function jabejaie gaz nesbat be xg Fracture
							dRsidedxg -= ZERO_CONV * -SI_C * fDiffVisco(Ix, Iy, Iz, k, 1) * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] * porpor / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor)*(blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1])) * (porpor + Mporpor);

							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								dRsidedxg -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsidedxg -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
							}

							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								dRsidedxg -= ZERO_DIFF * fdE[Ix][Iy][Iz][k][1] * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
								dRsidedxg -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1];
								dRsidedxg -= ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								dRsidedxg -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];

								dRsidedxg -= ZERO_DIFF * fdE[Ix][Iy][Iz][k][1] * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
								dRsidedxg -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1];
								dRsidedxg -= ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
							}

							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsidedxg -= ZERO_DIFF * fdE[Ix][Iy][Iz][k][1] * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
								dRsidedxg -= ZERO_DIFF * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1];
								dRsidedxg -= ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
							}

							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsidedxg -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
							}
							//

							dLsidedxl = fblockFProps[Ix][Iy][Iz][RO][0] + fcomp[Ix][Iy][Iz][i][0] * fdE[Ix][Iy][Iz][k][0];
							dLsidedxg = fblockFProps[Ix][Iy][Iz][RO][1] + fcomp[Ix][Iy][Iz][i][1] * fdE[Ix][Iy][Iz][k][1];
							if (iWell != (-1)) {
								dQdxl = 0;
								dQdxg = 0;
							}
							else {
								dQdxl = Qo;
								dQdxg = Qg;
							}

							if (Ix<(Nx - 1)) {
								if (fphaseStat[Ix + 1][Iy][Iz] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][RO][0] * gridDim[Ix + 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][BMU][0] * gridDim[Ix + 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][0] * gridDim[Ix] * Makhraj - dMul * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix + 1][Iy][Iz][k][0] * gridDim[Ix + 1] * Coef*Makhraj - fDiffVisco(Ix + 1, Iy, Iz, k, 0)*gridDim[Ix + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Ix] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][k][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Ix + 1] * (G_ACCG*fblockFProps[Ix + 1][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix + 1][Iy][Iz][BGAM][0] * fdE[Ix + 1][Iy][Iz][k][0] / fblockFProps[Ix + 1][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][BGAM][0] * gridDim[Ix + 1] * Coef) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

								if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][0]) {
									dRsidedxl += fcomp[Ix + 1][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][1] * Moshtaq*(fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = (ftrans[Ix + 1][Iy + 1][Iz + 1][0][0] + fcomp[Ix + 1][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][1] * Bmoshtaq)*(fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

									//dRsidedxl+=comp[Ix+1][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxl+=(trans[Ix+1][Iy+1][Iz+1][2][0]+comp[Ix+1][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}
								else {
									dRsidedxl += (ftrans[Ix + 1][Iy + 1][Iz + 1][0][0] + fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

									//dRsidedxl+=(trans[Ix+1][Iy+1][Iz+1][2][0]+comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxl+=comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}

								porpor2 = fporosity[Ix + 1][Iy][Iz] * (1 + cpor * (fP[Ix + 2][Iy + 1][Iz + 1][1] - refP) + dcpor * (fP[Ix + 2][Iy + 1][Iz + 1][1] - refP)*(fP[Ix + 2][Iy + 1][Iz + 1][1] - refP));
								if (fcomp[Ix + 1][Iy][Iz][i][0]>fcomp[Ix][Iy][Iz][i][0]) {
									DupStream = fdiffusion[Ix + 1][Iy][Iz][i][0];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix + 1, Iy, Iz, i, k, 0);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix + 1][Iy][Iz][RO][0] * gridDim[Ix + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] * dCoefl;
								AAd *= (fsat[Ix + 1][Iy][Iz][1] * gridDim[Ix + 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Ix] * dCoefl) / (gridDim[Ix + 1] + gridDim[Ix]);
								BBd = gridDim[Ix + 1] * Coef / porpor2 + gridDim[Ix] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz] / (gridDim[Ix + 1] + gridDim[Ix]);
								DeltaX = fcomp[Ix + 1][Iy][Iz][i][0] - fcomp[Ix][Iy][Iz][i][0];

								dAAddx = fdE[Ix][Iy][Iz][k][0] * gridDim[Ix] * dCoefl;
								dAAddx2 = fdE[Ix + 1][Iy][Iz][k][0] * gridDim[Ix + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + Iy * Nx + Ix + 1];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;



								if (fphaseStat[Ix + 1][Iy][Iz] == 1) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][RO][1] * gridDim[Ix + 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][BMU][1] * gridDim[Ix + 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][1] * gridDim[Ix] * Makhraj - dMug * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix + 1][Iy][Iz][k][1] * gridDim[Ix + 1] * Coef*Makhraj - fDiffVisco(Ix + 1, Iy, Iz, k, 1)*gridDim[Ix + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Ix] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][k][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Ix + 1] * (G_ACCG*fblockFProps[Ix + 1][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix + 1][Iy][Iz][BGAM][1] * fdE[Ix + 1][Iy][Iz][k][1] / fblockFProps[Ix + 1][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][BGAM][1] * gridDim[Ix + 1] * Coef) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

								if (ftransS[Ix + 1][Iy + 1][Iz + 1][1][0]) {
									dRsidedxg += fcomp[Ix + 1][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][2] * Moshtaq*(fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = (ftrans[Ix + 1][Iy + 1][Iz + 1][1][0] + fcomp[Ix + 1][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][2] * Bmoshtaq)*(fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

									//dRsidedxg+=comp[Ix+1][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxg+=(trans[Ix+1][Iy+1][Iz+1][3][0]+comp[Ix+1][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}
								else {
									dRsidedxg += (ftrans[Ix + 1][Iy + 1][Iz + 1][1][0] + fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

									//dRsidedxg+=(trans[Ix+1][Iy+1][Iz+1][3][0]+comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxg+=comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);

								}

								if (fcomp[Ix + 1][Iy][Iz][i][1]>fcomp[Ix][Iy][Iz][i][1]) {
									DupStream = fdiffusion[Ix + 1][Iy][Iz][i][1];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix + 1, Iy, Iz, i, k, 1);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix + 1][Iy][Iz][RO][1] * gridDim[Ix + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] * dCoefg;
								AAd *= (fsat[Ix + 1][Iy][Iz][2] * gridDim[Ix + 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Ix] * dCoefg) / (gridDim[Ix + 1] + gridDim[Ix]);
								BBd = gridDim[Ix + 1] * Coef / porpor2 + gridDim[Ix] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Nx+Iy]*gridDim[Nx+Ny+Iz]/(gridDim[Ix+1]+gridDim[Ix]);
								DeltaX = fcomp[Ix + 1][Iy][Iz][i][1] - fcomp[Ix][Iy][Iz][i][1];

								dAAddx = fdE[Ix][Iy][Iz][k][1] * gridDim[Ix] * dCoefg;
								dAAddx2 = fdE[Ix + 1][Iy][Iz][k][1] * gridDim[Ix + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								if (fphaseStat[Ix + 1][Iy][Iz]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;


							}

							if (Ix>0) {
								if (fphaseStat[Ix - 1][Iy][Iz] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][RO][0] * gridDim[Ix - 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][BMU][0] * gridDim[Ix - 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][0] * gridDim[Ix] * Makhraj - dMul * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix - 1][Iy][Iz][k][0] * gridDim[Ix - 1] * Coef*Makhraj - fDiffVisco(Ix - 1, Iy, Iz, k, 0)*gridDim[Ix - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Ix] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][k][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Ix - 1] * (G_ACCG*fblockFProps[Ix - 1][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix - 1][Iy][Iz][BGAM][0] * fdE[Ix - 1][Iy][Iz][k][0] / fblockFProps[Ix - 1][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][BGAM][0] * gridDim[Ix - 1] * Coef) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

								if (ftransS[Ix][Iy + 1][Iz + 1][0][0]) {
									dRsidedxl -= (ftrans[Ix][Iy + 1][Iz + 1][0][0] + fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);
									dBsidedxl = -fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);

									//dRsidedxl-=(trans[Ix][Iy+1][Iz+1][2][0]+comp[Ix][Iy][Iz][i][0]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1])*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
									//dBsidedxl-=comp[Ix][Iy][Iz][i][0]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								}
								else {
									dRsidedxl -= fcomp[Ix - 1][Iy][Iz][i][0] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][1] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);
									dBsidedxl = -(ftrans[Ix][Iy + 1][Iz + 1][0][0] + fcomp[Ix - 1][Iy][Iz][i][0] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);

									//dRsidedxl-=comp[Ix-1][Iy][Iz][i][0]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
									//dBsidedxl-=(trans[Ix][Iy+1][Iz+1][2][0]+comp[Ix-1][Iy][Iz][i][0]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][1])*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								}

								porpor2 = fporosity[Ix - 1][Iy][Iz] * (1 + cpor * (fP[Ix][Iy + 1][Iz + 1][1] - refP) + dcpor * (fP[Ix][Iy + 1][Iz + 1][1] - refP)*(fP[Ix][Iy + 1][Iz + 1][1] - refP));
								if (fcomp[Ix - 1][Iy][Iz][i][0]>fcomp[Ix][Iy][Iz][i][0]) {
									DupStream = fdiffusion[Ix - 1][Iy][Iz][i][0];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix - 1, Iy, Iz, i, k, 0);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix - 1][Iy][Iz][RO][0] * gridDim[Ix - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] * dCoefl;
								AAd *= (fsat[Ix - 1][Iy][Iz][1] * gridDim[Ix - 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Ix] * dCoefl) / (gridDim[Ix - 1] + gridDim[Ix]);
								BBd = gridDim[Ix - 1] * Coef / porpor2 + gridDim[Ix] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz] / (gridDim[Ix - 1] + gridDim[Ix]);
								DeltaX = fcomp[Ix - 1][Iy][Iz][i][0] - fcomp[Ix][Iy][Iz][i][0];

								dAAddx = fdE[Ix][Iy][Iz][k][0] * gridDim[Ix] * dCoefl;
								dAAddx2 = fdE[Ix - 1][Iy][Iz][k][0] * gridDim[Ix - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += -NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += -NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + Iy * Nx + Ix - 1];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;


								if (fphaseStat[Ix - 1][Iy][Iz] == 1) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][RO][1] * gridDim[Ix - 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][BMU][1] * gridDim[Ix - 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][1] * gridDim[Ix] * Makhraj - dMug * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix - 1][Iy][Iz][k][1] * gridDim[Ix - 1] * Coef*Makhraj - fDiffVisco(Ix - 1, Iy, Iz, k, 1)*gridDim[Ix - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Ix] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][k][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);
								BmoshtaqGama = gridDim[Ix - 1] * (G_ACCG*fblockFProps[Ix - 1][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix - 1][Iy][Iz][BGAM][1] * fdE[Ix - 1][Iy][Iz][k][1] / fblockFProps[Ix - 1][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][BGAM][1] * gridDim[Ix - 1] * Coef) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

								if (ftransS[Ix][Iy + 1][Iz + 1][1][0]) {
									dRsidedxg -= (ftrans[Ix][Iy + 1][Iz + 1][1][0] + fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);
									dBsidedxg = -fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);

									//dRsidedxg-=(trans[Ix][Iy+1][Iz+1][3][0]+comp[Ix][Iy][Iz][i][1]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
									//dBsidedxg-=comp[Ix][Iy][Iz][i][1]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								}
								else {
									dRsidedxg -= fcomp[Ix - 1][Iy][Iz][i][1] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][2] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);
									dBsidedxg = -(ftrans[Ix][Iy + 1][Iz + 1][1][0] + fcomp[Ix - 1][Iy][Iz][i][1] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);

									//dRsidedxg-=comp[Ix-1][Iy][Iz][i][1]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
									//dBsidedxg-=(trans[Ix][Iy+1][Iz+1][3][0]+comp[Ix-1][Iy][Iz][i][1]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								}


								if (fcomp[Ix - 1][Iy][Iz][i][1]>fcomp[Ix][Iy][Iz][i][1]) {
									DupStream = fdiffusion[Ix - 1][Iy][Iz][i][1];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix - 1, Iy, Iz, i, k, 1);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix - 1][Iy][Iz][RO][1] * gridDim[Ix - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] * dCoefg;
								AAd *= (fsat[Ix - 1][Iy][Iz][2] * gridDim[Ix - 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Ix] * dCoefg) / (gridDim[Ix - 1] + gridDim[Ix]);
								BBd = gridDim[Ix - 1] * Coef / porpor2 + gridDim[Ix] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Nx+Iy]*gridDim[Nx+Ny+Iz]/(gridDim[Ix-1]+gridDim[Ix]);
								DeltaX = fcomp[Ix - 1][Iy][Iz][i][1] - fcomp[Ix][Iy][Iz][i][1];

								dAAddx = fdE[Ix][Iy][Iz][k][1] * gridDim[Ix] * dCoefg;
								dAAddx2 = fdE[Ix - 1][Iy][Iz][k][1] * gridDim[Ix - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += -NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += -NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}


								if (fphaseStat[Ix - 1][Iy][Iz]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;

							}

							if (Iy<(Ny - 1)) {
								if (fphaseStat[Ix][Iy + 1][Iz] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][RO][0] * gridDim[Nx + Iy + 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][BMU][0] * gridDim[Nx + Iy + 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][0] * gridDim[Nx + Iy] * Makhraj - dMul * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix][Iy + 1][Iz][k][0] * gridDim[Nx + Iy + 1] * Coef*Makhraj - fDiffVisco(Ix, Iy + 1, Iz, k, 0)*gridDim[Nx + Iy + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][k][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Iy + 1] * (G_ACCG*fblockFProps[Ix][Iy + 1][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy + 1][Iz][BGAM][0] * fdE[Ix][Iy + 1][Iz][k][0] / fblockFProps[Ix][Iy + 1][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][BGAM][0] * gridDim[Nx + Iy + 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

								if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][1]) {
									dRsidedxl += fcomp[Ix][Iy + 1][Iz][i][0] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][1] * Moshtaq*(fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = (ftrans[Ix + 1][Iy + 1][Iz + 1][0][1] + fcomp[Ix][Iy + 1][Iz][i][0] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

									//dRsidedxl+=comp[Ix][Iy+1][Iz][i][0]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxl+=(trans[Ix+1][Iy+1][Iz+1][2][1]+comp[Ix][Iy+1][Iz][i][0]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}
								else {
									dRsidedxl += (ftrans[Ix + 1][Iy + 1][Iz + 1][0][1] + fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

									//dRsidedxl+=(trans[Ix+1][Iy+1][Iz+1][2][1]+comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxl+=comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}

								porpor2 = fporosity[Ix][Iy + 1][Iz] * (1 + cpor * (fP[Ix + 1][Iy + 2][Iz + 1][1] - refP) + dcpor * (fP[Ix + 1][Iy + 2][Iz + 1][1] - refP)*(fP[Ix + 1][Iy + 2][Iz + 1][1] - refP));
								if (fcomp[Ix][Iy + 1][Iz][i][0]>fcomp[Ix][Iy][Iz][i][0]) {
									DupStream = fdiffusion[Ix][Iy + 1][Iz][i][0];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix, Iy + 1, Iz, i, k, 0);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix][Iy + 1][Iz][RO][0] * gridDim[Nx + Iy + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] * dCoefl;
								AAd *= (fsat[Ix][Iy + 1][Iz][1] * gridDim[Nx + Iy + 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Nx + Iy] * dCoefl) / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
								BBd = gridDim[Nx + Iy + 1] * Coef / porpor2 + gridDim[Nx + Iy] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Ix] * gridDim[Nx + Ny + Iz] / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
								DeltaX = fcomp[Ix][Iy + 1][Iz][i][0] - fcomp[Ix][Iy][Iz][i][0];

								dAAddx = fdE[Ix][Iy][Iz][k][0] * gridDim[Nx + Iy] * dCoefl;
								dAAddx2 = fdE[Ix][Iy + 1][Iz][k][0] * gridDim[Nx + Iy + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + (Iy + 1)*Nx + Ix];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;


								if (fphaseStat[Ix][Iy + 1][Iz] == 1) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][RO][1] * gridDim[Nx + Iy + 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][BMU][1] * gridDim[Nx + Iy + 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][1] * gridDim[Nx + Iy] * Makhraj - dMug * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix][Iy + 1][Iz][k][1] * gridDim[Nx + Iy + 1] * Coef*Makhraj - fDiffVisco(Ix, Iy + 1, Iz, k, 1)*gridDim[Nx + Iy + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][k][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Iy + 1] * (G_ACCG*fblockFProps[Ix][Iy + 1][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy + 1][Iz][BGAM][1] * fdE[Ix][Iy + 1][Iz][k][1] / fblockFProps[Ix][Iy + 1][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][BGAM][1] * gridDim[Nx + Iy + 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

								if (ftransS[Ix + 1][Iy + 1][Iz + 1][1][1]) {
									dRsidedxg += fcomp[Ix][Iy + 1][Iz][i][1] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][2] * Moshtaq*(fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = (ftrans[Ix + 1][Iy + 1][Iz + 1][1][1] + fcomp[Ix][Iy + 1][Iz][i][1] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

									//dRsidedxg+=comp[Ix][Iy+1][Iz][i][1]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxg+=(trans[Ix+1][Iy+1][Iz+1][3][1]+comp[Ix][Iy+1][Iz][i][1]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}
								else {
									dRsidedxg += (ftrans[Ix + 1][Iy + 1][Iz + 1][1][1] + fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

									//dRsidedxg+=(trans[Ix+1][Iy+1][Iz+1][3][1]+comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxg+=comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);

								}

								if (fcomp[Ix][Iy + 1][Iz][i][1]>fcomp[Ix][Iy][Iz][i][1]) {
									DupStream = fdiffusion[Ix][Iy + 1][Iz][i][1];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix, Iy + 1, Iz, i, k, 1);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix][Iy + 1][Iz][RO][1] * gridDim[Nx + Iy + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] * dCoefg;
								AAd *= (fsat[Ix][Iy + 1][Iz][2] * gridDim[Nx + Iy + 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Nx + Iy] * dCoefg) / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
								BBd = gridDim[Nx + Iy + 1] * Coef / porpor2 + gridDim[Nx + Iy] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Ix]*gridDim[Nx+Ny+Iz]/(gridDim[Nx+Iy+1]+gridDim[Nx+Iy]);
								DeltaX = fcomp[Ix][Iy + 1][Iz][i][1] - fcomp[Ix][Iy][Iz][i][1];

								dAAddx = fdE[Ix][Iy][Iz][k][1] * gridDim[Nx + Iy] * dCoefg;
								dAAddx2 = fdE[Ix][Iy + 1][Iz][k][1] * gridDim[Nx + Iy + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								if (fphaseStat[Ix][Iy + 1][Iz]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;
							}

							if (Iy>0) {
								if (fphaseStat[Ix][Iy - 1][Iz] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][RO][0] * gridDim[Nx + Iy - 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][BMU][0] * gridDim[Nx + Iy - 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][0] * gridDim[Nx + Iy] * Makhraj - dMul * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix][Iy - 1][Iz][k][0] * gridDim[Nx + Iy - 1] * Coef*Makhraj - fDiffVisco(Ix, Iy - 1, Iz, k, 0)*gridDim[Nx + Iy - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][k][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Iy - 1] * (G_ACCG*fblockFProps[Ix][Iy - 1][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy - 1][Iz][BGAM][0] * fdE[Ix][Iy - 1][Iz][k][0] / fblockFProps[Ix][Iy - 1][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][BGAM][0] * gridDim[Nx + Iy - 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

								if (ftransS[Ix + 1][Iy][Iz + 1][0][1]) {
									dRsidedxl -= (ftrans[Ix + 1][Iy][Iz + 1][0][1] + fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);
									dBsidedxl = -fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);

									//dRsidedxl-=(trans[Ix+1][Iy][Iz+1][2][1]+comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][1])*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
									//dBsidedxl-=comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								}
								else {
									dRsidedxl -= fcomp[Ix][Iy - 1][Iz][i][0] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][1] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);
									dBsidedxl = -(ftrans[Ix + 1][Iy][Iz + 1][0][1] + fcomp[Ix][Iy - 1][Iz][i][0] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);

									//dRsidedxl-=comp[Ix][Iy-1][Iz][i][0]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
									//dBsidedxl-=(trans[Ix+1][Iy][Iz+1][2][1]+comp[Ix][Iy-1][Iz][i][0]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][1])*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								}

								porpor2 = fporosity[Ix][Iy - 1][Iz] * (1 + cpor * (fP[Ix + 1][Iy][Iz + 1][1] - refP) + dcpor * (fP[Ix + 1][Iy][Iz + 1][1] - refP)*(fP[Ix + 1][Iy][Iz + 1][1] - refP));
								if (fcomp[Ix][Iy - 1][Iz][i][0]>fcomp[Ix][Iy][Iz][i][0]) {
									DupStream = fdiffusion[Ix][Iy - 1][Iz][i][0];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix, Iy - 1, Iz, i, k, 0);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix][Iy - 1][Iz][RO][0] * gridDim[Nx + Iy - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] * dCoefl;
								AAd *= (fsat[Ix][Iy - 1][Iz][1] * gridDim[Nx + Iy - 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Nx + Iy] * dCoefl) / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
								BBd = gridDim[Nx + Iy - 1] * Coef / porpor2 + gridDim[Nx + Iy] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Ix] * gridDim[Nx + Ny + Iz] / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
								DeltaX = fcomp[Ix][Iy - 1][Iz][i][0] - fcomp[Ix][Iy][Iz][i][0];

								dAAddx = fdE[Ix][Iy][Iz][k][0] * gridDim[Nx + Iy] * dCoefl;
								dAAddx2 = fdE[Ix][Iy - 1][Iz][k][0] * gridDim[Nx + Iy - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += -NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += -NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + (Iy - 1)*Nx + Ix];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;


								if (fphaseStat[Ix][Iy - 1][Iz] == 1) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][RO][1] * gridDim[Nx + Iy - 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][BMU][1] * gridDim[Nx + Iy - 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][1] * gridDim[Nx + Iy] * Makhraj - dMug * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix][Iy - 1][Iz][k][1] * gridDim[Nx + Iy - 1] * Coef*Makhraj - fDiffVisco(Ix, Iy - 1, Iz, k, 1)*gridDim[Nx + Iy - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][k][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Iy - 1] * (G_ACCG*fblockFProps[Ix][Iy - 1][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy - 1][Iz][BGAM][1] * fdE[Ix][Iy - 1][Iz][k][1] / fblockFProps[Ix][Iy - 1][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][BGAM][1] * gridDim[Nx + Iy - 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

								if (ftransS[Ix + 1][Iy][Iz + 1][1][1]) {
									dRsidedxg -= (ftrans[Ix + 1][Iy][Iz + 1][1][1] + fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);
									dBsidedxg = -fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);

									//dRsidedxg-=(trans[Ix+1][Iy][Iz+1][3][1]+comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
									//dBsidedxg-=comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								}
								else {
									dRsidedxg -= fcomp[Ix][Iy - 1][Iz][i][1] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][2] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);
									dBsidedxg = -(ftrans[Ix + 1][Iy][Iz + 1][1][1] + fcomp[Ix][Iy - 1][Iz][i][1] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);

									//dRsidedxg-=comp[Ix][Iy-1][Iz][i][1]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
									//dBsidedxg-=(trans[Ix+1][Iy][Iz+1][3][1]+comp[Ix][Iy-1][Iz][i][1]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								}

								if (fcomp[Ix][Iy - 1][Iz][i][1]>fcomp[Ix][Iy][Iz][i][1]) {
									DupStream = fdiffusion[Ix][Iy - 1][Iz][i][1];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix, Iy - 1, Iz, i, k, 1);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix][Iy - 1][Iz][RO][1] * gridDim[Nx + Iy - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] * dCoefg;
								AAd *= (fsat[Ix][Iy - 1][Iz][2] * gridDim[Nx + Iy - 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Nx + Iy] * dCoefg) / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
								BBd = gridDim[Nx + Iy - 1] * Coef / porpor2 + gridDim[Nx + Iy] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Ix]*gridDim[Nx+Ny+Iz]/(gridDim[Nx+Iy-1]+gridDim[Nx+Iy]);
								DeltaX = fcomp[Ix][Iy - 1][Iz][i][1] - fcomp[Ix][Iy][Iz][i][1];

								dAAddx = fdE[Ix][Iy][Iz][k][1] * gridDim[Nx + Iy] * dCoefg;
								dAAddx2 = fdE[Ix][Iy - 1][Iz][k][1] * gridDim[Nx + Iy - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += -NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += -NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}



								if (fphaseStat[Ix][Iy - 1][Iz]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;
							}

							if (Iz<(Nz - 1)) {
								if (fphaseStat[Ix][Iy][Iz + 1] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][RO][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][BMU][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][0] * gridDim[Nx + Ny + Iz] * Makhraj - dMul * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix][Iy][Iz + 1][k][0] * gridDim[Nx + Ny + Iz + 1] * Coef*Makhraj - fDiffVisco(Ix, Iy, Iz + 1, k, 0)*gridDim[Nx + Ny + Iz + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][k][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz + 1] * (G_ACCG*fblockFProps[Ix][Iy][Iz + 1][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz + 1][BGAM][0] * fdE[Ix][Iy][Iz + 1][k][0] / fblockFProps[Ix][Iy][Iz + 1][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][BGAM][0] * gridDim[Nx + Ny + Iz + 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

								if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][2]) {
									dRsidedxl += fcomp[Ix][Iy][Iz + 1][i][0] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][1] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = (ftrans[Ix + 1][Iy + 1][Iz + 1][0][2] + fcomp[Ix][Iy][Iz + 1][i][0] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

									dRsidedxl += fcomp[Ix][Iy][Iz + 1][i][0] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz + 1][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
									dBsidedxl += (ftrans[Ix + 1][Iy + 1][Iz + 1][2][2] + fcomp[Ix][Iy][Iz + 1][i][0] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
								}
								else {
									dRsidedxl += (ftrans[Ix + 1][Iy + 1][Iz + 1][0][2] + fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

									dRsidedxl += (ftrans[Ix + 1][Iy + 1][Iz + 1][2][2] + fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
									dBsidedxl += fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
								}

								porpor2 = fporosity[Ix][Iy][Iz + 1] * (1 + cpor * (fP[Ix + 1][Iy + 1][Iz + 2][1] - refP) + dcpor * (fP[Ix + 1][Iy + 1][Iz + 2][1] - refP)*(fP[Ix + 1][Iy + 1][Iz + 2][1] - refP));
								if (fcomp[Ix][Iy][Iz + 1][i][0]>fcomp[Ix][Iy][Iz][i][0]) {
									DupStream = fdiffusion[Ix][Iy][Iz + 1][i][0];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix, Iy, Iz + 1, i, k, 0);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix][Iy][Iz + 1][RO][0] * gridDim[Nx + Ny + Iz + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] * dCoefl;
								AAd *= (fsat[Ix][Iy][Iz + 1][1] * gridDim[Nx + Ny + Iz + 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Nx + Ny + Iz] * dCoefl) / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
								BBd = gridDim[Nx + Ny + Iz + 1] * Coef / porpor2 + gridDim[Nx + Ny + Iz] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Ix] * gridDim[Nx + Iy] / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
								DeltaX = fcomp[Ix][Iy][Iz + 1][i][0] - fcomp[Ix][Iy][Iz][i][0];

								dAAddx = fdE[Ix][Iy][Iz][k][0] * gridDim[Nx + Ny + Iz] * dCoefl;
								dAAddx2 = fdE[Ix][Iy][Iz + 1][k][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								mBLNo = preConRow[Nx*Ny*Nz + (Iz + 1)*(Nx*Ny) + Iy * Nx + Ix];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;


								if (fphaseStat[Ix][Iy][Iz + 1] == 1) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][RO][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][BMU][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][1] * gridDim[Nx + Ny + Iz] * Makhraj - dMug * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix][Iy][Iz + 1][k][1] * gridDim[Nx + Ny + Iz + 1] * Coef*Makhraj - fDiffVisco(Ix, Iy, Iz + 1, k, 1)*gridDim[Nx + Ny + Iz + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][k][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz + 1] * (G_ACCG*fblockFProps[Ix][Iy][Iz + 1][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz + 1][BGAM][1] * fdE[Ix][Iy][Iz + 1][k][1] / fblockFProps[Ix][Iy][Iz + 1][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][BGAM][1] * gridDim[Nx + Ny + Iz + 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

								if (ftransS[Ix + 1][Iy + 1][Iz + 1][1][2]) {
									dRsidedxg += fcomp[Ix][Iy][Iz + 1][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][2] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = (ftrans[Ix + 1][Iy + 1][Iz + 1][1][2] + fcomp[Ix][Iy][Iz + 1][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

									dRsidedxg += fcomp[Ix][Iy][Iz + 1][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
									dBsidedxg += (ftrans[Ix + 1][Iy + 1][Iz + 1][3][2] + fcomp[Ix][Iy][Iz + 1][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
								}
								else {
									dRsidedxg += (ftrans[Ix + 1][Iy + 1][Iz + 1][1][2] + fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

									dRsidedxg += (ftrans[Ix + 1][Iy + 1][Iz + 1][3][2] + fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
									dBsidedxg += fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);

								}

								if (fcomp[Ix][Iy][Iz + 1][i][1]>fcomp[Ix][Iy][Iz][i][1]) {
									DupStream = fdiffusion[Ix][Iy][Iz + 1][i][1];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix, Iy, Iz + 1, i, k, 1);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix][Iy][Iz + 1][RO][1] * gridDim[Nx + Ny + Iz + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] * dCoefg;
								AAd *= (fsat[Ix][Iy][Iz + 1][2] * gridDim[Nx + Ny + Iz + 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Nx + Ny + Iz] * dCoefg) / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
								BBd = gridDim[Nx + Ny + Iz + 1] * Coef / porpor2 + gridDim[Nx + Ny + Iz] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Ix]*gridDim[Nx+Iy]/(gridDim[Nx+Ny+Iz+1]+gridDim[Nx+Ny+Iz]);
								DeltaX = fcomp[Ix][Iy][Iz + 1][i][1] - fcomp[Ix][Iy][Iz][i][1];

								dAAddx = fdE[Ix][Iy][Iz][k][1] * gridDim[Nx + Ny + Iz] * dCoefg;
								dAAddx2 = fdE[Ix][Iy][Iz + 1][k][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}


								if (fphaseStat[Ix][Iy][Iz + 1]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;
							}

							if (Iz>0) {
								if (fphaseStat[Ix][Iy][Iz - 1] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][RO][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][BMU][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][0] * gridDim[Nx + Ny + Iz] * Makhraj - dMul * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix][Iy][Iz - 1][k][0] * gridDim[Nx + Ny + Iz - 1] * Coef*Makhraj - fDiffVisco(Ix, Iy, Iz - 1, k, 0)*gridDim[Nx + Ny + Iz - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][k][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz - 1] * (G_ACCG*fblockFProps[Ix][Iy][Iz - 1][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz - 1][BGAM][0] * fdE[Ix][Iy][Iz - 1][k][0] / fblockFProps[Ix][Iy][Iz - 1][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][BGAM][0] * gridDim[Nx + Ny + Iz - 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

								if (ftransS[Ix + 1][Iy + 1][Iz][0][2]) {
									dRsidedxl -= (ftrans[Ix + 1][Iy + 1][Iz][0][2] + fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);
									dBsidedxl = -fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);

									dRsidedxl -= (ftrans[Ix + 1][Iy + 1][Iz][2][2] + fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
									dBsidedxl -= fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								}
								else {
									dRsidedxl -= fcomp[Ix][Iy][Iz - 1][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][1] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);
									dBsidedxl = -(ftrans[Ix + 1][Iy + 1][Iz][0][2] + fcomp[Ix][Iy][Iz - 1][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);

									dRsidedxl -= fcomp[Ix][Iy][Iz - 1][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
									dBsidedxl -= (ftrans[Ix + 1][Iy + 1][Iz][2][2] + fcomp[Ix][Iy][Iz - 1][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								}

								porpor2 = fporosity[Ix][Iy][Iz - 1] * (1 + cpor * (fP[Ix + 1][Iy + 1][Iz][1] - refP) + dcpor * (fP[Ix + 1][Iy + 1][Iz][1] - refP)*(fP[Ix + 1][Iy + 1][Iz][1] - refP));
								if (fcomp[Ix][Iy][Iz - 1][i][0]>fcomp[Ix][Iy][Iz][i][0]) {
									DupStream = fdiffusion[Ix][Iy][Iz - 1][i][0];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix, Iy, Iz - 1, i, k, 0);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix][Iy][Iz - 1][RO][0] * gridDim[Nx + Ny + Iz - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] * dCoefl;
								AAd *= (fsat[Ix][Iy][Iz - 1][1] * gridDim[Nx + Ny + Iz - 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Nx + Ny + Iz] * dCoefl) / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
								BBd = gridDim[Nx + Ny + Iz - 1] * Coef / porpor2 + gridDim[Nx + Ny + Iz] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Ix] * gridDim[Nx + Iy] / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
								DeltaX = fcomp[Ix][Iy][Iz - 1][i][0] - fcomp[Ix][Iy][Iz][i][0];

								dAAddx = fdE[Ix][Iy][Iz][k][0] * gridDim[Nx + Ny + Iz] * dCoefl;
								dAAddx2 = fdE[Ix][Iy][Iz - 1][k][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += -NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += -NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								mBLNo = preConRow[Nx*Ny*Nz + (Iz - 1)*(Nx*Ny) + Iy * Nx + Ix];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;


								if (fphaseStat[Ix][Iy][Iz - 1] == 1) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][RO][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][BMU][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][1] * gridDim[Nx + Ny + Iz] * Makhraj - dMug * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix][Iy][Iz - 1][k][1] * gridDim[Nx + Ny + Iz - 1] * Coef*Makhraj - fDiffVisco(Ix, Iy, Iz - 1, k, 1)*gridDim[Nx + Ny + Iz - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][k][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz - 1] * (G_ACCG*fblockFProps[Ix][Iy][Iz - 1][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz - 1][BGAM][1] * fdE[Ix][Iy][Iz - 1][k][1] / fblockFProps[Ix][Iy][Iz - 1][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][BGAM][1] * gridDim[Nx + Ny + Iz - 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

								if (ftransS[Ix + 1][Iy + 1][Iz][1][2]) {
									dRsidedxg -= (ftrans[Ix + 1][Iy + 1][Iz][1][2] + fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);
									dBsidedxg = -fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);

									dRsidedxg -= (ftrans[Ix + 1][Iy + 1][Iz][3][2] + fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
									dBsidedxg -= fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								}
								else {
									dRsidedxg -= fcomp[Ix][Iy][Iz - 1][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][2] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);
									dBsidedxg = -(ftrans[Ix + 1][Iy + 1][Iz][1][2] + fcomp[Ix][Iy][Iz - 1][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);

									dRsidedxg -= fcomp[Ix][Iy][Iz - 1][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
									dBsidedxg -= (ftrans[Ix + 1][Iy + 1][Iz][3][2] + fcomp[Ix][Iy][Iz - 1][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								}

								if (fcomp[Ix][Iy][Iz - 1][i][1]>fcomp[Ix][Iy][Iz][i][1]) {
									DupStream = fdiffusion[Ix][Iy][Iz - 1][i][1];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix, Iy, Iz - 1, i, k, 1);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix][Iy][Iz - 1][RO][1] * gridDim[Nx + Ny + Iz - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] * dCoefg;
								AAd *= (fsat[Ix][Iy][Iz - 1][2] * gridDim[Nx + Ny + Iz - 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Nx + Ny + Iz] * dCoefg) / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
								BBd = gridDim[Nx + Ny + Iz - 1] * Coef / porpor2 + gridDim[Nx + Ny + Iz] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Ix]*gridDim[Nx+Iy]/(gridDim[Nx+Ny+Iz-1]+gridDim[Nx+Ny+Iz]);
								DeltaX = fcomp[Ix][Iy][Iz - 1][i][1] - fcomp[Ix][Iy][Iz][i][1];

								dAAddx = fdE[Ix][Iy][Iz][k][1] * gridDim[Nx + Ny + Iz] * dCoefg;
								dAAddx2 = fdE[Ix][Iy][Iz - 1][k][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += -NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += -NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}


								if (fphaseStat[Ix][Iy][Iz - 1]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;
							}

							/////////////////////////////////////////////////Sadeq//k=i/////////////////////////////////
							if (phaseStat[Ix][Iy][Iz] == 1) {
								//dRsideMdxl = 0;
								Jac1Row[JRowIndex] = dRsideMdxl;
								Jac1Col[JRowIndex] = MatrixEq + k;
								JRowIndex++;
							}
							else if (phaseStat[Ix][Iy][Iz] == (-1)) {
								//dRsideMdxg = 0;
								Jac1Row[JRowIndex] = dRsideMdxg;
								Jac1Col[JRowIndex] = MatrixEq + k;
								JRowIndex++;
							}
							else {
								//dRsideMdxl = 0;
								Jac1Row[JRowIndex] = dRsideMdxl;
								Jac1Col[JRowIndex] = MatrixEq + k;
								JRowIndex++;
								//dRsideMdxg = 0;
								Jac1Row[JRowIndex] = dRsideMdxg;
								Jac1Col[JRowIndex] = MatrixEq + Nc + k;
								JRowIndex++;
							}
							////////////////////////sadeq/////////////////////////
						}
						else {
							// Transfer function drside dxl dxg 
							// moshtagh transfer Function jabejaie naft nesbat be xl Matrix
							//dRsideMdxl -= ZERO_CONV * SI_C * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
							dRsideMdxl -= ZERO_CONV * SI_C * dE[Ix][Iy][Iz][k][0] * comp[Ix][Iy][Iz][i][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
							dRsideMdxl -= ZERO_CONV * -SI_C * DiffVisco(Ix, Iy, Iz, k, 0) * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] * Mporpor / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor)*(blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) * (porpor + Mporpor);

							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (1)) {
								dRsideMdxl -= ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
								//dRsideMdxl -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								dRsideMdxl -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsideMdxl -= ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
								//dRsideMdxl -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								dRsideMdxl -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
							}

							//if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
							//	dRsideMdxl -= ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
								//dRsideMdxl -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								//dRsideMdxl -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
							//}

							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0)) {
								//dRsideMdxl -= ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
								//dRsideMdxl -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								//dRsideMdxl -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);

								dRsideMdxl -= ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
								//dRsideMdxl -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								dRsideMdxl -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1)) {
								dRsideMdxl -= ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
								//dRsideMdxl -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								dRsideMdxl -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
							}

							//if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								//dRsideMdxl -= ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
								//dRsideMdxl -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								//dRsideMdxl -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
							//}


							// moshtagh transfer Function jabejaie naft nesbat be xl Fracture
							dRsidedxl -= ZERO_CONV * -SI_C * fDiffVisco(Ix, Iy, Iz, k, 0) * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] * porpor / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor)*(blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) * (porpor + Mporpor);

							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (1)) {
								//dRsidedxl -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0)) {
								//dRsidedxl -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
							}

							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (1)) {
								dRsidedxl -= ZERO_DIFF * fdE[Ix][Iy][Iz][k][0] * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
								//dRsidedxl -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0];
								dRsidedxl -= ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1)) {
								dRsidedxl -= ZERO_DIFF * fdE[Ix][Iy][Iz][k][0] * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
								//dRsidedxl -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0];
								dRsidedxl -= ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);

								//dRsidedxl -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
							}

							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0)) {
								//dRsidedxl -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
							}

							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsidedxl -= ZERO_DIFF * fdE[Ix][Iy][Iz][k][0] * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
								//dRsidedxl -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0];
								dRsidedxl -= ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
							}

							// moshtagh transfer Function jabejaie gaz nesbat be xg Matrix
							//dRsideMdxg -= ZERO_CONV * SI_C * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor) / (porpor + Mporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));
							dRsideMdxg -= ZERO_CONV * SI_C * dE[Ix][Iy][Iz][k][1] * comp[Ix][Iy][Iz][i][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor) / (porpor + Mporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));
							dRsideMdxg -= ZERO_CONV * -SI_C * DiffVisco(Ix, Iy, Iz, k, 1) * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] * Mporpor / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor)*(blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1])) * (porpor + Mporpor);

							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								dRsideMdxg -= ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
								//dRsideMdxg -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								dRsideMdxg -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsideMdxg -= ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
								//dRsideMdxg -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								dRsideMdxg -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
							}

							//if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (1)) {
								//dRsideMdxg -= ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
								//dRsideMdxg -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								//dRsideMdxg -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
							//}


							//if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1)) {
								//dRsideMdxg -= ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
								//dRsideMdxg -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								//dRsideMdxg -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
							//}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								dRsideMdxg -= ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
								//dRsideMdxg -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								dRsideMdxg -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
							}

							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsideMdxg -= ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
								//dRsideMdxg -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								dRsideMdxg -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

								//dRsideMdxg -= ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
								//dRsideMdxg -= ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								//dRsideMdxg -= ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_3(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
							}

							// moshtagh transfer Function jabejaie gaz nesbat be xg Fracture
							dRsidedxg -= ZERO_CONV * -SI_C * fDiffVisco(Ix, Iy, Iz, k, 1) * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] * porpor / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor)*(blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1])) * (porpor + Mporpor);

							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								//dRsidedxg -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0)) {
								//dRsidedxg -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
							}

							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								dRsidedxg -= ZERO_DIFF * fdE[Ix][Iy][Iz][k][1] * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
								//dRsidedxg -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1];
								dRsidedxg -= ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								//dRsidedxg -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];

								dRsidedxg -= ZERO_DIFF * fdE[Ix][Iy][Iz][k][1] * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
								//dRsidedxg -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1];
								dRsidedxg -= ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
							}

							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsidedxg -= ZERO_DIFF * fdE[Ix][Iy][Iz][k][1] * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
								//dRsidedxg -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1];
								dRsidedxg -= ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_3(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
							}

							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0)) {
								//dRsidedxg -= ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * Mporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
							}
							//

							dLsidedxl = fcomp[Ix][Iy][Iz][i][0] * fdE[Ix][Iy][Iz][k][0];
							dLsidedxg = fcomp[Ix][Iy][Iz][i][1] * fdE[Ix][Iy][Iz][k][1];
							dQdxl = 0;
							dQdxg = 0;



							if (Ix<(Nx - 1)) {
								if (fphaseStat[Ix + 1][Iy][Iz] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][RO][0] * gridDim[Ix + 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][BMU][0] * gridDim[Ix + 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][0] * gridDim[Ix] * Makhraj - dMul * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix + 1][Iy][Iz][k][0] * gridDim[Ix + 1] * Coef*Makhraj - fDiffVisco(Ix + 1, Iy, Iz, k, 0)*gridDim[Ix + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Ix] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][k][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Ix + 1] * (G_ACCG*fblockFProps[Ix + 1][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix + 1][Iy][Iz][BGAM][0] * fdE[Ix + 1][Iy][Iz][k][0] / fblockFProps[Ix + 1][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][BGAM][0] * gridDim[Ix + 1] * Coef) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

								if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][0]) {
									dRsidedxl += fcomp[Ix + 1][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][1] * Moshtaq*(fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = (fcomp[Ix + 1][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][1] * Bmoshtaq)*(fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

									//dRsidedxl+=comp[Ix+1][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxl+=(comp[Ix+1][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}
								else {
									dRsidedxl += (fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][0] * frelPerm[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][0] * frelPerm[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

									//dRsidedxl+=(comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxl+=comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}

								porpor2 = fporosity[Ix + 1][Iy][Iz] * (1 + cpor * (fP[Ix + 2][Iy + 1][Iz + 1][1] - refP) + dcpor * (fP[Ix + 2][Iy + 1][Iz + 1][1] - refP)*(fP[Ix + 2][Iy + 1][Iz + 1][1] - refP));
								if (fcomp[Ix + 1][Iy][Iz][i][0]>fcomp[Ix][Iy][Iz][i][0]) {
									DupStream = fdiffusion[Ix + 1][Iy][Iz][i][0];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix + 1, Iy, Iz, i, k, 0);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix + 1][Iy][Iz][RO][0] * gridDim[Ix + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] * dCoefl;
								AAd *= (fsat[Ix + 1][Iy][Iz][1] * gridDim[Ix + 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Ix] * dCoefl) / (gridDim[Ix + 1] + gridDim[Ix]);
								BBd = gridDim[Ix + 1] * Coef / porpor2 + gridDim[Ix] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz] / (gridDim[Ix + 1] + gridDim[Ix]);
								DeltaX = fcomp[Ix + 1][Iy][Iz][i][0] - fcomp[Ix][Iy][Iz][i][0];

								dAAddx = fdE[Ix][Iy][Iz][k][0] * gridDim[Ix] * dCoefl;
								dAAddx2 = fdE[Ix + 1][Iy][Iz][k][0] * gridDim[Ix + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + Iy * Nx + Ix + 1];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;


								if (fphaseStat[Ix + 1][Iy][Iz] == 1) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][RO][1] * gridDim[Ix + 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][BMU][1] * gridDim[Ix + 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][1] * gridDim[Ix] * Makhraj - dMug * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix + 1][Iy][Iz][k][1] * gridDim[Ix + 1] * Coef*Makhraj - fDiffVisco(Ix + 1, Iy, Iz, k, 1)*gridDim[Ix + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Ix] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][k][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Ix + 1] * (G_ACCG*fblockFProps[Ix + 1][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix + 1][Iy][Iz][BGAM][1] * fdE[Ix + 1][Iy][Iz][k][1] / fblockFProps[Ix + 1][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][BGAM][1] * gridDim[Ix + 1] * Coef) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

								if (ftransS[Ix + 1][Iy + 1][Iz + 1][1][0]) {
									dRsidedxg += fcomp[Ix + 1][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][2] * Moshtaq*(fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = (fcomp[Ix + 1][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][2] * Bmoshtaq)*(fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

									//dRsidedxg+=comp[Ix+1][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxg+=(comp[Ix+1][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}
								else {
									dRsidedxg += (fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

									//dRsidedxg+=(comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxg+=comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);

								}

								if (fcomp[Ix + 1][Iy][Iz][i][1]>fcomp[Ix][Iy][Iz][i][1]) {
									DupStream = fdiffusion[Ix + 1][Iy][Iz][i][1];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix + 1, Iy, Iz, i, k, 1);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix + 1][Iy][Iz][RO][1] * gridDim[Ix + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] * dCoefg;
								AAd *= (fsat[Ix + 1][Iy][Iz][2] * gridDim[Ix + 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Ix] * dCoefg) / (gridDim[Ix + 1] + gridDim[Ix]);
								BBd = gridDim[Ix + 1] * Coef / porpor2 + gridDim[Ix] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Nx+Iy]*gridDim[Nx+Ny+Iz]/(gridDim[Ix+1]+gridDim[Ix]);
								DeltaX = fcomp[Ix + 1][Iy][Iz][i][1] - fcomp[Ix][Iy][Iz][i][1];

								dAAddx = fdE[Ix][Iy][Iz][k][1] * gridDim[Ix] * dCoefg;
								dAAddx2 = fdE[Ix + 1][Iy][Iz][k][1] * gridDim[Ix + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}


								if (fphaseStat[Ix + 1][Iy][Iz]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;
							}

							if (Ix>0) {
								if (fphaseStat[Ix - 1][Iy][Iz] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][RO][0] * gridDim[Ix - 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][BMU][0] * gridDim[Ix - 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][0] * gridDim[Ix] * Makhraj - dMul * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix - 1][Iy][Iz][k][0] * gridDim[Ix - 1] * Coef*Makhraj - fDiffVisco(Ix - 1, Iy, Iz, k, 0)*gridDim[Ix - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Ix] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][k][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Ix - 1] * (G_ACCG*fblockFProps[Ix - 1][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix - 1][Iy][Iz][BGAM][0] * fdE[Ix - 1][Iy][Iz][k][0] / fblockFProps[Ix - 1][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][BGAM][0] * gridDim[Ix - 1] * Coef) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

								if (ftransS[Ix][Iy + 1][Iz + 1][0][0]) {
									dRsidedxl -= (fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);
									dBsidedxl = -fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);

									//dRsidedxl-=(comp[Ix][Iy][Iz][i][0]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1])*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
									//dBsidedxl-=comp[Ix][Iy][Iz][i][0]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								}
								else {
									dRsidedxl -= fcomp[Ix - 1][Iy][Iz][i][0] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][1] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);
									dBsidedxl = -(fcomp[Ix - 1][Iy][Iz][i][0] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);

									//dRsidedxl-=comp[Ix-1][Iy][Iz][i][0]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
									//dBsidedxl-=(comp[Ix-1][Iy][Iz][i][0]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][1])*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								}

								porpor2 = fporosity[Ix - 1][Iy][Iz] * (1 + cpor * (fP[Ix][Iy + 1][Iz + 1][1] - refP) + dcpor * (fP[Ix][Iy + 1][Iz + 1][1] - refP)*(fP[Ix][Iy + 1][Iz + 1][1] - refP));
								if (fcomp[Ix - 1][Iy][Iz][i][0]>fcomp[Ix][Iy][Iz][i][0]) {
									DupStream = fdiffusion[Ix - 1][Iy][Iz][i][0];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix - 1, Iy, Iz, i, k, 0);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix - 1][Iy][Iz][RO][0] * gridDim[Ix - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] * dCoefl;
								AAd *= (fsat[Ix - 1][Iy][Iz][1] * gridDim[Ix - 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Ix] * dCoefl) / (gridDim[Ix - 1] + gridDim[Ix]);
								BBd = gridDim[Ix - 1] * Coef / porpor2 + gridDim[Ix] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz] / (gridDim[Ix - 1] + gridDim[Ix]);
								DeltaX = fcomp[Ix - 1][Iy][Iz][i][0] - fcomp[Ix][Iy][Iz][i][0];

								dAAddx = fdE[Ix][Iy][Iz][k][0] * gridDim[Ix] * dCoefl;
								dAAddx2 = fdE[Ix - 1][Iy][Iz][k][0] * gridDim[Ix - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += -NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += -NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}


								mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + Iy * Nx + Ix - 1];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;


								if (fphaseStat[Ix - 1][Iy][Iz]) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][RO][1] * gridDim[Ix - 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][BMU][1] * gridDim[Ix - 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][1] * gridDim[Ix] * Makhraj - dMug * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix - 1][Iy][Iz][k][1] * gridDim[Ix - 1] * Coef*Makhraj - fDiffVisco(Ix - 1, Iy, Iz, k, 1)*gridDim[Ix - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Ix] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][k][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Ix - 1] * (G_ACCG*fblockFProps[Ix - 1][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix - 1][Iy][Iz][BGAM][1] * fdE[Ix - 1][Iy][Iz][k][1] / fblockFProps[Ix - 1][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][BGAM][1] * gridDim[Ix - 1] * Coef) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

								if (ftransS[Ix][Iy + 1][Iz + 1][1][0]) {
									dRsidedxg -= (fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);
									dBsidedxg = -fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);

									//dRsidedxg-=(comp[Ix][Iy][Iz][i][1]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
									//dBsidedxg-=comp[Ix][Iy][Iz][i][1]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								}
								else {
									dRsidedxg -= fcomp[Ix - 1][Iy][Iz][i][1] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][2] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);
									dBsidedxg = -(fcomp[Ix - 1][Iy][Iz][i][1] * fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);

									//dRsidedxg-=comp[Ix-1][Iy][Iz][i][1]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
									//dBsidedxg-=(comp[Ix-1][Iy][Iz][i][1]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								}

								if (fcomp[Ix - 1][Iy][Iz][i][1]>fcomp[Ix][Iy][Iz][i][1]) {
									DupStream = fdiffusion[Ix - 1][Iy][Iz][i][1];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix - 1, Iy, Iz, i, k, 1);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix - 1][Iy][Iz][RO][1] * gridDim[Ix - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] * dCoefg;
								AAd *= (fsat[Ix - 1][Iy][Iz][2] * gridDim[Ix - 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Ix] * dCoefg) / (gridDim[Ix - 1] + gridDim[Ix]);
								BBd = gridDim[Ix - 1] * Coef / porpor2 + gridDim[Ix] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Nx+Iy]*gridDim[Nx+Ny+Iz]/(gridDim[Ix-1]+gridDim[Ix]);
								DeltaX = fcomp[Ix - 1][Iy][Iz][i][1] - fcomp[Ix][Iy][Iz][i][1];

								dAAddx = fdE[Ix][Iy][Iz][k][1] * gridDim[Ix] * dCoefg;
								dAAddx2 = fdE[Ix - 1][Iy][Iz][k][1] * gridDim[Ix - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += -NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += -NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}


								if (fphaseStat[Ix - 1][Iy][Iz]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;
							}

							if (Iy<(Ny - 1)) {
								if (fphaseStat[Ix][Iy + 1][Iz] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][RO][0] * gridDim[Nx + Iy + 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][BMU][0] * gridDim[Nx + Iy + 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][0] * gridDim[Nx + Iy] * Makhraj - dMul * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix][Iy + 1][Iz][k][0] * gridDim[Nx + Iy + 1] * Coef*Makhraj - fDiffVisco(Ix, Iy + 1, Iz, k, 0)*gridDim[Nx + Iy + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][k][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Iy + 1] * (G_ACCG*fblockFProps[Ix][Iy + 1][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy + 1][Iz][BGAM][0] * fdE[Ix][Iy + 1][Iz][k][0] / fblockFProps[Ix][Iy + 1][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][BGAM][0] * gridDim[Nx + Iy + 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

								if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][1]) {
									dRsidedxl += fcomp[Ix][Iy + 1][Iz][i][0] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][1] * Moshtaq*(fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = (fcomp[Ix][Iy + 1][Iz][i][0] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

									//dRsidedxl+=comp[Ix][Iy+1][Iz][i][0]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxl+=(comp[Ix][Iy+1][Iz][i][0]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}
								else {
									dRsidedxl += (fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

									//dRsidedxl+=(comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxl+=comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}

								porpor2 = fporosity[Ix][Iy + 1][Iz] * (1 + cpor * (fP[Ix + 1][Iy + 2][Iz + 1][1] - refP) + dcpor * (fP[Ix + 1][Iy + 2][Iz + 1][1] - refP)*(fP[Ix + 1][Iy + 2][Iz + 1][1] - refP));
								if (fcomp[Ix][Iy + 1][Iz][i][0]>fcomp[Ix][Iy][Iz][i][0]) {
									DupStream = fdiffusion[Ix][Iy + 1][Iz][i][0];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix, Iy + 1, Iz, i, k, 0);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix][Iy + 1][Iz][RO][0] * gridDim[Nx + Iy + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] * dCoefl;
								AAd *= (fsat[Ix][Iy + 1][Iz][1] * gridDim[Nx + Iy + 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Nx + Iy] * dCoefl) / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
								BBd = gridDim[Nx + Iy + 1] * Coef / porpor2 + gridDim[Nx + Iy] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Ix] * gridDim[Nx + Ny + Iz] / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
								DeltaX = fcomp[Ix][Iy + 1][Iz][i][0] - fcomp[Ix][Iy][Iz][i][0];

								dAAddx = fdE[Ix][Iy][Iz][k][0] * gridDim[Nx + Iy] * dCoefl;
								dAAddx2 = fdE[Ix][Iy + 1][Iz][k][0] * gridDim[Nx + Iy + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}


								mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + (Iy + 1)*Nx + Ix];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;


								if (fphaseStat[Ix][Iy + 1][Iz] == 1) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][RO][1] * gridDim[Nx + Iy + 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][BMU][1] * gridDim[Nx + Iy + 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][1] * gridDim[Nx + Iy] * Makhraj - dMug * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix][Iy + 1][Iz][k][1] * gridDim[Nx + Iy + 1] * Coef*Makhraj - fDiffVisco(Ix, Iy + 1, Iz, k, 1)*gridDim[Nx + Iy + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][k][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Iy + 1] * (G_ACCG*fblockFProps[Ix][Iy + 1][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy + 1][Iz][BGAM][1] * fdE[Ix][Iy + 1][Iz][k][1] / fblockFProps[Ix][Iy + 1][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][BGAM][1] * gridDim[Nx + Iy + 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

								if (ftransS[Ix + 1][Iy + 1][Iz + 1][1][1]) {
									dRsidedxg += fcomp[Ix][Iy + 1][Iz][i][1] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][2] * Moshtaq*(fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = (fcomp[Ix][Iy + 1][Iz][i][1] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

									//dRsidedxg+=comp[Ix][Iy+1][Iz][i][1]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxg+=(comp[Ix][Iy+1][Iz][i][1]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}
								else {
									dRsidedxg += (fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

									//dRsidedxg+=(comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxg+=comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);

								}

								if (fcomp[Ix][Iy + 1][Iz][i][1]>fcomp[Ix][Iy][Iz][i][1]) {
									DupStream = fdiffusion[Ix][Iy + 1][Iz][i][1];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix, Iy + 1, Iz, i, k, 1);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix][Iy + 1][Iz][RO][1] * gridDim[Nx + Iy + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] * dCoefg;
								AAd *= (fsat[Ix][Iy + 1][Iz][2] * gridDim[Nx + Iy + 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Nx + Iy] * dCoefg) / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
								BBd = gridDim[Nx + Iy + 1] * Coef / porpor2 + gridDim[Nx + Iy] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Ix]*gridDim[Nx+Ny+Iz]/(gridDim[Nx+Iy+1]+gridDim[Nx+Iy]);
								DeltaX = fcomp[Ix][Iy + 1][Iz][i][1] - fcomp[Ix][Iy][Iz][i][1];

								dAAddx = fdE[Ix][Iy][Iz][k][1] * gridDim[Nx + Iy] * dCoefg;
								dAAddx2 = fdE[Ix][Iy + 1][Iz][k][1] * gridDim[Nx + Iy + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								if (fphaseStat[Ix][Iy + 1][Iz]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;
							}

							if (Iy>0) {
								if (fphaseStat[Ix][Iy - 1][Iz] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][RO][0] * gridDim[Nx + Iy - 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][BMU][0] * gridDim[Nx + Iy - 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][0] * gridDim[Nx + Iy] * Makhraj - dMul * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix][Iy - 1][Iz][k][0] * gridDim[Nx + Iy - 1] * Coef*Makhraj - fDiffVisco(Ix, Iy - 1, Iz, k, 0)*gridDim[Nx + Iy - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][k][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Iy - 1] * (G_ACCG*fblockFProps[Ix][Iy - 1][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy - 1][Iz][BGAM][0] * fdE[Ix][Iy - 1][Iz][k][0] / fblockFProps[Ix][Iy - 1][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][BGAM][0] * gridDim[Nx + Iy - 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

								if (ftransS[Ix + 1][Iy][Iz + 1][0][1]) {
									dRsidedxl -= (fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);
									dBsidedxl = -fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);

									//dRsidedxl-=(comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][1])*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
									//dBsidedxl-=comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								}
								else {
									dRsidedxl -= fcomp[Ix][Iy - 1][Iz][i][0] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][1] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);
									dBsidedxl = -(fcomp[Ix][Iy - 1][Iz][i][0] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);

									//dRsidedxl-=comp[Ix][Iy-1][Iz][i][0]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
									//dBsidedxl-=(comp[Ix][Iy-1][Iz][i][0]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][1])*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								}

								porpor2 = fporosity[Ix][Iy - 1][Iz] * (1 + cpor * (fP[Ix + 1][Iy][Iz + 1][1] - refP) + dcpor * (fP[Ix + 1][Iy][Iz + 1][1] - refP)*(fP[Ix + 1][Iy][Iz + 1][1] - refP));
								if (fcomp[Ix][Iy - 1][Iz][i][0]>fcomp[Ix][Iy][Iz][i][0]) {
									DupStream = fdiffusion[Ix][Iy - 1][Iz][i][0];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix, Iy - 1, Iz, i, k, 0);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix][Iy - 1][Iz][RO][0] * gridDim[Nx + Iy - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] * dCoefl;
								AAd *= (fsat[Ix][Iy - 1][Iz][1] * gridDim[Nx + Iy - 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Nx + Iy] * dCoefl) / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
								BBd = gridDim[Nx + Iy - 1] * Coef / porpor2 + gridDim[Nx + Iy] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Ix] * gridDim[Nx + Ny + Iz] / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
								DeltaX = fcomp[Ix][Iy - 1][Iz][i][0] - fcomp[Ix][Iy][Iz][i][0];

								dAAddx = fdE[Ix][Iy][Iz][k][0] * gridDim[Nx + Iy] * dCoefl;
								dAAddx2 = fdE[Ix][Iy - 1][Iz][k][0] * gridDim[Nx + Iy - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += -NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += -NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}


								mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + (Iy - 1)*Nx + Ix];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;


								if (fphaseStat[Ix][Iy - 1][Iz] == 1) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][RO][1] * gridDim[Nx + Iy - 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][BMU][1] * gridDim[Nx + Iy - 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][1] * gridDim[Nx + Iy] * Makhraj - dMug * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix][Iy - 1][Iz][k][1] * gridDim[Nx + Iy - 1] * Coef*Makhraj - fDiffVisco(Ix, Iy - 1, Iz, k, 1)*gridDim[Nx + Iy - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][k][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Iy - 1] * (G_ACCG*fblockFProps[Ix][Iy - 1][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy - 1][Iz][BGAM][1] * fdE[Ix][Iy - 1][Iz][k][1] / fblockFProps[Ix][Iy - 1][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][BGAM][1] * gridDim[Nx + Iy - 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

								if (ftransS[Ix + 1][Iy][Iz + 1][1][1]) {
									dRsidedxg -= (fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);
									dBsidedxg = -fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);

									//dRsidedxg-=(comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
									//dBsidedxg-=comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								}
								else {
									dRsidedxg -= fcomp[Ix][Iy - 1][Iz][i][1] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][2] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);
									dBsidedxg = -(fcomp[Ix][Iy - 1][Iz][i][1] * fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);

									//dRsidedxg-=comp[Ix][Iy-1][Iz][i][1]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
									//dBsidedxg-=(comp[Ix][Iy-1][Iz][i][1]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								}

								if (fcomp[Ix][Iy - 1][Iz][i][1]>fcomp[Ix][Iy][Iz][i][1]) {
									DupStream = fdiffusion[Ix][Iy - 1][Iz][i][1];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix, Iy - 1, Iz, i, k, 1);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix][Iy - 1][Iz][RO][1] * gridDim[Nx + Iy - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] * dCoefg;
								AAd *= (fsat[Ix][Iy - 1][Iz][2] * gridDim[Nx + Iy - 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Nx + Iy] * dCoefg) / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
								BBd = gridDim[Nx + Iy - 1] * Coef / porpor2 + gridDim[Nx + Iy] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Ix]*gridDim[Nx+Ny+Iz]/(gridDim[Nx+Iy-1]+gridDim[Nx+Iy]);
								DeltaX = fcomp[Ix][Iy - 1][Iz][i][1] - fcomp[Ix][Iy][Iz][i][1];

								dAAddx = fdE[Ix][Iy][Iz][k][1] * gridDim[Nx + Iy] * dCoefg;
								dAAddx2 = fdE[Ix][Iy - 1][Iz][k][1] * gridDim[Nx + Iy - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += -NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += -NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}


								if (fphaseStat[Ix][Iy - 1][Iz]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;
							}

							if (Iz<(Nz - 1)) {
								if (fphaseStat[Ix][Iy][Iz + 1] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][RO][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][BMU][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][0] * gridDim[Nx + Ny + Iz] * Makhraj - dMul * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix][Iy][Iz + 1][k][0] * gridDim[Nx + Ny + Iz + 1] * Coef*Makhraj - fDiffVisco(Ix, Iy, Iz + 1, k, 0)*gridDim[Nx + Ny + Iz + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][k][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz + 1] * (G_ACCG*fblockFProps[Ix][Iy][Iz + 1][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz + 1][BGAM][0] * fdE[Ix][Iy][Iz + 1][k][0] / fblockFProps[Ix][Iy][Iz + 1][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][BGAM][0] * gridDim[Nx + Ny + Iz + 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

								if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][2]) {
									dRsidedxl += fcomp[Ix][Iy][Iz + 1][i][0] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][1] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = (fcomp[Ix][Iy][Iz + 1][i][0] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

									dRsidedxl += fcomp[Ix][Iy][Iz + 1][i][0] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
									dBsidedxl += (fcomp[Ix][Iy][Iz + 1][i][0] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
								}
								else {
									dRsidedxl += (fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

									dRsidedxl += (fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
									dBsidedxl += fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
								}

								porpor2 = fporosity[Ix][Iy][Iz + 1] * (1 + cpor * (fP[Ix + 1][Iy + 1][Iz + 2][1] - refP) + dcpor * (fP[Ix + 1][Iy + 1][Iz + 2][1] - refP)*(fP[Ix + 1][Iy + 1][Iz + 2][1] - refP));
								if (fcomp[Ix][Iy][Iz + 1][i][0]>fcomp[Ix][Iy][Iz][i][0]) {
									DupStream = fdiffusion[Ix][Iy][Iz + 1][i][0];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix, Iy, Iz + 1, i, k, 0);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix][Iy][Iz + 1][RO][0] * gridDim[Nx + Ny + Iz + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] * dCoefl;
								AAd *= (fsat[Ix][Iy][Iz + 1][1] * gridDim[Nx + Ny + Iz + 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Nx + Ny + Iz] * dCoefl) / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
								BBd = gridDim[Nx + Ny + Iz + 1] * Coef / porpor2 + gridDim[Nx + Ny + Iz] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Ix] * gridDim[Nx + Iy] / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
								DeltaX = fcomp[Ix][Iy][Iz + 1][i][0] - fcomp[Ix][Iy][Iz][i][0];

								dAAddx = fdE[Ix][Iy][Iz][k][0] * gridDim[Nx + Ny + Iz] * dCoefl;
								dAAddx2 = fdE[Ix][Iy][Iz + 1][k][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								mBLNo = preConRow[Nx*Ny*Nz + (Iz + 1)*(Nx*Ny) + Iy * Nx + Ix];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;


								if (fphaseStat[Ix][Iy][Iz + 1] == 1) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][RO][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][BMU][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][1] * gridDim[Nx + Ny + Iz] * Makhraj - dMug * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix][Iy][Iz + 1][k][1] * gridDim[Nx + Ny + Iz + 1] * Coef*Makhraj - fDiffVisco(Ix, Iy, Iz + 1, k, 1)*gridDim[Nx + Ny + Iz + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][k][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz + 1] * (G_ACCG*fblockFProps[Ix][Iy][Iz + 1][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz + 1][BGAM][1] * fdE[Ix][Iy][Iz + 1][k][1] / fblockFProps[Ix][Iy][Iz + 1][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][BGAM][1] * gridDim[Nx + Ny + Iz + 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

								if (ftransS[Ix + 1][Iy + 1][Iz + 1][1][2]) {
									dRsidedxg += fcomp[Ix][Iy][Iz + 1][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][2] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = (fcomp[Ix][Iy][Iz + 1][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

									dRsidedxg += fcomp[Ix][Iy][Iz + 1][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
									dBsidedxg += (fcomp[Ix][Iy][Iz + 1][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
								}
								else {
									dRsidedxg += (fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

									dRsidedxg += (fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
									dBsidedxg += fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);

								}

								if (fcomp[Ix][Iy][Iz + 1][i][1]>fcomp[Ix][Iy][Iz][i][1]) {
									DupStream = fdiffusion[Ix][Iy][Iz + 1][i][1];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix, Iy, Iz + 1, i, k, 1);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix][Iy][Iz + 1][RO][1] * gridDim[Nx + Ny + Iz + 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] * dCoefg;
								AAd *= (fsat[Ix][Iy][Iz + 1][2] * gridDim[Nx + Ny + Iz + 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Nx + Ny + Iz] * dCoefg) / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
								BBd = gridDim[Nx + Ny + Iz + 1] * Coef / porpor2 + gridDim[Nx + Ny + Iz] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Ix]*gridDim[Nx+Iy]/(gridDim[Nx+Ny+Iz+1]+gridDim[Nx+Ny+Iz]);
								DeltaX = fcomp[Ix][Iy][Iz + 1][i][1] - fcomp[Ix][Iy][Iz][i][1];

								dAAddx = fdE[Ix][Iy][Iz][k][1] * gridDim[Nx + Ny + Iz] * dCoefg;
								dAAddx2 = fdE[Ix][Iy][Iz + 1][k][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}


								if (fphaseStat[Ix][Iy][Iz + 1]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;
							}

							if (Iz>0) {
								if (fphaseStat[Ix][Iy][Iz - 1] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][RO][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][BMU][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][0] * gridDim[Nx + Ny + Iz] * Makhraj - dMul * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix][Iy][Iz - 1][k][0] * gridDim[Nx + Ny + Iz - 1] * Coef*Makhraj - fDiffVisco(Ix, Iy, Iz - 1, k, 0)*gridDim[Nx + Ny + Iz - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][k][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz - 1] * (G_ACCG*fblockFProps[Ix][Iy][Iz - 1][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz - 1][BGAM][0] * fdE[Ix][Iy][Iz - 1][k][0] / fblockFProps[Ix][Iy][Iz - 1][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][BGAM][0] * gridDim[Nx + Ny + Iz - 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

								if (ftransS[Ix + 1][Iy + 1][Iz][0][2]) {
									dRsidedxl -= (fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);
									dBsidedxl = -fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);

									dRsidedxl -= (fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][1])*(Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
									dBsidedxl -= fcomp[Ix][Iy][Iz][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								}
								else {
									dRsidedxl -= fcomp[Ix][Iy][Iz - 1][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][1] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);
									dBsidedxl = -(fcomp[Ix][Iy][Iz - 1][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);

									dRsidedxl -= -fcomp[Ix][Iy][Iz - 1][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
									dBsidedxl -= -(fcomp[Ix][Iy][Iz - 1][i][0] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][1])*(Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								}

								porpor2 = fporosity[Ix][Iy][Iz - 1] * (1 + cpor * (fP[Ix + 1][Iy + 1][Iz][1] - refP) + dcpor * (fP[Ix + 1][Iy + 1][Iz][1] - refP)*(fP[Ix + 1][Iy + 1][Iz][1] - refP));
								if (fcomp[Ix][Iy][Iz - 1][i][0]>fcomp[Ix][Iy][Iz][i][0]) {
									DupStream = fdiffusion[Ix][Iy][Iz - 1][i][0];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix, Iy, Iz - 1, i, k, 0);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix][Iy][Iz - 1][RO][0] * gridDim[Nx + Ny + Iz - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] * dCoefl;
								AAd *= (fsat[Ix][Iy][Iz - 1][1] * gridDim[Nx + Ny + Iz - 1] * Coef + fsat[Ix][Iy][Iz][1] * gridDim[Nx + Ny + Iz] * dCoefl) / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
								BBd = gridDim[Nx + Ny + Iz - 1] * Coef / porpor2 + gridDim[Nx + Ny + Iz] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Ix] * gridDim[Nx + Iy] / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
								DeltaX = fcomp[Ix][Iy][Iz - 1][i][0] - fcomp[Ix][Iy][Iz][i][0];

								dAAddx = fdE[Ix][Iy][Iz][k][0] * gridDim[Nx + Ny + Iz] * dCoefl;
								dAAddx2 = fdE[Ix][Iy][Iz - 1][k][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += -NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += -NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								mBLNo = preConRow[Nx*Ny*Nz + (Iz - 1)*(Nx*Ny) + Iy * Nx + Ix];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;


								if (fphaseStat[Ix][Iy][Iz - 1] == 1) Coef = 0;
								else Coef = 1;

								Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][RO][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
								Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][BMU][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
								Moshtaq = (fdE[Ix][Iy][Iz][k][1] * gridDim[Nx + Ny + Iz] * Makhraj - dMug * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (fdE[Ix][Iy][Iz - 1][k][1] * gridDim[Nx + Ny + Iz - 1] * Coef*Makhraj - fDiffVisco(Ix, Iy, Iz - 1, k, 1)*gridDim[Nx + Ny + Iz - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][k][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz - 1] * (G_ACCG*fblockFProps[Ix][Iy][Iz - 1][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz - 1][BGAM][1] * fdE[Ix][Iy][Iz - 1][k][1] / fblockFProps[Ix][Iy][Iz - 1][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

								tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][BGAM][1] * gridDim[Nx + Ny + Iz - 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

								if (ftransS[Ix + 1][Iy + 1][Iz][1][2]) {
									dRsidedxg -= (fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);
									dBsidedxg = -fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);

									dRsidedxg -= (fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
									dBsidedxg -= fcomp[Ix][Iy][Iz][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								}
								else {
									dRsidedxg -= fcomp[Ix][Iy][Iz - 1][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][2] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);
									dBsidedxg = -(fcomp[Ix][Iy][Iz - 1][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);

									dRsidedxg -= fcomp[Ix][Iy][Iz - 1][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
									dBsidedxg -= (fcomp[Ix][Iy][Iz - 1][i][1] * fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								}

								if (fcomp[Ix][Iy][Iz - 1][i][1]>fcomp[Ix][Iy][Iz][i][1]) {
									DupStream = fdiffusion[Ix][Iy][Iz - 1][i][1];
									dDdx = 0;
									dDdx2 = fDifDiffusion(Ix, Iy, Iz - 1, i, k, 1);
								}
								else {
									DupStream = fdiffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = fblockFProps[Ix][Iy][Iz - 1][RO][1] * gridDim[Nx + Ny + Iz - 1] * Coef + fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] * dCoefg;
								AAd *= (fsat[Ix][Iy][Iz - 1][2] * gridDim[Nx + Ny + Iz - 1] * Coef + fsat[Ix][Iy][Iz][2] * gridDim[Nx + Ny + Iz] * dCoefg) / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
								BBd = gridDim[Nx + Ny + Iz - 1] * Coef / porpor2 + gridDim[Nx + Ny + Iz] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Ix]*gridDim[Nx+Iy]/(gridDim[Nx+Ny+Iz-1]+gridDim[Nx+Ny+Iz]);
								DeltaX = fcomp[Ix][Iy][Iz - 1][i][1] - fcomp[Ix][Iy][Iz][i][1];

								dAAddx = fdE[Ix][Iy][Iz][k][1] * gridDim[Nx + Ny + Iz] * dCoefg;
								dAAddx2 = fdE[Ix][Iy][Iz - 1][k][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += -NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += -NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}



								if (fphaseStat[Ix][Iy][Iz - 1]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;
							}

							/////////////////////////////////////////////////Sadeq//k!=i/////////////////////////////////
							if (phaseStat[Ix][Iy][Iz] == 1) {
								//dRsideMdxl = 0;
								Jac1Row[JRowIndex] = dRsideMdxl;
								Jac1Col[JRowIndex] = MatrixEq + k;
								JRowIndex++;
							}
							else if (phaseStat[Ix][Iy][Iz] == (-1)) {
								//dRsideMdxg = 0;
								Jac1Row[JRowIndex] = dRsideMdxg;
								Jac1Col[JRowIndex] = MatrixEq + k;
								JRowIndex++;
							}
							else {
								//dRsideMdxl = 0;
								Jac1Row[JRowIndex] = dRsideMdxl;
								Jac1Col[JRowIndex] = MatrixEq + k;
								JRowIndex++;
								//dRsideMdxg = 0;
								Jac1Row[JRowIndex] = dRsideMdxg;
								Jac1Col[JRowIndex] = MatrixEq + Nc + k;
								JRowIndex++;
							}
							////////////////////////sadeq/////////////////////////
						}
						//jac[BLNo+Nc+i][BLNo+k]=(Vb/Dt)*porpor*sat[Ix][Iy][Iz][1]*dLsidedxl-dQdxl;
						if (fphaseStat[Ix][Iy][Iz] != -1) {
							Jac1Row[JRowIndex] = (Vb / Dt)*porpor*fsat[Ix][Iy][Iz][1] * dLsidedxl - dQdxl - dRsidedxl;
							//Jac1Row[JRowIndex]=(Vb/Dt)*porpor*sat[Ix][Iy][Iz][1]*dLsidedxl-dQdxl;
							Jac1Col[JRowIndex] = jacCol + k;
							JRowIndex++;
						}

						//jac[BLNo+Nc+i][BLNo+Nc+k]=(Vb/Dt)*porpor*sat[Ix][Iy][Iz][2]*dLsidedxg-dQdxg;
						if (fphaseStat[Ix][Iy][Iz] != 1) {
							Jac1Row[JRowIndex] = (Vb / Dt)*porpor*fsat[Ix][Iy][Iz][2] * dLsidedxg - dQdxg - dRsidedxg;
							//Jac1Row[JRowIndex]=(Vb/Dt)*porpor*sat[Ix][Iy][Iz][2]*dLsidedxg-dQdxg;
							Jac1Col[JRowIndex] = jacCol + Nc + k - reCol;
							JRowIndex++;
						}

					}
				}
				else if (BENo < (Nc)) {
					LSide = (Vb / Dt)*(porpor*(fblockFProps[Ix][Iy][Iz][RO][0] * fsat[Ix][Iy][Iz][1] + fblockFProps[Ix][Iy][Iz][RO][1] * fsat[Ix][Iy][Iz][2]) - fpreProp[Ix][Iy][Iz][Nc - 1]);
					RSide = ftrans[Ix + 1][Iy + 1][Iz + 1][0][0] * (fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) - ftrans[Ix][Iy + 1][Iz + 1][0][0] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);
					RSide += ftrans[Ix + 1][Iy + 1][Iz + 1][0][1] * (fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) - ftrans[Ix + 1][Iy][Iz + 1][0][1] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);
					RSide += ftrans[Ix + 1][Iy + 1][Iz + 1][0][2] * (fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) - ftrans[Ix + 1][Iy + 1][Iz][0][2] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);
					RSide += ftrans[Ix + 1][Iy + 1][Iz + 1][1][0] * (fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]) - ftrans[Ix][Iy + 1][Iz + 1][1][0] * (fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);
					RSide += ftrans[Ix + 1][Iy + 1][Iz + 1][1][1] * (fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]) - ftrans[Ix + 1][Iy][Iz + 1][1][1] * (fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);
					RSide += ftrans[Ix + 1][Iy + 1][Iz + 1][1][2] * (fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]) - ftrans[Ix + 1][Iy + 1][Iz][1][2] * (fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);

					RSide += ftrans[Ix + 1][Iy + 1][Iz + 1][2][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - ftrans[Ix][Iy + 1][Iz + 1][2][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
					RSide += ftrans[Ix + 1][Iy + 1][Iz + 1][2][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - ftrans[Ix + 1][Iy][Iz + 1][2][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
					RSide += ftrans[Ix + 1][Iy + 1][Iz + 1][2][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]) - ftrans[Ix + 1][Iy + 1][Iz][2][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
					RSide += ftrans[Ix + 1][Iy + 1][Iz + 1][3][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - ftrans[Ix][Iy + 1][Iz + 1][3][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
					RSide += ftrans[Ix + 1][Iy + 1][Iz + 1][3][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - ftrans[Ix + 1][Iy][Iz + 1][3][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
					RSide += ftrans[Ix + 1][Iy + 1][Iz + 1][3][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]) - ftrans[Ix + 1][Iy + 1][Iz][3][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);

					///////////////////////////////////Transfer Function 

					RSide -= ZERO_CONV * SI_C *blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
					RSide -= ZERO_CONV * SI_C *blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor) / (porpor + Mporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));

					/////////////////////////////////////
					RSide += Qo + Qg;


					dLsidedp = (Vb / Dt)*(fsat[Ix][Iy][Iz][1] * (fblockFProps[Ix][Iy][Iz][RO][0] * dPordp + fdE[Ix][Iy][Iz][Nc][0] * porpor) + fsat[Ix][Iy][Iz][2] * (fblockFProps[Ix][Iy][Iz][RO][1] * dPordp + fdE[Ix][Iy][Iz][Nc][1] * porpor));
					dLsidedSo = (Vb / Dt)*(porpor*fblockFProps[Ix][Iy][Iz][RO][0]);
					dLsidedSg = (Vb / Dt)*(porpor*fblockFProps[Ix][Iy][Iz][RO][1]);

					dRsideMdp = 0;
					dRsidedp = 0;
					//Transfer function dRside dp mdp
					//moshtagh transfer Function jabejaie naft nesbat be feshar matrix
					dRsideMdp -= ZERO_CONV * SI_C * dE[Ix][Iy][Iz][Nc][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
					dRsideMdp -= ZERO_CONV * -SI_C * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor));
					dRsideMdp -= ZERO_CONV * -SI_C * (DiffVisco(Ix, Iy, Iz, Nc, 0) * Mporpor + MdPordp * blockFProps[Ix][Iy][Iz][BMU][0]) * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor)*(blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) * (porpor + Mporpor);
					dRsideMdp -= ZERO_CONV * SI_C * MdPordp * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / (blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					//moshtagh transfer Function jabejaie gaz nesbat be feshar matrix
					dRsideMdp -= ZERO_CONV * SI_C * dE[Ix][Iy][Iz][Nc][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor) / (porpor + Mporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));
					dRsideMdp -= ZERO_CONV * -SI_C * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor) / (porpor + Mporpor));
					dRsideMdp -= ZERO_CONV * -SI_C * (DiffVisco(Ix, Iy, Iz, Nc, 1) * Mporpor + MdPordp * blockFProps[Ix][Iy][Iz][BMU][1]) * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor)*(blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1])) * (porpor + Mporpor);
					dRsideMdp -= ZERO_CONV * SI_C * MdPordp * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / (blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));

					//moshtagh transfer Function jabejaie naft nesbat be feshar Fracture
					dRsidedp -= ZERO_CONV * SI_C * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor));
					dRsidedp -= ZERO_CONV * -SI_C * (fDiffVisco(Ix, Iy, Iz, Nc, 0) * porpor + dPordp * fblockFProps[Ix][Iy][Iz][BMU][0]) * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor)*(blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) * (porpor + Mporpor);
					dRsidedp -= ZERO_CONV * SI_C * dPordp * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / (blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					//moshtagh transfer Function jabejaie gaz nesbat be feshar Fracture
					dRsidedp -= ZERO_CONV * SI_C * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor) / (porpor + Mporpor));
					dRsidedp -= ZERO_CONV * -SI_C * (fDiffVisco(Ix, Iy, Iz, Nc, 1) * porpor + dPordp * fblockFProps[Ix][Iy][Iz][BMU][1]) * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor)*(blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1])) * (porpor + Mporpor);
					dRsidedp -= ZERO_CONV * SI_C * dPordp * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / (blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));
					//

					dRsidedp += ftrans[Ix + 1][Iy + 1][Iz + 1][0][0] + ftrans[Ix][Iy + 1][Iz + 1][0][0];
					dRsidedp += ftrans[Ix + 1][Iy + 1][Iz + 1][0][1] + ftrans[Ix + 1][Iy][Iz + 1][0][1];
					dRsidedp += ftrans[Ix + 1][Iy + 1][Iz + 1][0][2] + ftrans[Ix + 1][Iy + 1][Iz][0][2];
					dRsidedp += ftrans[Ix + 1][Iy + 1][Iz + 1][1][0] + ftrans[Ix][Iy + 1][Iz + 1][1][0];
					dRsidedp += ftrans[Ix + 1][Iy + 1][Iz + 1][1][1] + ftrans[Ix + 1][Iy][Iz + 1][1][1];
					dRsidedp += ftrans[Ix + 1][Iy + 1][Iz + 1][1][2] + ftrans[Ix + 1][Iy + 1][Iz][1][2];

					//jac[BLNo+2*Nc-1][BLNo+(2*Nc)]=PCoeff*(dLsidedp+dRsidedp);
					dMul = fDiffVisco(Ix, Iy, Iz, Nc, 0);
					dMug = fDiffVisco(Ix, Iy, Iz, Nc, 1);

					dRsidedSw = 0;
					dRsidedSg = 0;
					dRsidedSo = 0;
					dRsideMdSo = 0;
					dRsideMdSg = 0;
					dRsideMdSw = 0;
					//transfer function drside dso
					// moshtagh transfer Function jabejaie naft nesbat be So Matrix
					dRsideMdSo -= ZERO_CONV * SI_C * f_m_drelperm[1][4] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					// moshtagh transfer Function jabejaie naft nesbat be So Fracture
					dRsidedSo -= ZERO_CONV * SI_C * f_m_drelperm[1][9] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					// moshtagh transfer Function jabejaie naft nesbat be Sg Matrix
					dRsideMdSg -= ZERO_CONV * SI_C * f_m_drelperm[1][2] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					// moshtagh transfer Function jabejaie gaz nesbat be Sg Matrix
					dRsideMdSg -= ZERO_CONV * SI_C * f_m_drelperm[2][3] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor) / (porpor + Mporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));

					// moshtagh transfer Function jabejaie naft nesbat be Sg Fracture
					dRsidedSg -= ZERO_CONV * SI_C * f_m_drelperm[1][7] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					// moshtagh transfer Function jabejaie gaz nesbat be Sg Fracture
					dRsidedSg -= ZERO_CONV * SI_C * f_m_drelperm[2][8] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor) / (porpor + Mporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));

					// moshtagh transfer Function jabejaie naft nesbat be Sw Matrix
					dRsideMdSw -= ZERO_CONV * SI_C * f_m_drelperm[1][1] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					// moshtagh transfer Function jabejaie naft nesbat be Sw Fracture
					dRsidedSw -= ZERO_CONV * SI_C * f_m_drelperm[1][6] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
					//
					if (Ix<(Nx - 1)) {
						if (fphaseStat[Ix + 1][Iy][Iz]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + Iy * Nx + Ix + 1] - reCol2;

						dsw = ftrans[Ix + 1][Iy + 1][Iz + 1][4][0] * (fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) + ftrans[Ix + 1][Iy + 1][Iz + 1][6][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][0]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dso = ftrans[Ix + 1][Iy + 1][Iz + 1][10][0] * (fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) + ftrans[Ix + 1][Iy + 1][Iz + 1][11][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][0]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix + 1][Iy][Iz] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;

						dsgo = ftrans[Ix + 1][Iy + 1][Iz + 1][8][0] * (fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) + ftrans[Ix + 1][Iy + 1][Iz + 1][9][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						dsgg = ftrans[Ix + 1][Iy + 1][Iz + 1][5][0] * (fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]) + ftrans[Ix + 1][Iy + 1][Iz + 1][7][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][0]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix + 1][Iy][Iz] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][1][0]) {
							Jac1Row[JRowIndex] += (fphaseStat[Ix + 1][Iy][Iz] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;
						///////////////////////////////////////////////////////////////////
						//////////////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (fphaseStat[Ix + 1][Iy][Iz] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][RO][0] * gridDim[Ix + 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][BMU][0] * gridDim[Ix + 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][0] * gridDim[Ix] * Makhraj - dMul * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix + 1][Iy][Iz][Nc][0] * gridDim[Ix + 1] * Coef*Makhraj - fDiffVisco(Ix + 1, Iy, Iz, Nc, 0)*gridDim[Ix + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Ix] * (fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][Nc][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Ix + 1] * (fblockFProps[Ix + 1][Iy][Iz][BGAM][0] * fdE[Ix + 1][Iy][Iz][Nc][0] / fblockFProps[Ix + 1][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][BGAM][0] * gridDim[Ix + 1] * Coef) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][0]) {
							dRsidedp -= fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][1] * Moshtaq*(fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = (fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][1] * Bmoshtaq)*(fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= (fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}

						if (fphaseStat[Ix + 1][Iy][Iz] == 1) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][RO][1] * gridDim[Ix + 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][BMU][1] * gridDim[Ix + 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][1] * gridDim[Ix] * Makhraj - dMug * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix + 1][Iy][Iz][Nc][1] * gridDim[Ix + 1] * Coef*Makhraj - fDiffVisco(Ix + 1, Iy, Iz, Nc, 1)*gridDim[Ix + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Ix] * (fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][Nc][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Ix + 1] * (fblockFProps[Ix + 1][Iy][Iz][BGAM][1] * fdE[Ix + 1][Iy][Iz][Nc][1] / fblockFProps[Ix + 1][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][BGAM][1] * gridDim[Ix + 1] * Coef) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

						if (ftransS[Ix + 1][Iy + 1][Iz + 1][1][0]) {
							dRsidedp -= fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][2] * Moshtaq*(fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += (fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][2] * Bmoshtaq)*(fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= (fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);

						}
						////////////////////////////////////////////////////////////////////
						////////////////////////////////////////////////////////////////////
						Jac1Row[JRowIndex] = PCoeff * (-ftrans[Ix + 1][Iy + 1][Iz + 1][0][0] - ftrans[Ix + 1][Iy + 1][Iz + 1][1][0] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;
					}

					if (Ix>0) {
						if (fphaseStat[Ix - 1][Iy][Iz]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + Iy * Nx + Ix - 1] - reCol2;

						dsw = -ftrans[Ix][Iy + 1][Iz + 1][4][0] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]) - ftrans[Ix][Iy + 1][Iz + 1][6][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						if (!ftransS[Ix][Iy + 1][Iz + 1][0][0]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dso = -ftrans[Ix][Iy + 1][Iz + 1][10][0] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]) - ftrans[Ix][Iy + 1][Iz + 1][11][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						if (!ftransS[Ix][Iy + 1][Iz + 1][0][0]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix - 1][Iy][Iz] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;

						dsgo = -ftrans[Ix][Iy + 1][Iz + 1][8][0] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]) - ftrans[Ix][Iy + 1][Iz + 1][9][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						dsgg = -ftrans[Ix][Iy + 1][Iz + 1][5][0] * (fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]) - ftrans[Ix][Iy + 1][Iz + 1][7][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						if (!ftransS[Ix][Iy + 1][Iz + 1][0][0]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix - 1][Iy][Iz] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}
						if (!ftransS[Ix][Iy + 1][Iz + 1][1][0]) {
							Jac1Row[JRowIndex] += (fphaseStat[Ix - 1][Iy][Iz] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;
						////////////////////////////////////////////////////////
						//////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (fphaseStat[Ix - 1][Iy][Iz] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][RO][0] * gridDim[Ix - 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][BMU][0] * gridDim[Ix - 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][0] * gridDim[Ix] * Makhraj - dMul * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix - 1][Iy][Iz][Nc][0] * gridDim[Ix - 1] * Coef*Makhraj - fDiffVisco(Ix - 1, Iy, Iz, Nc, 0)*gridDim[Ix - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Ix] * (fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][Nc][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Ix - 1] * (fblockFProps[Ix - 1][Iy][Iz][BGAM][0] * fdE[Ix - 1][Iy][Iz][Nc][0] / fblockFProps[Ix - 1][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][BGAM][0] * gridDim[Ix - 1] * Coef) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

						if (ftransS[Ix][Iy + 1][Iz + 1][0][0]) {
							dRsidedp += (fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);
							dBsidedp = -fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);

							dRsidedp += (fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][1])*(Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
							dBsidedp -= fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp += fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][1] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);
							dBsidedp = -(fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);

							dRsidedp += fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
							dBsidedp -= (fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][1])*(Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						}

						if (fphaseStat[Ix - 1][Iy][Iz] == 1) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][RO][1] * gridDim[Ix - 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][BMU][1] * gridDim[Ix - 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][1] * gridDim[Ix] * Makhraj - dMug * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix - 1][Iy][Iz][Nc][1] * gridDim[Ix - 1] * Coef*Makhraj - fDiffVisco(Ix - 1, Iy, Iz, Nc, 1)*gridDim[Ix - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Ix] * (fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][Nc][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Ix - 1] * (fblockFProps[Ix - 1][Iy][Iz][BGAM][1] * fdE[Ix - 1][Iy][Iz][Nc][1] / fblockFProps[Ix - 1][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][BGAM][1] * gridDim[Ix - 1] * Coef) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

						if (ftransS[Ix][Iy + 1][Iz + 1][1][0]) {
							dRsidedp += (fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);
							dBsidedp -= fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);

							dRsidedp += (fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
							dBsidedp -= fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp += fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][2] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);
							dBsidedp -= (fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);

							dRsidedp += fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
							dBsidedp -= (fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						}
						///////////////////////////////////////////////////////////
						///////////////////////////////////////////////////////////
						Jac1Row[JRowIndex] = PCoeff * (-ftrans[Ix][Iy + 1][Iz + 1][0][0] - ftrans[Ix][Iy + 1][Iz + 1][1][0] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;
					}


					if (Iy<(Ny - 1)) {
						if (fphaseStat[Ix][Iy + 1][Iz]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + (Iy + 1)*Nx + Ix] - reCol2;

						dsw = ftrans[Ix + 1][Iy + 1][Iz + 1][4][1] * (fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) + ftrans[Ix + 1][Iy + 1][Iz + 1][6][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dso = ftrans[Ix + 1][Iy + 1][Iz + 1][10][1] * (fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) + ftrans[Ix + 1][Iy + 1][Iz + 1][11][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix][Iy + 1][Iz] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;

						dsgo = ftrans[Ix + 1][Iy + 1][Iz + 1][8][1] * (fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) + ftrans[Ix + 1][Iy + 1][Iz + 1][9][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						dsgg = ftrans[Ix + 1][Iy + 1][Iz + 1][5][1] * (fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]) + ftrans[Ix + 1][Iy + 1][Iz + 1][7][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix][Iy + 1][Iz] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][1][1]) {
							Jac1Row[JRowIndex] += (fphaseStat[Ix][Iy + 1][Iz] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;
						//////////////////////////////////////////////////////////////////////////////
						/////////////////////////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (fphaseStat[Ix][Iy + 1][Iz] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][RO][0] * gridDim[Nx + Iy + 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][BMU][0] * gridDim[Nx + Iy + 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Iy] * Makhraj - dMul * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix][Iy + 1][Iz][Nc][0] * gridDim[Nx + Iy + 1] * Coef*Makhraj - fDiffVisco(Ix, Iy + 1, Iz, Nc, 0)*gridDim[Nx + Iy + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Iy] * (fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][Nc][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Iy + 1] * (fblockFProps[Ix][Iy + 1][Iz][BGAM][0] * fdE[Ix][Iy + 1][Iz][Nc][0] / fblockFProps[Ix][Iy + 1][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][BGAM][0] * gridDim[Nx + Iy + 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][1]) {
							dRsidedp -= fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][1] * Moshtaq*(fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = (fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= (fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}

						if (fphaseStat[Ix][Iy + 1][Iz] == 1) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][RO][1] * gridDim[Nx + Iy + 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][BMU][1] * gridDim[Nx + Iy + 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Iy] * Makhraj - dMug * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix][Iy + 1][Iz][Nc][1] * gridDim[Nx + Iy + 1] * Coef*Makhraj - fDiffVisco(Ix, Iy + 1, Iz, Nc, 1)*gridDim[Nx + Iy + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Iy] * (fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][Nc][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Iy + 1] * (fblockFProps[Ix][Iy + 1][Iz][BGAM][1] * fdE[Ix][Iy + 1][Iz][Nc][1] / fblockFProps[Ix][Iy + 1][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][BGAM][1] * gridDim[Nx + Iy + 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

						if (ftransS[Ix + 1][Iy + 1][Iz + 1][1][1]) {
							dRsidedp -= fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][2] * Moshtaq*(fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += (fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= (fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}

						/////////////////////////////////////////////////////////////////////////////
						/////////////////////////////////////////////////////////////////////////////
						Jac1Row[JRowIndex] = PCoeff * (-ftrans[Ix + 1][Iy + 1][Iz + 1][0][1] - ftrans[Ix + 1][Iy + 1][Iz + 1][1][1] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;
					}
					if (Iy>0) {
						if (fphaseStat[Ix][Iy - 1][Iz]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + (Iy - 1)*Nx + Ix + 1] - reCol2;

						dsw = -ftrans[Ix + 1][Iy][Iz + 1][4][1] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]) - ftrans[Ix + 1][Iy][Iz + 1][6][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						if (!ftransS[Ix + 1][Iy][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dso = -ftrans[Ix + 1][Iy][Iz + 1][10][1] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]) - ftrans[Ix + 1][Iy][Iz + 1][11][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						if (!ftransS[Ix + 1][Iy][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix][Iy - 1][Iz] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;

						dsgo = -ftrans[Ix + 1][Iy][Iz + 1][8][1] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]) - ftrans[Ix + 1][Iy][Iz + 1][9][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						dsgg = -ftrans[Ix + 1][Iy][Iz + 1][5][1] * (fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]) - ftrans[Ix + 1][Iy][Iz + 1][7][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						if (!ftransS[Ix + 1][Iy][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix][Iy - 1][Iz] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}
						if (!ftransS[Ix + 1][Iy][Iz + 1][1][1]) {
							Jac1Row[JRowIndex] += (fphaseStat[Ix][Iy - 1][Iz] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;


						//////////////////////////////////////////////////////////////////
						/////////////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (fphaseStat[Ix][Iy - 1][Iz] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][RO][0] * gridDim[Nx + Iy - 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][BMU][0] * gridDim[Nx + Iy - 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Iy] * Makhraj - dMul * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix][Iy - 1][Iz][Nc][0] * gridDim[Nx + Iy - 1] * Coef*Makhraj - fDiffVisco(Ix, Iy - 1, Iz, Nc, 0)*gridDim[Nx + Iy - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Iy] * (fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][Nc][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Iy - 1] * (fblockFProps[Ix][Iy - 1][Iz][BGAM][0] * fdE[Ix][Iy - 1][Iz][Nc][0] / fblockFProps[Ix][Iy - 1][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][BGAM][0] * gridDim[Nx + Iy - 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

						if (ftransS[Ix + 1][Iy][Iz + 1][0][1]) {
							dRsidedp += (fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);
							dBsidedp = -fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);

							dRsidedp += (fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][1])*(Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
							dBsidedp -= fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						}
						else {
							dRsidedp += fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][1] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);
							dBsidedp = -(fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);

							dRsidedp += fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
							dBsidedp = -(fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][1])*(Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						}

						if (fphaseStat[Ix][Iy - 1][Iz] == 1) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][RO][1] * gridDim[Nx + Iy - 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][BMU][1] * gridDim[Nx + Iy - 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Iy] * Makhraj - dMug * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix][Iy - 1][Iz][Nc][1] * gridDim[Nx + Iy - 1] * Coef*Makhraj - fDiffVisco(Ix, Iy - 1, Iz, Nc, 1)*gridDim[Nx + Iy - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Iy] * (fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][Nc][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Iy - 1] * (fblockFProps[Ix][Iy - 1][Iz][BGAM][1] * fdE[Ix][Iy - 1][Iz][Nc][1] / fblockFProps[Ix][Iy - 1][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][BGAM][1] * gridDim[Nx + Iy - 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

						if (ftransS[Ix + 1][Iy][Iz + 1][1][1]) {
							dRsidedp += (fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);
							dBsidedp -= fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);

							dRsidedp += (fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
							dBsidedp -= fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						}
						else {
							dRsidedp += fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][2] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);
							dBsidedp = -(fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);

							dRsidedp += fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
							dBsidedp -= (fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						}
						///////////////////////////////////////////////////////////////////
						//////////////////////////////////////////////////////////////////
						Jac1Row[JRowIndex] = PCoeff * (-ftrans[Ix + 1][Iy][Iz + 1][0][1] - ftrans[Ix + 1][Iy][Iz + 1][1][1] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;
					}

					if (Iz<(Nz - 1)) {
						if (fphaseStat[Ix][Iy][Iz + 1]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[Nx*Ny*Nz + (Iz + 1)*(Nx*Ny) + Iy * Nx + Ix] - reCol2;

						dsw = ftrans[Ix + 1][Iy + 1][Iz + 1][4][2] * (fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) + ftrans[Ix + 1][Iy + 1][Iz + 1][6][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][2]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dso = ftrans[Ix + 1][Iy + 1][Iz + 1][10][2] * (fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) + ftrans[Ix + 1][Iy + 1][Iz + 1][11][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][2]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix][Iy][Iz + 1] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;

						dsgo = ftrans[Ix + 1][Iy + 1][Iz + 1][8][2] * (fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]) + ftrans[Ix + 1][Iy + 1][Iz + 1][9][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						dsgg = ftrans[Ix + 1][Iy + 1][Iz + 1][5][2] * (fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]) + ftrans[Ix + 1][Iy + 1][Iz + 1][7][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][2]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix][Iy][Iz + 1] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][1][2]) {
							Jac1Row[JRowIndex] += (fphaseStat[Ix][Iy][Iz + 1] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;
						///////////////////////////////////////////////////////////////////////////
						////////////////////////////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (fphaseStat[Ix][Iy][Iz + 1] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][RO][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][BMU][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Ny + Iz] * Makhraj - dMul * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix][Iy][Iz + 1][Nc][0] * gridDim[Nx + Ny + Iz + 1] * Coef*Makhraj - fDiffVisco(Ix, Iy, Iz + 1, Nc, 0)*gridDim[Nx + Ny + Iz + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Ny + Iz] * (fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][Nc][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz + 1] * (fblockFProps[Ix][Iy][Iz + 1][BGAM][0] * fdE[Ix][Iy][Iz + 1][Nc][0] / fblockFProps[Ix][Iy][Iz + 1][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][BGAM][0] * gridDim[Nx + Ny + Iz + 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

						if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][2]) {
							dRsidedp -= fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][1] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = (fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= (fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}

						if (fphaseStat[Ix][Iy][Iz + 1] == 1) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][RO][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][BMU][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Ny + Iz] * Makhraj - dMug * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix][Iy][Iz + 1][Nc][1] * gridDim[Nx + Ny + Iz + 1] * Coef*Makhraj - fDiffVisco(Ix, Iy, Iz + 1, Nc, 1)*gridDim[Nx + Ny + Iz + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Ny + Iz] * (fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][Nc][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz + 1] * (fblockFProps[Ix][Iy][Iz + 1][BGAM][1] * fdE[Ix][Iy][Iz + 1][Nc][1] / fblockFProps[Ix][Iy][Iz + 1][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][BGAM][1] * gridDim[Nx + Ny + Iz + 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

						if (ftransS[Ix + 1][Iy + 1][Iz + 1][1][2]) {
							dRsidedp -= fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][2] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += (fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= (fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						///////////////////////////////////////////////////////////////////////////////
						//////////////////////////////////////////////////////////////////////////////

						Jac1Row[JRowIndex] = PCoeff * (-ftrans[Ix + 1][Iy + 1][Iz + 1][0][2] - ftrans[Ix + 1][Iy + 1][Iz + 1][1][2] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;
					}

					if (Iz>0) {
						if (fphaseStat[Ix][Iy][Iz - 1]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[Nx*Ny*Nz + (Iz - 1)*(Nx*Ny) + Iy * Nx + Ix + 1] - reCol2;

						dsw = -ftrans[Ix + 1][Iy + 1][Iz][4][2] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]) - ftrans[Ix + 1][Iy + 1][Iz][6][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						if (!ftransS[Ix + 1][Iy + 1][Iz][0][2]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dso = -ftrans[Ix + 1][Iy + 1][Iz][10][2] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]) - ftrans[Ix + 1][Iy + 1][Iz][11][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						if (!ftransS[Ix + 1][Iy + 1][Iz][0][2]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix][Iy][Iz - 1] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;

						dsgo = -ftrans[Ix + 1][Iy + 1][Iz][8][2] * (fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]) - ftrans[Ix + 1][Iy + 1][Iz][9][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						dsgg = -ftrans[Ix + 1][Iy + 1][Iz][5][2] * (fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]) - ftrans[Ix + 1][Iy + 1][Iz][7][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						if (!ftransS[Ix + 1][Iy + 1][Iz][0][2]) {
							Jac1Row[JRowIndex] = (fphaseStat[Ix][Iy][Iz - 1] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}
						if (!ftransS[Ix + 1][Iy + 1][Iz][1][2]) {
							Jac1Row[JRowIndex] += (fphaseStat[Ix][Iy][Iz - 1] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;
						///////////////////////////////////////////////////////////////
						///////////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (fphaseStat[Ix][Iy][Iz - 1] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][RO][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][BMU][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Ny + Iz] * Makhraj - dMul * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix][Iy][Iz - 1][Nc][0] * gridDim[Nx + Ny + Iz - 1] * Coef*Makhraj - fDiffVisco(Ix, Iy, Iz - 1, Nc, 0)*gridDim[Nx + Ny + Iz - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Ny + Iz] * (fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][Nc][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz - 1] * (fblockFProps[Ix][Iy][Iz - 1][BGAM][0] * fdE[Ix][Iy][Iz - 1][Nc][0] / fblockFProps[Ix][Iy][Iz - 1][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][BGAM][0] * gridDim[Nx + Ny + Iz - 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

						if (ftransS[Ix + 1][Iy + 1][Iz][0][2]) {
							dRsidedp += (fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);
							dBsidedp = -fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);

							dRsidedp += (fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][1])*(Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							dBsidedp -= fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						}
						else {
							dRsidedp += fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][1] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);
							dBsidedp = -(fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);

							dRsidedp += fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							dBsidedp -= (fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][1])*(Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						}

						if (fphaseStat[Ix][Iy][Iz - 1] == 1) Coef = 0;
						else Coef = 1;

						Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][RO][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
						Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][BMU][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
						Moshtaq = (fdE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Ny + Iz] * Makhraj - dMug * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (fdE[Ix][Iy][Iz - 1][Nc][1] * gridDim[Nx + Ny + Iz - 1] * Coef*Makhraj - fDiffVisco(Ix, Iy, Iz - 1, Nc, 1)*gridDim[Nx + Ny + Iz - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Ny + Iz] * (fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][Nc][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz - 1] * (fblockFProps[Ix][Iy][Iz - 1][BGAM][1] * fdE[Ix][Iy][Iz - 1][Nc][1] / fblockFProps[Ix][Iy][Iz - 1][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

						tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][BGAM][1] * gridDim[Nx + Ny + Iz - 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

						if (ftransS[Ix + 1][Iy + 1][Iz][1][2]) {
							dRsidedp += (fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);
							dBsidedp -= fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);

							dRsidedp += (fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							dBsidedp -= fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						}
						else {
							dRsidedp += fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][2] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);
							dBsidedp -= (fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);

							dRsidedp += fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							dBsidedp -= (fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						}
						//////////////////////////////////////////////////////////////////
						//////////////////////////////////////////////////////////////////
						Jac1Row[JRowIndex] = PCoeff * (-ftrans[Ix + 1][Iy + 1][Iz][0][2] - ftrans[Ix + 1][Iy + 1][Iz][1][2] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;
					}

					Jac1Row[JRowIndex] = PCoeff * (dLsidedp + dRsidedp + PIo + PIg);
					Jac1Col[JRowIndex] = jacCol + (2 * Nc) - reCol;
					JRowIndex++;



					if (fphaseStat[Ix][Iy][Iz] != -1) {
						Jac1Row[JRowIndex] = -dRsidedSw;
						Jac1Col[JRowIndex] = jacCol + (2 * Nc + 1) - reCol;
						JRowIndex++;

						Jac1Row[JRowIndex] = dLsidedSo - dRsidedSo;
						Jac1Col[JRowIndex] = jacCol + (2 * Nc + 2) - reCol;
						JRowIndex++;
					}

					if (fphaseStat[Ix][Iy][Iz] != 1) {
						Jac1Row[JRowIndex] = dLsidedSg - dRsidedSg;
						Jac1Col[JRowIndex] = jacCol + (2 * Nc + 3) - reCol - reCol3;
						JRowIndex++;
					}
					//////////////////////////////////////////////


					/////////////////////////////////////////////////Sadeq///////////////////////////////////
					if (phaseStat[Ix][Iy][Iz] == 1) {
						//dRsideMdSo = 0;
						Jac1Row[JRowIndex] = dRsideMdSo;
						Jac1Col[JRowIndex] = MatrixEq + 2 * Nc + 2 - reColF1;
						JRowIndex++;
					}
					else if (phaseStat[Ix][Iy][Iz] == (-1)) {
						//dRsideMdSg = 0;
						Jac1Row[JRowIndex] = dRsideMdSg;
						Jac1Col[JRowIndex] = MatrixEq + 2 * Nc + 2 - reColF1;
						JRowIndex++;
					}
					else {
						//dRsideMdSo = 0;
						Jac1Row[JRowIndex] = dRsideMdSo;
						Jac1Col[JRowIndex] = MatrixEq + 2 * Nc + 2 - reColF1;
						JRowIndex++;
						//dRsideMdSg = 0;
						Jac1Row[JRowIndex] = dRsideMdSg;
						Jac1Col[JRowIndex] = MatrixEq + 2 * Nc + 3 - reColF1;
						JRowIndex++;
					}
					//dRsideMdp = 0;
					Jac1Row[JRowIndex] = PCoeff * dRsideMdp;
					Jac1Col[JRowIndex] = MatrixEq + 2 * Nc - reColF1;
					JRowIndex++;
					//dRsideMdSw = 0;
					Jac1Row[JRowIndex] = dRsideMdSw;
					Jac1Col[JRowIndex] = MatrixEq + 2 * Nc + 1 - reColF1;
					JRowIndex++;
					//////////////////////////Sadeq///////////////////////////////


					for (k = 0; k<Nc; k++) {
						dRsidedxl = 0;
						dRsidedxg = 0;
						dRsideMdxl = 0;
						dRsideMdxg = 0;


						dLsidedxl = fdE[Ix][Iy][Iz][k][0];
						dLsidedxg = fdE[Ix][Iy][Iz][k][1];
						dQdxl = 0;
						dQdxg = 0;

						dMul = fDiffVisco(Ix, Iy, Iz, k, 0);
						dMug = fDiffVisco(Ix, Iy, Iz, k, 1);
						// Transfer function dRside dxl
						// moshtagh transfer Function jabejaie naft nesbat be xl Matrix
						dRsideMdxl -= ZERO_CONV * SI_C * dE[Ix][Iy][Iz][k][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor) / (porpor + Mporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
						dRsideMdxl -= ZERO_CONV * -SI_C * DiffVisco(Ix, Iy, Iz, k, 0) * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] * Mporpor / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor)*(blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) * (porpor + Mporpor);

						// moshtagh transfer Function jabejaie naft nesbat be xl Fracture
						dRsidedxl -= ZERO_CONV * -SI_C * fDiffVisco(Ix, Iy, Iz, k, 0) * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] * porpor / ((blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor)*(blockFProps[Ix][Iy][Iz][BMU][0] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][0] * porpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) * (porpor + Mporpor);

						// moshtagh transfer Function jabejaie gaz nesbat be xg Matrix
						dRsideMdxg -= ZERO_CONV * SI_C * dE[Ix][Iy][Iz][k][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor) / (porpor + Mporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));
						dRsideMdxg -= ZERO_CONV * -SI_C * DiffVisco(Ix, Iy, Iz, k, 1) * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] * Mporpor / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor)*(blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1])) * (porpor + Mporpor);

						// moshtagh transfer Function jabejaie gaz nesbat be xg Fracture
						dRsidedxg -= ZERO_CONV * -SI_C * fDiffVisco(Ix, Iy, Iz, k, 1) * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] * porpor / ((blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor)*(blockFProps[Ix][Iy][Iz][BMU][1] * Mporpor + fblockFProps[Ix][Iy][Iz][BMU][1] * porpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1])) * (porpor + Mporpor);
						//

						if (Ix<(Nx - 1)) {
							if (fphaseStat[Ix + 1][Iy][Iz] == (-1)) Coef = 0;
							else Coef = 1;

							Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][RO][0] * gridDim[Ix + 1] * Coef;
							Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][BMU][0] * gridDim[Ix + 1] * Coef;
							Moshtaq = (fdE[Ix][Iy][Iz][k][0] * gridDim[Ix] * Makhraj - dMul * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (fdE[Ix + 1][Iy][Iz][k][0] * gridDim[Ix + 1] * Coef*Makhraj - fDiffVisco(Ix + 1, Iy, Iz, k, 0)*gridDim[Ix + 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Ix] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][k][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Ix + 1] * (G_ACCG*fblockFProps[Ix + 1][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix + 1][Iy][Iz][BGAM][0] * fdE[Ix + 1][Iy][Iz][k][0] / fblockFProps[Ix + 1][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

							tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][BGAM][0] * gridDim[Ix + 1] * Coef) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

							if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][0]) {
								dRsidedxl += fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][1] * Moshtaq*(fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
								dBsidedxl = (fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][1] * Bmoshtaq)*(fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

								//dRsidedxl+=IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								//dBsidedxl+=(IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
							}
							else {
								dRsidedxl += (fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
								dBsidedxl = fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 2][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

								//dRsidedxl+=(IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								//dBsidedxl+=IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
							}

							mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + Iy * Nx + Ix + 1];
							Jac1Row[JRowIndex] = -dBsidedxl * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo + k;
							JRowIndex++;


							if (fphaseStat[Ix + 1][Iy][Iz] == 1) Coef = 0;
							else Coef = 1;

							Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][RO][1] * gridDim[Ix + 1] * Coef;
							Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][BMU][1] * gridDim[Ix + 1] * Coef;
							Moshtaq = (fdE[Ix][Iy][Iz][k][1] * gridDim[Ix] * Makhraj - dMug * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (fdE[Ix + 1][Iy][Iz][k][1] * gridDim[Ix + 1] * Coef*Makhraj - fDiffVisco(Ix + 1, Iy, Iz, k, 1)*gridDim[Ix + 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Ix] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][k][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Ix + 1] * (G_ACCG*fblockFProps[Ix + 1][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix + 1][Iy][Iz][BGAM][1] * fdE[Ix + 1][Iy][Iz][k][1] / fblockFProps[Ix + 1][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

							tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Ix] + fblockFProps[Ix + 1][Iy][Iz][BGAM][1] * gridDim[Ix + 1] * Coef) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

							if (ftransS[Ix + 1][Iy + 1][Iz + 1][1][0]) {
								dRsidedxg += fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][2] * Moshtaq*(fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
								dBsidedxg = (fIFTran[Ix][Iy][Iz][0] * fsat[Ix + 1][Iy][Iz][2] * Bmoshtaq)*(fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

								//dRsidedxg+=IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								//dBsidedxg+=(IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
							}
							else {
								dRsidedxg += (fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
								dBsidedxg = fIFTran[Ix][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 2][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

								//dRsidedxg+=(IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								//dBsidedxg+=IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);

							}

							if (fphaseStat[Ix + 1][Iy][Iz]) reCol2 = Nc;
							else reCol2 = 0;
							Jac1Row[JRowIndex] = -dBsidedxg * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
							JRowIndex++;
						}

						if (Ix>0) {
							if (fphaseStat[Ix - 1][Iy][Iz] == (-1)) Coef = 0;
							else Coef = 1;

							Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][RO][0] * gridDim[Ix - 1] * Coef;
							Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][BMU][0] * gridDim[Ix - 1] * Coef;
							Moshtaq = (fdE[Ix][Iy][Iz][k][0] * gridDim[Ix] * Makhraj - dMul * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (fdE[Ix - 1][Iy][Iz][k][0] * gridDim[Ix - 1] * Coef*Makhraj - fDiffVisco(Ix - 1, Iy, Iz, k, 0)*gridDim[Ix - 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Ix] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][k][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Ix - 1] * (G_ACCG*fblockFProps[Ix - 1][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix - 1][Iy][Iz][BGAM][0] * fdE[Ix - 1][Iy][Iz][k][0] / fblockFProps[Ix - 1][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

							tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][BGAM][0] * gridDim[Ix - 1] * Coef) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

							if (ftransS[Ix][Iy + 1][Iz + 1][0][0]) {
								dRsidedxl -= (fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);
								dBsidedxl = -fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);

								//dRsidedxl-=(IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1])*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								//dBsidedxl-=IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
							}
							else {
								dRsidedxl -= fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][1] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);
								dBsidedxl = -(fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix][Iy + 1][Iz + 1][1]);

								//dRsidedxl-=IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								//dBsidedxl-=(IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][1])*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
							}

							mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + Iy * Nx + Ix - 1];
							Jac1Row[JRowIndex] = -dBsidedxl * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo + k;
							JRowIndex++;


							if (fphaseStat[Ix - 1][Iy][Iz] == 1) Coef = 0;
							else Coef = 1;

							Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][RO][1] * gridDim[Ix - 1] * Coef;
							Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][BMU][1] * gridDim[Ix - 1] * Coef;
							Moshtaq = (fdE[Ix][Iy][Iz][k][1] * gridDim[Ix] * Makhraj - dMug * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (fdE[Ix - 1][Iy][Iz][k][1] * gridDim[Ix - 1] * Coef*Makhraj - fDiffVisco(Ix - 1, Iy, Iz, k, 1)*gridDim[Ix - 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Ix] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][k][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Ix - 1] * (G_ACCG*fblockFProps[Ix - 1][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix - 1][Iy][Iz][BGAM][1] * fdE[Ix - 1][Iy][Iz][k][1] / fblockFProps[Ix - 1][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

							tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Ix] + fblockFProps[Ix - 1][Iy][Iz][BGAM][1] * gridDim[Ix - 1] * Coef) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

							if (ftransS[Ix][Iy + 1][Iz + 1][1][0]) {
								dRsidedxg -= (fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);
								dBsidedxg = -fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);

								//dRsidedxg-=(IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								//dBsidedxg-=IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
							}
							else {
								dRsidedxg -= fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][2] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);
								dBsidedxg = -(fIFTran[Ix - 1][Iy][Iz][0] * fsat[Ix - 1][Iy][Iz][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix][Iy + 1][Iz + 1][2]);

								//dRsidedxg-=IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								//dBsidedxg-=(IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
							}


							if (fphaseStat[Ix - 1][Iy][Iz]) reCol2 = Nc;
							else reCol2 = 0;
							Jac1Row[JRowIndex] = -dBsidedxg * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
							JRowIndex++;
						}

						if (Iy<(Ny - 1)) {
							if (fphaseStat[Ix][Iy + 1][Iz] == (-1)) Coef = 0;
							else Coef = 1;

							Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][RO][0] * gridDim[Nx + Iy + 1] * Coef;
							Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][BMU][0] * gridDim[Nx + Iy + 1] * Coef;
							Moshtaq = (fdE[Ix][Iy][Iz][k][0] * gridDim[Nx + Iy] * Makhraj - dMul * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (fdE[Ix][Iy + 1][Iz][k][0] * gridDim[Nx + Iy + 1] * Coef*Makhraj - fDiffVisco(Ix, Iy + 1, Iz, k, 0)*gridDim[Nx + Iy + 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][k][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Nx + Iy + 1] * (G_ACCG*fblockFProps[Ix][Iy + 1][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy + 1][Iz][BGAM][0] * fdE[Ix][Iy + 1][Iz][k][0] / fblockFProps[Ix][Iy + 1][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

							tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][BGAM][0] * gridDim[Nx + Iy + 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

							if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][1]) {
								dRsidedxl += fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][1] * Moshtaq*(fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
								dBsidedxl = (fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

								//dRsidedxl+=IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								//dBsidedxl+=(IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
							}
							else {
								dRsidedxl += (fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
								dBsidedxl = fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 2][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

								//dRsidedxl+=(IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								//dBsidedxl+=IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
							}

							mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + (Iy + 1)*Nx + Ix];
							Jac1Row[JRowIndex] = -dBsidedxl * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo + k;
							JRowIndex++;


							if (fphaseStat[Ix][Iy + 1][Iz] == 1) Coef = 0;
							else Coef = 1;

							Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][RO][1] * gridDim[Nx + Iy + 1] * Coef;
							Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][BMU][1] * gridDim[Nx + Iy + 1] * Coef;
							Moshtaq = (fdE[Ix][Iy][Iz][k][1] * gridDim[Nx + Iy] * Makhraj - dMug * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (fdE[Ix][Iy + 1][Iz][k][1] * gridDim[Nx + Iy + 1] * Coef*Makhraj - fDiffVisco(Ix, Iy + 1, Iz, k, 1)*gridDim[Nx + Iy + 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][k][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Nx + Iy + 1] * (G_ACCG*fblockFProps[Ix][Iy + 1][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy + 1][Iz][BGAM][1] * fdE[Ix][Iy + 1][Iz][k][1] / fblockFProps[Ix][Iy + 1][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

							tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy + 1][Iz][BGAM][1] * gridDim[Nx + Iy + 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

							if (ftransS[Ix + 1][Iy + 1][Iz + 1][1][1]) {
								dRsidedxg += fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][2] * Moshtaq*(fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
								dBsidedxg = (fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy + 1][Iz][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

								//dRsidedxg+=IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								//dBsidedxg+=(IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
							}
							else {
								dRsidedxg += (fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
								dBsidedxg = fIFTran[Ix][Iy][Iz][1] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 2][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

								//dRsidedxg+=(IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								//dBsidedxg+=IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);

							}

							if (fphaseStat[Ix][Iy + 1][Iz]) reCol2 = Nc;
							else reCol2 = 0;
							Jac1Row[JRowIndex] = -dBsidedxg * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
							JRowIndex++;
						}

						if (Iy>0) {
							if (fphaseStat[Ix][Iy - 1][Iz] == (-1)) Coef = 0;
							else Coef = 1;

							Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][RO][0] * gridDim[Nx + Iy - 1] * Coef;
							Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][BMU][0] * gridDim[Nx + Iy - 1] * Coef;
							Moshtaq = (fdE[Ix][Iy][Iz][k][0] * gridDim[Nx + Iy] * Makhraj - dMul * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (fdE[Ix][Iy - 1][Iz][k][0] * gridDim[Nx + Iy - 1] * Coef*Makhraj - fDiffVisco(Ix, Iy - 1, Iz, k, 0)*gridDim[Nx + Iy - 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][k][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Nx + Iy - 1] * (G_ACCG*fblockFProps[Ix][Iy - 1][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy - 1][Iz][BGAM][0] * fdE[Ix][Iy - 1][Iz][k][0] / fblockFProps[Ix][Iy - 1][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

							tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][BGAM][0] * gridDim[Nx + Iy - 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

							if (ftransS[Ix + 1][Iy][Iz + 1][0][1]) {
								dRsidedxl -= (fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);
								dBsidedxl = -fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);

								//dRsidedxl-=(IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][1])*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								//dBsidedxl-=IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
							}
							else {
								dRsidedxl -= fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][1] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);
								dBsidedxl = -(fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy][Iz + 1][1]);

								//dRsidedxl-=IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								//dBsidedxl-=(IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][1])*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
							}

							mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + (Iy - 1)*Nx + Ix];
							Jac1Row[JRowIndex] = -dBsidedxl * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo + k;
							JRowIndex++;


							if (fphaseStat[Ix][Iy - 1][Iz] == 1) Coef = 0;
							else Coef = 1;

							Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][RO][1] * gridDim[Nx + Iy - 1] * Coef;
							Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][BMU][1] * gridDim[Nx + Iy - 1] * Coef;
							Moshtaq = (fdE[Ix][Iy][Iz][k][1] * gridDim[Nx + Iy] * Makhraj - dMug * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (fdE[Ix][Iy - 1][Iz][k][1] * gridDim[Nx + Iy - 1] * Coef*Makhraj - fDiffVisco(Ix, Iy - 1, Iz, k, 1)*gridDim[Nx + Iy - 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][k][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Nx + Iy - 1] * (G_ACCG*fblockFProps[Ix][Iy - 1][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy - 1][Iz][BGAM][1] * fdE[Ix][Iy - 1][Iz][k][1] / fblockFProps[Ix][Iy - 1][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

							tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Iy] + fblockFProps[Ix][Iy - 1][Iz][BGAM][1] * gridDim[Nx + Iy - 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

							if (ftransS[Ix + 1][Iy][Iz + 1][1][1]) {
								dRsidedxg -= (fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);
								dBsidedxg = -fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);

								//dRsidedxg-=(IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								//dBsidedxg-=IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
							}
							else {
								dRsidedxg -= fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][2] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);
								dBsidedxg = -(fIFTran[Ix][Iy - 1][Iz][1] * fsat[Ix][Iy - 1][Iz][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy][Iz + 1][2]);

								//dRsidedxg-=IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								//dBsidedxg-=(IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
							}


							if (fphaseStat[Ix][Iy - 1][Iz]) reCol2 = Nc;
							else reCol2 = 0;
							Jac1Row[JRowIndex] = -dBsidedxg * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
							JRowIndex++;
						}

						if (Iz<(Nz - 1)) {
							if (fphaseStat[Ix][Iy][Iz + 1] == (-1)) Coef = 0;
							else Coef = 1;

							Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][RO][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
							Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][BMU][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
							Moshtaq = (fdE[Ix][Iy][Iz][k][0] * gridDim[Nx + Ny + Iz] * Makhraj - dMul * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (fdE[Ix][Iy][Iz + 1][k][0] * gridDim[Nx + Ny + Iz + 1] * Coef*Makhraj - fDiffVisco(Ix, Iy, Iz + 1, k, 0)*gridDim[Nx + Ny + Iz + 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][k][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz + 1] * (G_ACCG*fblockFProps[Ix][Iy][Iz + 1][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz + 1][BGAM][0] * fdE[Ix][Iy][Iz + 1][k][0] / fblockFProps[Ix][Iy][Iz + 1][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

							tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][BGAM][0] * gridDim[Nx + Ny + Iz + 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

							if (ftransS[Ix + 1][Iy + 1][Iz + 1][0][2]) {
								dRsidedxl += fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][1] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
								dBsidedxl = (fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

								dRsidedxl += fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
								dBsidedxl += (fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							}
							else {
								dRsidedxl += (fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);
								dBsidedxl = fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 2][1] - fP[Ix + 1][Iy + 1][Iz + 1][1]);

								dRsidedxl += (fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
								dBsidedxl += fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							}

							mBLNo = preConRow[Nx*Ny*Nz + (Iz + 1)*(Nx*Ny) + Iy * Nx + Ix];
							Jac1Row[JRowIndex] = -dBsidedxl * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo + k;
							JRowIndex++;


							if (fphaseStat[Ix][Iy][Iz + 1] == 1) Coef = 0;
							else Coef = 1;

							Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][RO][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
							Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][BMU][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
							Moshtaq = (fdE[Ix][Iy][Iz][k][1] * gridDim[Nx + Ny + Iz] * Makhraj - dMug * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (fdE[Ix][Iy][Iz + 1][k][1] * gridDim[Nx + Ny + Iz + 1] * Coef*Makhraj - fDiffVisco(Ix, Iy, Iz + 1, k, 1)*gridDim[Nx + Ny + Iz + 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][k][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz + 1] * (G_ACCG*fblockFProps[Ix][Iy][Iz + 1][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz + 1][BGAM][1] * fdE[Ix][Iy][Iz + 1][k][1] / fblockFProps[Ix][Iy][Iz + 1][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

							tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz + 1][BGAM][1] * gridDim[Nx + Ny + Iz + 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

							if (ftransS[Ix + 1][Iy + 1][Iz + 1][1][2]) {
								dRsidedxg += fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][2] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
								dBsidedxg = (fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

								dRsidedxg += fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
								dBsidedxg += (fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz + 1][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							}
							else {
								dRsidedxg += (fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);
								dBsidedxg = fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 2][2] - fP[Ix + 1][Iy + 1][Iz + 1][2]);

								dRsidedxg += (fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
								dBsidedxg += fIFTran[Ix][Iy][Iz][2] * fsat[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);

							}

							if (fphaseStat[Ix][Iy][Iz + 1]) reCol2 = Nc;
							else reCol2 = 0;
							Jac1Row[JRowIndex] = -dBsidedxg * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
							JRowIndex++;
						}

						if (Iz>0) {
							if (fphaseStat[Ix][Iy][Iz - 1] == (-1)) Coef = 0;
							else Coef = 1;

							Surat = fblockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][RO][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
							Makhraj = fblockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][BMU][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
							Moshtaq = (fdE[Ix][Iy][Iz][k][0] * gridDim[Nx + Ny + Iz] * Makhraj - dMul * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (fdE[Ix][Iy][Iz - 1][k][0] * gridDim[Nx + Ny + Iz - 1] * Coef*Makhraj - fDiffVisco(Ix, Iy, Iz - 1, k, 0)*gridDim[Nx + Ny + Iz - 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][0] * fdE[Ix][Iy][Iz][k][0] / fblockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz - 1] * (G_ACCG*fblockFProps[Ix][Iy][Iz - 1][RO][0] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz - 1][BGAM][0] * fdE[Ix][Iy][Iz - 1][k][0] / fblockFProps[Ix][Iy][Iz - 1][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

							tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][BGAM][0] * gridDim[Nx + Ny + Iz - 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

							if (ftransS[Ix + 1][Iy + 1][Iz][0][2]) {
								dRsidedxl -= (fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][1] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);
								dBsidedxl = -fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][1] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);

								dRsidedxl -= (fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][1])*(Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								dBsidedxl -= fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							}
							else {
								dRsidedxl -= fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][1] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);
								dBsidedxl = -(fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][1] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - fP[Ix + 1][Iy + 1][Iz][1]);

								dRsidedxl -= fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								dBsidedxl -= (fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][1])*(Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							}

							mBLNo = preConRow[Nx*Ny*Nz + (Iz - 1)*(Nx*Ny) + Iy * Nx + Ix];
							Jac1Row[JRowIndex] = -dBsidedxl * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo + k;
							JRowIndex++;


							if (fphaseStat[Ix][Iy][Iz - 1] == 1) Coef = 0;
							else Coef = 1;

							Surat = fblockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][RO][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
							Makhraj = fblockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][BMU][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
							Moshtaq = (fdE[Ix][Iy][Iz][k][1] * gridDim[Nx + Ny + Iz] * Makhraj - dMug * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (fdE[Ix][Iy][Iz - 1][k][1] * gridDim[Nx + Ny + Iz - 1] * Coef*Makhraj - fDiffVisco(Ix, Iy, Iz - 1, k, 1)*gridDim[Nx + Ny + Iz - 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*fblockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz][BGAM][1] * fdE[Ix][Iy][Iz][k][1] / fblockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz - 1] * (G_ACCG*fblockFProps[Ix][Iy][Iz - 1][RO][1] * fluidProp[k][MW] + fblockFProps[Ix][Iy][Iz - 1][BGAM][1] * fdE[Ix][Iy][Iz - 1][k][1] / fblockFProps[Ix][Iy][Iz - 1][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

							tempdx = (fblockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Ny + Iz] + fblockFProps[Ix][Iy][Iz - 1][BGAM][1] * gridDim[Nx + Ny + Iz - 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

							if (ftransS[Ix + 1][Iy + 1][Iz][1][2]) {
								dRsidedxg -= (fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][2] * Moshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);
								dBsidedxg = -fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][2] * Bmoshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);

								dRsidedxg -= (fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								dBsidedxg -= fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							}
							else {
								dRsidedxg -= fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][2] * Moshtaq*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);
								dBsidedxg = -(fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][2] * Bmoshtaq)*(fP[Ix + 1][Iy + 1][Iz + 1][2] - fP[Ix + 1][Iy + 1][Iz][2]);

								dRsidedxg -= fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								dBsidedxg -= (fIFTran[Ix][Iy][Iz - 1][2] * fsat[Ix][Iy][Iz - 1][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							}


							if (fphaseStat[Ix][Iy][Iz - 1]) reCol2 = Nc;
							else reCol2 = 0;
							Jac1Row[JRowIndex] = -dBsidedxg * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
							JRowIndex++;
						}
						//jac[BLNo+2*Nc-1][BLNo+k]=(Vb/Dt)*porpor*sat[Ix][Iy][Iz][1]*dE[Ix][Iy][Iz][k][0];
						if (fphaseStat[Ix][Iy][Iz] != -1) {
							Jac1Row[JRowIndex] = (Vb / Dt)*porpor*fsat[Ix][Iy][Iz][1] * fdE[Ix][Iy][Iz][k][0] - dRsidedxl;
							//Jac1Row[JRowIndex]=(Vb/Dt)*porpor*sat[Ix][Iy][Iz][1]*dE[Ix][Iy][Iz][k][0];
							Jac1Col[JRowIndex] = jacCol + k;
							JRowIndex++;
						}

						//jac[BLNo+2*Nc-1][BLNo+Nc+k]=(Vb/Dt)*porpor*sat[Ix][Iy][Iz][2]*dE[Ix][Iy][Iz][k][1];
						if (fphaseStat[Ix][Iy][Iz] != 1) {
							//Jac1Row[JRowIndex]=(Vb/Dt)*porpor*sat[Ix][Iy][Iz][2]*dE[Ix][Iy][Iz][k][1];
							Jac1Row[JRowIndex] = (Vb / Dt)*porpor*fsat[Ix][Iy][Iz][2] * fdE[Ix][Iy][Iz][k][1] - dRsidedxg;
							Jac1Col[JRowIndex] = jacCol + Nc + k - reCol;
							JRowIndex++;
						}

						/////////////////////////////////////////////////Sadeq////////////////////////////////////
						if (phaseStat[Ix][Iy][Iz] == 1) {
							//dRsideMdxl = 0;
							Jac1Row[JRowIndex] = dRsideMdxl;
							Jac1Col[JRowIndex] = MatrixEq + k;
							JRowIndex++;
						}
						else if (phaseStat[Ix][Iy][Iz] == (-1)) {
							//dRsideMdxg = 0;
							Jac1Row[JRowIndex] = dRsideMdxg;
							Jac1Col[JRowIndex] = MatrixEq + k;
							JRowIndex++;
						}
						else {
							//dRsideMdxl = 0;
							Jac1Row[JRowIndex] = dRsideMdxl;
							Jac1Col[JRowIndex] = MatrixEq + k;
							JRowIndex++;
							//dRsideMdxg = 0;
							Jac1Row[JRowIndex] = dRsideMdxg;
							Jac1Col[JRowIndex] = MatrixEq + Nc + k;
							JRowIndex++;
						}
						////////////////////////sadeq/////////////////////////
					}


				}
				else {
					LSide = (Vb / Dt)*(porpor*watRo*WAT_M_RO*fsat[Ix][Iy][Iz][0] - fpreProp[Ix][Iy][Iz][Nc]);
					RSide = fWtran[Ix + 1][Iy + 1][Iz + 1][0] * (fP[Ix + 2][Iy + 1][Iz + 1][0] - fP[Ix + 1][Iy + 1][Iz + 1][0]) - fWtran[Ix][Iy + 1][Iz + 1][0] * (fP[Ix + 1][Iy + 1][Iz + 1][0] - fP[Ix][Iy + 1][Iz + 1][0]);
					RSide += fWtran[Ix + 1][Iy + 1][Iz + 1][1] * (fP[Ix + 1][Iy + 2][Iz + 1][0] - fP[Ix + 1][Iy + 1][Iz + 1][0]) - fWtran[Ix + 1][Iy][Iz + 1][1] * (fP[Ix + 1][Iy + 1][Iz + 1][0] - fP[Ix + 1][Iy][Iz + 1][0]);
					RSide += fWtran[Ix + 1][Iy + 1][Iz + 1][2] * (fP[Ix + 1][Iy + 1][Iz + 2][0] - fP[Ix + 1][Iy + 1][Iz + 1][0]) - fWtran[Ix + 1][Iy + 1][Iz][2] * (fP[Ix + 1][Iy + 1][Iz + 1][0] - fP[Ix + 1][Iy + 1][Iz][0]);

					RSide += G_ACC * watRo*fWtran[Ix + 1][Iy + 1][Iz + 1][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - G_ACC * watRo*fWtran[Ix][Iy + 1][Iz + 1][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
					RSide += G_ACC * watRo*fWtran[Ix + 1][Iy + 1][Iz + 1][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - G_ACC * watRo*fWtran[Ix + 1][Iy][Iz + 1][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
					RSide += G_ACC * watRo*fWtran[Ix + 1][Iy + 1][Iz + 1][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]) - G_ACC * watRo*fWtran[Ix + 1][Iy + 1][Iz][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);

					/////////////////////////////Transfer Function


					RSide -= ZERO_CONV * SI_C* watRo *WAT_M_RO * ShapeFactor_2(Ix, Iy, Iz) * f_m_relperm[0] / watMu * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) *((fP[Ix + 1][Iy + 1][Iz + 1][0] - P[Ix + 1][Iy + 1][Iz + 1][0]) + (blockFProps[Ix][Iy][Iz][BLOCK_PC][0] - fblockFProps[Ix][Iy][Iz][BLOCK_PC][0]));

					////////////////////////////////////////////
					RSide += Qw;
					ans[CSRrowIndex] = -LSide + RSide;
					CSRrowIndex++;


					dLsidedp = (Vb / Dt)*watRo*WAT_M_RO*fsat[Ix][Iy][Iz][0] * dPordp;
					dLsidedSw = (Vb / Dt)*(porpor*watRo*WAT_M_RO);

					dRsidedp = 0;
					dRsideMdp = 0;
					//Transfer function dRside dp
					dRsidedp -= ZERO_CONV * SI_C * watRo *WAT_M_RO * ShapeFactor_2(Ix, Iy, Iz) * f_m_relperm[0] / watMu * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]);
					dRsideMdp -= ZERO_CONV * -SI_C * watRo *WAT_M_RO * ShapeFactor_2(Ix, Iy, Iz) * f_m_relperm[0] / watMu * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]);


					dRsidedp += fWtran[Ix + 1][Iy + 1][Iz + 1][0] + fWtran[Ix][Iy + 1][Iz + 1][0];
					dRsidedp += fWtran[Ix + 1][Iy + 1][Iz + 1][1] + fWtran[Ix + 1][Iy][Iz + 1][1];
					dRsidedp += fWtran[Ix + 1][Iy + 1][Iz + 1][2] + fWtran[Ix + 1][Iy + 1][Iz][2];


					//jac[BLNo+2*Nc][BLNo+(2*Nc)]=PCoeff*(dLsidedp+dRsidedp);
					Jac1Row[JRowIndex] = PCoeff * (dLsidedp + dRsidedp + PIw);
					Jac1Col[JRowIndex] = jacCol + (2 * Nc) - reCol;
					JRowIndex++;

					//jac[BLNo+2*Nc][BLNo+(2*Nc+1)]=dLsidedSw;

					dRsidedSw = 0;
					dRsideMdSw = 0;
					// Transfer function drside dsw
					dRsidedSw -= ZERO_CONV * SI_C *WAT_M_RO* f_m_drelperm[1][5] * watRo * ShapeFactor_2(Ix, Iy, Iz) / watMu * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) *((fP[Ix + 1][Iy + 1][Iz + 1][0] - P[Ix + 1][Iy + 1][Iz + 1][0]) + (blockFProps[Ix][Iy][Iz][BLOCK_PC][0] - fblockFProps[Ix][Iy][Iz][BLOCK_PC][0]));
					dRsideMdSw -= ZERO_CONV * SI_C *WAT_M_RO* f_m_drelperm[1][0] * watRo * ShapeFactor_2(Ix, Iy, Iz) / watMu * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) *((fP[Ix + 1][Iy + 1][Iz + 1][0] - P[Ix + 1][Iy + 1][Iz + 1][0]) + (blockFProps[Ix][Iy][Iz][BLOCK_PC][0] - fblockFProps[Ix][Iy][Iz][BLOCK_PC][0]));


					if (Ix < (Nx - 1)) {
						if (fphaseStat[Ix + 1][Iy][Iz]) reCol2 = Nc;
						else reCol2 = 0;
						mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + Iy * Nx + Ix + 1] - reCol2;
						Jac1Row[JRowIndex] = PCoeff * (-fWtran[Ix + 1][Iy + 1][Iz + 1][0]);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;

						dsw = fdWtran[Ix + 1][Iy + 1][Iz + 1][0] * (fP[Ix + 2][Iy + 1][Iz + 1][0] - fP[Ix + 1][Iy + 1][Iz + 1][0]) + G_ACC * watRo*fdWtran[Ix + 1][Iy + 1][Iz + 1][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][2][0]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;
					}
					if (Ix > 0) {
						if (fphaseStat[Ix - 1][Iy][Iz]) reCol2 = Nc;
						else reCol2 = 0;
						mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + Iy * Nx + Ix - 1] - reCol2;
						Jac1Row[JRowIndex] = PCoeff * (-fWtran[Ix][Iy + 1][Iz + 1][0]);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;

						dsw = -fdWtran[Ix][Iy + 1][Iz + 1][0] * (fP[Ix + 1][Iy + 1][Iz + 1][0] - fP[Ix][Iy + 1][Iz + 1][0]) - G_ACC * watRo*fdWtran[Ix][Iy + 1][Iz + 1][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						if (!ftransS[Ix][Iy + 1][Iz + 1][2][0]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;
					}


					if (Iy < (Ny - 1)) {
						if (fphaseStat[Ix][Iy + 1][Iz]) reCol2 = Nc;
						else reCol2 = 0;
						mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + (Iy + 1)*Nx + Ix] - reCol2;
						Jac1Row[JRowIndex] = PCoeff * (-fWtran[Ix + 1][Iy + 1][Iz + 1][1]);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;

						dsw = fdWtran[Ix + 1][Iy + 1][Iz + 1][1] * (fP[Ix + 1][Iy + 2][Iz + 1][0] - fP[Ix + 1][Iy + 1][Iz + 1][0]) + G_ACC * watRo*fdWtran[Ix + 1][Iy + 1][Iz + 1][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][2][1]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;
					}
					if (Iy > 0) {
						if (fphaseStat[Ix][Iy - 1][Iz]) reCol2 = Nc;
						else reCol2 = 0;
						mBLNo = preConRow[Nx*Ny*Nz + Iz * (Nx*Ny) + (Iy - 1)*Nx + Ix] - reCol2;
						Jac1Row[JRowIndex] = PCoeff * (-fWtran[Ix + 1][Iy][Iz + 1][1]);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;

						dsw = -fdWtran[Ix + 1][Iy][Iz + 1][1] * (fP[Ix + 1][Iy + 1][Iz + 1][0] - fP[Ix + 1][Iy][Iz + 1][0]) - G_ACC * watRo*fdWtran[Ix + 1][Iy][Iz + 1][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						if (!ftransS[Ix + 1][Iy][Iz + 1][2][1]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;
					}


					if (Iz < (Nz - 1)) {
						if (fphaseStat[Ix][Iy][Iz + 1]) reCol2 = Nc;
						else reCol2 = 0;
						mBLNo = preConRow[Nx*Ny*Nz + (Iz + 1)*(Nx*Ny) + Iy * Nx + Ix] - reCol2;
						Jac1Row[JRowIndex] = PCoeff * (-fWtran[Ix + 1][Iy + 1][Iz + 1][2]);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;

						dsw = fdWtran[Ix + 1][Iy + 1][Iz + 1][2] * (fP[Ix + 1][Iy + 1][Iz + 2][0] - fP[Ix + 1][Iy + 1][Iz + 1][0]) + G_ACC * watRo*fdWtran[Ix + 1][Iy + 1][Iz + 1][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (ftransS[Ix + 1][Iy + 1][Iz + 1][2][2]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;
					}
					if (Iz > 0) {
						if (fphaseStat[Ix][Iy][Iz - 1]) reCol2 = Nc;
						else reCol2 = 0;
						mBLNo = preConRow[Nx*Ny*Nz + (Iz - 1)*(Nx*Ny) + Iy * Nx + Ix] - reCol2;
						Jac1Row[JRowIndex] = PCoeff * (-fWtran[Ix + 1][Iy + 1][Iz][2]);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;

						dsw = -fdWtran[Ix + 1][Iy + 1][Iz][2] * (fP[Ix + 1][Iy + 1][Iz + 1][0] - fP[Ix + 1][Iy + 1][Iz][0]) - G_ACC * watRo*fdWtran[Ix + 1][Iy + 1][Iz][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						if (!ftransS[Ix + 1][Iy + 1][Iz][2][2]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;
					}

					Jac1Row[JRowIndex] = dLsidedSw - dRsidedSw;
					Jac1Col[JRowIndex] = jacCol + (2 * Nc + 1) - reCol;
					JRowIndex++;

					/////////////////////////////////////////////////Sadeq///////////////////////////////////
					//dRsideMdp = 0;
					Jac1Row[JRowIndex] = PCoeff * dRsideMdp;
					Jac1Col[JRowIndex] = MatrixEq + 2 * Nc - reColF1;
					JRowIndex++;
					//dRsideMdSw = 0;
					Jac1Row[JRowIndex] = dRsideMdSw;
					Jac1Col[JRowIndex] = MatrixEq + 2 * Nc + 1 - reColF1;
					JRowIndex++;
					//////////////////////////Sadeq/////////////////////////
				}

			}
			else if (BENo < (Nc + 2)) {
				Sxl = 0;

				for (i = 0; i < Nc; i++) {
					Sxl += fcomp[Ix][Iy][Iz][i][0];

					Jac1Row[JRowIndex] = 1;
					Jac1Col[JRowIndex] = jacCol + i;
					JRowIndex++;
				}
			}
			else if (BENo < (Nc + 3)) {
				Jac1Row[JRowIndex] = 1;
				Jac1Col[JRowIndex] = jacCol + 2 * Nc + 1 - reCol;
				JRowIndex++;

				Jac1Row[JRowIndex] = 1;
				Jac1Col[JRowIndex] = jacCol + 2 * Nc + 2 - reCol;
				JRowIndex++;				
			}
			else {
				std::cout << Ix << '\t' << Iy << '\t' << Iz << '\t' << BENo << "\tFracture phase stat: " << fphaseStat[Ix][Iy][Iz] << std::endl;
	
				TerM("Global Index Error!");
			}

			break;
		}

	}
	else {
		if (fphaseStat[Ix][Iy][Iz] == 0) reColF1 = 0;
		else reColF1 = Nc;

		switch (phaseStat[Ix][Iy][Iz]) {
		case -1:
			reCol = Nc;
			reCol3 = 1;
			

			if (BENo < (Nc + 1)) {
				
					

#pragma region sadeq
								
						fporpor = fporosity[Ix][Iy][Iz] * (1 + cpor * (fP[Ix + 1][Iy + 1][Iz + 1][1] - refP) + dcpor * (fP[Ix + 1][Iy + 1][Iz + 1][1] - refP)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - refP));
						fdPordp = fporosity[Ix][Iy][Iz] * (cpor + 2 * dcpor*(fP[Ix + 1][Iy + 1][Iz + 1][1] - refP));


						if (P[Ix + 1][Iy + 1][Iz + 1][1] >= fP[Ix + 1][Iy + 1][Iz + 1][1])
						{
							f_m_relperm[1] = relPerm[Ix][Iy][Iz][1];//oil relperm between matrix and fracture
							f_m_drelperm[1][1] = dRelPerm[Ix][Iy][Iz][1];//dkrodsw
							f_m_drelperm[1][2] = dRelPerm[Ix][Iy][Iz][2];//dkrodsg
							f_m_drelperm[1][4] = dRelPerm[Ix][Iy][Iz][4];//dkrodso

							f_m_drelperm[1][9] = 0;
							f_m_drelperm[1][7] = 0;
							f_m_drelperm[1][6] = 0;
						}
						else
						{
							f_m_relperm[1] = frelPerm[Ix][Iy][Iz][1];
							f_m_drelperm[1][6] = fdRelPerm[Ix][Iy][Iz][1];//fdkrofdsw
							f_m_drelperm[1][7] = fdRelPerm[Ix][Iy][Iz][2];//fdkrofdsg
							f_m_drelperm[1][9] = fdRelPerm[Ix][Iy][Iz][4];//fdkrofdso

							f_m_drelperm[1][4] = 0;
							f_m_drelperm[1][2] = 0;
							f_m_drelperm[1][1] = 0;
						}
						if (P[Ix + 1][Iy + 1][Iz + 1][2] >= fP[Ix + 1][Iy + 1][Iz + 1][2])
						{
							f_m_relperm[2] = relPerm[Ix][Iy][Iz][2];//gas relperm between matrix and fracture
							f_m_drelperm[2][3] = dRelPerm[Ix][Iy][Iz][3];//dkrgdsg

							f_m_drelperm[2][8] = 0;
						}
						else
						{
							f_m_relperm[2] = frelPerm[Ix][Iy][Iz][2];
							f_m_drelperm[2][8] = fdRelPerm[Ix][Iy][Iz][3];//fdkrgfdsg

							f_m_drelperm[2][3] = 0;
						}

						if (P[Ix + 1][Iy + 1][Iz + 1][0] >= fP[Ix + 1][Iy + 1][Iz + 1][0])
						{
							f_m_relperm[0] = relPerm[Ix][Iy][Iz][0];
							f_m_drelperm[1][0] = dRelPerm[Ix][Iy][Iz][0];//dkrwdsw

							f_m_drelperm[1][5] = 0;
						}
						else
						{
							f_m_relperm[0] = frelPerm[Ix][Iy][Iz][0];//water relperm between matrix and fracture
							f_m_drelperm[1][5] = fdRelPerm[Ix][Iy][Iz][0];//fdkrwfdsw

							f_m_drelperm[1][0] = 0;
						}
#pragma endregion

#pragma region Wells&Commons
						porpor = porosity[Ix][Iy][Iz] * (1 + cpor * (P[Ix + 1][Iy + 1][Iz + 1][1] - refP) + dcpor * (P[Ix + 1][Iy + 1][Iz + 1][1] - refP)*(P[Ix + 1][Iy + 1][Iz + 1][1] - refP));
						dPordp = porosity[Ix][Iy][Iz] * (cpor + 2 * dcpor*(P[Ix + 1][Iy + 1][Iz + 1][1] - refP));




						Qw = 0;
						Qo = 0;
						Qg = 0;

						PIw = 0;
						PIo = 0;
						PIg = 0;

						Vb = gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz];

						iWell = -1;
						for (i = 0; i < wellNO; i++) {
							if ((Ix == welli[i][1]) && (Iy == welli[i][2]) && (Iz >= welli[i][3]) && (Iz <= welli[i][4])) {
								Re = Calc_Re(Ix, Iy, Iz, i);
								if ((welli[i][0] == 0) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {		//Constant Pwf Pressure - Production
																																																					//Re = 0.14*sqrt(sqrt(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0])*gridDim[Ix] * gridDim[Ix] + sqrt(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1])*gridDim[Nx + Iy] * gridDim[Nx + Iy]);
																																																					//Re /= 0.5*(pow(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0], 0.25) + pow(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1], 0.25));
									if (Re <= wellf[i][3])
										Re += wellf[i][3];

									S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][1] * perm[Ix][Iy][Iz][0]) / (log(Re / wellf[i][3]) + wellf[i][2]);

									PIw = S1 * watRo*WAT_M_RO*relPerm[Ix][Iy][Iz][0] / watMu;
									PIo = S1 * blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / blockFProps[Ix][Iy][Iz][BMU][0];
									PIg = S1 * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / blockFProps[Ix][Iy][Iz][BMU][1];

									Qw = PIw * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][0]);
									Qo = PIo * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][1]);
									Qg = PIg * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][2]);

									

									/*if ((wellf[i][1]) && ((-Qo) > wellf[i][1])) {
										TempWellCondition[i] = true;
									}
									else TempWellCondition[i] = false;
									if (WellCondition[i]) {
										//std::cout << "HIT!\n";
										SSo1 = 0;
										for (j = welli[i][3]; j <= welli[i][4]; j++) {
											S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
											SSo1 += blockFProps[Ix][Iy][j][RO][0] * S2*relPerm[Ix][Iy][j][1] / blockFProps[Ix][Iy][Iz][BMU][0];
											S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
											SSo1 += fblockFProps[Ix][Iy][j][RO][0] * S2*frelPerm[Ix][Iy][j][1] / fblockFProps[Ix][Iy][Iz][BMU][0];
										}
										S1 = gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][0] * perm[Ix][Iy][Iz][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);

										if (SSo1) {
											if (SURFACE_RATES) Qo = -S1 * oilRateCh(Ix, Iy, Iz, relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * blockFProps[Ix][Iy][Iz][BMU][0] / (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * blockFProps[Ix][Iy][Iz][BMU][1]))*wellf[i][1] * blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / (blockFProps[Ix][Iy][Iz][BMU][0] * SSo1);
											else Qo = -S1 * wellf[i][1] * blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / (blockFProps[Ix][Iy][Iz][BMU][0] * SSo1);
										}
										Qw = Qo * relPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*blockFProps[Ix][Iy][Iz][BMU][0] / (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * watMu);
										Qg = Qo * relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * blockFProps[Ix][Iy][Iz][BMU][0] / (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * blockFProps[Ix][Iy][Iz][BMU][1]);

									}*/

									if (P[Ix + 1][Iy + 1][Iz + 1][1] < WELL_MIN_P) {
										Qw = 0;
										Qo = 0;
										Qg = 0;

										PIw = 0;
										PIo = 0;
										PIg = 0;
									}
									else if ((wellf[i][1]) && ((-Qo) > wellf[i][1])) {
										Qo = -wellf[i][1];
										Qw = Qo * relPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*blockFProps[Ix][Iy][Iz][BMU][0] / (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * watMu);
										Qg = Qo * relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * blockFProps[Ix][Iy][Iz][BMU][0] / (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * blockFProps[Ix][Iy][Iz][BMU][1]);
										PIw = 0;
										PIo = 0;
										PIg = 0;
									}

									if ((Qw > 0) || ((Qw - Qw) != 0)) {
										Qw = 0;
										PIw = 0;
									}
									if ((Qo > 0) || ((Qo - Qo) != 0)) {
										Qo = 0;
										PIo = 0;
									}
									if ((Qg > 0) || ((Qg - Qg) != 0)) {
										Qg = 0;
										PIg = 0;
									}

									QoProduced = Qo;
									Qoprod += Qo + Qg;
									//MethQM += Qo * (1 - comp[Ix][Iy][Iz][0][0]) + Qg * (1 - comp[Ix][Iy][Iz][0][1]);
									//Qoprod = Qo*(1 - comp[Ix][Iy][Iz][0][0])+ Qg*(1 - comp[Ix][Iy][Iz][0][1]);
									WellCompSadeq[0] += Qo * (comp[Ix][Iy][Iz][0][0]) + Qg * (comp[Ix][Iy][Iz][0][1]);
									WellCompSadeq[1] += Qo * (comp[Ix][Iy][Iz][1][0]) + Qg * (comp[Ix][Iy][Iz][1][1]);
									WellCompSadeq[2] += Qo * (comp[Ix][Iy][Iz][2][0]) + Qg * (comp[Ix][Iy][Iz][2][1]);
									WellCompSadeq2[0] += (Qo*(comp[Ix][Iy][Iz][0][0]) + Qg * (comp[Ix][Iy][Iz][0][1]));
									WellCompSadeq2[1] += (Qo*(comp[Ix][Iy][Iz][1][0]) + Qg * (comp[Ix][Iy][Iz][1][1]));
									WellCompSadeq2[2] += (Qo*(comp[Ix][Iy][Iz][2][0]) + Qg * (comp[Ix][Iy][Iz][2][1]));
								}

								else if ((welli[i][0] == 1) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {			//Constant Pwf- Gas Production
																																																								//Re = 0.14*sqrt(sqrt(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0])*gridDim[Ix] * gridDim[Ix] + sqrt(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1])*gridDim[Nx + Iy] * gridDim[Nx + Iy]);
																																																								//Re /= 0.5*(pow(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0], 0.25) + pow(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1], 0.25));
																																																								//Re = Calc_Re(Ix, Iy, Iz, i);
									S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][1] * perm[Ix][Iy][Iz][0]) / (log(Re / wellf[i][3]) + wellf[i][2]);

									PIw = S1 * watRo*WAT_M_RO*relPerm[Ix][Iy][Iz][0] / watMu;
									PIo = S1 * blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / blockFProps[Ix][Iy][Iz][BMU][0];
									PIg = S1 * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / blockFProps[Ix][Iy][Iz][BMU][1];

									Qw = PIw * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][0]);
									Qo = PIo * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][1]);
									Qg = PIg * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][2]);

									if ((Qw > 0) || ((Qw - Qw) != 0)) {
										Qw = 0;
										PIw = 0;
									}
									if ((Qo > 0) || ((Qo - Qo) != 0)) {
										Qo = 0;
										PIo = 0;
									}
									if ((Qg > 0) || ((Qg - Qg) != 0)) {
										Qg = 0;
										PIg = 0;
									}

									if ((wellf[i][1]) && ((-Qg) > wellf[i][1])) {
										TempWellCondition[i] = true;
									}
									else TempWellCondition[i] = false;
									if (WellCondition[i]) {
										SSo1 = 0;
										for (j = welli[i][3]; j <= welli[i][4]; j++) {
											S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
											SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][Iz][BMU][1];
											S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
											SSo1 += fblockFProps[Ix][Iy][j][RO][1] * S2*frelPerm[Ix][Iy][j][2] / fblockFProps[Ix][Iy][Iz][BMU][1];
										}
										S1 = gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][0] * perm[Ix][Iy][Iz][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);

										if (SSo1) {
											if (SURFACE_RATES) Qg = -S1 * gasRateCh(Ix, Iy, Iz, (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * blockFProps[Ix][Iy][Iz][BMU][1]) / (relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * blockFProps[Ix][Iy][Iz][BMU][0]))*wellf[i][1] * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / (blockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
											else Qg = -S1 * wellf[i][1] * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / (blockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
										}
										Qw = Qg * relPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*blockFProps[Ix][Iy][Iz][BMU][1] / (relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * watMu);
										Qo = Qg * relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * blockFProps[Ix][Iy][Iz][BMU][1] / (relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * blockFProps[Ix][Iy][Iz][BMU][0]);

									}

									//QoProd=oilRateCh2(Ix, Iy, Iz, -Qo, -Qg);
									QoProduced = Qo;
								}

								else if ((welli[i][0] == 2) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {			//Constant Pwf Pressure - Water Injection
																																																								//Re = 0.14*sqrt(sqrt(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0])*gridDim[Ix] * gridDim[Ix] + sqrt(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1])*gridDim[Nx + Iy] * gridDim[Nx + Iy]);
																																																								//Re /= 0.5*(pow(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0], 0.25) + pow(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1], 0.25));
																																																								//Re = Calc_Re(Ix, Iy, Iz, i);
									S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][1] * perm[Ix][Iy][Iz][0]) / (log(Re / wellf[i][3]) + wellf[i][2]);

									PIw = S1 * watRo*WAT_M_RO*relPerm[Ix][Iy][Iz][0] / watMu;
									Qw = PIw * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][0]);


									if ((Qw < 0) || ((Qw - Qw) != 0)) {
										Qw = 0;
										PIw = 0;
									}

									if ((wellf[i][1]) && (Qw > wellf[i][1])) {
										TempWellCondition[i] = true;
									}
									else TempWellCondition[i] = false;
									if (WellCondition[i]) {
										SSo1 = 0;
										for (j = welli[i][3]; j <= welli[i][4]; j++) {
											S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
											SSo1 += watRo * S2*relPerm[Ix][Iy][j][0] / watMu;
											S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
											SSo1 += watRo * S2*frelPerm[Ix][Iy][j][0] / watMu;
										}
										S1 = gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][0] * perm[Ix][Iy][Iz][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);

										if (SSo1) Qw = S1 * wellf[i][1] * watRo*WAT_M_RO * relPerm[Ix][Iy][Iz][0] / (watMu * SSo1);
									}
								}

								else if ((welli[i][0] == 3) && (((fabs(simTime - wellf[i][Nc + 4]) <= TSTEPIF) || (fabs(simTime - wellf[i][Nc + 5]) <= TSTEPIF)) || ((simTime >= wellf[i][Nc + 4]) && (simTime <= wellf[i][Nc + 5])))) {			//Constant Pwf Pressure - Gas Injection
																																																													//Re = 0.14*sqrt(sqrt(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0])*gridDim[Ix] * gridDim[Ix] + sqrt(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1])*gridDim[Nx + Iy] * gridDim[Nx + Iy]);
																																																													//Re /= 0.5*(pow(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0], 0.25) + pow(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1], 0.25));
									for (j = 0; j < Nc; j++) IComp[j] = wellf[i][4 + j];
									FlashInjection(IComp, wellf[i][0], IOComp, IGComp, iOF, iGF, iOD, iGD, iOV, iGV);
									//Re = Calc_Re(Ix, Iy, Iz, i);
									if (Re <= wellf[i][3])
										Re += wellf[i][3];

									S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][1] * perm[Ix][Iy][Iz][0]) / (log(Re / wellf[i][3]) + wellf[i][2]);
									//S2 = sgt[Nsgt-1][1] / iGV;
									//S2 = relPerm[Ix][Iy][Iz][2] / blockFProps[Ix][Iy][Iz][BMU][1];

									PIg = S1 * iGD * sgt[Nsgt - 1][1] * iGF / iGV;
									Qg = PIg * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][2]);
									//PIo = S1*iOD * swt[0][2]*iOF / iOV;
									PIo = PIg * iOF / iGF;
									Qo = PIo * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][2]);

									if ((Qo < 0) || ((Qo - Qo) != 0)) {
										Qo = 0;
										PIo = 0;
									}
									if ((Qg < 0) || ((Qg - Qg) != 0)) {
										Qg = 0;
										PIg = 0;
									}

									iWell = i;

									if ((wellf[i][1]) && (Qg > wellf[i][1])) {
										TempWellCondition[i] = true;
									}
									else TempWellCondition[i] = false;
									if (WellCondition[i]) {
										SSo1 = 0;
										for (j = welli[i][3]; j <= welli[i][4]; j++) {
											S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
											//SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][Iz][BMU][1];
											SSo1 += S2;
											S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
											//SSo1 += fblockFProps[Ix][Iy][j][RO][1] * S2*frelPerm[Ix][Iy][j][2] / fblockFProps[Ix][Iy][Iz][BMU][1];
											SSo1 += S2;
										}
										S1 = gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][0] * perm[Ix][Iy][Iz][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);

										//if (SSo1) Qg = S1*wellf[i][1] * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / (blockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
										if (SSo1) Qg = S1 * wellf[i][1] / SSo1;
										if (SSo1) Qo = Qg * iOF / iGF;
									}
									Qginj = Qg + Qo;
								}

								else if ((welli[i][0] == 4) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {		//Constant Oil Rate
									SSo1 = 0;
									for (j = welli[i][3]; j <= welli[i][4]; j++) {
										S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
										SSo1 += blockFProps[Ix][Iy][j][RO][0] * S2*relPerm[Ix][Iy][j][1] / blockFProps[Ix][Iy][Iz][BMU][0];
										S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
										SSo1 += fblockFProps[Ix][Iy][j][RO][0] * S2*frelPerm[Ix][Iy][j][1] / fblockFProps[Ix][Iy][Iz][BMU][0];
									}
									S1 = gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][0] * perm[Ix][Iy][Iz][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);

									if (SSo1) {
										if (SURFACE_RATES) Qo = -S1 * oilRateCh(Ix, Iy, Iz, relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * blockFProps[Ix][Iy][Iz][BMU][0] / (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * blockFProps[Ix][Iy][Iz][BMU][1]))*wellf[i][0] * blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / (blockFProps[Ix][Iy][Iz][BMU][0] * SSo1);
										else Qo = -S1 * wellf[i][0] * blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / (blockFProps[Ix][Iy][Iz][BMU][0] * SSo1);
									}
									Qw = Qo * relPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*blockFProps[Ix][Iy][Iz][BMU][0] / (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * watMu);
									Qg = Qo * relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * blockFProps[Ix][Iy][Iz][BMU][0] / (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * blockFProps[Ix][Iy][Iz][BMU][1]);

									//Re = 0.14*sqrt(sqrt(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0])*gridDim[Ix] * gridDim[Ix] + sqrt(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1])*gridDim[Nx + Iy] * gridDim[Nx + Iy]);
									//Re /= 0.5*(pow(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0], 0.25) + pow(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1], 0.25));
									//Re = Calc_Re(Ix, Iy, Iz, i);
									S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][1] * perm[Ix][Iy][Iz][0]) / (log(Re / wellf[i][3]) + wellf[i][2]);
									Pwf = P[Ix + 1][Iy + 1][Iz + 1][1] - Qo / (S1*blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / blockFProps[Ix][Iy][Iz][BMU][0]);

									if ((wellf[i][1]) && (Pwf < wellf[i][1])) {
										TempWellCondition[i] = true;
									}
									else TempWellCondition[i] = false;
									if (WellCondition[i]) {
										PIw = S1 * watRo*WAT_M_RO*relPerm[Ix][Iy][Iz][0] / watMu;
										PIo = S1 * blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / blockFProps[Ix][Iy][Iz][BMU][0];
										PIg = S1 * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / blockFProps[Ix][Iy][Iz][BMU][1];

										Qw = PIw * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][0]);
										Qo = PIo * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][1]);
										Qg = PIg * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][2]);

										if ((Qw > 0) || ((Qw - Qw) != 0)) {
											Qw = 0;
											PIw = 0;
										}
										if ((Qo > 0) || ((Qo - Qo) != 0)) {
											Qo = 0;
											PIo = 0;
										}
										if ((Qg > 0) || ((Qg - Qg) != 0)) {
											Qg = 0;
											PIg = 0;
										}
									}

									/*Qw = 0;
									Qo = 0;// 6.553168256220581e-07 / Nz;
									Qg = 0;
									
									PIw = 0;
									PIo = 0;
									PIg = 0;*/

									Qoprod = Qo + Qg;
									QoProduced = Qo;
								}

								else if ((welli[i][0] == 5) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {		//Constant Gas Rate
									SSo1 = 0;
									for (j = welli[i][3]; j <= welli[i][4]; j++) {
										S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
										SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][Iz][BMU][1];
										S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
										SSo1 += fblockFProps[Ix][Iy][j][RO][1] * S2*frelPerm[Ix][Iy][j][2] / fblockFProps[Ix][Iy][Iz][BMU][1];
									}
									S1 = gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][0] * perm[Ix][Iy][Iz][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);

									if (SSo1) {
										if (SURFACE_RATES) Qg = -S1 * gasRateCh(Ix, Iy, Iz, (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * blockFProps[Ix][Iy][Iz][BMU][1]) / (relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * blockFProps[Ix][Iy][Iz][BMU][0]))*wellf[i][1] * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / (blockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
										else Qg = -S1 * wellf[i][1] * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / (blockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
									}
									Qw = Qg * relPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*blockFProps[Ix][Iy][Iz][BMU][1] / (relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * watMu);
									Qo = Qg * relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * blockFProps[Ix][Iy][Iz][BMU][1] / (relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * blockFProps[Ix][Iy][Iz][BMU][0]);

									//Re = 0.14*sqrt(sqrt(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0])*gridDim[Ix] * gridDim[Ix] + sqrt(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1])*gridDim[Nx + Iy] * gridDim[Nx + Iy]);
									//Re /= 0.5*(pow(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0], 0.25) + pow(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1], 0.25));
									//Re = Calc_Re(Ix, Iy, Iz, i);
									S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][1] * perm[Ix][Iy][Iz][0]) / (log(Re / wellf[i][3]) + wellf[i][2]);
									Pwf = P[Ix + 1][Iy + 1][Iz + 1][2] - Qg / (S1*blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / blockFProps[Ix][Iy][Iz][BMU][1]);

									if ((wellf[i][1]) && (Pwf < wellf[i][1])) {
										TempWellCondition[i] = true;
									}
									else TempWellCondition[i] = false;
									if (WellCondition[i]) {
										PIw = S1 * watRo*WAT_M_RO*relPerm[Ix][Iy][Iz][0] / watMu;
										PIo = S1 * blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / blockFProps[Ix][Iy][Iz][BMU][0];
										PIg = S1 * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / blockFProps[Ix][Iy][Iz][BMU][1];

										Qw = PIw * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][0]);
										Qo = PIo * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][1]);
										Qg = PIg * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][2]);

										if ((Qw > 0) || ((Qw - Qw) != 0)) {
											Qw = 0;
											PIw = 0;
										}
										if ((Qo > 0) || ((Qo - Qo) != 0)) {
											Qo = 0;
											PIo = 0;
										}
										if ((Qg > 0) || ((Qg - Qg) != 0)) {
											Qg = 0;
											PIg = 0;
										}
									}
								}

								else if ((welli[i][0] == 6) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {		//Constant Total Production Rate
									SSw = 0;
									SSo = 0;
									SSg = 0;
									SSo1 = 0;
									for (j = welli[i][3]; j <= welli[i][4]; j++) {
										S1 = ((relPerm[Ix][Iy][j][0] / watMu) + (relPerm[Ix][Iy][j][1] / blockFProps[Ix][Iy][j][BMU][0]) + (relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][j][BMU][1]));
										SSw += (relPerm[Ix][Iy][j][0] / watMu) / S1;
										SSo += (relPerm[Ix][Iy][j][1] / blockFProps[Ix][Iy][j][BMU][0]) / S1;
										SSg += (relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][j][BMU][1]) / S1;

										S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
										SSo1 += blockFProps[Ix][Iy][j][RO][0] * S2*relPerm[Ix][Iy][j][1] / blockFProps[Ix][Iy][Iz][BMU][0];

										S1 = ((frelPerm[Ix][Iy][j][0] / watMu) + (frelPerm[Ix][Iy][j][1] / fblockFProps[Ix][Iy][j][BMU][0]) + (frelPerm[Ix][Iy][j][2] / fblockFProps[Ix][Iy][j][BMU][1]));
										SSw += (frelPerm[Ix][Iy][j][0] / watMu) / S1;
										SSo += (frelPerm[Ix][Iy][j][1] / fblockFProps[Ix][Iy][j][BMU][0]) / S1;
										SSg += (frelPerm[Ix][Iy][j][2] / fblockFProps[Ix][Iy][j][BMU][1]) / S1;

										S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
										SSo1 += fblockFProps[Ix][Iy][j][RO][0] * S2*frelPerm[Ix][Iy][j][1] / fblockFProps[Ix][Iy][Iz][BMU][0];

									}
									QoP = SSo * wellf[i][0] / (SSw + SSo + SSg);

									S1 = gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][0] * perm[Ix][Iy][Iz][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
									if (SSo1) Qo = -S1 * QoP*blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / (blockFProps[Ix][Iy][Iz][BMU][0] * SSo1);
									Qw = Qo * relPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*blockFProps[Ix][Iy][Iz][BMU][0] / (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * watMu);
									Qg = Qo * relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * blockFProps[Ix][Iy][Iz][BMU][0] / (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * blockFProps[Ix][Iy][Iz][BMU][1]);


									//Re = 0.14*sqrt(sqrt(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0])*gridDim[Ix] * gridDim[Ix] + sqrt(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1])*gridDim[Nx + Iy] * gridDim[Nx + Iy]);
									//Re /= 0.5*(pow(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0], 0.25) + pow(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1], 0.25));
									//Re = Calc_Re(Ix, Iy, Iz, i);
									S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][1] * perm[Ix][Iy][Iz][0]) / (log(Re / wellf[i][3]) + wellf[i][2]);
									Pwf = P[Ix + 1][Iy + 1][Iz + 1][1] - (Qw + Qo + Qg) / (S1*(watRo*WAT_M_RO*relPerm[Ix][Iy][Iz][0] / watMu + blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / blockFProps[Ix][Iy][Iz][BMU][0] + blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / blockFProps[Ix][Iy][Iz][BMU][1]));

									if ((wellf[i][1]) && (Pwf < wellf[i][1])) {
										TempWellCondition[i] = true;
									}
									else TempWellCondition[i] = false;
									if (WellCondition[i]) {
										PIw = S1 * watRo*WAT_M_RO*relPerm[Ix][Iy][Iz][0] / watMu;
										PIo = S1 * blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / blockFProps[Ix][Iy][Iz][BMU][0];
										PIg = S1 * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / blockFProps[Ix][Iy][Iz][BMU][1];

										Qw = PIw * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][0]);
										Qo = PIo * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][1]);
										Qg = PIg * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][2]);

										if ((Qw > 0) || ((Qw - Qw) != 0)) {
											Qw = 0;
											PIw = 0;
										}
										if ((Qo > 0) || ((Qo - Qo) != 0)) {
											Qo = 0;
											PIo = 0;
										}
										if ((Qg > 0) || ((Qg - Qg) != 0)) {
											Qg = 0;
											PIg = 0;
										}
									}
								}

								else if ((welli[i][0] == 7) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {			//Constant Water Injection Rate
									SSw = 0;
									for (j = welli[i][3]; j <= welli[i][4]; j++) {
										S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
										SSo1 += S2 * relPerm[Ix][Iy][j][0];
										S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
										SSo1 += S2 * frelPerm[Ix][Iy][j][0];
									}
									S1 = gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][0] * perm[Ix][Iy][Iz][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
									if (SSw) Qw = S1 * wellf[i][0] * relPerm[Ix][Iy][Iz][1] / SSw;

									//Re = 0.14*sqrt(sqrt(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0])*gridDim[Ix] * gridDim[Ix] + sqrt(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1])*gridDim[Nx + Iy] * gridDim[Nx + Iy]);
									//Re /= 0.5*(pow(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0], 0.25) + pow(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1], 0.25));
									//Re = Calc_Re(Ix, Iy, Iz, i);
									S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][1] * perm[Ix][Iy][Iz][0]) / (log(Re / wellf[i][3]) + wellf[i][2]);
									Pwf = P[Ix + 1][Iy + 1][Iz + 1][0] - Qw / (S1*watRo*WAT_M_RO * relPerm[Ix][Iy][Iz][1] / watMu);

									if ((wellf[i][1]) && (Pwf > wellf[i][1])) {
										TempWellCondition[i] = true;
									}
									else TempWellCondition[i] = false;
									if (WellCondition[i]) {
										PIw = S1 * watRo*WAT_M_RO*relPerm[Ix][Iy][Iz][0] / watMu;
										Qw = PIw * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][0]);

										if ((Qw < 0) || ((Qw - Qw) != 0)) {
											Qw = 0;
											PIw = 0;
										}
									}
								}

								else if ((welli[i][0] == 8) && (((fabs(simTime - wellf[i][Nc + 4]) <= TSTEPIF) || (fabs(simTime - wellf[i][Nc + 5]) <= TSTEPIF)) || ((simTime >= wellf[i][Nc + 4]) && (simTime <= wellf[i][Nc + 5])))) {			//Constant Gas Injection Rate
									for (j = 0; j < Nc; j++) IComp[j] = wellf[i][4 + j];
									FlashInjection(IComp, wellf[i][1], IOComp, IGComp, iOF, iGF, iOD, iGD, iOV, iGV);
									//S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][1] * perm[Ix][Iy][Iz][0]) / (log(Re / wellf[i][3]) + wellf[i][2]);
									if (Re <= wellf[i][3])
										Re += wellf[i][3];

									SSo1 = 0;
									for (j = welli[i][3]; j <= welli[i][4]; j++) {
										S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
										//SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][Iz][BMU][1];
										//SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*sgt[Nsgt-1][1] / blockFProps[Ix][Iy][Iz][BMU][1];
										SSo1 += S2;
										S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
										//SSo1 += fblockFProps[Ix][Iy][j][RO][1] * S2*frelPerm[Ix][Iy][j][2] / fblockFProps[Ix][Iy][Iz][BMU][1];
										//SSo1 += fblockFProps[Ix][Iy][j][RO][1] * S2*sgt[Nsgt-1][1] / fblockFProps[Ix][Iy][Iz][BMU][1];
										SSo1 += S2;
									}
									S1 = gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][0] * perm[Ix][Iy][Iz][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);

									//if (SSo1) Qg = S1*wellf[i][0] * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / (blockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
									//if (SSo1) Qg = S1*wellf[i][0] * blockFProps[Ix][Iy][Iz][RO][1] * sgt[Nsgt - 1][1] / (blockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
									if (SSo1) Qg = S1 * wellf[i][0] / SSo1;
									if (SSo1) Qo = Qg * iOF / iGF;
									//Re = 0.14*sqrt(sqrt(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0])*gridDim[Ix] * gridDim[Ix] + sqrt(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1])*gridDim[Nx + Iy] * gridDim[Nx + Iy]);
									//Re /= 0.5*(pow(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0], 0.25) + pow(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1], 0.25));



									//Re = Calc_Re(Ix, Iy, Iz, i);

									//Pwf = P[Ix + 1][Iy + 1][Iz + 1][2] - Qg / (S1*blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / blockFProps[Ix][Iy][Iz][BMU][1]);
									//Pwf = P[Ix + 1][Iy + 1][Iz + 1][2] - Qg / (S1*blockFProps[Ix][Iy][Iz][RO][1] * sgt[Nsgt - 1][1] / blockFProps[Ix][Iy][Iz][BMU][1]);
									Pwf = P[Ix + 1][Iy + 1][Iz + 1][2] - Qg / (S1*iGD * sgt[Nsgt - 1][1] / iGV);

									if ((wellf[i][1]) && (Pwf > wellf[i][1])) {
										TempWellCondition[i] = true;
									}
									else TempWellCondition[i] = false;
									if (WellCondition[i]) {
										PIg = S1 * iGD * sgt[Nsgt - 1][1] * iGF / iGV;
										Qg = PIg * (wellf[i][1] - P[Ix + 1][Iy + 1][Iz + 1][2]);
										//PIo = S1*iOD * swt[0][2]*iOF / iOV;
										PIo = PIg * iOF / iGF;
										Qo = PIo * (wellf[i][1] - P[Ix + 1][Iy + 1][Iz + 1][2]);

										if ((Qo < 0) || ((Qo - Qo) != 0)) {
											Qo = 0;
											PIo = 0;
										}
										if ((Qg < 0) || ((Qg - Qg) != 0)) {
											Qg = 0;
											PIg = 0;
										}
									}

									if (P[Ix + 1][Iy + 1][Iz + 1][1] > WELL_MAX_P) {
										Qw = 0;
										Qo = 0;
										Qg = 0;
										IOComp[0] = 0;
										IOComp[1] = 0;
										IGComp[0] = 0;
										IGComp[1] = 0;
										PIw = 0;
										PIo = 0;
										PIg = 0;
									}

									QgInjected = Qg;


									QgInj = Qg;

									iWell = i;
									gasInjStat = -1;

									Qginj += Qg + Qo;
								}


							}
							QwT += Qw;
							QoT += Qo;
							QgT += Qg;
						}




#pragma endregion

				if (BENo < (Nc - 1)) {

					i = BENo;

					LSide = (Vb / Dt)*(porpor*(comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * sat[Ix][Iy][Iz][1] + comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * sat[Ix][Iy][Iz][2]) - preProp[Ix][Iy][Iz][i]);
					RSide = comp[(Ix + transS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][0][0] * (P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) - comp[(Ix - 1 + transS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix][Iy + 1][Iz + 1][0][0] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);
					RSide += comp[Ix][(Iy + transS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][0][1] * (P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) - comp[Ix][(Iy - 1 + transS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy][Iz + 1][0][1] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);
					RSide += comp[Ix][Iy][(Iz + transS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][0][2] * (P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) - comp[Ix][Iy][(Iz - 1 + transS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz][0][2] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);
					RSide += comp[(Ix + transS[Ix + 1][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][1][0] * (P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) - comp[(Ix - 1 + transS[Ix][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * trans[Ix][Iy + 1][Iz + 1][1][0] * (P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);
					RSide += comp[Ix][(Iy + transS[Ix + 1][Iy + 1][Iz + 1][1][1])][Iz][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][1][1] * (P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) - comp[Ix][(Iy - 1 + transS[Ix + 1][Iy][Iz + 1][1][1])][Iz][i][1] * trans[Ix + 1][Iy][Iz + 1][1][1] * (P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);
					RSide += comp[Ix][Iy][(Iz + transS[Ix + 1][Iy + 1][Iz + 1][1][2])][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][1][2] * (P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) - comp[Ix][Iy][(Iz - 1 + transS[Ix + 1][Iy + 1][Iz][1][2])][i][1] * trans[Ix + 1][Iy + 1][Iz][1][2] * (P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);

					RSide += comp[(Ix + transS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][2][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - comp[(Ix - 1 + transS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix][Iy + 1][Iz + 1][2][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
					RSide += comp[Ix][(Iy + transS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][2][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - comp[Ix][(Iy - 1 + transS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy][Iz + 1][2][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
					RSide += comp[Ix][Iy][(Iz + transS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][2][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]) - comp[Ix][Iy][(Iz - 1 + transS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz][2][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
					RSide += comp[(Ix + transS[Ix + 1][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][3][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - comp[(Ix - 1 + transS[Ix][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * trans[Ix][Iy + 1][Iz + 1][3][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
					RSide += comp[Ix][(Iy + transS[Ix + 1][Iy + 1][Iz + 1][1][1])][Iz][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][3][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - comp[Ix][(Iy - 1 + transS[Ix + 1][Iy][Iz + 1][1][1])][Iz][i][1] * trans[Ix + 1][Iy][Iz + 1][3][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
					RSide += comp[Ix][Iy][(Iz + transS[Ix + 1][Iy + 1][Iz + 1][1][2])][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][3][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]) - comp[Ix][Iy][(Iz - 1 + transS[Ix + 1][Iy + 1][Iz][1][2])][i][1] * trans[Ix + 1][Iy + 1][Iz][3][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);

					////////////////////////////Transfer Function 

					//	if (comp[Ix][Iy][Iz][i][0] > fcomp[Ix][Iy][Iz][i][0]) f_m_diffusion[0] = diffusion[Ix][Iy][Iz][i][0];
					//else f_m_diffusion[0] = fdiffusion[Ix][Iy][Iz][i][0];

					//		if (comp[Ix][Iy][Iz][i][1] > fcomp[Ix][Iy][Iz][i][1]) f_m_diffusion[1] = diffusion[Ix][Iy][Iz][i][1];
					//	else f_m_diffusion[1] = fdiffusion[Ix][Iy][Iz][i][1];

					// Rside Tran func
					RSide += ZERO_CONV * SI_C *comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
					RSide += ZERO_CONV * SI_C *comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor) / (porpor + fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (1))//only Liq in Fracture & Matrix
						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (-1))//only Gas in Fracture & Matrix
						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0)) {
						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);

						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

					}

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);

						//RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * fporpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
					}

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (1)) {
						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);

						//RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * fporpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
					}

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1)) {
						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);

						//RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * fporpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);

						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
					}

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1)) {
						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);

						//RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * fporpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
					}

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0)) {
						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);

						//RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * fporpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);

						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
					}

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0)) {
						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);

						//RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * fporpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
					}
					//

					/////////////////////////////////////////

					if (iWell == (-1)) {
						gComp = comp[Ix][Iy][Iz][i][1];
						oComp = comp[Ix][Iy][Iz][i][0];
					}
					else {
						if (welli[iWell][0] == 3) {
							gComp = IGComp[i];
							oComp = IOComp[i];
						}
						else if (welli[iWell][0] == 8) {
							//gComp = wellf[iWell][i + 4];
							gComp = IGComp[i];
							oComp = IOComp[i];
						}
					}

					RSide += oComp * Qo + gComp * Qg;

					dLsidedp = (Vb / Dt)*(comp[Ix][Iy][Iz][i][0] * sat[Ix][Iy][Iz][1] * (blockFProps[Ix][Iy][Iz][RO][0] * dPordp + dE[Ix][Iy][Iz][Nc][0] * porpor) + comp[Ix][Iy][Iz][i][1] * sat[Ix][Iy][Iz][2] * (blockFProps[Ix][Iy][Iz][RO][1] * dPordp + dE[Ix][Iy][Iz][Nc][1] * porpor));
					dLsidedSo = (Vb / Dt)*(comp[Ix][Iy][Iz][i][0] * porpor*blockFProps[Ix][Iy][Iz][RO][0]);
					dLsidedSg = (Vb / Dt)*(comp[Ix][Iy][Iz][i][1] * porpor*blockFProps[Ix][Iy][Iz][RO][1]);

					dRsidefdp = 0;
					dRsidedp = 0;
					// transfer function dRsidedp + drsidefdp
					//moshtagh transfer Function jabejaie naft nesbat be feshar matrix
					dRsidedp += ZERO_CONV * SI_C * dE[Ix][Iy][Iz][Nc][0] * comp[Ix][Iy][Iz][i][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
					dRsidedp += ZERO_CONV * -SI_C * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor));
					dRsidedp += ZERO_CONV * -SI_C * (DiffVisco(Ix, Iy, Iz, Nc, 0) * porpor + dPordp * blockFProps[Ix][Iy][Iz][BMU][0]) * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor)*(blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) * (porpor + fporpor);
					dRsidedp += ZERO_CONV * SI_C * dPordp * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / (blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					//moshtagh transfer Function jabejaie gaz nesbat be feshar matrix
					dRsidedp += ZERO_CONV * SI_C * dE[Ix][Iy][Iz][Nc][1] * comp[Ix][Iy][Iz][i][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor) / (porpor + fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));
					dRsidedp += ZERO_CONV * -SI_C * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor) / (porpor + fporpor));
					dRsidedp += ZERO_CONV * -SI_C * (DiffVisco(Ix, Iy, Iz, Nc, 1) * porpor + dPordp * blockFProps[Ix][Iy][Iz][BMU][1]) * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor)*(blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1])) * (porpor + fporpor);
					dRsidedp += ZERO_CONV * SI_C * dPordp * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / (blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (1)) { // //moshtagh transfer Function nofuze oil-oil nesbat be feshar matrix 
						dRsidedp += ZERO_DIFF * dPordp * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
						dRsidedp += ZERO_DIFF * dE[Ix][Iy][Iz][Nc][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
						dRsidedp += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
					}

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (-1)) { // //moshtagh transfer Function nofuze gas-gas nesbat be feshar matrix 
						dRsidedp += ZERO_DIFF * dPordp * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
						dRsidedp += ZERO_DIFF * dE[Ix][Iy][Iz][Nc][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
						dRsidedp += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
					}

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0)) {
						dRsidedp += ZERO_DIFF * dPordp * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
						dRsidedp += ZERO_DIFF * dE[Ix][Iy][Iz][Nc][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
						dRsidedp += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);

						dRsidedp += ZERO_DIFF * dPordp * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
						dRsidedp += ZERO_DIFF * dE[Ix][Iy][Iz][Nc][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
						dRsidedp += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
					}

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
						dRsidedp += ZERO_DIFF * dPordp * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
						dRsidedp += ZERO_DIFF * dE[Ix][Iy][Iz][Nc][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
						dRsidedp += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
					}

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (1)) {
						dRsidedp += ZERO_DIFF * dPordp * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
						dRsidedp += ZERO_DIFF * dE[Ix][Iy][Iz][Nc][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
						dRsidedp += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
					}

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1)) {
						dRsidedp += ZERO_DIFF * dPordp * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
						dRsidedp += ZERO_DIFF * dE[Ix][Iy][Iz][Nc][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
						dRsidedp += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);

						dRsidedp += ZERO_DIFF * dPordp * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
						dRsidedp += ZERO_DIFF * dE[Ix][Iy][Iz][Nc][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
						dRsidedp += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
					}

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1)) {
						dRsidedp += ZERO_DIFF * dPordp * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
						dRsidedp += ZERO_DIFF * dE[Ix][Iy][Iz][Nc][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
						dRsidedp += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

						dRsidedp += ZERO_DIFF * dPordp * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
						dRsidedp += ZERO_DIFF * dE[Ix][Iy][Iz][Nc][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
						dRsidedp += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
					}

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0)) {
						dRsidedp += ZERO_DIFF * dPordp * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
						dRsidedp += ZERO_DIFF * dE[Ix][Iy][Iz][Nc][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
						dRsidedp += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);

						dRsidedp += ZERO_DIFF * dPordp * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
						dRsidedp += ZERO_DIFF * dE[Ix][Iy][Iz][Nc][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
						dRsidedp += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
					}

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0)) {
						dRsidedp += ZERO_DIFF * dPordp * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
						dRsidedp += ZERO_DIFF * dE[Ix][Iy][Iz][Nc][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
						dRsidedp += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

						dRsidedp += ZERO_DIFF * dPordp * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
						dRsidedp += ZERO_DIFF * dE[Ix][Iy][Iz][Nc][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
						dRsidedp += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
					}




					//moshtagh transfer Function jabejaie naft nesbat be feshar Fracture
					dRsidefdp += ZERO_CONV * SI_C * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor));
					dRsidefdp += ZERO_CONV * -SI_C * (fDiffVisco(Ix, Iy, Iz, Nc, 0) * fporpor + fdPordp * fblockFProps[Ix][Iy][Iz][BMU][0]) * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor)*(blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) * (porpor + fporpor);
					dRsidefdp += ZERO_CONV * SI_C * fdPordp * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / (blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					//moshtagh transfer Function jabejaie gaz nesbat be feshar Fracture
					dRsidefdp += ZERO_CONV * SI_C * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor) / (porpor + fporpor));
					dRsidefdp += ZERO_CONV * -SI_C * (fDiffVisco(Ix, Iy, Iz, Nc, 1) * fporpor + fdPordp * fblockFProps[Ix][Iy][Iz][BMU][1]) * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor)*(blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1])) * (porpor + fporpor);
					dRsidefdp += ZERO_CONV * SI_C * fdPordp * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / (blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));

					//if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
					//	dRsidefdp += ZERO_DIFF * fdPordp * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
					//	dRsidefdp += ZERO_DIFF * fdE[Ix][Iy][Iz][Nc][1] * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
					//	dRsidefdp += ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, Nc, 1) * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
					//}

					//if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (1)) {
					////	dRsidefdp += ZERO_DIFF * fdPordp * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
					//	dRsidefdp += ZERO_DIFF * fdE[Ix][Iy][Iz][Nc][0] * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
						//dRsidefdp += ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, Nc, 0) * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
					//}

/*
					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1)) {
						dRsidefdp += ZERO_DIFF * fdPordp * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
						dRsidefdp += ZERO_DIFF * fdE[Ix][Iy][Iz][Nc][0] * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
						dRsidefdp += ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, Nc, 0) * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
					}

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0)) {
						dRsidefdp += ZERO_DIFF * fdPordp * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
						dRsidefdp += ZERO_DIFF * fdE[Ix][Iy][Iz][Nc][1] * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
						dRsidefdp += ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, Nc, 1) * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
					}

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1)) {
						dRsidefdp += ZERO_DIFF * fdPordp * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
						dRsidefdp += ZERO_DIFF * fdE[Ix][Iy][Iz][Nc][1] * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
						dRsidefdp += ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, Nc, 1) * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
					}

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0)) {
						dRsidefdp += ZERO_DIFF * fdPordp * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
						dRsidefdp += ZERO_DIFF * fdE[Ix][Iy][Iz][Nc][0] * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
						dRsidefdp += ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, Nc, 0) * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
					}
*/



					dRsidedp += comp[(Ix + transS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][0][0] + comp[(Ix - 1 + transS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix][Iy + 1][Iz + 1][0][0];
					dRsidedp += comp[Ix][(Iy + transS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][0][1] + comp[Ix][(Iy - 1 + transS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy][Iz + 1][0][1];
					dRsidedp += comp[Ix][Iy][(Iz + transS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][0][2] + comp[Ix][Iy][(Iz - 1 + transS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz][0][2];
					dRsidedp += comp[(Ix + transS[Ix + 1][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][1][0] + comp[(Ix - 1 + transS[Ix][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * trans[Ix][Iy + 1][Iz + 1][1][0];
					dRsidedp += comp[Ix][(Iy + transS[Ix + 1][Iy + 1][Iz + 1][1][1])][Iz][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][1][1] + comp[Ix][(Iy - 1 + transS[Ix + 1][Iy][Iz + 1][1][1])][Iz][i][1] * trans[Ix + 1][Iy][Iz + 1][1][1];
					dRsidedp += comp[Ix][Iy][(Iz + transS[Ix + 1][Iy + 1][Iz + 1][1][2])][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][1][2] + comp[Ix][Iy][(Iz - 1 + transS[Ix + 1][Iy + 1][Iz][1][2])][i][1] * trans[Ix + 1][Iy + 1][Iz][1][2];

					//jac[BLNo+Nc+i][BLNo+(2*Nc)]=PCoeff*(dLsidedp+dRsidedp);

					//jac[BLNo+Nc+i][BLNo+(2*Nc+2)]=dLsidedSo;
					if (phaseStat[Ix][Iy][Iz] == (-1)) dCoefl = 0;
					else dCoefl = 1;
					if (phaseStat[Ix][Iy][Iz] == 1) dCoefg = 0;
					else dCoefg = 1;

					dMul = DiffVisco(Ix, Iy, Iz, Nc, 0);
					dMug = DiffVisco(Ix, Iy, Iz, Nc, 1);
					dDiffdpl = DifDiffusion(Ix, Iy, Iz, i, Nc, 0);
					dDiffdpg = DifDiffusion(Ix, Iy, Iz, i, Nc, 1);

					dRsidedSw = 0;
					dRsidedSg = 0;
					dRsidedSo = 0;
					dRsidefdSw = 0;
					dRsidefdSo = 0;
					dRsidefdSg = 0;

					//Transfer function dRside saturation 
					// moshtagh transfer Function jabejaie naft nesbat be So Matrix
					dRsidedSo += ZERO_CONV * SI_C * f_m_drelperm[1][4] * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (1))
						dRsidedSo += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0))
						dRsidedSo += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (-1))
						dRsidedSo += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0)) {
						dRsidedSo += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
						dRsidedSo += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
					}
					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1))
						dRsidedSo += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1))
						dRsidedSo += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);


					// moshtagh transfer Function jabejaie naft nesbat be So Fracture
					dRsidefdSo += ZERO_CONV * SI_C * f_m_drelperm[1][9] * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

/*
// 					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (1))
// 						dRsidefdSo += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * fporpor / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
// 
// 					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1))
// 						dRsidefdSo += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * fporpor / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
// 
// 					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0))
// 						dRsidefdSo += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * fporpor / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
// 
*/



					// moshtagh transfer Function jabejaie naft nesbat be Sg Matrix
					dRsidedSg += ZERO_CONV * SI_C * f_m_drelperm[1][2] * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					// moshtagh transfer Function jabejaie gaz nesbat be Sg Matrix
					dRsidedSg += ZERO_CONV * SI_C * f_m_drelperm[2][3] * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor) / (porpor + fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (-1))
						dRsidedSg += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0))
						dRsidedSg += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (1))
						dRsidedSg += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1))
						dRsidedSg += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0)) {
						dRsidedSg += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
						dRsidedSg += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
					}


					// moshtagh transfer Function jabejaie naft nesbat be Sg Fracture 
					dRsidefdSg += ZERO_CONV * SI_C * f_m_drelperm[1][7] * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					// moshtagh transfer Function jabejaie gaz nesbat be Sg Fracture
					dRsidefdSg += ZERO_CONV * SI_C * f_m_drelperm[2][8] * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor) / (porpor + fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));

/*
// 					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (-1))
// 						dRsidefdSg += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * fporpor / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
// 
// 					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0))
// 						dRsidefdSg += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * fporpor / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
// 
// 					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1))
// 						dRsidefdSg += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * fporpor / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
*/



					// moshtagh transfer Function jabejaie naft nesbat be Sw Matrix
					dRsidedSw += ZERO_CONV * SI_C * f_m_drelperm[1][1] * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);


					// moshtagh transfer Function jabejaie naft nesbat be Sw Fracture
					dRsidefdSw += ZERO_CONV * SI_C * f_m_drelperm[1][6] * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
					//



					if (Ix < (Nx - 1)) {
						if (phaseStat[Ix + 1][Iy][Iz]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[Iz*(Nx*Ny) + Iy * Nx + Ix + 1] - reCol2;

						dsw = comp[(Ix + transS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][4][0] * (P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) + comp[(Ix + transS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][6][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (transS[Ix + 1][Iy + 1][Iz + 1][0][0]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dsgo = comp[(Ix + transS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][8][0] * (P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) + comp[(Ix + transS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][9][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						dsgg = comp[(Ix + transS[Ix + 1][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][5][0] * (P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + comp[(Ix + transS[Ix + 1][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][7][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (transS[Ix + 1][Iy + 1][Iz + 1][0][0]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix + 1][Iy][Iz] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}

						if (transS[Ix + 1][Iy + 1][Iz + 1][1][0]) {
							Jac1Row[JRowIndex] += (phaseStat[Ix + 1][Iy][Iz] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;

						//oil to oil
						dso = comp[(Ix + transS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][10][0] * (P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) + comp[(Ix + transS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][11][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (transS[Ix + 1][Iy + 1][Iz + 1][0][0]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix + 1][Iy][Iz] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;
						//////////////////////////////////////////////////////////
						/////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (phaseStat[Ix + 1][Iy][Iz] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][RO][0] * gridDim[Ix + 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BMU][0] * gridDim[Ix + 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][0] * gridDim[Ix] * Makhraj - dMul * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix + 1][Iy][Iz][Nc][0] * gridDim[Ix + 1] * Coef*Makhraj - DiffVisco(Ix + 1, Iy, Iz, Nc, 0)*gridDim[Ix + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Ix] * (blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][Nc][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Ix + 1] * (blockFProps[Ix + 1][Iy][Iz][BGAM][0] * dE[Ix + 1][Iy][Iz][Nc][0] / blockFProps[Ix + 1][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BGAM][0] * gridDim[Ix + 1] * Coef) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

						if (transS[Ix + 1][Iy + 1][Iz + 1][0][0]) {
							dRsidedp -= comp[Ix + 1][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][1] * Moshtaq*(P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = (comp[Ix + 1][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][1] * Bmoshtaq)*(P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= comp[Ix + 1][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (comp[Ix + 1][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= (comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}

						porpor2 = porosity[Ix + 1][Iy][Iz] * (1 + cpor * (P[Ix + 2][Iy + 1][Iz + 1][1] - refP) + dcpor * (P[Ix + 2][Iy + 1][Iz + 1][1] - refP)*(P[Ix + 2][Iy + 1][Iz + 1][1] - refP));
						dPordp2 = porosity[Ix + 1][Iy][Iz] * (cpor + 2 * dcpor*(P[Ix + 2][Iy + 1][Iz + 1][1] - refP));


						if (comp[Ix + 1][Iy][Iz][i][0] > comp[Ix][Iy][Iz][i][0]) {
							DupStream = diffusion[Ix + 1][Iy][Iz][i][0];
							dDdp = 0;
							dDdp2 = DifDiffusion(Ix + 1, Iy, Iz, i, Nc, 0);
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][0];
							dDdp = dDiffdpl;
							dDdp2 = 0;
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix + 1][Iy][Iz] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = blockFProps[Ix + 1][Iy][Iz][RO][0] * gridDim[Ix + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] * dCoefl;
						AAd *= (sat[Ix + 1][Iy][Iz][1] * gridDim[Ix + 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Ix] * dCoefl) / (gridDim[Ix + 1] + gridDim[Ix]);
						BBd = tor[Ix + 1][Iy][Iz] * gridDim[Ix + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Ix] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz] / (gridDim[Ix + 1] + gridDim[Ix]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = comp[Ix + 1][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0];
						RSide += DTran * DeltaX;

						dAAddp = dE[Ix][Iy][Iz][Nc][0] * gridDim[Ix] * dCoefl;
						dAAddp2 = dE[Ix + 1][Iy][Iz][Nc][0] * gridDim[Ix + 1] * Coef;
						dBBddp = -dPordp * tor[Ix][Iy][Iz] * gridDim[Ix] * dCoefl / (porpor*porpor);
						dBBddp2 = -dPordp2 * tor[Ix + 1][Iy][Iz] * gridDim[Ix + 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefl) {
							dRsidedp += -NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}

						if (phaseStat[Ix + 1][Iy][Iz] == 1) Coef = 0;
						else Coef = 1;
						Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][RO][1] * gridDim[Ix + 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BMU][1] * gridDim[Ix + 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][1] * gridDim[Ix] * Makhraj - dMug * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix + 1][Iy][Iz][Nc][1] * gridDim[Ix + 1] * Coef*Makhraj - DiffVisco(Ix + 1, Iy, Iz, Nc, 1)*gridDim[Ix + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Ix] * (blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][Nc][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Ix + 1] * (blockFProps[Ix + 1][Iy][Iz][BGAM][1] * dE[Ix + 1][Iy][Iz][Nc][1] / blockFProps[Ix + 1][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BGAM][1] * gridDim[Ix + 1] * Coef) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

						if (transS[Ix + 1][Iy + 1][Iz + 1][1][0]) {
							dRsidedp -= comp[Ix + 1][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][2] * Moshtaq*(P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += (comp[Ix + 1][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][2] * Bmoshtaq)*(P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= comp[Ix + 1][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (comp[Ix + 1][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= (comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);

						}
						//////////////////////////////////////////////////////
						if (comp[Ix + 1][Iy][Iz][i][1] > comp[Ix][Iy][Iz][i][1]) {
							DupStream = diffusion[Ix + 1][Iy][Iz][i][1];
							dDdp = 0;
							dDdp2 = DifDiffusion(Ix + 1, Iy, Iz, i, Nc, 1);
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][1];
							dDdp = dDiffdpg;
							dDdp2 = 0;
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix + 1][Iy][Iz] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = blockFProps[Ix + 1][Iy][Iz][RO][1] * gridDim[Ix + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] * dCoefg;
						AAd *= (sat[Ix + 1][Iy][Iz][2] * gridDim[Ix + 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Ix] * dCoefg) / (gridDim[Ix + 1] + gridDim[Ix]);
						BBd = tor[Ix + 1][Iy][Iz] * gridDim[Ix + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Ix] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Nx+Iy]*gridDim[Nx+Ny+Iz]/(gridDim[Ix+1]+gridDim[Ix]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = comp[Ix + 1][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1];
						RSide += DTran * DeltaX;

						dAAddp = dE[Ix][Iy][Iz][Nc][1] * gridDim[Ix] * dCoefg;
						dAAddp2 = dE[Ix + 1][Iy][Iz][Nc][1] * gridDim[Ix + 1] * Coef;
						dBBddp = -dPordp * tor[Ix][Iy][Iz] * gridDim[Ix] * dCoefg / (porpor*porpor);
						dBBddp2 = -dPordp2 * tor[Ix + 1][Iy][Iz] * gridDim[Ix + 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefg) {
							dRsidedp += -NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}


						//////////////////////////////////////////////////////
						Jac1Row[JRowIndex] = PCoeff * (-comp[(Ix + transS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][0][0] - comp[(Ix + transS[Ix + 1][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][1][0] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;

					}

					if (Ix > 0) {
						if (phaseStat[Ix - 1][Iy][Iz]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[Iz*(Nx*Ny) + Iy * Nx + Ix - 1] - reCol2;

						dsw = -comp[(Ix - 1 + transS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix][Iy + 1][Iz + 1][4][0] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]) - comp[(Ix - 1 + transS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix][Iy + 1][Iz + 1][6][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						if (!transS[Ix][Iy + 1][Iz + 1][0][0]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dso = -comp[(Ix - 1 + transS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix][Iy + 1][Iz + 1][10][0] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]) - comp[(Ix - 1 + transS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix][Iy + 1][Iz + 1][11][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						if (!transS[Ix][Iy + 1][Iz + 1][0][0]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix - 1][Iy][Iz] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;

						dsgo = -comp[(Ix - 1 + transS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix][Iy + 1][Iz + 1][8][0] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]) - comp[(Ix - 1 + transS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix][Iy + 1][Iz + 1][9][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						dsgg = -comp[(Ix - 1 + transS[Ix][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * trans[Ix][Iy + 1][Iz + 1][5][0] * (P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]) - comp[(Ix - 1 + transS[Ix][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * trans[Ix][Iy + 1][Iz + 1][7][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						if (!transS[Ix][Iy + 1][Iz + 1][0][0]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix - 1][Iy][Iz] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}

						if (!transS[Ix][Iy + 1][Iz + 1][1][0]) {
							Jac1Row[JRowIndex] += (phaseStat[Ix - 1][Iy][Iz] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;
						/////////////////////////////////////////////////////////////
						////////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (phaseStat[Ix - 1][Iy][Iz] == (-1)) Coef = 0;
						else Coef = 1;
						Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][RO][0] * gridDim[Ix - 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][BMU][0] * gridDim[Ix - 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][0] * gridDim[Ix] * Makhraj - dMul * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix - 1][Iy][Iz][Nc][0] * gridDim[Ix - 1] * Coef*Makhraj - DiffVisco(Ix - 1, Iy, Iz, Nc, 0)*gridDim[Ix - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Ix] * (blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][Nc][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Ix - 1] * (blockFProps[Ix - 1][Iy][Iz][BGAM][0] * dE[Ix - 1][Iy][Iz][Nc][0] / blockFProps[Ix - 1][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][BGAM][0] * gridDim[Ix - 1] * Coef) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

						if (transS[Ix][Iy + 1][Iz + 1][0][0]) {
							dRsidedp += (comp[Ix][Iy][Iz][i][0] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);
							dBsidedp = -comp[Ix][Iy][Iz][i][0] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);

							dRsidedp += (comp[Ix][Iy][Iz][i][0] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1])*(Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
							dBsidedp -= comp[Ix][Iy][Iz][i][0] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp += comp[Ix - 1][Iy][Iz][i][0] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][1] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);
							dBsidedp = -(comp[Ix - 1][Iy][Iz][i][0] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][1] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);

							dRsidedp += comp[Ix - 1][Iy][Iz][i][0] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
							dBsidedp -= (comp[Ix - 1][Iy][Iz][i][0] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][1])*(Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						}

						porpor2 = porosity[Ix - 1][Iy][Iz] * (1 + cpor * (P[Ix][Iy + 1][Iz + 1][1] - refP) + dcpor * (P[Ix][Iy + 1][Iz + 1][1] - refP)*(P[Ix][Iy + 1][Iz + 1][1] - refP));
						dPordp2 = porosity[Ix - 1][Iy][Iz] * (cpor + 2 * dcpor*(P[Ix][Iy + 1][Iz + 1][1] - refP));


						if (comp[Ix - 1][Iy][Iz][i][0] > comp[Ix][Iy][Iz][i][0]) {
							DupStream = diffusion[Ix - 1][Iy][Iz][i][0];
							dDdp = 0;
							dDdp2 = DifDiffusion(Ix - 1, Iy, Iz, i, Nc, 0);
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][0];
							dDdp = dDiffdpl;
							dDdp2 = 0;
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix - 1][Iy][Iz] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = blockFProps[Ix - 1][Iy][Iz][RO][0] * gridDim[Ix - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] * dCoefl;
						AAd *= (sat[Ix - 1][Iy][Iz][1] * gridDim[Ix - 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Ix] * dCoefl) / (gridDim[Ix - 1] + gridDim[Ix]);
						BBd = tor[Ix - 1][Iy][Iz] * gridDim[Ix - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Ix] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz] / (gridDim[Ix - 1] + gridDim[Ix]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = comp[Ix][Iy][Iz][i][0] - comp[Ix - 1][Iy][Iz][i][0];
						RSide -= DTran * DeltaX;

						dAAddp = dE[Ix][Iy][Iz][Nc][0] * gridDim[Ix] * dCoefl;
						dAAddp2 = dE[Ix - 1][Iy][Iz][Nc][0] * gridDim[Ix - 1] * Coef;
						dBBddp = -dPordp * tor[Ix][Iy][Iz] * gridDim[Ix] * dCoefl / (porpor*porpor);
						dBBddp2 = -dPordp2 * tor[Ix - 1][Iy][Iz] * gridDim[Ix - 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefl) {
							dRsidedp += NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += -NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}

						if (phaseStat[Ix - 1][Iy][Iz] == 1) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][RO][1] * gridDim[Ix - 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][BMU][1] * gridDim[Ix - 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][1] * gridDim[Ix] * Makhraj - dMug * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix - 1][Iy][Iz][Nc][1] * gridDim[Ix - 1] * Coef*Makhraj - DiffVisco(Ix - 1, Iy, Iz, Nc, 1)*gridDim[Ix - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Ix] * (blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][Nc][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Ix - 1] * (blockFProps[Ix - 1][Iy][Iz][BGAM][1] * dE[Ix - 1][Iy][Iz][Nc][1] / blockFProps[Ix - 1][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][BGAM][1] * gridDim[Ix - 1] * Coef) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

						if (transS[Ix][Iy + 1][Iz + 1][1][0]) {
							dRsidedp += (comp[Ix][Iy][Iz][i][1] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);
							dBsidedp = -comp[Ix][Iy][Iz][i][1] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);

							dRsidedp += (comp[Ix][Iy][Iz][i][1] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
							dBsidedp -= comp[Ix][Iy][Iz][i][1] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp += comp[Ix - 1][Iy][Iz][i][1] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][2] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);
							dBsidedp = -(comp[Ix - 1][Iy][Iz][i][1] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][2] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);

							dRsidedp += comp[Ix - 1][Iy][Iz][i][1] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
							dBsidedp -= (comp[Ix - 1][Iy][Iz][i][1] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						}
						//////////////////////////////////////////////////////////////
						if (comp[Ix - 1][Iy][Iz][i][1] > comp[Ix][Iy][Iz][i][1]) {
							DupStream = diffusion[Ix - 1][Iy][Iz][i][1];
							dDdp = 0;
							dDdp2 = DifDiffusion(Ix - 1, Iy, Iz, i, Nc, 1);
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][1];
							dDdp = dDiffdpg;
							dDdp2 = 0;
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix - 1][Iy][Iz] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = blockFProps[Ix - 1][Iy][Iz][RO][1] * gridDim[Ix - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] * dCoefg;
						AAd *= (sat[Ix - 1][Iy][Iz][2] * gridDim[Ix - 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Ix] * dCoefg) / (gridDim[Ix - 1] + gridDim[Ix]);
						BBd = tor[Ix - 1][Iy][Iz] * gridDim[Ix - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Ix] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Nx+Iy]*gridDim[Nx+Ny+Iz]/(gridDim[Ix-1]+gridDim[Ix]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = comp[Ix][Iy][Iz][i][1] - comp[Ix - 1][Iy][Iz][i][1];
						RSide -= DTran * DeltaX;

						dAAddp = dE[Ix][Iy][Iz][Nc][1] * gridDim[Ix] * dCoefg;
						dAAddp2 = dE[Ix - 1][Iy][Iz][Nc][1] * gridDim[Ix - 1] * Coef;
						dBBddp = -dPordp * tor[Ix][Iy][Iz] * gridDim[Ix] * dCoefg / (porpor*porpor);
						dBBddp2 = -dPordp2 * tor[Ix - 1][Iy][Iz] * gridDim[Ix - 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefg) {
							dRsidedp += NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += -NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}

						///////////////////////////////////////////////////////////////
						Jac1Row[JRowIndex] = PCoeff * (-comp[(Ix - 1 + transS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix][Iy + 1][Iz + 1][0][0] - comp[(Ix - 1 + transS[Ix][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * trans[Ix][Iy + 1][Iz + 1][1][0] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;
					}

					if (Iy < (Ny - 1)) {
						if (phaseStat[Ix][Iy + 1][Iz]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[Iz*(Nx*Ny) + (Iy + 1)*Nx + Ix] - reCol2;

						dsw = comp[Ix][(Iy + transS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][4][1] * (P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) + comp[Ix][(Iy + transS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][6][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (transS[Ix + 1][Iy + 1][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dso = comp[Ix][(Iy + transS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][10][1] * (P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) + comp[Ix][(Iy + transS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][11][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (transS[Ix + 1][Iy + 1][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix][Iy + 1][Iz] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;

						dsgo = comp[Ix][(Iy + transS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][8][1] * (P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) + comp[Ix][(Iy + transS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][9][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						dsgg = comp[Ix][(Iy + transS[Ix + 1][Iy + 1][Iz + 1][1][1])][Iz][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][5][1] * (P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + comp[Ix][(Iy + transS[Ix + 1][Iy + 1][Iz + 1][1][1])][Iz][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][7][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (transS[Ix + 1][Iy + 1][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix][Iy + 1][Iz] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}
						if (transS[Ix + 1][Iy + 1][Iz + 1][1][1]) {
							Jac1Row[JRowIndex] += (phaseStat[Ix][Iy + 1][Iz] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;
						//////////////////////////////////////////////////////////////////////////////
						/////////////////////////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (phaseStat[Ix][Iy + 1][Iz] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][RO][0] * gridDim[Nx + Iy + 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][BMU][0] * gridDim[Nx + Iy + 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Iy] * Makhraj - dMul * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix][Iy + 1][Iz][Nc][0] * gridDim[Nx + Iy + 1] * Coef*Makhraj - DiffVisco(Ix, Iy + 1, Iz, Nc, 0)*gridDim[Nx + Iy + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Iy] * (blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][Nc][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Iy + 1] * (blockFProps[Ix][Iy + 1][Iz][BGAM][0] * dE[Ix][Iy + 1][Iz][Nc][0] / blockFProps[Ix][Iy + 1][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][BGAM][0] * gridDim[Nx + Iy + 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

						if (transS[Ix + 1][Iy + 1][Iz + 1][0][1]) {
							dRsidedp -= comp[Ix][Iy + 1][Iz][i][0] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][1] * Moshtaq*(P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = (comp[Ix][Iy + 1][Iz][i][0] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][1] * Bmoshtaq)*(P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= comp[Ix][Iy + 1][Iz][i][0] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (comp[Ix][Iy + 1][Iz][i][0] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= (comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}

						porpor2 = porosity[Ix][Iy + 1][Iz] * (1 + cpor * (P[Ix + 1][Iy + 2][Iz + 1][1] - refP) + dcpor * (P[Ix + 1][Iy + 2][Iz + 1][1] - refP)*(P[Ix + 1][Iy + 2][Iz + 1][1] - refP));
						dPordp2 = porosity[Ix][Iy + 1][Iz] * (cpor + 2 * dcpor*(P[Ix + 1][Iy + 2][Iz + 1][1] - refP));
						if (comp[Ix][Iy + 1][Iz][i][0] > comp[Ix][Iy][Iz][i][0]) {
							DupStream = diffusion[Ix][Iy + 1][Iz][i][0];
							dDdp = 0;
							dDdp2 = DifDiffusion(Ix, Iy + 1, Iz, i, Nc, 0);
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][0];
							dDdp = dDiffdpl;
							dDdp2 = 0;
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix][Iy + 1][Iz] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = blockFProps[Ix][Iy + 1][Iz][RO][0] * gridDim[Nx + Iy + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] * dCoefl;
						AAd *= (sat[Ix][Iy + 1][Iz][1] * gridDim[Nx + Iy + 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Nx + Iy] * dCoefl) / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
						BBd = tor[Ix][Iy + 1][Iz] * gridDim[Nx + Iy + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Iy] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Ix] * gridDim[Nx + Ny + Iz] / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = comp[Ix][Iy + 1][Iz][i][0] - comp[Ix][Iy][Iz][i][0];
						RSide += DTran * DeltaX;

						dAAddp = dE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Iy] * dCoefl;
						dAAddp2 = dE[Ix][Iy + 1][Iz][Nc][0] * gridDim[Nx + Iy + 1] * Coef;
						dBBddp = -dPordp * tor[Ix][Iy][Iz] * gridDim[Nx + Iy] * dCoefl / (porpor*porpor);
						dBBddp2 = -dPordp2 * tor[Ix][Iy + 1][Iz] * gridDim[Nx + Iy + 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefl) {
							dRsidedp += -NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}

						if (phaseStat[Ix][Iy + 1][Iz] == 1) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][RO][1] * gridDim[Nx + Iy + 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][BMU][1] * gridDim[Nx + Iy + 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Iy] * Makhraj - dMug * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix][Iy + 1][Iz][Nc][1] * gridDim[Nx + Iy + 1] * Coef*Makhraj - DiffVisco(Ix, Iy + 1, Iz, Nc, 1)*gridDim[Nx + Iy + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = Coef * gridDim[Nx + Iy] * (blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][Nc][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);
						BmoshtaqGama = gridDim[Nx + Iy + 1] * (blockFProps[Ix][Iy + 1][Iz][BGAM][1] * dE[Ix][Iy + 1][Iz][Nc][1] / blockFProps[Ix][Iy + 1][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][BGAM][1] * gridDim[Nx + Iy + 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

						if (transS[Ix + 1][Iy + 1][Iz + 1][1][1]) {
							dRsidedp -= comp[Ix][Iy + 1][Iz][i][1] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][2] * Moshtaq*(P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += (comp[Ix][Iy + 1][Iz][i][1] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][2] * Bmoshtaq)*(P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= comp[Ix][Iy + 1][Iz][i][1] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (comp[Ix][Iy + 1][Iz][i][1] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= (comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}

						/////////////////////////////////////////////////////////////////////////////
						if (comp[Ix][Iy + 1][Iz][i][1] > comp[Ix][Iy][Iz][i][1]) {
							DupStream = diffusion[Ix][Iy + 1][Iz][i][1];
							dDdp = 0;
							dDdp2 = DifDiffusion(Ix, Iy + 1, Iz, i, Nc, 1);
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][1];
							dDdp = dDiffdpg;
							dDdp2 = 0;
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix][Iy + 1][Iz] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = blockFProps[Ix][Iy + 1][Iz][RO][1] * gridDim[Nx + Iy + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] * dCoefg;
						AAd *= (sat[Ix][Iy + 1][Iz][2] * gridDim[Nx + Iy + 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Nx + Iy] * dCoefg) / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
						BBd = tor[Ix][Iy + 1][Iz] * gridDim[Nx + Iy + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Iy] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Ix]*gridDim[Nx+Ny+Iz]/(gridDim[Nx+Iy+1]+gridDim[Nx+Iy]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = comp[Ix][Iy + 1][Iz][i][1] - comp[Ix][Iy][Iz][i][1];
						RSide += DTran * DeltaX;

						dAAddp = dE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Iy] * dCoefg;
						dAAddp2 = dE[Ix][Iy + 1][Iz][Nc][1] * gridDim[Nx + Iy + 1] * Coef;
						dBBddp = -dPordp * tor[Ix][Iy][Iz] * gridDim[Nx + Iy] * dCoefg / (porpor*porpor);
						dBBddp2 = -dPordp2 * tor[Ix][Iy + 1][Iz] * gridDim[Nx + Iy + 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefg) {
							dRsidedp += -NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}
						/////////////////////////////////////////////////////////////////////////////
						Jac1Row[JRowIndex] = PCoeff * (-comp[Ix][(Iy + transS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][0][1] - comp[Ix][(Iy + transS[Ix + 1][Iy + 1][Iz + 1][1][1])][Iz][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][1][1] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;
					}

					if (Iy > 0) {
						if (phaseStat[Ix][Iy - 1][Iz]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[Iz*(Nx*Ny) + (Iy - 1)*Nx + Ix] - reCol2;

						dsw = -comp[Ix][(Iy - 1 + transS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy][Iz + 1][4][1] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]) - comp[Ix][(Iy - 1 + transS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy][Iz + 1][6][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						if (!transS[Ix + 1][Iy][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dso = -comp[Ix][(Iy - 1 + transS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy][Iz + 1][10][1] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]) - comp[Ix][(Iy - 1 + transS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy][Iz + 1][11][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						if (!transS[Ix + 1][Iy][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix][Iy - 1][Iz] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;

						dsgo = -comp[Ix][(Iy - 1 + transS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy][Iz + 1][8][1] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]) - comp[Ix][(Iy - 1 + transS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy][Iz + 1][9][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						dsgg = -comp[Ix][(Iy - 1 + transS[Ix + 1][Iy][Iz + 1][1][1])][Iz][i][1] * trans[Ix + 1][Iy][Iz + 1][5][1] * (P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]) - comp[Ix][(Iy - 1 + transS[Ix + 1][Iy][Iz + 1][1][1])][Iz][i][1] * trans[Ix + 1][Iy][Iz + 1][7][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						if (!transS[Ix + 1][Iy][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix][Iy - 1][Iz] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}
						if (!transS[Ix + 1][Iy][Iz + 1][1][1]) {
							Jac1Row[JRowIndex] += (phaseStat[Ix][Iy - 1][Iz] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;

						//////////////////////////////////////////////////////////////////
						/////////////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (phaseStat[Ix][Iy - 1][Iz] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][RO][0] * gridDim[Nx + Iy - 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][BMU][0] * gridDim[Nx + Iy - 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Iy] * Makhraj - dMul * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix][Iy - 1][Iz][Nc][0] * gridDim[Nx + Iy - 1] * Coef*Makhraj - DiffVisco(Ix, Iy - 1, Iz, Nc, 0)*gridDim[Nx + Iy - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Iy] * (blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][Nc][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Iy - 1] * (blockFProps[Ix][Iy - 1][Iz][BGAM][0] * dE[Ix][Iy - 1][Iz][Nc][0] / blockFProps[Ix][Iy - 1][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][BGAM][0] * gridDim[Nx + Iy - 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

						if (transS[Ix + 1][Iy][Iz + 1][0][1]) {
							dRsidedp += (comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);
							dBsidedp = -comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);

							dRsidedp += (comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][1])*(Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
							dBsidedp -= comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						}
						else {
							dRsidedp += comp[Ix][Iy - 1][Iz][i][0] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][1] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);
							dBsidedp = -(comp[Ix][Iy - 1][Iz][i][0] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][1] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);

							dRsidedp += comp[Ix][Iy - 1][Iz][i][0] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
							dBsidedp -= (comp[Ix][Iy - 1][Iz][i][0] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][1])*(Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						}

						porpor2 = porosity[Ix][Iy - 1][Iz] * (1 + cpor * (P[Ix + 1][Iy][Iz + 1][1] - refP) + dcpor * (P[Ix + 1][Iy][Iz + 1][1] - refP)*(P[Ix + 1][Iy][Iz + 1][1] - refP));
						dPordp2 = porosity[Ix][Iy - 1][Iz] * (cpor + 2 * dcpor*(P[Ix + 1][Iy][Iz + 1][1] - refP));
						if (comp[Ix][Iy - 1][Iz][i][0] > comp[Ix][Iy][Iz][i][0]) {
							DupStream = diffusion[Ix][Iy - 1][Iz][i][0];
							dDdp = 0;
							dDdp2 = DifDiffusion(Ix, Iy - 1, Iz, i, Nc, 0);
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][0];
							dDdp = dDiffdpl;
							dDdp2 = 0;
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix][Iy - 1][Iz] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = blockFProps[Ix][Iy - 1][Iz][RO][0] * gridDim[Nx + Iy - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] * dCoefl;
						AAd *= (sat[Ix][Iy - 1][Iz][1] * gridDim[Nx + Iy - 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Nx + Iy] * dCoefl) / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
						BBd = tor[Ix][Iy - 1][Iz] * gridDim[Nx + Iy - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Iy] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Ix] * gridDim[Nx + Ny + Iz] / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = comp[Ix][Iy][Iz][i][0] - comp[Ix][Iy - 1][Iz][i][0];
						RSide -= DTran * DeltaX;

						dAAddp = dE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Iy] * dCoefl;
						dAAddp2 = dE[Ix][Iy - 1][Iz][Nc][0] * gridDim[Nx + Iy - 1] * Coef;
						dBBddp = -dPordp * tor[Ix][Iy][Iz] * gridDim[Nx + Iy] * dCoefl / (porpor*porpor);
						dBBddp2 = -dPordp2 * tor[Ix][Iy - 1][Iz] * gridDim[Nx + Iy - 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefl) {
							dRsidedp += NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += -NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}

						if (phaseStat[Ix][Iy - 1][Iz] == 1) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][RO][1] * gridDim[Nx + Iy - 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][BMU][1] * gridDim[Nx + Iy - 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Iy] * Makhraj - dMug * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix][Iy - 1][Iz][Nc][1] * gridDim[Nx + Iy - 1] * Coef*Makhraj - DiffVisco(Ix, Iy - 1, Iz, Nc, 1)*gridDim[Nx + Iy - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Iy] * (blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][Nc][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Iy - 1] * (blockFProps[Ix][Iy - 1][Iz][BGAM][1] * dE[Ix][Iy - 1][Iz][Nc][1] / blockFProps[Ix][Iy - 1][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][BGAM][1] * gridDim[Nx + Iy - 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

						if (transS[Ix + 1][Iy][Iz + 1][1][1]) {
							dRsidedp += (comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);
							dBsidedp -= comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);

							dRsidedp += (comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
							dBsidedp -= comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						}
						else {
							dRsidedp += comp[Ix][Iy - 1][Iz][i][1] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][2] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);
							dBsidedp -= (comp[Ix][Iy - 1][Iz][i][1] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][2] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);

							dRsidedp += comp[Ix][Iy - 1][Iz][i][1] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
							dBsidedp -= (comp[Ix][Iy - 1][Iz][i][1] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						}

						///////////////////////////////////////////////////////////////////
						if (comp[Ix][Iy - 1][Iz][i][1] > comp[Ix][Iy][Iz][i][1]) {
							DupStream = diffusion[Ix][Iy - 1][Iz][i][1];
							dDdp = 0;
							dDdp2 = DifDiffusion(Ix, Iy - 1, Iz, i, Nc, 1);
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][1];
							dDdp = dDiffdpg;
							dDdp2 = 0;
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix][Iy - 1][Iz] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = blockFProps[Ix][Iy - 1][Iz][RO][1] * gridDim[Nx + Iy - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] * dCoefg;
						AAd *= (sat[Ix][Iy - 1][Iz][2] * gridDim[Nx + Iy - 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Nx + Iy] * dCoefg) / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
						BBd = tor[Ix][Iy - 1][Iz] * gridDim[Nx + Iy - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Iy] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Ix]*gridDim[Nx+Ny+Iz]/(gridDim[Nx+Iy-1]+gridDim[Nx+Iy]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = comp[Ix][Iy][Iz][i][1] - comp[Ix][Iy - 1][Iz][i][1];
						RSide -= DTran * DeltaX;

						dAAddp = dE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Iy] * dCoefg;
						dAAddp2 = dE[Ix][Iy - 1][Iz][Nc][1] * gridDim[Nx + Iy - 1] * Coef;
						dBBddp = -dPordp * tor[Ix][Iy][Iz] * gridDim[Nx + Iy] * dCoefg / (porpor*porpor);
						dBBddp2 = -dPordp2 * tor[Ix][Iy - 1][Iz] * gridDim[Nx + Iy - 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefg) {
							dRsidedp += NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += -NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}

						//////////////////////////////////////////////////////////////////
						Jac1Row[JRowIndex] = PCoeff * (-comp[Ix][(Iy - 1 + transS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy][Iz + 1][0][1] - comp[Ix][(Iy - 1 + transS[Ix + 1][Iy][Iz + 1][1][1])][Iz][i][1] * trans[Ix + 1][Iy][Iz + 1][1][1] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;
					}

					if (Iz < (Nz - 1)) {
						if (phaseStat[Ix][Iy][Iz + 1]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[(Iz + 1)*(Nx*Ny) + Iy * Nx + Ix] - reCol2;

						dsw = comp[Ix][Iy][(Iz + transS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][4][2] * (P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) + comp[Ix][Iy][(Iz + transS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][6][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (transS[Ix + 1][Iy + 1][Iz + 1][0][2]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dso = comp[Ix][Iy][(Iz + transS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][10][2] * (P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) + comp[Ix][Iy][(Iz + transS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][11][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (transS[Ix + 1][Iy + 1][Iz + 1][0][2]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix][Iy][Iz + 1] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;

						dsgo = comp[Ix][Iy][(Iz + transS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][8][2] * (P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) + comp[Ix][Iy][(Iz + transS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][9][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						dsgg = comp[Ix][Iy][(Iz + transS[Ix + 1][Iy + 1][Iz + 1][1][2])][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][5][2] * (P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + comp[Ix][Iy][(Iz + transS[Ix + 1][Iy + 1][Iz + 1][1][2])][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][7][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (transS[Ix + 1][Iy + 1][Iz + 1][0][2]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix][Iy][Iz + 1] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}
						if (transS[Ix + 1][Iy + 1][Iz + 1][1][2]) {
							Jac1Row[JRowIndex] += (phaseStat[Ix][Iy][Iz + 1] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;
						///////////////////////////////////////////////////////////////////////////
						////////////////////////////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (phaseStat[Ix][Iy][Iz + 1] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][RO][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][BMU][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Ny + Iz] * Makhraj - dMul * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix][Iy][Iz + 1][Nc][0] * gridDim[Nx + Ny + Iz + 1] * Coef*Makhraj - DiffVisco(Ix, Iy, Iz + 1, Nc, 0)*gridDim[Nx + Ny + Iz + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Ny + Iz] * (blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][Nc][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz + 1] * (blockFProps[Ix][Iy][Iz + 1][BGAM][0] * dE[Ix][Iy][Iz + 1][Nc][0] / blockFProps[Ix][Iy][Iz + 1][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][BGAM][0] * gridDim[Nx + Ny + Iz + 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

						if (transS[Ix + 1][Iy + 1][Iz + 1][0][2]) {
							dRsidedp -= comp[Ix][Iy][Iz + 1][i][0] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][1] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = (comp[Ix][Iy][Iz + 1][i][0] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][1] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= comp[Ix][Iy][Iz + 1][i][0] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (comp[Ix][Iy][Iz + 1][i][0] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= (comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}

						porpor2 = porosity[Ix][Iy][Iz + 1] * (1 + cpor * (P[Ix + 1][Iy + 1][Iz + 2][1] - refP) + dcpor * (P[Ix + 1][Iy + 1][Iz + 2][1] - refP)*(P[Ix + 1][Iy + 1][Iz + 2][1] - refP));
						dPordp2 = porosity[Ix][Iy][Iz + 1] * (cpor + 2 * dcpor*(P[Ix + 1][Iy + 1][Iz + 2][1] - refP));
						if (comp[Ix][Iy][Iz + 1][i][0] > comp[Ix][Iy][Iz][i][0]) {
							DupStream = diffusion[Ix][Iy][Iz + 1][i][0];
							dDdp = 0;
							dDdp2 = DifDiffusion(Ix, Iy, Iz + 1, i, Nc, 0);
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][0];
							dDdp = dDiffdpl;
							dDdp2 = 0;
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix][Iy][Iz + 1] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = blockFProps[Ix][Iy][Iz + 1][RO][0] * gridDim[Nx + Ny + Iz + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] * dCoefl;
						AAd *= (sat[Ix][Iy][Iz + 1][1] * gridDim[Nx + Ny + Iz + 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Nx + Ny + Iz] * dCoefl) / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
						BBd = tor[Ix][Iy][Iz + 1] * gridDim[Nx + Ny + Iz + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Ny + Iz] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Ix] * gridDim[Nx + Iy] / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = comp[Ix][Iy][Iz + 1][i][0] - comp[Ix][Iy][Iz][i][0];
						RSide += DTran * DeltaX;

						dAAddp = dE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Ny + Iz] * dCoefl;
						dAAddp2 = dE[Ix][Iy][Iz + 1][Nc][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
						dBBddp = -dPordp * tor[Ix][Iy][Iz] * gridDim[Nx + Ny + Iz] * dCoefl / (porpor*porpor);
						dBBddp2 = -dPordp2 * tor[Ix][Iy][Iz + 1] * gridDim[Nx + Ny + Iz + 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefl) {
							dRsidedp += -NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}

						if (phaseStat[Ix][Iy][Iz + 1] == 1) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][RO][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][BMU][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Ny + Iz] * Makhraj - dMug * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix][Iy][Iz + 1][Nc][1] * gridDim[Nx + Ny + Iz + 1] * Coef*Makhraj - DiffVisco(Ix, Iy, Iz + 1, Nc, 1)*gridDim[Nx + Ny + Iz + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Ny + Iz] * (blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][Nc][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz + 1] * (blockFProps[Ix][Iy][Iz + 1][BGAM][1] * dE[Ix][Iy][Iz + 1][Nc][1] / blockFProps[Ix][Iy][Iz + 1][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][BGAM][1] * gridDim[Nx + Ny + Iz + 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

						if (transS[Ix + 1][Iy + 1][Iz + 1][1][2]) {
							dRsidedp -= comp[Ix][Iy][Iz + 1][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][2] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += (comp[Ix][Iy][Iz + 1][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][2] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= comp[Ix][Iy][Iz + 1][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (comp[Ix][Iy][Iz + 1][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= (comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						///////////////////////////////////////////////////////////////////////////////
						if (comp[Ix][Iy][Iz + 1][i][1] > comp[Ix][Iy][Iz][i][1]) {
							DupStream = diffusion[Ix][Iy][Iz + 1][i][1];
							dDdp = 0;
							dDdp2 = DifDiffusion(Ix, Iy, Iz + 1, i, Nc, 1);
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][1];
							dDdp = dDiffdpg;
							dDdp2 = 0;
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix][Iy][Iz + 1] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = blockFProps[Ix][Iy][Iz + 1][RO][1] * gridDim[Nx + Ny + Iz + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] * dCoefg;
						AAd *= (sat[Ix][Iy][Iz + 1][2] * gridDim[Nx + Ny + Iz + 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Nx + Ny + Iz] * dCoefg) / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
						BBd = tor[Ix][Iy][Iz + 1] * gridDim[Nx + Ny + Iz + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Ny + Iz] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Ix]*gridDim[Nx+Iy]/(gridDim[Nx+Ny+Iz+1]+gridDim[Nx+Ny+Iz]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = comp[Ix][Iy][Iz + 1][i][1] - comp[Ix][Iy][Iz][i][1];
						RSide += DTran * DeltaX;

						dAAddp = dE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Ny + Iz] * dCoefg;
						dAAddp2 = dE[Ix][Iy][Iz + 1][Nc][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
						dBBddp = -dPordp * tor[Ix][Iy][Iz] * gridDim[Nx + Ny + Iz] * dCoefg / (porpor*porpor);
						dBBddp2 = -dPordp2 * tor[Ix][Iy][Iz + 1] * gridDim[Nx + Ny + Iz + 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefg) {
							dRsidedp += -NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}

						//////////////////////////////////////////////////////////////////////////////
						Jac1Row[JRowIndex] = PCoeff * (-comp[Ix][Iy][(Iz + transS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][0][2] - comp[Ix][Iy][(Iz + transS[Ix + 1][Iy + 1][Iz + 1][1][2])][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][1][2] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;
					}

					if (Iz > 0) {
						if (phaseStat[Ix][Iy][Iz - 1]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[(Iz - 1)*(Nx*Ny) + Iy * Nx + Ix] - reCol2;

						dsw = -comp[Ix][Iy][(Iz - 1 + transS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz][4][2] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]) - comp[Ix][Iy][(Iz - 1 + transS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz][6][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						if (!transS[Ix + 1][Iy + 1][Iz][0][2]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dso = -comp[Ix][Iy][(Iz - 1 + transS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz][10][2] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]) - comp[Ix][Iy][(Iz - 1 + transS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz][11][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						if (!transS[Ix + 1][Iy + 1][Iz][0][2]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix][Iy][Iz - 1] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;

						dsgo = -comp[Ix][Iy][(Iz - 1 + transS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz][8][2] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]) - comp[Ix][Iy][(Iz - 1 + transS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz][9][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						dsgg = -comp[Ix][Iy][(Iz - 1 + transS[Ix + 1][Iy + 1][Iz][1][2])][i][1] * trans[Ix + 1][Iy + 1][Iz][5][2] * (P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]) - comp[Ix][Iy][(Iz - 1 + transS[Ix + 1][Iy + 1][Iz][1][2])][i][1] * trans[Ix + 1][Iy + 1][Iz][7][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						if (!transS[Ix + 1][Iy + 1][Iz][0][2]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix][Iy][Iz - 1] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}
						if (!transS[Ix + 1][Iy + 1][Iz][1][2]) {
							Jac1Row[JRowIndex] += (phaseStat[Ix][Iy][Iz - 1] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;

						///////////////////////////////////////////////////////////////
						///////////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (phaseStat[Ix][Iy][Iz - 1] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][RO][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][BMU][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Ny + Iz] * Makhraj - dMul * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix][Iy][Iz - 1][Nc][0] * gridDim[Nx + Ny + Iz - 1] * Coef*Makhraj - DiffVisco(Ix, Iy, Iz - 1, Nc, 0)*gridDim[Nx + Ny + Iz - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Ny + Iz] * (blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][Nc][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz - 1] * (blockFProps[Ix][Iy][Iz - 1][BGAM][0] * dE[Ix][Iy][Iz - 1][Nc][0] / blockFProps[Ix][Iy][Iz - 1][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][BGAM][0] * gridDim[Nx + Ny + Iz - 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

						if (transS[Ix + 1][Iy + 1][Iz][0][2]) {
							dRsidedp += (comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);
							dBsidedp = -comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);

							dRsidedp += (comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][1])*(Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							dBsidedp -= comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						}
						else {
							dRsidedp += comp[Ix][Iy][Iz - 1][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][1] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);
							dBsidedp = -(comp[Ix][Iy][Iz - 1][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][1] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);

							dRsidedp += comp[Ix][Iy][Iz - 1][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							dBsidedp -= (comp[Ix][Iy][Iz - 1][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][1])*(Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						}

						porpor2 = porosity[Ix][Iy][Iz - 1] * (1 + cpor * (P[Ix + 1][Iy + 1][Iz][1] - refP) + dcpor * (P[Ix + 1][Iy + 1][Iz][1] - refP)*(P[Ix + 1][Iy + 1][Iz][1] - refP));
						dPordp2 = porosity[Ix][Iy][Iz - 1] * (cpor + 2 * dcpor*(P[Ix + 1][Iy + 1][Iz][1] - refP));
						if (comp[Ix][Iy][Iz - 1][i][0] > comp[Ix][Iy][Iz][i][0]) {
							DupStream = diffusion[Ix][Iy][Iz - 1][i][0];
							dDdp = 0;
							dDdp2 = DifDiffusion(Ix, Iy, Iz - 1, i, Nc, 0);
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][0];
							dDdp = dDiffdpl;
							dDdp2 = 0;
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix][Iy][Iz - 1] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = blockFProps[Ix][Iy][Iz - 1][RO][0] * gridDim[Nx + Ny + Iz - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] * dCoefl;
						AAd *= (sat[Ix][Iy][Iz - 1][1] * gridDim[Nx + Ny + Iz - 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Nx + Ny + Iz] * dCoefl) / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
						BBd = tor[Ix][Iy][Iz - 1] * gridDim[Nx + Ny + Iz - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Ny + Iz] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Ix] * gridDim[Nx + Iy] / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = comp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz - 1][i][0];
						RSide -= DTran * DeltaX;

						dAAddp = dE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Ny + Iz] * dCoefl;
						dAAddp2 = dE[Ix][Iy][Iz - 1][Nc][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
						dBBddp = -dPordp * tor[Ix][Iy][Iz] * gridDim[Nx + Ny + Iz] * dCoefl / (porpor*porpor);
						dBBddp2 = -dPordp2 * tor[Ix][Iy][Iz - 1] * gridDim[Nx + Ny + Iz - 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefl) {
							dRsidedp += NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += -NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}

						if (phaseStat[Ix][Iy][Iz - 1] == 1) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][RO][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][BMU][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Ny + Iz] * Makhraj - dMug * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix][Iy][Iz - 1][Nc][1] * gridDim[Nx + Ny + Iz - 1] * Coef*Makhraj - DiffVisco(Ix, Iy, Iz - 1, Nc, 1)*gridDim[Nx + Ny + Iz - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Ny + Iz] * (blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][Nc][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz - 1] * (blockFProps[Ix][Iy][Iz - 1][BGAM][1] * dE[Ix][Iy][Iz - 1][Nc][1] / blockFProps[Ix][Iy][Iz - 1][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][BGAM][1] * gridDim[Nx + Ny + Iz - 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

						if (transS[Ix + 1][Iy + 1][Iz][1][2]) {
							dRsidedp += (comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);
							dBsidedp -= comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);

							dRsidedp += (comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							dBsidedp -= comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						}
						else {
							dRsidedp += comp[Ix][Iy][Iz - 1][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][2] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);
							dBsidedp -= (comp[Ix][Iy][Iz - 1][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][2] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);

							dRsidedp += comp[Ix][Iy][Iz - 1][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							dBsidedp -= (comp[Ix][Iy][Iz - 1][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						}
						//////////////////////////////////////////////////////////////////
						if (comp[Ix][Iy][Iz - 1][i][1] > comp[Ix][Iy][Iz][i][1]) {
							DupStream = diffusion[Ix][Iy][Iz - 1][i][1];
							dDdp = 0;
							dDdp2 = DifDiffusion(Ix, Iy, Iz - 1, i, Nc, 1);
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][1];
							dDdp = dDiffdpg;
							dDdp2 = 0;
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix][Iy][Iz - 1] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = blockFProps[Ix][Iy][Iz - 1][RO][1] * gridDim[Nx + Ny + Iz - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] * dCoefg;
						AAd *= (sat[Ix][Iy][Iz - 1][2] * gridDim[Nx + Ny + Iz - 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Nx + Ny + Iz] * dCoefg) / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
						BBd = tor[Ix][Iy][Iz - 1] * gridDim[Nx + Ny + Iz - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Ny + Iz] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Ix]*gridDim[Nx+Iy]/(gridDim[Nx+Ny+Iz-1]+gridDim[Nx+Ny+Iz]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = comp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz - 1][i][1];
						RSide -= DTran * DeltaX;

						dAAddp = dE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Ny + Iz] * dCoefg;
						dAAddp2 = dE[Ix][Iy][Iz - 1][Nc][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
						dBBddp = -dPordp * tor[Ix][Iy][Iz] * gridDim[Nx + Ny + Iz] * dCoefg / (porpor*porpor);
						dBBddp2 = -dPordp2 * tor[Ix][Iy][Iz - 1] * gridDim[Nx + Ny + Iz - 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefg) {
							dRsidedp += NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += -NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}
						//////////////////////////////////////////////////////////////////
						Jac1Row[JRowIndex] = PCoeff * (-comp[Ix][Iy][(Iz - 1 + transS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz][0][2] - comp[Ix][Iy][(Iz - 1 + transS[Ix + 1][Iy + 1][Iz][1][2])][i][1] * trans[Ix + 1][Iy + 1][Iz][1][2] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;
					}

					Jac1Row[JRowIndex] = PCoeff * (dLsidedp + dRsidedp + comp[Ix][Iy][Iz][i][0] * PIo + gComp * PIg);
					Jac1Col[JRowIndex] = jacCol + (2 * Nc) - reCol;
					JRowIndex++;


					if (phaseStat[Ix][Iy][Iz] != -1) {
						Jac1Row[JRowIndex] = -dRsidedSw;
						Jac1Col[JRowIndex] = jacCol + (2 * Nc + 1) - reCol;
						JRowIndex++;
						Jac1Row[JRowIndex] = dLsidedSo - dRsidedSo;
						Jac1Col[JRowIndex] = jacCol + (2 * Nc + 2) - reCol;
						JRowIndex++;
						//reCol1 = 0;
						reCol3 = 0;
					}
					else {
						//reCol1 = 2;
						reCol3 = 1;
					}

					if (phaseStat[Ix][Iy][Iz] != 1) {
						Jac1Row[JRowIndex] = dLsidedSg - dRsidedSg;
						Jac1Col[JRowIndex] = jacCol + (2 * Nc + 3) - reCol - reCol3;
						JRowIndex++;
					}
					/////////////////////////////////////////////////Sadeq///////////////////////////////////
					if (fphaseStat[Ix][Iy][Iz] == 1) {
						reColF1 = Nc;
						//reColF2
						//dRsidefdSo = 0;
						Jac1Row[JRowIndex] = dRsidefdSo;
						Jac1Col[JRowIndex] = FracEq + 2 * Nc + 2 - reColF1;
						JRowIndex++;
					}
					else if (fphaseStat[Ix][Iy][Iz] == (-1)) {
						reColF1 = Nc;
						//reColF2 = Nc;
						//dRsidefdSg = 0;
						Jac1Row[JRowIndex] = dRsidefdSg;
						Jac1Col[JRowIndex] = FracEq + 2 * Nc + 2 - reColF1;
						JRowIndex++;
					}
					else {
						reColF1 = 0;
						//reColF2 = 0;
						//dRsidefdSo = 0;
						Jac1Row[JRowIndex] = dRsidefdSo;
						Jac1Col[JRowIndex] = FracEq + 2 * Nc + 2 - reColF1;
						JRowIndex++;
						//dRsidefdSg = 0;
						Jac1Row[JRowIndex] = dRsidefdSg;
						Jac1Col[JRowIndex] = FracEq + 2 * Nc + 3 - reColF1;
						JRowIndex++;
					}
					//dRsidefdp = 0;
					Jac1Row[JRowIndex] = PCoeff * dRsidefdp;
					Jac1Col[JRowIndex] = FracEq + 2 * Nc - reColF1;
					JRowIndex++;
					//dRsidefdSw = 0;
					Jac1Row[JRowIndex] = dRsidefdSw;
					Jac1Col[JRowIndex] = FracEq + 2 * Nc + 1 - reColF1;
					JRowIndex++;
					////////////////////////sadeq/////////////////////////

					for (k = 0; k < Nc; k++) {
						dRsidedxl = 0;
						dRsidedxg = 0;
						dRsidefdxl = 0;
						dRsidefdxg = 0;


						dMul = DiffVisco(Ix, Iy, Iz, k, 0);
						dMug = DiffVisco(Ix, Iy, Iz, k, 1);
						dDiffdxl = DifDiffusion(Ix, Iy, Iz, i, k, 0);
						dDiffdxg = DifDiffusion(Ix, Iy, Iz, i, k, 1);

						if (k == i) {


							// Transfer function drside dxl dxg fdxl fdxg
							// moshtagh transfer Function jabejaie naft nesbat be xl Matrix
							dRsidedxl += ZERO_CONV * SI_C * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
							dRsidedxl += ZERO_CONV * SI_C * dE[Ix][Iy][Iz][k][0] * comp[Ix][Iy][Iz][i][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
							dRsidedxl += ZERO_CONV * -SI_C * DiffVisco(Ix, Iy, Iz, k, 0) * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] * porpor / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor)*(blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) * (porpor + fporpor);

							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (1)) {
								dRsidedxl += ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
								dRsidedxl += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								dRsidedxl += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsidedxl += ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
								dRsidedxl += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								dRsidedxl += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
							}

							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								dRsidedxl += ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
								dRsidedxl += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								dRsidedxl += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
							}

							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsidedxl += ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
								dRsidedxl += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								dRsidedxl += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);

								dRsidedxl += ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
								dRsidedxl += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								dRsidedxl += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1)) {
								dRsidedxl += ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
								dRsidedxl += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								dRsidedxl += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								dRsidedxl += ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
								dRsidedxl += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								dRsidedxl += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
							}



							// moshtagh transfer Function jabejaie naft nesbat be xl Fracture
							dRsidefdxl += ZERO_CONV * -SI_C * fDiffVisco(Ix, Iy, Iz, k, 0) * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] * fporpor / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor)*(blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) * (porpor + fporpor);

							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (1)) {
								dRsidefdxl += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsidefdxl += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
							}

/*
// 							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (1)) {
// 								dRsidefdxl += ZERO_DIFF * fdE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
// 								dRsidefdxl += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0];
// 								dRsidefdxl += ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
// 							}
*/

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1)) {
/*
// 								dRsidefdxl += ZERO_DIFF * fdE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
// 								dRsidefdxl += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0];
// 								dRsidefdxl += ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
*/

								dRsidefdxl += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
							}

							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsidefdxl += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
							}

/*
// 							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0)) {
// 								dRsidefdxl += ZERO_DIFF * fdE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
// 								dRsidefdxl += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0];
// 								dRsidefdxl += ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
// 							}
*/



							// moshtagh transfer Function jabejaie gaz nesbat be xg Matrix
							dRsidedxg += ZERO_CONV * SI_C * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor) / (porpor + fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));
							dRsidedxg += ZERO_CONV * SI_C * dE[Ix][Iy][Iz][k][1] * comp[Ix][Iy][Iz][i][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor) / (porpor + fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));
							dRsidedxg += ZERO_CONV * -SI_C * DiffVisco(Ix, Iy, Iz, k, 1) * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] * porpor / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor)*(blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1])) * (porpor + fporpor);

							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								dRsidedxg += ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
								dRsidedxg += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								dRsidedxg += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsidedxg += ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
								dRsidedxg += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								dRsidedxg += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
							}

							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (1)) {
								dRsidedxg += ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
								dRsidedxg += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								dRsidedxg += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
							}


							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1)) {
								dRsidedxg += ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
								dRsidedxg += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								dRsidedxg += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								dRsidedxg += ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
								dRsidedxg += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								dRsidedxg += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
							}

							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsidedxg += ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
								dRsidedxg += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								dRsidedxg += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

								dRsidedxg += ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
								dRsidedxg += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								dRsidedxg += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
							}




							// moshtagh transfer Function jabejaie gaz nesbat be xg Fracture
							dRsidefdxg += ZERO_CONV * -SI_C * fDiffVisco(Ix, Iy, Iz, k, 1) * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] * fporpor / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor)*(blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1])) * (porpor + fporpor);

							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								dRsidefdxg += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsidefdxg += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
							}

/*
// 							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
// 								dRsidefdxg += ZERO_DIFF * fdE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
// 								dRsidefdxg += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1];
// 								dRsidefdxg += ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
// 							}
*/

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								dRsidefdxg += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];

/*
// 								dRsidefdxg += ZERO_DIFF * fdE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
// 								dRsidefdxg += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1];
// 								dRsidefdxg += ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
*/
							}

/*
// 							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0)) {
// 								dRsidefdxg += ZERO_DIFF * fdE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
// 								dRsidefdxg += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1];
// 								dRsidefdxg += ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
// 							}
*/

							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsidefdxg += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
							}
							//


							dLsidedxl = blockFProps[Ix][Iy][Iz][RO][0] + comp[Ix][Iy][Iz][i][0] * dE[Ix][Iy][Iz][k][0];
							dLsidedxg = blockFProps[Ix][Iy][Iz][RO][1] + comp[Ix][Iy][Iz][i][1] * dE[Ix][Iy][Iz][k][1];
							if (iWell != (-1)) {
								dQdxl = 0;
								dQdxg = 0;
							}
							else {
								dQdxl = Qo;
								dQdxg = Qg;
							}

							if (Ix < (Nx - 1)) {
								if (phaseStat[Ix + 1][Iy][Iz] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][RO][0] * gridDim[Ix + 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BMU][0] * gridDim[Ix + 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][0] * gridDim[Ix] * Makhraj - dMul * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix + 1][Iy][Iz][k][0] * gridDim[Ix + 1] * Coef*Makhraj - DiffVisco(Ix + 1, Iy, Iz, k, 0)*gridDim[Ix + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Ix] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][k][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Ix + 1] * (G_ACCG*blockFProps[Ix + 1][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix + 1][Iy][Iz][BGAM][0] * dE[Ix + 1][Iy][Iz][k][0] / blockFProps[Ix + 1][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BGAM][0] * gridDim[Ix + 1] * Coef) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

								if (transS[Ix + 1][Iy + 1][Iz + 1][0][0]) {
									dRsidedxl += comp[Ix + 1][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][1] * Moshtaq*(P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = (trans[Ix + 1][Iy + 1][Iz + 1][0][0] + comp[Ix + 1][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][1] * Bmoshtaq)*(P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

									//dRsidedxl+=comp[Ix+1][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxl+=(trans[Ix+1][Iy+1][Iz+1][2][0]+comp[Ix+1][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}
								else {
									dRsidedxl += (trans[Ix + 1][Iy + 1][Iz + 1][0][0] + comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

									//dRsidedxl+=(trans[Ix+1][Iy+1][Iz+1][2][0]+comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxl+=comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}

								porpor2 = porosity[Ix + 1][Iy][Iz] * (1 + cpor * (P[Ix + 2][Iy + 1][Iz + 1][1] - refP) + dcpor * (P[Ix + 2][Iy + 1][Iz + 1][1] - refP)*(P[Ix + 2][Iy + 1][Iz + 1][1] - refP));

								if (comp[Ix + 1][Iy][Iz][i][0] > comp[Ix][Iy][Iz][i][0]) {
									DupStream = diffusion[Ix + 1][Iy][Iz][i][0];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix + 1, Iy, Iz, i, k, 0);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix + 1][Iy][Iz][RO][0] * gridDim[Ix + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] * dCoefl;
								AAd *= (sat[Ix + 1][Iy][Iz][1] * gridDim[Ix + 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Ix] * dCoefl) / (gridDim[Ix + 1] + gridDim[Ix]);
								BBd = tor[Ix + 1][Iy][Iz] * gridDim[Ix + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Ix] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz] / (gridDim[Ix + 1] + gridDim[Ix]);
								DeltaX = comp[Ix + 1][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0];

								dAAddx = dE[Ix][Iy][Iz][k][0] * gridDim[Ix] * dCoefl;
								dAAddx2 = dE[Ix + 1][Iy][Iz][k][0] * gridDim[Ix + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								mBLNo = preConRow[Iz*(Nx*Ny) + Iy * Nx + Ix + 1];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;



								if (phaseStat[Ix + 1][Iy][Iz] == 1) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][RO][1] * gridDim[Ix + 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BMU][1] * gridDim[Ix + 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][1] * gridDim[Ix] * Makhraj - dMug * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix + 1][Iy][Iz][k][1] * gridDim[Ix + 1] * Coef*Makhraj - DiffVisco(Ix + 1, Iy, Iz, k, 1)*gridDim[Ix + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Ix] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][k][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Ix + 1] * (G_ACCG*blockFProps[Ix + 1][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix + 1][Iy][Iz][BGAM][1] * dE[Ix + 1][Iy][Iz][k][1] / blockFProps[Ix + 1][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BGAM][1] * gridDim[Ix + 1] * Coef) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

								if (transS[Ix + 1][Iy + 1][Iz + 1][1][0]) {
									dRsidedxg += comp[Ix + 1][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][2] * Moshtaq*(P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = (trans[Ix + 1][Iy + 1][Iz + 1][1][0] + comp[Ix + 1][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][2] * Bmoshtaq)*(P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

									//dRsidedxg+=comp[Ix+1][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxg+=(trans[Ix+1][Iy+1][Iz+1][3][0]+comp[Ix+1][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}
								else {
									dRsidedxg += (trans[Ix + 1][Iy + 1][Iz + 1][1][0] + comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

									//dRsidedxg+=(trans[Ix+1][Iy+1][Iz+1][3][0]+comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxg+=comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);

								}

								if (comp[Ix + 1][Iy][Iz][i][1] > comp[Ix][Iy][Iz][i][1]) {
									DupStream = diffusion[Ix + 1][Iy][Iz][i][1];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix + 1, Iy, Iz, i, k, 1);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix + 1][Iy][Iz][RO][1] * gridDim[Ix + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] * dCoefg;
								AAd *= (sat[Ix + 1][Iy][Iz][2] * gridDim[Ix + 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Ix] * dCoefg) / (gridDim[Ix + 1] + gridDim[Ix]);
								BBd = tor[Ix + 1][Iy][Iz] * gridDim[Ix + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Ix] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Nx+Iy]*gridDim[Nx+Ny+Iz]/(gridDim[Ix+1]+gridDim[Ix]);
								DeltaX = comp[Ix + 1][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1];

								dAAddx = dE[Ix][Iy][Iz][k][1] * gridDim[Ix] * dCoefg;
								dAAddx2 = dE[Ix + 1][Iy][Iz][k][1] * gridDim[Ix + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								if (phaseStat[Ix + 1][Iy][Iz]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;


							}

							if (Ix > 0) {
								if (phaseStat[Ix - 1][Iy][Iz] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][RO][0] * gridDim[Ix - 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][BMU][0] * gridDim[Ix - 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][0] * gridDim[Ix] * Makhraj - dMul * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix - 1][Iy][Iz][k][0] * gridDim[Ix - 1] * Coef*Makhraj - DiffVisco(Ix - 1, Iy, Iz, k, 0)*gridDim[Ix - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Ix] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][k][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Ix - 1] * (G_ACCG*blockFProps[Ix - 1][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix - 1][Iy][Iz][BGAM][0] * dE[Ix - 1][Iy][Iz][k][0] / blockFProps[Ix - 1][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][BGAM][0] * gridDim[Ix - 1] * Coef) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

								if (transS[Ix][Iy + 1][Iz + 1][0][0]) {
									dRsidedxl -= (trans[Ix][Iy + 1][Iz + 1][0][0] + comp[Ix][Iy][Iz][i][0] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);
									dBsidedxl = -comp[Ix][Iy][Iz][i][0] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);

									//dRsidedxl-=(trans[Ix][Iy+1][Iz+1][2][0]+comp[Ix][Iy][Iz][i][0]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1])*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
									//dBsidedxl-=comp[Ix][Iy][Iz][i][0]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								}
								else {
									dRsidedxl -= comp[Ix - 1][Iy][Iz][i][0] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][1] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);
									dBsidedxl = -(trans[Ix][Iy + 1][Iz + 1][0][0] + comp[Ix - 1][Iy][Iz][i][0] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][1] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);

									//dRsidedxl-=comp[Ix-1][Iy][Iz][i][0]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
									//dBsidedxl-=(trans[Ix][Iy+1][Iz+1][2][0]+comp[Ix-1][Iy][Iz][i][0]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][1])*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								}

								porpor2 = porosity[Ix - 1][Iy][Iz] * (1 + cpor * (P[Ix][Iy + 1][Iz + 1][1] - refP) + dcpor * (P[Ix][Iy + 1][Iz + 1][1] - refP)*(P[Ix][Iy + 1][Iz + 1][1] - refP));

								if (comp[Ix - 1][Iy][Iz][i][0] > comp[Ix][Iy][Iz][i][0]) {
									DupStream = diffusion[Ix - 1][Iy][Iz][i][0];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix - 1, Iy, Iz, i, k, 0);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix - 1][Iy][Iz][RO][0] * gridDim[Ix - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] * dCoefl;
								AAd *= (sat[Ix - 1][Iy][Iz][1] * gridDim[Ix - 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Ix] * dCoefl) / (gridDim[Ix - 1] + gridDim[Ix]);
								BBd = tor[Ix - 1][Iy][Iz] * gridDim[Ix - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Ix] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz] / (gridDim[Ix - 1] + gridDim[Ix]);
								DeltaX = comp[Ix - 1][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0];

								dAAddx = dE[Ix][Iy][Iz][k][0] * gridDim[Ix] * dCoefl;
								dAAddx2 = dE[Ix - 1][Iy][Iz][k][0] * gridDim[Ix - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += -NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += -NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								mBLNo = preConRow[Iz*(Nx*Ny) + Iy * Nx + Ix - 1];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;


								if (phaseStat[Ix - 1][Iy][Iz] == 1) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][RO][1] * gridDim[Ix - 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][BMU][1] * gridDim[Ix - 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][1] * gridDim[Ix] * Makhraj - dMug * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix - 1][Iy][Iz][k][1] * gridDim[Ix - 1] * Coef*Makhraj - DiffVisco(Ix - 1, Iy, Iz, k, 1)*gridDim[Ix - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Ix] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][k][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);
								BmoshtaqGama = gridDim[Ix - 1] * (G_ACCG*blockFProps[Ix - 1][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix - 1][Iy][Iz][BGAM][1] * dE[Ix - 1][Iy][Iz][k][1] / blockFProps[Ix - 1][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][BGAM][1] * gridDim[Ix - 1] * Coef) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

								if (transS[Ix][Iy + 1][Iz + 1][1][0]) {
									dRsidedxg -= (trans[Ix][Iy + 1][Iz + 1][1][0] + comp[Ix][Iy][Iz][i][1] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);
									dBsidedxg = -comp[Ix][Iy][Iz][i][1] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);

									//dRsidedxg-=(trans[Ix][Iy+1][Iz+1][3][0]+comp[Ix][Iy][Iz][i][1]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
									//dBsidedxg-=comp[Ix][Iy][Iz][i][1]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								}
								else {
									dRsidedxg -= comp[Ix - 1][Iy][Iz][i][1] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][2] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);
									dBsidedxg = -(trans[Ix][Iy + 1][Iz + 1][1][0] + comp[Ix - 1][Iy][Iz][i][1] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][2] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);

									//dRsidedxg-=comp[Ix-1][Iy][Iz][i][1]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
									//dBsidedxg-=(trans[Ix][Iy+1][Iz+1][3][0]+comp[Ix-1][Iy][Iz][i][1]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								}


								if (comp[Ix - 1][Iy][Iz][i][1] > comp[Ix][Iy][Iz][i][1]) {
									DupStream = diffusion[Ix - 1][Iy][Iz][i][1];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix - 1, Iy, Iz, i, k, 1);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix - 1][Iy][Iz][RO][1] * gridDim[Ix - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] * dCoefg;
								AAd *= (sat[Ix - 1][Iy][Iz][2] * gridDim[Ix - 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Ix] * dCoefg) / (gridDim[Ix - 1] + gridDim[Ix]);
								BBd = tor[Ix - 1][Iy][Iz] * gridDim[Ix - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Ix] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Nx+Iy]*gridDim[Nx+Ny+Iz]/(gridDim[Ix-1]+gridDim[Ix]);
								DeltaX = comp[Ix - 1][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1];

								dAAddx = dE[Ix][Iy][Iz][k][1] * gridDim[Ix] * dCoefg;
								dAAddx2 = dE[Ix - 1][Iy][Iz][k][1] * gridDim[Ix - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += -NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += -NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}


								if (phaseStat[Ix - 1][Iy][Iz]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;

							}

							if (Iy < (Ny - 1)) {
								if (phaseStat[Ix][Iy + 1][Iz] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][RO][0] * gridDim[Nx + Iy + 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][BMU][0] * gridDim[Nx + Iy + 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][0] * gridDim[Nx + Iy] * Makhraj - dMul * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix][Iy + 1][Iz][k][0] * gridDim[Nx + Iy + 1] * Coef*Makhraj - DiffVisco(Ix, Iy + 1, Iz, k, 0)*gridDim[Nx + Iy + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][k][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Iy + 1] * (G_ACCG*blockFProps[Ix][Iy + 1][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy + 1][Iz][BGAM][0] * dE[Ix][Iy + 1][Iz][k][0] / blockFProps[Ix][Iy + 1][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][BGAM][0] * gridDim[Nx + Iy + 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

								if (transS[Ix + 1][Iy + 1][Iz + 1][0][1]) {
									dRsidedxl += comp[Ix][Iy + 1][Iz][i][0] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][1] * Moshtaq*(P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = (trans[Ix + 1][Iy + 1][Iz + 1][0][1] + comp[Ix][Iy + 1][Iz][i][0] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][1] * Bmoshtaq)*(P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

									//dRsidedxl+=comp[Ix][Iy+1][Iz][i][0]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxl+=(trans[Ix+1][Iy+1][Iz+1][2][1]+comp[Ix][Iy+1][Iz][i][0]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}
								else {
									dRsidedxl += (trans[Ix + 1][Iy + 1][Iz + 1][0][1] + comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

									//dRsidedxl+=(trans[Ix+1][Iy+1][Iz+1][2][1]+comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxl+=comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}

								porpor2 = porosity[Ix][Iy + 1][Iz] * (1 + cpor * (P[Ix + 1][Iy + 2][Iz + 1][1] - refP) + dcpor * (P[Ix + 1][Iy + 2][Iz + 1][1] - refP)*(P[Ix + 1][Iy + 2][Iz + 1][1] - refP));
								if (comp[Ix][Iy + 1][Iz][i][0] > comp[Ix][Iy][Iz][i][0]) {
									DupStream = diffusion[Ix][Iy + 1][Iz][i][0];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix, Iy + 1, Iz, i, k, 0);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix][Iy + 1][Iz][RO][0] * gridDim[Nx + Iy + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] * dCoefl;
								AAd *= (sat[Ix][Iy + 1][Iz][1] * gridDim[Nx + Iy + 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Nx + Iy] * dCoefl) / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
								BBd = tor[Ix][Iy + 1][Iz] * gridDim[Nx + Iy + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Iy] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Ix] * gridDim[Nx + Ny + Iz] / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
								DeltaX = comp[Ix][Iy + 1][Iz][i][0] - comp[Ix][Iy][Iz][i][0];

								dAAddx = dE[Ix][Iy][Iz][k][0] * gridDim[Nx + Iy] * dCoefl;
								dAAddx2 = dE[Ix][Iy + 1][Iz][k][0] * gridDim[Nx + Iy + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								mBLNo = preConRow[Iz*(Nx*Ny) + (Iy + 1)*Nx + Ix];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;


								if (phaseStat[Ix][Iy + 1][Iz] == 1) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][RO][1] * gridDim[Nx + Iy + 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][BMU][1] * gridDim[Nx + Iy + 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][1] * gridDim[Nx + Iy] * Makhraj - dMug * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix][Iy + 1][Iz][k][1] * gridDim[Nx + Iy + 1] * Coef*Makhraj - DiffVisco(Ix, Iy + 1, Iz, k, 1)*gridDim[Nx + Iy + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][k][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Iy + 1] * (G_ACCG*blockFProps[Ix][Iy + 1][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy + 1][Iz][BGAM][1] * dE[Ix][Iy + 1][Iz][k][1] / blockFProps[Ix][Iy + 1][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][BGAM][1] * gridDim[Nx + Iy + 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

								if (transS[Ix + 1][Iy + 1][Iz + 1][1][1]) {
									dRsidedxg += comp[Ix][Iy + 1][Iz][i][1] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][2] * Moshtaq*(P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = (trans[Ix + 1][Iy + 1][Iz + 1][1][1] + comp[Ix][Iy + 1][Iz][i][1] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][2] * Bmoshtaq)*(P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

									//dRsidedxg+=comp[Ix][Iy+1][Iz][i][1]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxg+=(trans[Ix+1][Iy+1][Iz+1][3][1]+comp[Ix][Iy+1][Iz][i][1]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}
								else {
									dRsidedxg += (trans[Ix + 1][Iy + 1][Iz + 1][1][1] + comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

									//dRsidedxg+=(trans[Ix+1][Iy+1][Iz+1][3][1]+comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxg+=comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);

								}

								if (comp[Ix][Iy + 1][Iz][i][1] > comp[Ix][Iy][Iz][i][1]) {
									DupStream = diffusion[Ix][Iy + 1][Iz][i][1];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix, Iy + 1, Iz, i, k, 1);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix][Iy + 1][Iz][RO][1] * gridDim[Nx + Iy + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] * dCoefg;
								AAd *= (sat[Ix][Iy + 1][Iz][2] * gridDim[Nx + Iy + 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Nx + Iy] * dCoefg) / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
								BBd = tor[Ix][Iy + 1][Iz] * gridDim[Nx + Iy + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Iy] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Ix]*gridDim[Nx+Ny+Iz]/(gridDim[Nx+Iy+1]+gridDim[Nx+Iy]);
								DeltaX = comp[Ix][Iy + 1][Iz][i][1] - comp[Ix][Iy][Iz][i][1];

								dAAddx = dE[Ix][Iy][Iz][k][1] * gridDim[Nx + Iy] * dCoefg;
								dAAddx2 = dE[Ix][Iy + 1][Iz][k][1] * gridDim[Nx + Iy + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								if (phaseStat[Ix][Iy + 1][Iz]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;
							}

							if (Iy > 0) {
								if (phaseStat[Ix][Iy - 1][Iz] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][RO][0] * gridDim[Nx + Iy - 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][BMU][0] * gridDim[Nx + Iy - 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][0] * gridDim[Nx + Iy] * Makhraj - dMul * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix][Iy - 1][Iz][k][0] * gridDim[Nx + Iy - 1] * Coef*Makhraj - DiffVisco(Ix, Iy - 1, Iz, k, 0)*gridDim[Nx + Iy - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][k][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Iy - 1] * (G_ACCG*blockFProps[Ix][Iy - 1][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy - 1][Iz][BGAM][0] * dE[Ix][Iy - 1][Iz][k][0] / blockFProps[Ix][Iy - 1][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][BGAM][0] * gridDim[Nx + Iy - 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

								if (transS[Ix + 1][Iy][Iz + 1][0][1]) {
									dRsidedxl -= (trans[Ix + 1][Iy][Iz + 1][0][1] + comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);
									dBsidedxl = -comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);

									//dRsidedxl-=(trans[Ix+1][Iy][Iz+1][2][1]+comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][1])*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
									//dBsidedxl-=comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								}
								else {
									dRsidedxl -= comp[Ix][Iy - 1][Iz][i][0] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][1] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);
									dBsidedxl = -(trans[Ix + 1][Iy][Iz + 1][0][1] + comp[Ix][Iy - 1][Iz][i][0] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][1] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);

									//dRsidedxl-=comp[Ix][Iy-1][Iz][i][0]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
									//dBsidedxl-=(trans[Ix+1][Iy][Iz+1][2][1]+comp[Ix][Iy-1][Iz][i][0]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][1])*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								}

								porpor2 = porosity[Ix][Iy - 1][Iz] * (1 + cpor * (P[Ix + 1][Iy][Iz + 1][1] - refP) + dcpor * (P[Ix + 1][Iy][Iz + 1][1] - refP)*(P[Ix + 1][Iy][Iz + 1][1] - refP));
								if (comp[Ix][Iy - 1][Iz][i][0] > comp[Ix][Iy][Iz][i][0]) {
									DupStream = diffusion[Ix][Iy - 1][Iz][i][0];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix, Iy - 1, Iz, i, k, 0);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix][Iy - 1][Iz][RO][0] * gridDim[Nx + Iy - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] * dCoefl;
								AAd *= (sat[Ix][Iy - 1][Iz][1] * gridDim[Nx + Iy - 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Nx + Iy] * dCoefl) / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
								BBd = tor[Ix][Iy - 1][Iz] * gridDim[Nx + Iy - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Iy] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Ix] * gridDim[Nx + Ny + Iz] / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
								DeltaX = comp[Ix][Iy - 1][Iz][i][0] - comp[Ix][Iy][Iz][i][0];

								dAAddx = dE[Ix][Iy][Iz][k][0] * gridDim[Nx + Iy] * dCoefl;
								dAAddx2 = dE[Ix][Iy - 1][Iz][k][0] * gridDim[Nx + Iy - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += -NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += -NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								mBLNo = preConRow[Iz*(Nx*Ny) + (Iy - 1)*Nx + Ix];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;


								if (phaseStat[Ix][Iy - 1][Iz] == 1) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][RO][1] * gridDim[Nx + Iy - 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][BMU][1] * gridDim[Nx + Iy - 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][1] * gridDim[Nx + Iy] * Makhraj - dMug * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix][Iy - 1][Iz][k][1] * gridDim[Nx + Iy - 1] * Coef*Makhraj - DiffVisco(Ix, Iy - 1, Iz, k, 1)*gridDim[Nx + Iy - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][k][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Iy - 1] * (G_ACCG*blockFProps[Ix][Iy - 1][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy - 1][Iz][BGAM][1] * dE[Ix][Iy - 1][Iz][k][1] / blockFProps[Ix][Iy - 1][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][BGAM][1] * gridDim[Nx + Iy - 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

								if (transS[Ix + 1][Iy][Iz + 1][1][1]) {
									dRsidedxg -= (trans[Ix + 1][Iy][Iz + 1][1][1] + comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);
									dBsidedxg = -comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);

									//dRsidedxg-=(trans[Ix+1][Iy][Iz+1][3][1]+comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
									//dBsidedxg-=comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								}
								else {
									dRsidedxg -= comp[Ix][Iy - 1][Iz][i][1] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][2] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);
									dBsidedxg = -(trans[Ix + 1][Iy][Iz + 1][1][1] + comp[Ix][Iy - 1][Iz][i][1] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][2] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);

									//dRsidedxg-=comp[Ix][Iy-1][Iz][i][1]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
									//dBsidedxg-=(trans[Ix+1][Iy][Iz+1][3][1]+comp[Ix][Iy-1][Iz][i][1]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								}

								if (comp[Ix][Iy - 1][Iz][i][1] > comp[Ix][Iy][Iz][i][1]) {
									DupStream = diffusion[Ix][Iy - 1][Iz][i][1];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix, Iy - 1, Iz, i, k, 1);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix][Iy - 1][Iz][RO][1] * gridDim[Nx + Iy - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] * dCoefg;
								AAd *= (sat[Ix][Iy - 1][Iz][2] * gridDim[Nx + Iy - 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Nx + Iy] * dCoefg) / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
								BBd = tor[Ix][Iy - 1][Iz] * gridDim[Nx + Iy - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Iy] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Ix]*gridDim[Nx+Ny+Iz]/(gridDim[Nx+Iy-1]+gridDim[Nx+Iy]);
								DeltaX = comp[Ix][Iy - 1][Iz][i][1] - comp[Ix][Iy][Iz][i][1];

								dAAddx = dE[Ix][Iy][Iz][k][1] * gridDim[Nx + Iy] * dCoefg;
								dAAddx2 = dE[Ix][Iy - 1][Iz][k][1] * gridDim[Nx + Iy - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += -NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += -NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}



								if (phaseStat[Ix][Iy - 1][Iz]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;
							}

							if (Iz < (Nz - 1)) {
								if (phaseStat[Ix][Iy][Iz + 1] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][RO][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][BMU][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][0] * gridDim[Nx + Ny + Iz] * Makhraj - dMul * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix][Iy][Iz + 1][k][0] * gridDim[Nx + Ny + Iz + 1] * Coef*Makhraj - DiffVisco(Ix, Iy, Iz + 1, k, 0)*gridDim[Nx + Ny + Iz + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][k][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz + 1] * (G_ACCG*blockFProps[Ix][Iy][Iz + 1][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz + 1][BGAM][0] * dE[Ix][Iy][Iz + 1][k][0] / blockFProps[Ix][Iy][Iz + 1][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][BGAM][0] * gridDim[Nx + Ny + Iz + 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

								if (transS[Ix + 1][Iy + 1][Iz + 1][0][2]) {
									dRsidedxl += comp[Ix][Iy][Iz + 1][i][0] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][1] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = (trans[Ix + 1][Iy + 1][Iz + 1][0][2] + comp[Ix][Iy][Iz + 1][i][0] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][1] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

									dRsidedxl += comp[Ix][Iy][Iz + 1][i][0] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz + 1][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
									dBsidedxl += (trans[Ix + 1][Iy + 1][Iz + 1][2][2] + comp[Ix][Iy][Iz + 1][i][0] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
								}
								else {
									dRsidedxl += (trans[Ix + 1][Iy + 1][Iz + 1][0][2] + comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

									dRsidedxl += (trans[Ix + 1][Iy + 1][Iz + 1][2][2] + comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
									dBsidedxl += comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
								}

								porpor2 = porosity[Ix][Iy][Iz + 1] * (1 + cpor * (P[Ix + 1][Iy + 1][Iz + 2][1] - refP) + dcpor * (P[Ix + 1][Iy + 1][Iz + 2][1] - refP)*(P[Ix + 1][Iy + 1][Iz + 2][1] - refP));
								if (comp[Ix][Iy][Iz + 1][i][0] > comp[Ix][Iy][Iz][i][0]) {
									DupStream = diffusion[Ix][Iy][Iz + 1][i][0];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix, Iy, Iz + 1, i, k, 0);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix][Iy][Iz + 1][RO][0] * gridDim[Nx + Ny + Iz + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] * dCoefl;
								AAd *= (sat[Ix][Iy][Iz + 1][1] * gridDim[Nx + Ny + Iz + 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Nx + Ny + Iz] * dCoefl) / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
								BBd = tor[Ix][Iy][Iz + 1] * gridDim[Nx + Ny + Iz + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Ny + Iz] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Ix] * gridDim[Nx + Iy] / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
								DeltaX = comp[Ix][Iy][Iz + 1][i][0] - comp[Ix][Iy][Iz][i][0];

								dAAddx = dE[Ix][Iy][Iz][k][0] * gridDim[Nx + Ny + Iz] * dCoefl;
								dAAddx2 = dE[Ix][Iy][Iz + 1][k][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								mBLNo = preConRow[(Iz + 1)*(Nx*Ny) + Iy * Nx + Ix];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;


								if (phaseStat[Ix][Iy][Iz + 1] == 1) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][RO][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][BMU][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][1] * gridDim[Nx + Ny + Iz] * Makhraj - dMug * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix][Iy][Iz + 1][k][1] * gridDim[Nx + Ny + Iz + 1] * Coef*Makhraj - DiffVisco(Ix, Iy, Iz + 1, k, 1)*gridDim[Nx + Ny + Iz + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][k][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz + 1] * (G_ACCG*blockFProps[Ix][Iy][Iz + 1][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz + 1][BGAM][1] * dE[Ix][Iy][Iz + 1][k][1] / blockFProps[Ix][Iy][Iz + 1][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][BGAM][1] * gridDim[Nx + Ny + Iz + 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

								if (transS[Ix + 1][Iy + 1][Iz + 1][1][2]) {
									dRsidedxg += comp[Ix][Iy][Iz + 1][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][2] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = (trans[Ix + 1][Iy + 1][Iz + 1][1][2] + comp[Ix][Iy][Iz + 1][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][2] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

									dRsidedxg += comp[Ix][Iy][Iz + 1][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
									dBsidedxg += (trans[Ix + 1][Iy + 1][Iz + 1][3][2] + comp[Ix][Iy][Iz + 1][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
								}
								else {
									dRsidedxg += (trans[Ix + 1][Iy + 1][Iz + 1][1][2] + comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

									dRsidedxg += (trans[Ix + 1][Iy + 1][Iz + 1][3][2] + comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
									dBsidedxg += comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);

								}

								if (comp[Ix][Iy][Iz + 1][i][1] > comp[Ix][Iy][Iz][i][1]) {
									DupStream = diffusion[Ix][Iy][Iz + 1][i][1];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix, Iy, Iz + 1, i, k, 1);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix][Iy][Iz + 1][RO][1] * gridDim[Nx + Ny + Iz + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] * dCoefg;
								AAd *= (sat[Ix][Iy][Iz + 1][2] * gridDim[Nx + Ny + Iz + 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Nx + Ny + Iz] * dCoefg) / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
								BBd = tor[Ix][Iy][Iz + 1] * gridDim[Nx + Ny + Iz + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Ny + Iz] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Ix]*gridDim[Nx+Iy]/(gridDim[Nx+Ny+Iz+1]+gridDim[Nx+Ny+Iz]);
								DeltaX = comp[Ix][Iy][Iz + 1][i][1] - comp[Ix][Iy][Iz][i][1];

								dAAddx = dE[Ix][Iy][Iz][k][1] * gridDim[Nx + Ny + Iz] * dCoefg;
								dAAddx2 = dE[Ix][Iy][Iz + 1][k][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}


								if (phaseStat[Ix][Iy][Iz + 1]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;
							}

							if (Iz > 0) {
								if (phaseStat[Ix][Iy][Iz - 1] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][RO][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][BMU][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][0] * gridDim[Nx + Ny + Iz] * Makhraj - dMul * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix][Iy][Iz - 1][k][0] * gridDim[Nx + Ny + Iz - 1] * Coef*Makhraj - DiffVisco(Ix, Iy, Iz - 1, k, 0)*gridDim[Nx + Ny + Iz - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][k][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz - 1] * (G_ACCG*blockFProps[Ix][Iy][Iz - 1][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz - 1][BGAM][0] * dE[Ix][Iy][Iz - 1][k][0] / blockFProps[Ix][Iy][Iz - 1][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][BGAM][0] * gridDim[Nx + Ny + Iz - 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

								if (transS[Ix + 1][Iy + 1][Iz][0][2]) {
									dRsidedxl -= (trans[Ix + 1][Iy + 1][Iz][0][2] + comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);
									dBsidedxl = -comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);

									dRsidedxl -= (trans[Ix + 1][Iy + 1][Iz][2][2] + comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
									dBsidedxl -= comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								}
								else {
									dRsidedxl -= comp[Ix][Iy][Iz - 1][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][1] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);
									dBsidedxl = -(trans[Ix + 1][Iy + 1][Iz][0][2] + comp[Ix][Iy][Iz - 1][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][1] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);

									dRsidedxl -= comp[Ix][Iy][Iz - 1][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
									dBsidedxl -= (trans[Ix + 1][Iy + 1][Iz][2][2] + comp[Ix][Iy][Iz - 1][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								}

								porpor2 = porosity[Ix][Iy][Iz - 1] * (1 + cpor * (P[Ix + 1][Iy + 1][Iz][1] - refP) + dcpor * (P[Ix + 1][Iy + 1][Iz][1] - refP)*(P[Ix + 1][Iy + 1][Iz][1] - refP));
								if (comp[Ix][Iy][Iz - 1][i][0] > comp[Ix][Iy][Iz][i][0]) {
									DupStream = diffusion[Ix][Iy][Iz - 1][i][0];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix, Iy, Iz - 1, i, k, 0);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix][Iy][Iz - 1][RO][0] * gridDim[Nx + Ny + Iz - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] * dCoefl;
								AAd *= (sat[Ix][Iy][Iz - 1][1] * gridDim[Nx + Ny + Iz - 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Nx + Ny + Iz] * dCoefl) / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
								BBd = tor[Ix][Iy][Iz - 1] * gridDim[Nx + Ny + Iz - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Ny + Iz] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Ix] * gridDim[Nx + Iy] / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
								DeltaX = comp[Ix][Iy][Iz - 1][i][0] - comp[Ix][Iy][Iz][i][0];

								dAAddx = dE[Ix][Iy][Iz][k][0] * gridDim[Nx + Ny + Iz] * dCoefl;
								dAAddx2 = dE[Ix][Iy][Iz - 1][k][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += -NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += -NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								mBLNo = preConRow[(Iz - 1)*(Nx*Ny) + Iy * Nx + Ix];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;


								if (phaseStat[Ix][Iy][Iz - 1] == 1) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][RO][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][BMU][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][1] * gridDim[Nx + Ny + Iz] * Makhraj - dMug * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix][Iy][Iz - 1][k][1] * gridDim[Nx + Ny + Iz - 1] * Coef*Makhraj - DiffVisco(Ix, Iy, Iz - 1, k, 1)*gridDim[Nx + Ny + Iz - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][k][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz - 1] * (G_ACCG*blockFProps[Ix][Iy][Iz - 1][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz - 1][BGAM][1] * dE[Ix][Iy][Iz - 1][k][1] / blockFProps[Ix][Iy][Iz - 1][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][BGAM][1] * gridDim[Nx + Ny + Iz - 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

								if (transS[Ix + 1][Iy + 1][Iz][1][2]) {
									dRsidedxg -= (trans[Ix + 1][Iy + 1][Iz][1][2] + comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);
									dBsidedxg = -comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);

									dRsidedxg -= (trans[Ix + 1][Iy + 1][Iz][3][2] + comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
									dBsidedxg -= comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								}
								else {
									dRsidedxg -= comp[Ix][Iy][Iz - 1][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][2] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);
									dBsidedxg = -(trans[Ix + 1][Iy + 1][Iz][1][2] + comp[Ix][Iy][Iz - 1][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][2] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);

									dRsidedxg -= comp[Ix][Iy][Iz - 1][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
									dBsidedxg -= (trans[Ix + 1][Iy + 1][Iz][3][2] + comp[Ix][Iy][Iz - 1][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								}

								if (comp[Ix][Iy][Iz - 1][i][1] > comp[Ix][Iy][Iz][i][1]) {
									DupStream = diffusion[Ix][Iy][Iz - 1][i][1];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix, Iy, Iz - 1, i, k, 1);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix][Iy][Iz - 1][RO][1] * gridDim[Nx + Ny + Iz - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] * dCoefg;
								AAd *= (sat[Ix][Iy][Iz - 1][2] * gridDim[Nx + Ny + Iz - 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Nx + Ny + Iz] * dCoefg) / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
								BBd = tor[Ix][Iy][Iz - 1] * gridDim[Nx + Ny + Iz - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Ny + Iz] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Ix]*gridDim[Nx+Iy]/(gridDim[Nx+Ny+Iz-1]+gridDim[Nx+Ny+Iz]);
								DeltaX = comp[Ix][Iy][Iz - 1][i][1] - comp[Ix][Iy][Iz][i][1];

								dAAddx = dE[Ix][Iy][Iz][k][1] * gridDim[Nx + Ny + Iz] * dCoefg;
								dAAddx2 = dE[Ix][Iy][Iz - 1][k][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += -NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += -NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}


								if (phaseStat[Ix][Iy][Iz - 1]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;
							}

							/////////////////////////////////////////////////Sadeq//k=i/////////////////////////////////
							if (fphaseStat[Ix][Iy][Iz] == 1) {
								//dRsidefdxl = 0;
								Jac1Row[JRowIndex] = dRsidefdxl;
								Jac1Col[JRowIndex] = FracEq + k;
								JRowIndex++;
							}
							else if (fphaseStat[Ix][Iy][Iz] == (-1)) {
								//dRsidefdxg = 0;
								Jac1Row[JRowIndex] = dRsidefdxg;
								Jac1Col[JRowIndex] = FracEq + k;
								JRowIndex++;
							}
							else {
								//dRsidefdxl = 0;
								Jac1Row[JRowIndex] = dRsidefdxl;
								Jac1Col[JRowIndex] = FracEq + k;
								JRowIndex++;
								//dRsidefdxg = 0;
								Jac1Row[JRowIndex] = dRsidefdxg;
								Jac1Col[JRowIndex] = FracEq + Nc + k;
								JRowIndex++;
							}
							////////////////////////sadeq/////////////////////////
						}
						else {
							dRsidedxl = 0;
							dRsidedxg = 0;
							dRsidefdxl = 0;
							dRsidefdxg = 0;
							// Transfer function drside dxl dxg fdxl fdxg
							// moshtagh transfer Function jabejaie naft nesbat be xl Matrix
							//dRsidedxl += ZERO_CONV * SI_C * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
							dRsidedxl += ZERO_CONV * SI_C * dE[Ix][Iy][Iz][k][0] * comp[Ix][Iy][Iz][i][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
							dRsidedxl += ZERO_CONV * -SI_C * DiffVisco(Ix, Iy, Iz, k, 0) * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] * porpor / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor)*(blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) * (porpor + fporpor);

							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (1)) {
								dRsidedxl += ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
								//dRsidedxl += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								dRsidedxl += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsidedxl += ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
								//dRsidedxl += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								dRsidedxl += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
							}

							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								dRsidedxl += ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
								//dRsidedxl += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								dRsidedxl += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
							}

							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsidedxl += ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
								//dRsidedxl += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								dRsidedxl += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);

								dRsidedxl += ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
								//dRsidedxl += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								dRsidedxl += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1)) {
								dRsidedxl += ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
								//dRsidedxl += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								dRsidedxl += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								dRsidedxl += ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
								//dRsidedxl += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								dRsidedxl += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
							}



							// moshtagh transfer Function jabejaie naft nesbat be xl Fracture
							dRsidefdxl += ZERO_CONV * -SI_C * fDiffVisco(Ix, Iy, Iz, k, 0) * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] * fporpor / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor)*(blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) * (porpor + fporpor);

/*
// 							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (1)) {
// 								//dRsidefdxl += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
// 							}
// 
// 							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0)) {
// 								//dRsidefdxl += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
// 							}
*/

/*
// 							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (1)) {
// 								dRsidefdxl += ZERO_DIFF * fdE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
// 								//dRsidefdxl += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0];
// 								dRsidefdxl += ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
// 							}
*/
/*
// 
// 							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1)) {
// 								dRsidefdxl += ZERO_DIFF * fdE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
// 								//dRsidefdxl += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0];
// 								dRsidefdxl += ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
// 
// 								//dRsidefdxl += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
// 							}
// 
// 							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0)) {
// 								//dRsidefdxl += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
// 							}
*/

/*
// 							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0)) {
// 								dRsidefdxl += ZERO_DIFF * fdE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
// 								//dRsidefdxl += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0];
// 								dRsidefdxl += ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
// 							}
*/



							// moshtagh transfer Function jabejaie gaz nesbat be xg Matrix
							//dRsidedxg += ZERO_CONV * SI_C * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor) / (porpor + fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));
							dRsidedxg += ZERO_CONV * SI_C * dE[Ix][Iy][Iz][k][1] * comp[Ix][Iy][Iz][i][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor) / (porpor + fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));
							dRsidedxg += ZERO_CONV * -SI_C * DiffVisco(Ix, Iy, Iz, k, 1) * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] * porpor / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor)*(blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1])) * (porpor + fporpor);

							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								dRsidedxg += ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
								//dRsidedxg += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								dRsidedxg += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsidedxg += ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
								//dRsidedxg += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								dRsidedxg += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
							}

							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (1)) {
								dRsidedxg += ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
								//dRsidedxg += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								dRsidedxg += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
							}


							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1)) {
								dRsidedxg += ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
								//dRsidedxg += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								dRsidedxg += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								dRsidedxg += ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
								//dRsidedxg += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								dRsidedxg += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
							}

							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsidedxg += ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
								//dRsidedxg += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								dRsidedxg += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

								dRsidedxg += ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
								//dRsidedxg += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								dRsidedxg += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
							}




							// moshtagh transfer Function jabejaie gaz nesbat be xg Fracture
							dRsidefdxg += ZERO_CONV * -SI_C * fDiffVisco(Ix, Iy, Iz, k, 1) * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] * fporpor / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor)*(blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1])) * (porpor + fporpor);

							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								//dRsidefdxg += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0)) {
								//dRsidefdxg += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
							}

/*
// 							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
// 								dRsidefdxg += ZERO_DIFF * fdE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
// 								//dRsidefdxg += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1];
// 								dRsidefdxg += ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
// 							}
*/
/*
// 
// 							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1)) {
// 								//dRsidefdxg += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
// 
// 								dRsidefdxg += ZERO_DIFF * fdE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
// 								//dRsidefdxg += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1];
// 								dRsidefdxg += ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
// 							}
// 
// 							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0)) {
// 								dRsidefdxg += ZERO_DIFF * fdE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
// 								//dRsidefdxg += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1];
// 								dRsidefdxg += ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
// 							}
// 
// 							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0)) {
// 								//dRsidefdxg += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
// 							}
// 							//
*/


							dLsidedxl = comp[Ix][Iy][Iz][i][0] * dE[Ix][Iy][Iz][k][0];
							dLsidedxg = comp[Ix][Iy][Iz][i][1] * dE[Ix][Iy][Iz][k][1];
							dQdxl = 0;
							dQdxg = 0;



							if (Ix < (Nx - 1)) {
								if (phaseStat[Ix + 1][Iy][Iz] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][RO][0] * gridDim[Ix + 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BMU][0] * gridDim[Ix + 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][0] * gridDim[Ix] * Makhraj - dMul * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix + 1][Iy][Iz][k][0] * gridDim[Ix + 1] * Coef*Makhraj - DiffVisco(Ix + 1, Iy, Iz, k, 0)*gridDim[Ix + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Ix] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][k][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Ix + 1] * (G_ACCG*blockFProps[Ix + 1][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix + 1][Iy][Iz][BGAM][0] * dE[Ix + 1][Iy][Iz][k][0] / blockFProps[Ix + 1][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BGAM][0] * gridDim[Ix + 1] * Coef) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

								if (transS[Ix + 1][Iy + 1][Iz + 1][0][0]) {
									dRsidedxl += comp[Ix + 1][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][1] * Moshtaq*(P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = (comp[Ix + 1][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][1] * Bmoshtaq)*(P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

									//dRsidedxl+=comp[Ix+1][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxl+=(comp[Ix+1][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}
								else {
									dRsidedxl += (comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

									//dRsidedxl+=(comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxl+=comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}

								porpor2 = porosity[Ix + 1][Iy][Iz] * (1 + cpor * (P[Ix + 2][Iy + 1][Iz + 1][1] - refP) + dcpor * (P[Ix + 2][Iy + 1][Iz + 1][1] - refP)*(P[Ix + 2][Iy + 1][Iz + 1][1] - refP));

								if (comp[Ix + 1][Iy][Iz][i][0] > comp[Ix][Iy][Iz][i][0]) {
									DupStream = diffusion[Ix + 1][Iy][Iz][i][0];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix + 1, Iy, Iz, i, k, 0);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix + 1][Iy][Iz][RO][0] * gridDim[Ix + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] * dCoefl;
								AAd *= (sat[Ix + 1][Iy][Iz][1] * gridDim[Ix + 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Ix] * dCoefl) / (gridDim[Ix + 1] + gridDim[Ix]);
								BBd = tor[Ix + 1][Iy][Iz] * gridDim[Ix + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Ix] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz] / (gridDim[Ix + 1] + gridDim[Ix]);
								DeltaX = comp[Ix + 1][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0];

								dAAddx = dE[Ix][Iy][Iz][k][0] * gridDim[Ix] * dCoefl;
								dAAddx2 = dE[Ix + 1][Iy][Iz][k][0] * gridDim[Ix + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								mBLNo = preConRow[Iz*(Nx*Ny) + Iy * Nx + Ix + 1];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;


								if (phaseStat[Ix + 1][Iy][Iz] == 1) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][RO][1] * gridDim[Ix + 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BMU][1] * gridDim[Ix + 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][1] * gridDim[Ix] * Makhraj - dMug * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix + 1][Iy][Iz][k][1] * gridDim[Ix + 1] * Coef*Makhraj - DiffVisco(Ix + 1, Iy, Iz, k, 1)*gridDim[Ix + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Ix] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][k][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Ix + 1] * (G_ACCG*blockFProps[Ix + 1][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix + 1][Iy][Iz][BGAM][1] * dE[Ix + 1][Iy][Iz][k][1] / blockFProps[Ix + 1][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BGAM][1] * gridDim[Ix + 1] * Coef) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

								if (transS[Ix + 1][Iy + 1][Iz + 1][1][0]) {
									dRsidedxg += comp[Ix + 1][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][2] * Moshtaq*(P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = (comp[Ix + 1][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][2] * Bmoshtaq)*(P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

									//dRsidedxg+=comp[Ix+1][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxg+=(comp[Ix+1][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}
								else {
									dRsidedxg += (comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

									//dRsidedxg+=(comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxg+=comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);

								}

								if (comp[Ix + 1][Iy][Iz][i][1] > comp[Ix][Iy][Iz][i][1]) {
									DupStream = diffusion[Ix + 1][Iy][Iz][i][1];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix + 1, Iy, Iz, i, k, 1);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix + 1][Iy][Iz][RO][1] * gridDim[Ix + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] * dCoefg;
								AAd *= (sat[Ix + 1][Iy][Iz][2] * gridDim[Ix + 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Ix] * dCoefg) / (gridDim[Ix + 1] + gridDim[Ix]);
								BBd = tor[Ix + 1][Iy][Iz] * gridDim[Ix + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Ix] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Nx+Iy]*gridDim[Nx+Ny+Iz]/(gridDim[Ix+1]+gridDim[Ix]);
								DeltaX = comp[Ix + 1][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1];

								dAAddx = dE[Ix][Iy][Iz][k][1] * gridDim[Ix] * dCoefg;
								dAAddx2 = dE[Ix + 1][Iy][Iz][k][1] * gridDim[Ix + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}


								if (phaseStat[Ix + 1][Iy][Iz]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;
							}

							if (Ix > 0) {
								if (phaseStat[Ix - 1][Iy][Iz] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][RO][0] * gridDim[Ix - 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][BMU][0] * gridDim[Ix - 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][0] * gridDim[Ix] * Makhraj - dMul * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix - 1][Iy][Iz][k][0] * gridDim[Ix - 1] * Coef*Makhraj - DiffVisco(Ix - 1, Iy, Iz, k, 0)*gridDim[Ix - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Ix] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][k][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Ix - 1] * (G_ACCG*blockFProps[Ix - 1][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix - 1][Iy][Iz][BGAM][0] * dE[Ix - 1][Iy][Iz][k][0] / blockFProps[Ix - 1][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][BGAM][0] * gridDim[Ix - 1] * Coef) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

								if (transS[Ix][Iy + 1][Iz + 1][0][0]) {
									dRsidedxl -= (comp[Ix][Iy][Iz][i][0] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);
									dBsidedxl = -comp[Ix][Iy][Iz][i][0] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);

									//dRsidedxl-=(comp[Ix][Iy][Iz][i][0]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1])*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
									//dBsidedxl-=comp[Ix][Iy][Iz][i][0]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								}
								else {
									dRsidedxl -= comp[Ix - 1][Iy][Iz][i][0] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][1] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);
									dBsidedxl = -(comp[Ix - 1][Iy][Iz][i][0] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][1] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);

									//dRsidedxl-=comp[Ix-1][Iy][Iz][i][0]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
									//dBsidedxl-=(comp[Ix-1][Iy][Iz][i][0]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][1])*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								}

								porpor2 = porosity[Ix - 1][Iy][Iz] * (1 + cpor * (P[Ix][Iy + 1][Iz + 1][1] - refP) + dcpor * (P[Ix][Iy + 1][Iz + 1][1] - refP)*(P[Ix][Iy + 1][Iz + 1][1] - refP));

								if (comp[Ix - 1][Iy][Iz][i][0] > comp[Ix][Iy][Iz][i][0]) {
									DupStream = diffusion[Ix - 1][Iy][Iz][i][0];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix - 1, Iy, Iz, i, k, 0);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix - 1][Iy][Iz][RO][0] * gridDim[Ix - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] * dCoefl;
								AAd *= (sat[Ix - 1][Iy][Iz][1] * gridDim[Ix - 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Ix] * dCoefl) / (gridDim[Ix - 1] + gridDim[Ix]);
								BBd = tor[Ix - 1][Iy][Iz] * gridDim[Ix - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Ix] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz] / (gridDim[Ix - 1] + gridDim[Ix]);
								DeltaX = comp[Ix - 1][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0];

								dAAddx = dE[Ix][Iy][Iz][k][0] * gridDim[Ix] * dCoefl;
								dAAddx2 = dE[Ix - 1][Iy][Iz][k][0] * gridDim[Ix - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += -NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += -NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}


								mBLNo = preConRow[Iz*(Nx*Ny) + Iy * Nx + Ix - 1];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;


								if (phaseStat[Ix - 1][Iy][Iz]) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][RO][1] * gridDim[Ix - 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][BMU][1] * gridDim[Ix - 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][1] * gridDim[Ix] * Makhraj - dMug * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix - 1][Iy][Iz][k][1] * gridDim[Ix - 1] * Coef*Makhraj - DiffVisco(Ix - 1, Iy, Iz, k, 1)*gridDim[Ix - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Ix] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][k][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Ix - 1] * (G_ACCG*blockFProps[Ix - 1][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix - 1][Iy][Iz][BGAM][1] * dE[Ix - 1][Iy][Iz][k][1] / blockFProps[Ix - 1][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][BGAM][1] * gridDim[Ix - 1] * Coef) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

								if (transS[Ix][Iy + 1][Iz + 1][1][0]) {
									dRsidedxg -= (comp[Ix][Iy][Iz][i][1] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);
									dBsidedxg = -comp[Ix][Iy][Iz][i][1] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);

									//dRsidedxg-=(comp[Ix][Iy][Iz][i][1]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
									//dBsidedxg-=comp[Ix][Iy][Iz][i][1]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								}
								else {
									dRsidedxg -= comp[Ix - 1][Iy][Iz][i][1] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][2] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);
									dBsidedxg = -(comp[Ix - 1][Iy][Iz][i][1] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][2] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);

									//dRsidedxg-=comp[Ix-1][Iy][Iz][i][1]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
									//dBsidedxg-=(comp[Ix-1][Iy][Iz][i][1]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								}

								if (comp[Ix - 1][Iy][Iz][i][1] > comp[Ix][Iy][Iz][i][1]) {
									DupStream = diffusion[Ix - 1][Iy][Iz][i][1];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix - 1, Iy, Iz, i, k, 1);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix - 1][Iy][Iz][RO][1] * gridDim[Ix - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] * dCoefg;
								AAd *= (sat[Ix - 1][Iy][Iz][2] * gridDim[Ix - 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Ix] * dCoefg) / (gridDim[Ix - 1] + gridDim[Ix]);
								BBd = tor[Ix - 1][Iy][Iz] * gridDim[Ix - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Ix] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Nx+Iy]*gridDim[Nx+Ny+Iz]/(gridDim[Ix-1]+gridDim[Ix]);
								DeltaX = comp[Ix - 1][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1];

								dAAddx = dE[Ix][Iy][Iz][k][1] * gridDim[Ix] * dCoefg;
								dAAddx2 = dE[Ix - 1][Iy][Iz][k][1] * gridDim[Ix - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += -NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += -NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}


								if (phaseStat[Ix - 1][Iy][Iz]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;
							}

							if (Iy < (Ny - 1)) {
								if (phaseStat[Ix][Iy + 1][Iz] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][RO][0] * gridDim[Nx + Iy + 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][BMU][0] * gridDim[Nx + Iy + 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][0] * gridDim[Nx + Iy] * Makhraj - dMul * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix][Iy + 1][Iz][k][0] * gridDim[Nx + Iy + 1] * Coef*Makhraj - DiffVisco(Ix, Iy + 1, Iz, k, 0)*gridDim[Nx + Iy + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][k][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Iy + 1] * (G_ACCG*blockFProps[Ix][Iy + 1][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy + 1][Iz][BGAM][0] * dE[Ix][Iy + 1][Iz][k][0] / blockFProps[Ix][Iy + 1][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][BGAM][0] * gridDim[Nx + Iy + 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

								if (transS[Ix + 1][Iy + 1][Iz + 1][0][1]) {
									dRsidedxl += comp[Ix][Iy + 1][Iz][i][0] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][1] * Moshtaq*(P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = (comp[Ix][Iy + 1][Iz][i][0] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][1] * Bmoshtaq)*(P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

									//dRsidedxl+=comp[Ix][Iy+1][Iz][i][0]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxl+=(comp[Ix][Iy+1][Iz][i][0]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}
								else {
									dRsidedxl += (comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

									//dRsidedxl+=(comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxl+=comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}

								porpor2 = porosity[Ix][Iy + 1][Iz] * (1 + cpor * (P[Ix + 1][Iy + 2][Iz + 1][1] - refP) + dcpor * (P[Ix + 1][Iy + 2][Iz + 1][1] - refP)*(P[Ix + 1][Iy + 2][Iz + 1][1] - refP));
								if (comp[Ix][Iy + 1][Iz][i][0] > comp[Ix][Iy][Iz][i][0]) {
									DupStream = diffusion[Ix][Iy + 1][Iz][i][0];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix, Iy + 1, Iz, i, k, 0);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix][Iy + 1][Iz][RO][0] * gridDim[Nx + Iy + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] * dCoefl;
								AAd *= (sat[Ix][Iy + 1][Iz][1] * gridDim[Nx + Iy + 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Nx + Iy] * dCoefl) / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
								BBd = tor[Ix][Iy + 1][Iz] * gridDim[Nx + Iy + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Iy] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Ix] * gridDim[Nx + Ny + Iz] / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
								DeltaX = comp[Ix][Iy + 1][Iz][i][0] - comp[Ix][Iy][Iz][i][0];

								dAAddx = dE[Ix][Iy][Iz][k][0] * gridDim[Nx + Iy] * dCoefl;
								dAAddx2 = dE[Ix][Iy + 1][Iz][k][0] * gridDim[Nx + Iy + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}


								mBLNo = preConRow[Iz*(Nx*Ny) + (Iy + 1)*Nx + Ix];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;


								if (phaseStat[Ix][Iy + 1][Iz] == 1) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][RO][1] * gridDim[Nx + Iy + 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][BMU][1] * gridDim[Nx + Iy + 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][1] * gridDim[Nx + Iy] * Makhraj - dMug * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix][Iy + 1][Iz][k][1] * gridDim[Nx + Iy + 1] * Coef*Makhraj - DiffVisco(Ix, Iy + 1, Iz, k, 1)*gridDim[Nx + Iy + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][k][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Iy + 1] * (G_ACCG*blockFProps[Ix][Iy + 1][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy + 1][Iz][BGAM][1] * dE[Ix][Iy + 1][Iz][k][1] / blockFProps[Ix][Iy + 1][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][BGAM][1] * gridDim[Nx + Iy + 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

								if (transS[Ix + 1][Iy + 1][Iz + 1][1][1]) {
									dRsidedxg += comp[Ix][Iy + 1][Iz][i][1] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][2] * Moshtaq*(P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = (comp[Ix][Iy + 1][Iz][i][1] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][2] * Bmoshtaq)*(P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

									//dRsidedxg+=comp[Ix][Iy+1][Iz][i][1]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxg+=(comp[Ix][Iy+1][Iz][i][1]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}
								else {
									dRsidedxg += (comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

									//dRsidedxg+=(comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxg+=comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);

								}

								if (comp[Ix][Iy + 1][Iz][i][1] > comp[Ix][Iy][Iz][i][1]) {
									DupStream = diffusion[Ix][Iy + 1][Iz][i][1];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix, Iy + 1, Iz, i, k, 1);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix][Iy + 1][Iz][RO][1] * gridDim[Nx + Iy + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] * dCoefg;
								AAd *= (sat[Ix][Iy + 1][Iz][2] * gridDim[Nx + Iy + 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Nx + Iy] * dCoefg) / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
								BBd = tor[Ix][Iy + 1][Iz] * gridDim[Nx + Iy + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Iy] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Ix]*gridDim[Nx+Ny+Iz]/(gridDim[Nx+Iy+1]+gridDim[Nx+Iy]);
								DeltaX = comp[Ix][Iy + 1][Iz][i][1] - comp[Ix][Iy][Iz][i][1];

								dAAddx = dE[Ix][Iy][Iz][k][1] * gridDim[Nx + Iy] * dCoefg;
								dAAddx2 = dE[Ix][Iy + 1][Iz][k][1] * gridDim[Nx + Iy + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								if (phaseStat[Ix][Iy + 1][Iz]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;
							}

							if (Iy > 0) {
								if (phaseStat[Ix][Iy - 1][Iz] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][RO][0] * gridDim[Nx + Iy - 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][BMU][0] * gridDim[Nx + Iy - 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][0] * gridDim[Nx + Iy] * Makhraj - dMul * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix][Iy - 1][Iz][k][0] * gridDim[Nx + Iy - 1] * Coef*Makhraj - DiffVisco(Ix, Iy - 1, Iz, k, 0)*gridDim[Nx + Iy - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][k][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Iy - 1] * (G_ACCG*blockFProps[Ix][Iy - 1][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy - 1][Iz][BGAM][0] * dE[Ix][Iy - 1][Iz][k][0] / blockFProps[Ix][Iy - 1][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][BGAM][0] * gridDim[Nx + Iy - 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

								if (transS[Ix + 1][Iy][Iz + 1][0][1]) {
									dRsidedxl -= (comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);
									dBsidedxl = -comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);

									//dRsidedxl-=(comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][1])*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
									//dBsidedxl-=comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								}
								else {
									dRsidedxl -= comp[Ix][Iy - 1][Iz][i][0] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][1] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);
									dBsidedxl = -(comp[Ix][Iy - 1][Iz][i][0] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][1] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);

									//dRsidedxl-=comp[Ix][Iy-1][Iz][i][0]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
									//dBsidedxl-=(comp[Ix][Iy-1][Iz][i][0]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][1])*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								}

								porpor2 = porosity[Ix][Iy - 1][Iz] * (1 + cpor * (P[Ix + 1][Iy][Iz + 1][1] - refP) + dcpor * (P[Ix + 1][Iy][Iz + 1][1] - refP)*(P[Ix + 1][Iy][Iz + 1][1] - refP));
								if (comp[Ix][Iy - 1][Iz][i][0] > comp[Ix][Iy][Iz][i][0]) {
									DupStream = diffusion[Ix][Iy - 1][Iz][i][0];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix, Iy - 1, Iz, i, k, 0);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix][Iy - 1][Iz][RO][0] * gridDim[Nx + Iy - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] * dCoefl;
								AAd *= (sat[Ix][Iy - 1][Iz][1] * gridDim[Nx + Iy - 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Nx + Iy] * dCoefl) / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
								BBd = tor[Ix][Iy - 1][Iz] * gridDim[Nx + Iy - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Iy] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Ix] * gridDim[Nx + Ny + Iz] / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
								DeltaX = comp[Ix][Iy - 1][Iz][i][0] - comp[Ix][Iy][Iz][i][0];

								dAAddx = dE[Ix][Iy][Iz][k][0] * gridDim[Nx + Iy] * dCoefl;
								dAAddx2 = dE[Ix][Iy - 1][Iz][k][0] * gridDim[Nx + Iy - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += -NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += -NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}


								mBLNo = preConRow[Iz*(Nx*Ny) + (Iy - 1)*Nx + Ix];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;


								if (phaseStat[Ix][Iy - 1][Iz] == 1) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][RO][1] * gridDim[Nx + Iy - 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][BMU][1] * gridDim[Nx + Iy - 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][1] * gridDim[Nx + Iy] * Makhraj - dMug * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix][Iy - 1][Iz][k][1] * gridDim[Nx + Iy - 1] * Coef*Makhraj - DiffVisco(Ix, Iy - 1, Iz, k, 1)*gridDim[Nx + Iy - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][k][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Iy - 1] * (G_ACCG*blockFProps[Ix][Iy - 1][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy - 1][Iz][BGAM][1] * dE[Ix][Iy - 1][Iz][k][1] / blockFProps[Ix][Iy - 1][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][BGAM][1] * gridDim[Nx + Iy - 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

								if (transS[Ix + 1][Iy][Iz + 1][1][1]) {
									dRsidedxg -= (comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);
									dBsidedxg = -comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);

									//dRsidedxg-=(comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
									//dBsidedxg-=comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								}
								else {
									dRsidedxg -= comp[Ix][Iy - 1][Iz][i][1] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][2] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);
									dBsidedxg = -(comp[Ix][Iy - 1][Iz][i][1] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][2] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);

									//dRsidedxg-=comp[Ix][Iy-1][Iz][i][1]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
									//dBsidedxg-=(comp[Ix][Iy-1][Iz][i][1]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								}

								if (comp[Ix][Iy - 1][Iz][i][1] > comp[Ix][Iy][Iz][i][1]) {
									DupStream = diffusion[Ix][Iy - 1][Iz][i][1];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix, Iy - 1, Iz, i, k, 1);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix][Iy - 1][Iz][RO][1] * gridDim[Nx + Iy - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] * dCoefg;
								AAd *= (sat[Ix][Iy - 1][Iz][2] * gridDim[Nx + Iy - 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Nx + Iy] * dCoefg) / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
								BBd = tor[Ix][Iy - 1][Iz] * gridDim[Nx + Iy - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Iy] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Ix]*gridDim[Nx+Ny+Iz]/(gridDim[Nx+Iy-1]+gridDim[Nx+Iy]);
								DeltaX = comp[Ix][Iy - 1][Iz][i][1] - comp[Ix][Iy][Iz][i][1];

								dAAddx = dE[Ix][Iy][Iz][k][1] * gridDim[Nx + Iy] * dCoefg;
								dAAddx2 = dE[Ix][Iy - 1][Iz][k][1] * gridDim[Nx + Iy - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += -NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += -NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}


								if (phaseStat[Ix][Iy - 1][Iz]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;
							}

							if (Iz < (Nz - 1)) {
								if (phaseStat[Ix][Iy][Iz + 1] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][RO][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][BMU][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][0] * gridDim[Nx + Ny + Iz] * Makhraj - dMul * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix][Iy][Iz + 1][k][0] * gridDim[Nx + Ny + Iz + 1] * Coef*Makhraj - DiffVisco(Ix, Iy, Iz + 1, k, 0)*gridDim[Nx + Ny + Iz + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][k][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz + 1] * (G_ACCG*blockFProps[Ix][Iy][Iz + 1][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz + 1][BGAM][0] * dE[Ix][Iy][Iz + 1][k][0] / blockFProps[Ix][Iy][Iz + 1][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][BGAM][0] * gridDim[Nx + Ny + Iz + 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

								if (transS[Ix + 1][Iy + 1][Iz + 1][0][2]) {
									dRsidedxl += comp[Ix][Iy][Iz + 1][i][0] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][1] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = (comp[Ix][Iy][Iz + 1][i][0] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][1] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

									dRsidedxl += comp[Ix][Iy][Iz + 1][i][0] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
									dBsidedxl += (comp[Ix][Iy][Iz + 1][i][0] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
								}
								else {
									dRsidedxl += (comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

									dRsidedxl += (comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
									dBsidedxl += comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
								}

								porpor2 = porosity[Ix][Iy][Iz + 1] * (1 + cpor * (P[Ix + 1][Iy + 1][Iz + 2][1] - refP) + dcpor * (P[Ix + 1][Iy + 1][Iz + 2][1] - refP)*(P[Ix + 1][Iy + 1][Iz + 2][1] - refP));
								if (comp[Ix][Iy][Iz + 1][i][0] > comp[Ix][Iy][Iz][i][0]) {
									DupStream = diffusion[Ix][Iy][Iz + 1][i][0];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix, Iy, Iz + 1, i, k, 0);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix][Iy][Iz + 1][RO][0] * gridDim[Nx + Ny + Iz + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] * dCoefl;
								AAd *= (sat[Ix][Iy][Iz + 1][1] * gridDim[Nx + Ny + Iz + 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Nx + Ny + Iz] * dCoefl) / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
								BBd = tor[Ix][Iy][Iz + 1] * gridDim[Nx + Ny + Iz + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Ny + Iz] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Ix] * gridDim[Nx + Iy] / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
								DeltaX = comp[Ix][Iy][Iz + 1][i][0] - comp[Ix][Iy][Iz][i][0];

								dAAddx = dE[Ix][Iy][Iz][k][0] * gridDim[Nx + Ny + Iz] * dCoefl;
								dAAddx2 = dE[Ix][Iy][Iz + 1][k][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								mBLNo = preConRow[(Iz + 1)*(Nx*Ny) + Iy * Nx + Ix];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;


								if (phaseStat[Ix][Iy][Iz + 1] == 1) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][RO][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][BMU][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][1] * gridDim[Nx + Ny + Iz] * Makhraj - dMug * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix][Iy][Iz + 1][k][1] * gridDim[Nx + Ny + Iz + 1] * Coef*Makhraj - DiffVisco(Ix, Iy, Iz + 1, k, 1)*gridDim[Nx + Ny + Iz + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][k][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz + 1] * (G_ACCG*blockFProps[Ix][Iy][Iz + 1][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz + 1][BGAM][1] * dE[Ix][Iy][Iz + 1][k][1] / blockFProps[Ix][Iy][Iz + 1][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][BGAM][1] * gridDim[Nx + Ny + Iz + 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

								if (transS[Ix + 1][Iy + 1][Iz + 1][1][2]) {
									dRsidedxg += comp[Ix][Iy][Iz + 1][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][2] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = (comp[Ix][Iy][Iz + 1][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][2] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

									dRsidedxg += comp[Ix][Iy][Iz + 1][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
									dBsidedxg += (comp[Ix][Iy][Iz + 1][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
								}
								else {
									dRsidedxg += (comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

									dRsidedxg += (comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
									dBsidedxg += comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);

								}

								if (comp[Ix][Iy][Iz + 1][i][1] > comp[Ix][Iy][Iz][i][1]) {
									DupStream = diffusion[Ix][Iy][Iz + 1][i][1];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix, Iy, Iz + 1, i, k, 1);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix][Iy][Iz + 1][RO][1] * gridDim[Nx + Ny + Iz + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] * dCoefg;
								AAd *= (sat[Ix][Iy][Iz + 1][2] * gridDim[Nx + Ny + Iz + 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Nx + Ny + Iz] * dCoefg) / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
								BBd = tor[Ix][Iy][Iz + 1] * gridDim[Nx + Ny + Iz + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Ny + Iz] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Ix]*gridDim[Nx+Iy]/(gridDim[Nx+Ny+Iz+1]+gridDim[Nx+Ny+Iz]);
								DeltaX = comp[Ix][Iy][Iz + 1][i][1] - comp[Ix][Iy][Iz][i][1];

								dAAddx = dE[Ix][Iy][Iz][k][1] * gridDim[Nx + Ny + Iz] * dCoefg;
								dAAddx2 = dE[Ix][Iy][Iz + 1][k][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}


								if (phaseStat[Ix][Iy][Iz + 1]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;
							}

							if (Iz > 0) {
								if (phaseStat[Ix][Iy][Iz - 1] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][RO][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][BMU][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][0] * gridDim[Nx + Ny + Iz] * Makhraj - dMul * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix][Iy][Iz - 1][k][0] * gridDim[Nx + Ny + Iz - 1] * Coef*Makhraj - DiffVisco(Ix, Iy, Iz - 1, k, 0)*gridDim[Nx + Ny + Iz - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][k][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz - 1] * (G_ACCG*blockFProps[Ix][Iy][Iz - 1][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz - 1][BGAM][0] * dE[Ix][Iy][Iz - 1][k][0] / blockFProps[Ix][Iy][Iz - 1][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][BGAM][0] * gridDim[Nx + Ny + Iz - 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

								if (transS[Ix + 1][Iy + 1][Iz][0][2]) {
									dRsidedxl -= (comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);
									dBsidedxl = -comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);

									dRsidedxl -= (comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][1])*(Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
									dBsidedxl -= comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								}
								else {
									dRsidedxl -= comp[Ix][Iy][Iz - 1][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][1] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);
									dBsidedxl = -(comp[Ix][Iy][Iz - 1][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][1] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);

									dRsidedxl -= -comp[Ix][Iy][Iz - 1][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
									dBsidedxl -= -(comp[Ix][Iy][Iz - 1][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][1])*(Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								}

								porpor2 = porosity[Ix][Iy][Iz - 1] * (1 + cpor * (P[Ix + 1][Iy + 1][Iz][1] - refP) + dcpor * (P[Ix + 1][Iy + 1][Iz][1] - refP)*(P[Ix + 1][Iy + 1][Iz][1] - refP));
								if (comp[Ix][Iy][Iz - 1][i][0] > comp[Ix][Iy][Iz][i][0]) {
									DupStream = diffusion[Ix][Iy][Iz - 1][i][0];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix, Iy, Iz - 1, i, k, 0);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix][Iy][Iz - 1][RO][0] * gridDim[Nx + Ny + Iz - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] * dCoefl;
								AAd *= (sat[Ix][Iy][Iz - 1][1] * gridDim[Nx + Ny + Iz - 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Nx + Ny + Iz] * dCoefl) / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
								BBd = tor[Ix][Iy][Iz - 1] * gridDim[Nx + Ny + Iz - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Ny + Iz] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Ix] * gridDim[Nx + Iy] / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
								DeltaX = comp[Ix][Iy][Iz - 1][i][0] - comp[Ix][Iy][Iz][i][0];

								dAAddx = dE[Ix][Iy][Iz][k][0] * gridDim[Nx + Ny + Iz] * dCoefl;
								dAAddx2 = dE[Ix][Iy][Iz - 1][k][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += -NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += -NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								mBLNo = preConRow[(Iz - 1)*(Nx*Ny) + Iy * Nx + Ix];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;


								if (phaseStat[Ix][Iy][Iz - 1] == 1) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][RO][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][BMU][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][1] * gridDim[Nx + Ny + Iz] * Makhraj - dMug * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix][Iy][Iz - 1][k][1] * gridDim[Nx + Ny + Iz - 1] * Coef*Makhraj - DiffVisco(Ix, Iy, Iz - 1, k, 1)*gridDim[Nx + Ny + Iz - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][k][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz - 1] * (G_ACCG*blockFProps[Ix][Iy][Iz - 1][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz - 1][BGAM][1] * dE[Ix][Iy][Iz - 1][k][1] / blockFProps[Ix][Iy][Iz - 1][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][BGAM][1] * gridDim[Nx + Ny + Iz - 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

								if (transS[Ix + 1][Iy + 1][Iz][1][2]) {
									dRsidedxg -= (comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);
									dBsidedxg = -comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);

									dRsidedxg -= (comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
									dBsidedxg -= comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								}
								else {
									dRsidedxg -= comp[Ix][Iy][Iz - 1][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][2] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);
									dBsidedxg = -(comp[Ix][Iy][Iz - 1][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][2] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);

									dRsidedxg -= comp[Ix][Iy][Iz - 1][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
									dBsidedxg -= (comp[Ix][Iy][Iz - 1][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								}

								if (comp[Ix][Iy][Iz - 1][i][1] > comp[Ix][Iy][Iz][i][1]) {
									DupStream = diffusion[Ix][Iy][Iz - 1][i][1];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix, Iy, Iz - 1, i, k, 1);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix][Iy][Iz - 1][RO][1] * gridDim[Nx + Ny + Iz - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] * dCoefg;
								AAd *= (sat[Ix][Iy][Iz - 1][2] * gridDim[Nx + Ny + Iz - 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Nx + Ny + Iz] * dCoefg) / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
								BBd = tor[Ix][Iy][Iz - 1] * gridDim[Nx + Ny + Iz - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Ny + Iz] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Ix]*gridDim[Nx+Iy]/(gridDim[Nx+Ny+Iz-1]+gridDim[Nx+Ny+Iz]);
								DeltaX = comp[Ix][Iy][Iz - 1][i][1] - comp[Ix][Iy][Iz][i][1];

								dAAddx = dE[Ix][Iy][Iz][k][1] * gridDim[Nx + Ny + Iz] * dCoefg;
								dAAddx2 = dE[Ix][Iy][Iz - 1][k][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += -NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += -NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}



								if (phaseStat[Ix][Iy][Iz - 1]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;
							}

							/////////////////////////////////////////////////Sadeq//k!=i/////////////////////////////////
							if (fphaseStat[Ix][Iy][Iz] == 1) {
								//dRsidefdxl = 0;
								Jac1Row[JRowIndex] = dRsidefdxl;
								Jac1Col[JRowIndex] = FracEq + k;
								JRowIndex++;
							}
							else if (fphaseStat[Ix][Iy][Iz] == (-1)) {
								//dRsidefdxg = 0;
								Jac1Row[JRowIndex] = dRsidefdxg;
								Jac1Col[JRowIndex] = FracEq + k;
								JRowIndex++;
							}
							else {
								//dRsidefdxl = 0;
								Jac1Row[JRowIndex] = dRsidefdxl;
								Jac1Col[JRowIndex] = FracEq + k;
								JRowIndex++;
								//dRsidefdxg = 0;
								Jac1Row[JRowIndex] = dRsidefdxg;
								Jac1Col[JRowIndex] = FracEq + Nc + k;
								JRowIndex++;
							}
							////////////////////////sadeq/////////////////////////
						}
						//jac[BLNo+Nc+i][BLNo+k]=(Vb/Dt)*porpor*sat[Ix][Iy][Iz][1]*dLsidedxl-dQdxl;
						if (phaseStat[Ix][Iy][Iz] != -1) {
							Jac1Row[JRowIndex] = (Vb / Dt)*porpor*sat[Ix][Iy][Iz][1] * dLsidedxl - dQdxl - dRsidedxl;
							//Jac1Row[JRowIndex]=(Vb/Dt)*porpor*sat[Ix][Iy][Iz][1]*dLsidedxl-dQdxl;
							Jac1Col[JRowIndex] = jacCol + k;
							JRowIndex++;
						}

						//jac[BLNo+Nc+i][BLNo+Nc+k]=(Vb/Dt)*porpor*sat[Ix][Iy][Iz][2]*dLsidedxg-dQdxg;
						if (phaseStat[Ix][Iy][Iz] != 1) {
							Jac1Row[JRowIndex] = (Vb / Dt)*porpor*sat[Ix][Iy][Iz][2] * dLsidedxg - dQdxg - dRsidedxg;
							//Jac1Row[JRowIndex]=(Vb/Dt)*porpor*sat[Ix][Iy][Iz][2]*dLsidedxg-dQdxg;
							Jac1Col[JRowIndex] = jacCol + Nc + k - reCol;
							JRowIndex++;
						}

					}


				}
				else if (BENo < (Nc)) {

					LSide = (Vb / Dt)*(porpor*(blockFProps[Ix][Iy][Iz][RO][0] * sat[Ix][Iy][Iz][1] + blockFProps[Ix][Iy][Iz][RO][1] * sat[Ix][Iy][Iz][2]) - preProp[Ix][Iy][Iz][Nc - 1]);
					RSide = trans[Ix + 1][Iy + 1][Iz + 1][0][0] * (P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) - trans[Ix][Iy + 1][Iz + 1][0][0] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);
					RSide += trans[Ix + 1][Iy + 1][Iz + 1][0][1] * (P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) - trans[Ix + 1][Iy][Iz + 1][0][1] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);
					RSide += trans[Ix + 1][Iy + 1][Iz + 1][0][2] * (P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) - trans[Ix + 1][Iy + 1][Iz][0][2] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);
					RSide += trans[Ix + 1][Iy + 1][Iz + 1][1][0] * (P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) - trans[Ix][Iy + 1][Iz + 1][1][0] * (P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);
					RSide += trans[Ix + 1][Iy + 1][Iz + 1][1][1] * (P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) - trans[Ix + 1][Iy][Iz + 1][1][1] * (P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);
					RSide += trans[Ix + 1][Iy + 1][Iz + 1][1][2] * (P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) - trans[Ix + 1][Iy + 1][Iz][1][2] * (P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);

					RSide += trans[Ix + 1][Iy + 1][Iz + 1][2][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - trans[Ix][Iy + 1][Iz + 1][2][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
					RSide += trans[Ix + 1][Iy + 1][Iz + 1][2][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - trans[Ix + 1][Iy][Iz + 1][2][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
					RSide += trans[Ix + 1][Iy + 1][Iz + 1][2][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]) - trans[Ix + 1][Iy + 1][Iz][2][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
					RSide += trans[Ix + 1][Iy + 1][Iz + 1][3][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - trans[Ix][Iy + 1][Iz + 1][3][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
					RSide += trans[Ix + 1][Iy + 1][Iz + 1][3][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - trans[Ix + 1][Iy][Iz + 1][3][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
					RSide += trans[Ix + 1][Iy + 1][Iz + 1][3][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]) - trans[Ix + 1][Iy + 1][Iz][3][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);

					////////////////////////////Transfer Function


					RSide += ZERO_CONV * SI_C * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
					RSide += ZERO_CONV * SI_C * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor) / (porpor + fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));

					//////////////////////
					RSide += Qo + Qg;


					dLsidedp = (Vb / Dt)*(sat[Ix][Iy][Iz][1] * (blockFProps[Ix][Iy][Iz][RO][0] * dPordp + dE[Ix][Iy][Iz][Nc][0] * porpor) + sat[Ix][Iy][Iz][2] * (blockFProps[Ix][Iy][Iz][RO][1] * dPordp + dE[Ix][Iy][Iz][Nc][1] * porpor));
					dLsidedSo = (Vb / Dt)*(porpor*blockFProps[Ix][Iy][Iz][RO][0]);
					dLsidedSg = (Vb / Dt)*(porpor*blockFProps[Ix][Iy][Iz][RO][1]);

					dRsidefdp = 0;
					dRsidedp = 0;
					// Transfer Function dRside dp fdp
					//moshtagh transfer Function jabejaie naft nesbat be feshar matrix
					dRsidedp += ZERO_CONV * SI_C * dE[Ix][Iy][Iz][Nc][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
					dRsidedp += ZERO_CONV * -SI_C * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor));
					dRsidedp += ZERO_CONV * -SI_C * (DiffVisco(Ix, Iy, Iz, Nc, 0) * porpor + dPordp * blockFProps[Ix][Iy][Iz][BMU][0]) * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor)*(blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) * (porpor + fporpor);
					dRsidedp += ZERO_CONV * SI_C * dPordp * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / (blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					//moshtagh transfer Function jabejaie gaz nesbat be feshar matrix
					dRsidedp += ZERO_CONV * SI_C * dE[Ix][Iy][Iz][Nc][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor) / (porpor + fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));
					dRsidedp += ZERO_CONV * -SI_C * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor) / (porpor + fporpor));
					dRsidedp += ZERO_CONV * -SI_C * (DiffVisco(Ix, Iy, Iz, Nc, 1) * porpor + dPordp * blockFProps[Ix][Iy][Iz][BMU][1]) * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor)*(blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1])) * (porpor + fporpor);
					dRsidedp += ZERO_CONV * SI_C * dPordp * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / (blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));

					//moshtagh transfer Function jabejaie naft nesbat be feshar Fracture
					dRsidefdp += ZERO_CONV * SI_C * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor));
					dRsidefdp += ZERO_CONV * -SI_C * (fDiffVisco(Ix, Iy, Iz, Nc, 0) * fporpor + fdPordp * fblockFProps[Ix][Iy][Iz][BMU][0]) * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor)*(blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) * (porpor + fporpor);
					dRsidefdp += ZERO_CONV * SI_C * fdPordp * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / (blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					//moshtagh transfer Function jabejaie gaz nesbat be feshar Fracture
					dRsidefdp += ZERO_CONV * SI_C * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor) / (porpor + fporpor));
					dRsidefdp += ZERO_CONV * -SI_C * (fDiffVisco(Ix, Iy, Iz, Nc, 1) * fporpor + fdPordp * fblockFProps[Ix][Iy][Iz][BMU][1]) * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor)*(blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1])) * (porpor + fporpor);
					dRsidefdp += ZERO_CONV * SI_C * fdPordp * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / (blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));
					//


					dRsidedp += trans[Ix + 1][Iy + 1][Iz + 1][0][0] + trans[Ix][Iy + 1][Iz + 1][0][0];
					dRsidedp += trans[Ix + 1][Iy + 1][Iz + 1][0][1] + trans[Ix + 1][Iy][Iz + 1][0][1];
					dRsidedp += trans[Ix + 1][Iy + 1][Iz + 1][0][2] + trans[Ix + 1][Iy + 1][Iz][0][2];
					dRsidedp += trans[Ix + 1][Iy + 1][Iz + 1][1][0] + trans[Ix][Iy + 1][Iz + 1][1][0];
					dRsidedp += trans[Ix + 1][Iy + 1][Iz + 1][1][1] + trans[Ix + 1][Iy][Iz + 1][1][1];
					dRsidedp += trans[Ix + 1][Iy + 1][Iz + 1][1][2] + trans[Ix + 1][Iy + 1][Iz][1][2];

					//jac[BLNo+2*Nc-1][BLNo+(2*Nc)]=PCoeff*(dLsidedp+dRsidedp);
					dMul = DiffVisco(Ix, Iy, Iz, Nc, 0);
					dMug = DiffVisco(Ix, Iy, Iz, Nc, 1);

					dRsidedSw = 0;
					dRsidedSg = 0;
					dRsidedSo = 0;
					dRsidefdSo = 0;
					dRsidefdSg = 0;
					dRsidefdSw = 0;

					//Transfer Function dRside satuaration 
					// moshtagh transfer Function jabejaie naft nesbat be So Matrix
					dRsidedSo += ZERO_CONV * SI_C * f_m_drelperm[1][4] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					// moshtagh transfer Function jabejaie naft nesbat be So Fracture
					dRsidefdSo += ZERO_CONV * SI_C * f_m_drelperm[1][9] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					// moshtagh transfer Function jabejaie naft nesbat be Sg Matrix
					dRsidedSg += ZERO_CONV * SI_C * f_m_drelperm[1][2] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					// moshtagh transfer Function jabejaie gaz nesbat be Sg Matrix
					dRsidedSg += ZERO_CONV * SI_C * f_m_drelperm[2][3] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor) / (porpor + fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));

					// moshtagh transfer Function jabejaie naft nesbat be Sg Fracture 
					dRsidefdSg += ZERO_CONV * SI_C * f_m_drelperm[1][7] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					// moshtagh transfer Function jabejaie gaz nesbat be Sg Fracture
					dRsidefdSg += ZERO_CONV * SI_C * f_m_drelperm[2][8] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor) / (porpor + fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));

					// moshtagh transfer Function jabejaie naft nesbat be Sw Matrix
					dRsidedSw += ZERO_CONV * SI_C * f_m_drelperm[1][1] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					// moshtagh transfer Function jabejaie naft nesbat be Sw Fracture
					dRsidefdSw += ZERO_CONV * SI_C * f_m_drelperm[1][6] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
					//


					if (Ix < (Nx - 1)) {
						if (phaseStat[Ix + 1][Iy][Iz]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[Iz*(Nx*Ny) + Iy * Nx + Ix + 1] - reCol2;

						dsw = trans[Ix + 1][Iy + 1][Iz + 1][4][0] * (P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) + trans[Ix + 1][Iy + 1][Iz + 1][6][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (transS[Ix + 1][Iy + 1][Iz + 1][0][0]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dso = trans[Ix + 1][Iy + 1][Iz + 1][10][0] * (P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) + trans[Ix + 1][Iy + 1][Iz + 1][11][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (transS[Ix + 1][Iy + 1][Iz + 1][0][0]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix + 1][Iy][Iz] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;

						dsgo = trans[Ix + 1][Iy + 1][Iz + 1][8][0] * (P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) + trans[Ix + 1][Iy + 1][Iz + 1][9][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						dsgg = trans[Ix + 1][Iy + 1][Iz + 1][5][0] * (P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + trans[Ix + 1][Iy + 1][Iz + 1][7][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (transS[Ix + 1][Iy + 1][Iz + 1][0][0]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix + 1][Iy][Iz] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}
						if (transS[Ix + 1][Iy + 1][Iz + 1][1][0]) {
							Jac1Row[JRowIndex] += (phaseStat[Ix + 1][Iy][Iz] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;
						///////////////////////////////////////////////////////////////////
						//////////////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (phaseStat[Ix + 1][Iy][Iz] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][RO][0] * gridDim[Ix + 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BMU][0] * gridDim[Ix + 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][0] * gridDim[Ix] * Makhraj - dMul * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix + 1][Iy][Iz][Nc][0] * gridDim[Ix + 1] * Coef*Makhraj - DiffVisco(Ix + 1, Iy, Iz, Nc, 0)*gridDim[Ix + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Ix] * (blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][Nc][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Ix + 1] * (blockFProps[Ix + 1][Iy][Iz][BGAM][0] * dE[Ix + 1][Iy][Iz][Nc][0] / blockFProps[Ix + 1][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BGAM][0] * gridDim[Ix + 1] * Coef) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

						if (transS[Ix + 1][Iy + 1][Iz + 1][0][0]) {
							dRsidedp -= IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][1] * Moshtaq*(P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = (IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][1] * Bmoshtaq)*(P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= (IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}

						if (phaseStat[Ix + 1][Iy][Iz] == 1) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][RO][1] * gridDim[Ix + 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BMU][1] * gridDim[Ix + 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][1] * gridDim[Ix] * Makhraj - dMug * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix + 1][Iy][Iz][Nc][1] * gridDim[Ix + 1] * Coef*Makhraj - DiffVisco(Ix + 1, Iy, Iz, Nc, 1)*gridDim[Ix + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Ix] * (blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][Nc][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Ix + 1] * (blockFProps[Ix + 1][Iy][Iz][BGAM][1] * dE[Ix + 1][Iy][Iz][Nc][1] / blockFProps[Ix + 1][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BGAM][1] * gridDim[Ix + 1] * Coef) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

						if (transS[Ix + 1][Iy + 1][Iz + 1][1][0]) {
							dRsidedp -= IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][2] * Moshtaq*(P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += (IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][2] * Bmoshtaq)*(P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= (IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);

						}
						////////////////////////////////////////////////////////////////////
						////////////////////////////////////////////////////////////////////
						Jac1Row[JRowIndex] = PCoeff * (-trans[Ix + 1][Iy + 1][Iz + 1][0][0] - trans[Ix + 1][Iy + 1][Iz + 1][1][0] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;
					}

					if (Ix > 0) {
						if (phaseStat[Ix - 1][Iy][Iz]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[Iz*(Nx*Ny) + Iy * Nx + Ix - 1] - reCol2;

						dsw = -trans[Ix][Iy + 1][Iz + 1][4][0] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]) - trans[Ix][Iy + 1][Iz + 1][6][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						if (!transS[Ix][Iy + 1][Iz + 1][0][0]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dso = -trans[Ix][Iy + 1][Iz + 1][10][0] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]) - trans[Ix][Iy + 1][Iz + 1][11][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						if (!transS[Ix][Iy + 1][Iz + 1][0][0]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix - 1][Iy][Iz] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;

						dsgo = -trans[Ix][Iy + 1][Iz + 1][8][0] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]) - trans[Ix][Iy + 1][Iz + 1][9][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						dsgg = -trans[Ix][Iy + 1][Iz + 1][5][0] * (P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]) - trans[Ix][Iy + 1][Iz + 1][7][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						if (!transS[Ix][Iy + 1][Iz + 1][0][0]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix - 1][Iy][Iz] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}
						if (!transS[Ix][Iy + 1][Iz + 1][1][0]) {
							Jac1Row[JRowIndex] += (phaseStat[Ix - 1][Iy][Iz] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;
						////////////////////////////////////////////////////////
						//////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (phaseStat[Ix - 1][Iy][Iz] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][RO][0] * gridDim[Ix - 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][BMU][0] * gridDim[Ix - 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][0] * gridDim[Ix] * Makhraj - dMul * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix - 1][Iy][Iz][Nc][0] * gridDim[Ix - 1] * Coef*Makhraj - DiffVisco(Ix - 1, Iy, Iz, Nc, 0)*gridDim[Ix - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Ix] * (blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][Nc][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Ix - 1] * (blockFProps[Ix - 1][Iy][Iz][BGAM][0] * dE[Ix - 1][Iy][Iz][Nc][0] / blockFProps[Ix - 1][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][BGAM][0] * gridDim[Ix - 1] * Coef) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

						if (transS[Ix][Iy + 1][Iz + 1][0][0]) {
							dRsidedp += (IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);
							dBsidedp = -IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);

							dRsidedp += (IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1])*(Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
							dBsidedp -= IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp += IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][1] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);
							dBsidedp = -(IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][1] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);

							dRsidedp += IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
							dBsidedp -= (IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][1])*(Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						}

						if (phaseStat[Ix - 1][Iy][Iz] == 1) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][RO][1] * gridDim[Ix - 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][BMU][1] * gridDim[Ix - 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][1] * gridDim[Ix] * Makhraj - dMug * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix - 1][Iy][Iz][Nc][1] * gridDim[Ix - 1] * Coef*Makhraj - DiffVisco(Ix - 1, Iy, Iz, Nc, 1)*gridDim[Ix - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Ix] * (blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][Nc][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Ix - 1] * (blockFProps[Ix - 1][Iy][Iz][BGAM][1] * dE[Ix - 1][Iy][Iz][Nc][1] / blockFProps[Ix - 1][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][BGAM][1] * gridDim[Ix - 1] * Coef) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

						if (transS[Ix][Iy + 1][Iz + 1][1][0]) {
							dRsidedp += (IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);
							dBsidedp -= IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);

							dRsidedp += (IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
							dBsidedp -= IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp += IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][2] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);
							dBsidedp -= (IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][2] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);

							dRsidedp += IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
							dBsidedp -= (IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						}
						///////////////////////////////////////////////////////////
						///////////////////////////////////////////////////////////
						Jac1Row[JRowIndex] = PCoeff * (-trans[Ix][Iy + 1][Iz + 1][0][0] - trans[Ix][Iy + 1][Iz + 1][1][0] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;
					}


					if (Iy < (Ny - 1)) {
						if (phaseStat[Ix][Iy + 1][Iz]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[Iz*(Nx*Ny) + (Iy + 1)*Nx + Ix] - reCol2;

						dsw = trans[Ix + 1][Iy + 1][Iz + 1][4][1] * (P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) + trans[Ix + 1][Iy + 1][Iz + 1][6][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (transS[Ix + 1][Iy + 1][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dso = trans[Ix + 1][Iy + 1][Iz + 1][10][1] * (P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) + trans[Ix + 1][Iy + 1][Iz + 1][11][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (transS[Ix + 1][Iy + 1][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix][Iy + 1][Iz] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;

						dsgo = trans[Ix + 1][Iy + 1][Iz + 1][8][1] * (P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) + trans[Ix + 1][Iy + 1][Iz + 1][9][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						dsgg = trans[Ix + 1][Iy + 1][Iz + 1][5][1] * (P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + trans[Ix + 1][Iy + 1][Iz + 1][7][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (transS[Ix + 1][Iy + 1][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix][Iy + 1][Iz] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}
						if (transS[Ix + 1][Iy + 1][Iz + 1][1][1]) {
							Jac1Row[JRowIndex] += (phaseStat[Ix][Iy + 1][Iz] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;
						//////////////////////////////////////////////////////////////////////////////
						/////////////////////////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (phaseStat[Ix][Iy + 1][Iz] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][RO][0] * gridDim[Nx + Iy + 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][BMU][0] * gridDim[Nx + Iy + 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Iy] * Makhraj - dMul * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix][Iy + 1][Iz][Nc][0] * gridDim[Nx + Iy + 1] * Coef*Makhraj - DiffVisco(Ix, Iy + 1, Iz, Nc, 0)*gridDim[Nx + Iy + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Iy] * (blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][Nc][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Iy + 1] * (blockFProps[Ix][Iy + 1][Iz][BGAM][0] * dE[Ix][Iy + 1][Iz][Nc][0] / blockFProps[Ix][Iy + 1][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][BGAM][0] * gridDim[Nx + Iy + 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

						if (transS[Ix + 1][Iy + 1][Iz + 1][0][1]) {
							dRsidedp -= IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][1] * Moshtaq*(P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = (IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][1] * Bmoshtaq)*(P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= (IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}

						if (phaseStat[Ix][Iy + 1][Iz] == 1) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][RO][1] * gridDim[Nx + Iy + 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][BMU][1] * gridDim[Nx + Iy + 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Iy] * Makhraj - dMug * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix][Iy + 1][Iz][Nc][1] * gridDim[Nx + Iy + 1] * Coef*Makhraj - DiffVisco(Ix, Iy + 1, Iz, Nc, 1)*gridDim[Nx + Iy + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Iy] * (blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][Nc][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Iy + 1] * (blockFProps[Ix][Iy + 1][Iz][BGAM][1] * dE[Ix][Iy + 1][Iz][Nc][1] / blockFProps[Ix][Iy + 1][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][BGAM][1] * gridDim[Nx + Iy + 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

						if (transS[Ix + 1][Iy + 1][Iz + 1][1][1]) {
							dRsidedp -= IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][2] * Moshtaq*(P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += (IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][2] * Bmoshtaq)*(P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= (IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}

						/////////////////////////////////////////////////////////////////////////////
						/////////////////////////////////////////////////////////////////////////////
						Jac1Row[JRowIndex] = PCoeff * (-trans[Ix + 1][Iy + 1][Iz + 1][0][1] - trans[Ix + 1][Iy + 1][Iz + 1][1][1] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;
					}
					if (Iy > 0) {
						if (phaseStat[Ix][Iy - 1][Iz]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[Iz*(Nx*Ny) + (Iy - 1)*Nx + Ix + 1] - reCol2;

						dsw = -trans[Ix + 1][Iy][Iz + 1][4][1] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]) - trans[Ix + 1][Iy][Iz + 1][6][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						if (!transS[Ix + 1][Iy][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dso = -trans[Ix + 1][Iy][Iz + 1][10][1] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]) - trans[Ix + 1][Iy][Iz + 1][11][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						if (!transS[Ix + 1][Iy][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix][Iy - 1][Iz] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;

						dsgo = -trans[Ix + 1][Iy][Iz + 1][8][1] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]) - trans[Ix + 1][Iy][Iz + 1][9][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						dsgg = -trans[Ix + 1][Iy][Iz + 1][5][1] * (P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]) - trans[Ix + 1][Iy][Iz + 1][7][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						if (!transS[Ix + 1][Iy][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix][Iy - 1][Iz] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}
						if (!transS[Ix + 1][Iy][Iz + 1][1][1]) {
							Jac1Row[JRowIndex] += (phaseStat[Ix][Iy - 1][Iz] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;


						//////////////////////////////////////////////////////////////////
						/////////////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (phaseStat[Ix][Iy - 1][Iz] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][RO][0] * gridDim[Nx + Iy - 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][BMU][0] * gridDim[Nx + Iy - 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Iy] * Makhraj - dMul * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix][Iy - 1][Iz][Nc][0] * gridDim[Nx + Iy - 1] * Coef*Makhraj - DiffVisco(Ix, Iy - 1, Iz, Nc, 0)*gridDim[Nx + Iy - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Iy] * (blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][Nc][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Iy - 1] * (blockFProps[Ix][Iy - 1][Iz][BGAM][0] * dE[Ix][Iy - 1][Iz][Nc][0] / blockFProps[Ix][Iy - 1][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][BGAM][0] * gridDim[Nx + Iy - 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

						if (transS[Ix + 1][Iy][Iz + 1][0][1]) {
							dRsidedp += (IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);
							dBsidedp = -IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);

							dRsidedp += (IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][1])*(Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
							dBsidedp -= IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						}
						else {
							dRsidedp += IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][1] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);
							dBsidedp = -(IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][1] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);

							dRsidedp += IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
							dBsidedp = -(IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][1])*(Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						}

						if (phaseStat[Ix][Iy - 1][Iz] == 1) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][RO][1] * gridDim[Nx + Iy - 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][BMU][1] * gridDim[Nx + Iy - 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Iy] * Makhraj - dMug * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix][Iy - 1][Iz][Nc][1] * gridDim[Nx + Iy - 1] * Coef*Makhraj - DiffVisco(Ix, Iy - 1, Iz, Nc, 1)*gridDim[Nx + Iy - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Iy] * (blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][Nc][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Iy - 1] * (blockFProps[Ix][Iy - 1][Iz][BGAM][1] * dE[Ix][Iy - 1][Iz][Nc][1] / blockFProps[Ix][Iy - 1][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][BGAM][1] * gridDim[Nx + Iy - 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

						if (transS[Ix + 1][Iy][Iz + 1][1][1]) {
							dRsidedp += (IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);
							dBsidedp -= IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);

							dRsidedp += (IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
							dBsidedp -= IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						}
						else {
							dRsidedp += IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][2] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);
							dBsidedp = -(IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][2] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);

							dRsidedp += IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
							dBsidedp -= (IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						}
						///////////////////////////////////////////////////////////////////
						//////////////////////////////////////////////////////////////////
						Jac1Row[JRowIndex] = PCoeff * (-trans[Ix + 1][Iy][Iz + 1][0][1] - trans[Ix + 1][Iy][Iz + 1][1][1] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;
					}

					if (Iz < (Nz - 1)) {
						if (phaseStat[Ix][Iy][Iz + 1]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[(Iz + 1)*(Nx*Ny) + Iy * Nx + Ix] - reCol2;

						dsw = trans[Ix + 1][Iy + 1][Iz + 1][4][2] * (P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) + trans[Ix + 1][Iy + 1][Iz + 1][6][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (transS[Ix + 1][Iy + 1][Iz + 1][0][2]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dso = trans[Ix + 1][Iy + 1][Iz + 1][10][2] * (P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) + trans[Ix + 1][Iy + 1][Iz + 1][11][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (transS[Ix + 1][Iy + 1][Iz + 1][0][2]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix][Iy][Iz + 1] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;

						dsgo = trans[Ix + 1][Iy + 1][Iz + 1][8][2] * (P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) + trans[Ix + 1][Iy + 1][Iz + 1][9][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						dsgg = trans[Ix + 1][Iy + 1][Iz + 1][5][2] * (P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + trans[Ix + 1][Iy + 1][Iz + 1][7][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (transS[Ix + 1][Iy + 1][Iz + 1][0][2]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix][Iy][Iz + 1] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}
						if (transS[Ix + 1][Iy + 1][Iz + 1][1][2]) {
							Jac1Row[JRowIndex] += (phaseStat[Ix][Iy][Iz + 1] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;
						///////////////////////////////////////////////////////////////////////////
						////////////////////////////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (phaseStat[Ix][Iy][Iz + 1] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][RO][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][BMU][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Ny + Iz] * Makhraj - dMul * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix][Iy][Iz + 1][Nc][0] * gridDim[Nx + Ny + Iz + 1] * Coef*Makhraj - DiffVisco(Ix, Iy, Iz + 1, Nc, 0)*gridDim[Nx + Ny + Iz + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Ny + Iz] * (blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][Nc][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz + 1] * (blockFProps[Ix][Iy][Iz + 1][BGAM][0] * dE[Ix][Iy][Iz + 1][Nc][0] / blockFProps[Ix][Iy][Iz + 1][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][BGAM][0] * gridDim[Nx + Ny + Iz + 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

						if (transS[Ix + 1][Iy + 1][Iz + 1][0][2]) {
							dRsidedp -= IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][1] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = (IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][1] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= (IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}

						if (phaseStat[Ix][Iy][Iz + 1] == 1) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][RO][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][BMU][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Ny + Iz] * Makhraj - dMug * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix][Iy][Iz + 1][Nc][1] * gridDim[Nx + Ny + Iz + 1] * Coef*Makhraj - DiffVisco(Ix, Iy, Iz + 1, Nc, 1)*gridDim[Nx + Ny + Iz + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Ny + Iz] * (blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][Nc][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz + 1] * (blockFProps[Ix][Iy][Iz + 1][BGAM][1] * dE[Ix][Iy][Iz + 1][Nc][1] / blockFProps[Ix][Iy][Iz + 1][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][BGAM][1] * gridDim[Nx + Ny + Iz + 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

						if (transS[Ix + 1][Iy + 1][Iz + 1][1][2]) {
							dRsidedp -= IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][2] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += (IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][2] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= (IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						///////////////////////////////////////////////////////////////////////////////
						//////////////////////////////////////////////////////////////////////////////

						Jac1Row[JRowIndex] = PCoeff * (-trans[Ix + 1][Iy + 1][Iz + 1][0][2] - trans[Ix + 1][Iy + 1][Iz + 1][1][2] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;
					}

					if (Iz > 0) {
						if (phaseStat[Ix][Iy][Iz - 1]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[(Iz - 1)*(Nx*Ny) + Iy * Nx + Ix + 1] - reCol2;

						dsw = -trans[Ix + 1][Iy + 1][Iz][4][2] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]) - trans[Ix + 1][Iy + 1][Iz][6][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						if (!transS[Ix + 1][Iy + 1][Iz][0][2]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dso = -trans[Ix + 1][Iy + 1][Iz][10][2] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]) - trans[Ix + 1][Iy + 1][Iz][11][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						if (!transS[Ix + 1][Iy + 1][Iz][0][2]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix][Iy][Iz - 1] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;

						dsgo = -trans[Ix + 1][Iy + 1][Iz][8][2] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]) - trans[Ix + 1][Iy + 1][Iz][9][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						dsgg = -trans[Ix + 1][Iy + 1][Iz][5][2] * (P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]) - trans[Ix + 1][Iy + 1][Iz][7][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						if (!transS[Ix + 1][Iy + 1][Iz][0][2]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix][Iy][Iz - 1] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}
						if (!transS[Ix + 1][Iy + 1][Iz][1][2]) {
							Jac1Row[JRowIndex] += (phaseStat[Ix][Iy][Iz - 1] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;
						///////////////////////////////////////////////////////////////
						///////////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (phaseStat[Ix][Iy][Iz - 1] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][RO][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][BMU][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Ny + Iz] * Makhraj - dMul * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix][Iy][Iz - 1][Nc][0] * gridDim[Nx + Ny + Iz - 1] * Coef*Makhraj - DiffVisco(Ix, Iy, Iz - 1, Nc, 0)*gridDim[Nx + Ny + Iz - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Ny + Iz] * (blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][Nc][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz - 1] * (blockFProps[Ix][Iy][Iz - 1][BGAM][0] * dE[Ix][Iy][Iz - 1][Nc][0] / blockFProps[Ix][Iy][Iz - 1][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][BGAM][0] * gridDim[Nx + Ny + Iz - 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

						if (transS[Ix + 1][Iy + 1][Iz][0][2]) {
							dRsidedp += (IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);
							dBsidedp = -IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);

							dRsidedp += (IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][1])*(Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							dBsidedp -= IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						}
						else {
							dRsidedp += IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][1] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);
							dBsidedp = -(IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][1] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);

							dRsidedp += IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							dBsidedp -= (IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][1])*(Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						}

						if (phaseStat[Ix][Iy][Iz - 1] == 1) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][RO][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][BMU][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Ny + Iz] * Makhraj - dMug * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix][Iy][Iz - 1][Nc][1] * gridDim[Nx + Ny + Iz - 1] * Coef*Makhraj - DiffVisco(Ix, Iy, Iz - 1, Nc, 1)*gridDim[Nx + Ny + Iz - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Ny + Iz] * (blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][Nc][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz - 1] * (blockFProps[Ix][Iy][Iz - 1][BGAM][1] * dE[Ix][Iy][Iz - 1][Nc][1] / blockFProps[Ix][Iy][Iz - 1][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][BGAM][1] * gridDim[Nx + Ny + Iz - 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

						if (transS[Ix + 1][Iy + 1][Iz][1][2]) {
							dRsidedp += (IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);
							dBsidedp -= IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);

							dRsidedp += (IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							dBsidedp -= IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						}
						else {
							dRsidedp += IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][2] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);
							dBsidedp -= (IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][2] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);

							dRsidedp += IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							dBsidedp -= (IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						}
						//////////////////////////////////////////////////////////////////
						//////////////////////////////////////////////////////////////////
						Jac1Row[JRowIndex] = PCoeff * (-trans[Ix + 1][Iy + 1][Iz][0][2] - trans[Ix + 1][Iy + 1][Iz][1][2] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;
					}

					Jac1Row[JRowIndex] = PCoeff * (dLsidedp + dRsidedp + PIo + PIg);
					Jac1Col[JRowIndex] = jacCol + (2 * Nc) - reCol;
					JRowIndex++;

					if (phaseStat[Ix][Iy][Iz] != -1) {
						Jac1Row[JRowIndex] = -dRsidedSw;
						Jac1Col[JRowIndex] = jacCol + (2 * Nc + 1) - reCol;
						JRowIndex++;

						Jac1Row[JRowIndex] = dLsidedSo - dRsidedSo;
						Jac1Col[JRowIndex] = jacCol + (2 * Nc + 2) - reCol;
						JRowIndex++;
					}

					if (phaseStat[Ix][Iy][Iz] != 1) {
						Jac1Row[JRowIndex] = dLsidedSg - dRsidedSg;
						Jac1Col[JRowIndex] = jacCol + (2 * Nc + 3) - reCol - reCol3;
						JRowIndex++;
					}
					//////////////////////////////////////////////

					/////////////////////////////////////////////////Sadeq///////////////////////////////////
					if (fphaseStat[Ix][Iy][Iz] == 1) {
						//dRsidefdSo = 0;
						Jac1Row[JRowIndex] = dRsidefdSo;
						Jac1Col[JRowIndex] = FracEq + 2 * Nc + 2 - reColF1;
						JRowIndex++;
					}
					else if (fphaseStat[Ix][Iy][Iz] == (-1)) {
						//dRsidefdSg = 0;
						Jac1Row[JRowIndex] = dRsidefdSg;
						Jac1Col[JRowIndex] = FracEq + 2 * Nc + 2 - reColF1;
						JRowIndex++;
					}
					else {
						//dRsidefdSo = 0;
						Jac1Row[JRowIndex] = dRsidefdSo;
						Jac1Col[JRowIndex] = FracEq + 2 * Nc + 2 - reColF1;
						JRowIndex++;
						//dRsidefdSg = 0;
						Jac1Row[JRowIndex] = dRsidefdSg;
						Jac1Col[JRowIndex] = FracEq + 2 * Nc + 3 - reColF1;
						JRowIndex++;
					}
					//dRsidefdp = 0;
					Jac1Row[JRowIndex] = PCoeff * dRsidefdp;
					Jac1Col[JRowIndex] = FracEq + 2 * Nc - reColF1;
					JRowIndex++;
					//dRsidefdSw = 0;
					Jac1Row[JRowIndex] = dRsidefdSw;
					Jac1Col[JRowIndex] = FracEq + 2 * Nc + 1 - reColF1;
					JRowIndex++;
					////////////////////////sadeq/////////////////////////


					for (k = 0; k < Nc; k++) {
						dRsidedxl = 0;
						dRsidedxg = 0;
						dRsidefdxl = 0;
						dRsidefdxg = 0;

						dLsidedxl = dE[Ix][Iy][Iz][k][0];
						dLsidedxg = dE[Ix][Iy][Iz][k][1];
						dQdxl = 0;
						dQdxg = 0;

						dMul = DiffVisco(Ix, Iy, Iz, k, 0);
						dMug = DiffVisco(Ix, Iy, Iz, k, 1);

						//Transfer Function dRside dxl dxg
						// moshtagh transfer Function jabejaie naft nesbat be xl Matrix
						dRsidedxl += ZERO_CONV * SI_C * dE[Ix][Iy][Iz][k][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
						dRsidedxl += ZERO_CONV * -SI_C * DiffVisco(Ix, Iy, Iz, k, 0) * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] * porpor / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor)*(blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) * (porpor + fporpor);

						// moshtagh transfer Function jabejaie naft nesbat be xl Fracture
						dRsidefdxl += ZERO_CONV * -SI_C * fDiffVisco(Ix, Iy, Iz, k, 0) * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] * fporpor / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor)*(blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) * (porpor + fporpor);

						// moshtagh transfer Function jabejaie gaz nesbat be xg Matrix
						dRsidedxg += ZERO_CONV * SI_C * dE[Ix][Iy][Iz][k][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor) / (porpor + fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));
						dRsidedxg += ZERO_CONV * -SI_C * DiffVisco(Ix, Iy, Iz, k, 1) * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] * porpor / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor)*(blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1])) * (porpor + fporpor);

						// moshtagh transfer Function jabejaie gaz nesbat be xg Fracture
						dRsidefdxg += ZERO_CONV * -SI_C * fDiffVisco(Ix, Iy, Iz, k, 1) * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] * fporpor / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor)*(blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1])) * (porpor + fporpor);
						//

						if (Ix < (Nx - 1)) {
							if (phaseStat[Ix + 1][Iy][Iz] == (-1)) Coef = 0;
							else Coef = 1;

							Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][RO][0] * gridDim[Ix + 1] * Coef;
							Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BMU][0] * gridDim[Ix + 1] * Coef;
							Moshtaq = (dE[Ix][Iy][Iz][k][0] * gridDim[Ix] * Makhraj - dMul * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (dE[Ix + 1][Iy][Iz][k][0] * gridDim[Ix + 1] * Coef*Makhraj - DiffVisco(Ix + 1, Iy, Iz, k, 0)*gridDim[Ix + 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Ix] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][k][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Ix + 1] * (G_ACCG*blockFProps[Ix + 1][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix + 1][Iy][Iz][BGAM][0] * dE[Ix + 1][Iy][Iz][k][0] / blockFProps[Ix + 1][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

							tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BGAM][0] * gridDim[Ix + 1] * Coef) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

							if (transS[Ix + 1][Iy + 1][Iz + 1][0][0]) {
								dRsidedxl += IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][1] * Moshtaq*(P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
								dBsidedxl = (IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][1] * Bmoshtaq)*(P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

								//dRsidedxl+=IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								//dBsidedxl+=(IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
							}
							else {
								dRsidedxl += (IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
								dBsidedxl = IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

								//dRsidedxl+=(IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								//dBsidedxl+=IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
							}

							mBLNo = preConRow[Iz*(Nx*Ny) + Iy * Nx + Ix + 1];
							Jac1Row[JRowIndex] = -dBsidedxl * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo + k;
							JRowIndex++;


							if (phaseStat[Ix + 1][Iy][Iz] == 1) Coef = 0;
							else Coef = 1;

							Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][RO][1] * gridDim[Ix + 1] * Coef;
							Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BMU][1] * gridDim[Ix + 1] * Coef;
							Moshtaq = (dE[Ix][Iy][Iz][k][1] * gridDim[Ix] * Makhraj - dMug * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (dE[Ix + 1][Iy][Iz][k][1] * gridDim[Ix + 1] * Coef*Makhraj - DiffVisco(Ix + 1, Iy, Iz, k, 1)*gridDim[Ix + 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Ix] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][k][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Ix + 1] * (G_ACCG*blockFProps[Ix + 1][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix + 1][Iy][Iz][BGAM][1] * dE[Ix + 1][Iy][Iz][k][1] / blockFProps[Ix + 1][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

							tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BGAM][1] * gridDim[Ix + 1] * Coef) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

							if (transS[Ix + 1][Iy + 1][Iz + 1][1][0]) {
								dRsidedxg += IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][2] * Moshtaq*(P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
								dBsidedxg = (IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][2] * Bmoshtaq)*(P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

								//dRsidedxg+=IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								//dBsidedxg+=(IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
							}
							else {
								dRsidedxg += (IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
								dBsidedxg = IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

								//dRsidedxg+=(IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								//dBsidedxg+=IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);

							}

							if (phaseStat[Ix + 1][Iy][Iz]) reCol2 = Nc;
							else reCol2 = 0;
							Jac1Row[JRowIndex] = -dBsidedxg * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
							JRowIndex++;
						}

						if (Ix > 0) {
							if (phaseStat[Ix - 1][Iy][Iz] == (-1)) Coef = 0;
							else Coef = 1;

							Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][RO][0] * gridDim[Ix - 1] * Coef;
							Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][BMU][0] * gridDim[Ix - 1] * Coef;
							Moshtaq = (dE[Ix][Iy][Iz][k][0] * gridDim[Ix] * Makhraj - dMul * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (dE[Ix - 1][Iy][Iz][k][0] * gridDim[Ix - 1] * Coef*Makhraj - DiffVisco(Ix - 1, Iy, Iz, k, 0)*gridDim[Ix - 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Ix] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][k][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Ix - 1] * (G_ACCG*blockFProps[Ix - 1][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix - 1][Iy][Iz][BGAM][0] * dE[Ix - 1][Iy][Iz][k][0] / blockFProps[Ix - 1][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

							tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][BGAM][0] * gridDim[Ix - 1] * Coef) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

							if (transS[Ix][Iy + 1][Iz + 1][0][0]) {
								dRsidedxl -= (IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);
								dBsidedxl = -IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);

								//dRsidedxl-=(IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1])*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								//dBsidedxl-=IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
							}
							else {
								dRsidedxl -= IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][1] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);
								dBsidedxl = -(IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][1] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);

								//dRsidedxl-=IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								//dBsidedxl-=(IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][1])*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
							}

							mBLNo = preConRow[Iz*(Nx*Ny) + Iy * Nx + Ix - 1];
							Jac1Row[JRowIndex] = -dBsidedxl * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo + k;
							JRowIndex++;


							if (phaseStat[Ix - 1][Iy][Iz] == 1) Coef = 0;
							else Coef = 1;

							Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][RO][1] * gridDim[Ix - 1] * Coef;
							Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][BMU][1] * gridDim[Ix - 1] * Coef;
							Moshtaq = (dE[Ix][Iy][Iz][k][1] * gridDim[Ix] * Makhraj - dMug * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (dE[Ix - 1][Iy][Iz][k][1] * gridDim[Ix - 1] * Coef*Makhraj - DiffVisco(Ix - 1, Iy, Iz, k, 1)*gridDim[Ix - 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Ix] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][k][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Ix - 1] * (G_ACCG*blockFProps[Ix - 1][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix - 1][Iy][Iz][BGAM][1] * dE[Ix - 1][Iy][Iz][k][1] / blockFProps[Ix - 1][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

							tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][BGAM][1] * gridDim[Ix - 1] * Coef) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

							if (transS[Ix][Iy + 1][Iz + 1][1][0]) {
								dRsidedxg -= (IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);
								dBsidedxg = -IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);

								//dRsidedxg-=(IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								//dBsidedxg-=IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
							}
							else {
								dRsidedxg -= IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][2] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);
								dBsidedxg = -(IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][2] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);

								//dRsidedxg-=IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								//dBsidedxg-=(IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
							}


							if (phaseStat[Ix - 1][Iy][Iz]) reCol2 = Nc;
							else reCol2 = 0;
							Jac1Row[JRowIndex] = -dBsidedxg * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
							JRowIndex++;
						}

						if (Iy < (Ny - 1)) {
							if (phaseStat[Ix][Iy + 1][Iz] == (-1)) Coef = 0;
							else Coef = 1;

							Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][RO][0] * gridDim[Nx + Iy + 1] * Coef;
							Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][BMU][0] * gridDim[Nx + Iy + 1] * Coef;
							Moshtaq = (dE[Ix][Iy][Iz][k][0] * gridDim[Nx + Iy] * Makhraj - dMul * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (dE[Ix][Iy + 1][Iz][k][0] * gridDim[Nx + Iy + 1] * Coef*Makhraj - DiffVisco(Ix, Iy + 1, Iz, k, 0)*gridDim[Nx + Iy + 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][k][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Nx + Iy + 1] * (G_ACCG*blockFProps[Ix][Iy + 1][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy + 1][Iz][BGAM][0] * dE[Ix][Iy + 1][Iz][k][0] / blockFProps[Ix][Iy + 1][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

							tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][BGAM][0] * gridDim[Nx + Iy + 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

							if (transS[Ix + 1][Iy + 1][Iz + 1][0][1]) {
								dRsidedxl += IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][1] * Moshtaq*(P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
								dBsidedxl = (IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][1] * Bmoshtaq)*(P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

								//dRsidedxl+=IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								//dBsidedxl+=(IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
							}
							else {
								dRsidedxl += (IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
								dBsidedxl = IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

								//dRsidedxl+=(IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								//dBsidedxl+=IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
							}

							mBLNo = preConRow[Iz*(Nx*Ny) + (Iy + 1)*Nx + Ix];
							Jac1Row[JRowIndex] = -dBsidedxl * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo + k;
							JRowIndex++;


							if (phaseStat[Ix][Iy + 1][Iz] == 1) Coef = 0;
							else Coef = 1;

							Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][RO][1] * gridDim[Nx + Iy + 1] * Coef;
							Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][BMU][1] * gridDim[Nx + Iy + 1] * Coef;
							Moshtaq = (dE[Ix][Iy][Iz][k][1] * gridDim[Nx + Iy] * Makhraj - dMug * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (dE[Ix][Iy + 1][Iz][k][1] * gridDim[Nx + Iy + 1] * Coef*Makhraj - DiffVisco(Ix, Iy + 1, Iz, k, 1)*gridDim[Nx + Iy + 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][k][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Nx + Iy + 1] * (G_ACCG*blockFProps[Ix][Iy + 1][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy + 1][Iz][BGAM][1] * dE[Ix][Iy + 1][Iz][k][1] / blockFProps[Ix][Iy + 1][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

							tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][BGAM][1] * gridDim[Nx + Iy + 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

							if (transS[Ix + 1][Iy + 1][Iz + 1][1][1]) {
								dRsidedxg += IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][2] * Moshtaq*(P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
								dBsidedxg = (IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][2] * Bmoshtaq)*(P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

								//dRsidedxg+=IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								//dBsidedxg+=(IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
							}
							else {
								dRsidedxg += (IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
								dBsidedxg = IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

								//dRsidedxg+=(IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								//dBsidedxg+=IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);

							}

							if (phaseStat[Ix][Iy + 1][Iz]) reCol2 = Nc;
							else reCol2 = 0;
							Jac1Row[JRowIndex] = -dBsidedxg * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
							JRowIndex++;
						}

						if (Iy > 0) {
							if (phaseStat[Ix][Iy - 1][Iz] == (-1)) Coef = 0;
							else Coef = 1;

							Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][RO][0] * gridDim[Nx + Iy - 1] * Coef;
							Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][BMU][0] * gridDim[Nx + Iy - 1] * Coef;
							Moshtaq = (dE[Ix][Iy][Iz][k][0] * gridDim[Nx + Iy] * Makhraj - dMul * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (dE[Ix][Iy - 1][Iz][k][0] * gridDim[Nx + Iy - 1] * Coef*Makhraj - DiffVisco(Ix, Iy - 1, Iz, k, 0)*gridDim[Nx + Iy - 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][k][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Nx + Iy - 1] * (G_ACCG*blockFProps[Ix][Iy - 1][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy - 1][Iz][BGAM][0] * dE[Ix][Iy - 1][Iz][k][0] / blockFProps[Ix][Iy - 1][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

							tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][BGAM][0] * gridDim[Nx + Iy - 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

							if (transS[Ix + 1][Iy][Iz + 1][0][1]) {
								dRsidedxl -= (IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);
								dBsidedxl = -IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);

								//dRsidedxl-=(IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][1])*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								//dBsidedxl-=IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
							}
							else {
								dRsidedxl -= IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][1] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);
								dBsidedxl = -(IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][1] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);

								//dRsidedxl-=IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								//dBsidedxl-=(IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][1])*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
							}

							mBLNo = preConRow[Iz*(Nx*Ny) + (Iy - 1)*Nx + Ix];
							Jac1Row[JRowIndex] = -dBsidedxl * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo + k;
							JRowIndex++;


							if (phaseStat[Ix][Iy - 1][Iz] == 1) Coef = 0;
							else Coef = 1;

							Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][RO][1] * gridDim[Nx + Iy - 1] * Coef;
							Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][BMU][1] * gridDim[Nx + Iy - 1] * Coef;
							Moshtaq = (dE[Ix][Iy][Iz][k][1] * gridDim[Nx + Iy] * Makhraj - dMug * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (dE[Ix][Iy - 1][Iz][k][1] * gridDim[Nx + Iy - 1] * Coef*Makhraj - DiffVisco(Ix, Iy - 1, Iz, k, 1)*gridDim[Nx + Iy - 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][k][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Nx + Iy - 1] * (G_ACCG*blockFProps[Ix][Iy - 1][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy - 1][Iz][BGAM][1] * dE[Ix][Iy - 1][Iz][k][1] / blockFProps[Ix][Iy - 1][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

							tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][BGAM][1] * gridDim[Nx + Iy - 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

							if (transS[Ix + 1][Iy][Iz + 1][1][1]) {
								dRsidedxg -= (IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);
								dBsidedxg = -IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);

								//dRsidedxg-=(IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								//dBsidedxg-=IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
							}
							else {
								dRsidedxg -= IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][2] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);
								dBsidedxg = -(IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][2] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);

								//dRsidedxg-=IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								//dBsidedxg-=(IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
							}


							if (phaseStat[Ix][Iy - 1][Iz]) reCol2 = Nc;
							else reCol2 = 0;
							Jac1Row[JRowIndex] = -dBsidedxg * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
							JRowIndex++;
						}

						if (Iz < (Nz - 1)) {
							if (phaseStat[Ix][Iy][Iz + 1] == (-1)) Coef = 0;
							else Coef = 1;

							Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][RO][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
							Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][BMU][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
							Moshtaq = (dE[Ix][Iy][Iz][k][0] * gridDim[Nx + Ny + Iz] * Makhraj - dMul * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (dE[Ix][Iy][Iz + 1][k][0] * gridDim[Nx + Ny + Iz + 1] * Coef*Makhraj - DiffVisco(Ix, Iy, Iz + 1, k, 0)*gridDim[Nx + Ny + Iz + 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][k][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz + 1] * (G_ACCG*blockFProps[Ix][Iy][Iz + 1][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz + 1][BGAM][0] * dE[Ix][Iy][Iz + 1][k][0] / blockFProps[Ix][Iy][Iz + 1][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

							tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][BGAM][0] * gridDim[Nx + Ny + Iz + 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

							if (transS[Ix + 1][Iy + 1][Iz + 1][0][2]) {
								dRsidedxl += IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][1] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
								dBsidedxl = (IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][1] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

								dRsidedxl += IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
								dBsidedxl += (IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							}
							else {
								dRsidedxl += (IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
								dBsidedxl = IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

								dRsidedxl += (IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
								dBsidedxl += IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							}

							mBLNo = preConRow[(Iz + 1)*(Nx*Ny) + Iy * Nx + Ix];
							Jac1Row[JRowIndex] = -dBsidedxl * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo + k;
							JRowIndex++;


							if (phaseStat[Ix][Iy][Iz + 1] == 1) Coef = 0;
							else Coef = 1;

							Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][RO][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
							Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][BMU][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
							Moshtaq = (dE[Ix][Iy][Iz][k][1] * gridDim[Nx + Ny + Iz] * Makhraj - dMug * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (dE[Ix][Iy][Iz + 1][k][1] * gridDim[Nx + Ny + Iz + 1] * Coef*Makhraj - DiffVisco(Ix, Iy, Iz + 1, k, 1)*gridDim[Nx + Ny + Iz + 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][k][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz + 1] * (G_ACCG*blockFProps[Ix][Iy][Iz + 1][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz + 1][BGAM][1] * dE[Ix][Iy][Iz + 1][k][1] / blockFProps[Ix][Iy][Iz + 1][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

							tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][BGAM][1] * gridDim[Nx + Ny + Iz + 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

							if (transS[Ix + 1][Iy + 1][Iz + 1][1][2]) {
								dRsidedxg += IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][2] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
								dBsidedxg = (IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][2] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

								dRsidedxg += IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
								dBsidedxg += (IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							}
							else {
								dRsidedxg += (IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
								dBsidedxg = IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

								dRsidedxg += (IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
								dBsidedxg += IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);

							}

							if (phaseStat[Ix][Iy][Iz + 1]) reCol2 = Nc;
							else reCol2 = 0;
							Jac1Row[JRowIndex] = -dBsidedxg * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
							JRowIndex++;
						}

						if (Iz > 0) {
							if (phaseStat[Ix][Iy][Iz - 1] == (-1)) Coef = 0;
							else Coef = 1;

							Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][RO][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
							Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][BMU][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
							Moshtaq = (dE[Ix][Iy][Iz][k][0] * gridDim[Nx + Ny + Iz] * Makhraj - dMul * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (dE[Ix][Iy][Iz - 1][k][0] * gridDim[Nx + Ny + Iz - 1] * Coef*Makhraj - DiffVisco(Ix, Iy, Iz - 1, k, 0)*gridDim[Nx + Ny + Iz - 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][k][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz - 1] * (G_ACCG*blockFProps[Ix][Iy][Iz - 1][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz - 1][BGAM][0] * dE[Ix][Iy][Iz - 1][k][0] / blockFProps[Ix][Iy][Iz - 1][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

							tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][BGAM][0] * gridDim[Nx + Ny + Iz - 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

							if (transS[Ix + 1][Iy + 1][Iz][0][2]) {
								dRsidedxl -= (IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);
								dBsidedxl = -IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);

								dRsidedxl -= (IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][1])*(Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								dBsidedxl -= IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							}
							else {
								dRsidedxl -= IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][1] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);
								dBsidedxl = -(IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][1] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);

								dRsidedxl -= IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								dBsidedxl -= (IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][1])*(Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							}

							mBLNo = preConRow[(Iz - 1)*(Nx*Ny) + Iy * Nx + Ix];
							Jac1Row[JRowIndex] = -dBsidedxl * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo + k;
							JRowIndex++;


							if (phaseStat[Ix][Iy][Iz - 1] == 1) Coef = 0;
							else Coef = 1;

							Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][RO][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
							Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][BMU][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
							Moshtaq = (dE[Ix][Iy][Iz][k][1] * gridDim[Nx + Ny + Iz] * Makhraj - dMug * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (dE[Ix][Iy][Iz - 1][k][1] * gridDim[Nx + Ny + Iz - 1] * Coef*Makhraj - DiffVisco(Ix, Iy, Iz - 1, k, 1)*gridDim[Nx + Ny + Iz - 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][k][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz - 1] * (G_ACCG*blockFProps[Ix][Iy][Iz - 1][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz - 1][BGAM][1] * dE[Ix][Iy][Iz - 1][k][1] / blockFProps[Ix][Iy][Iz - 1][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

							tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][BGAM][1] * gridDim[Nx + Ny + Iz - 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

							if (transS[Ix + 1][Iy + 1][Iz][1][2]) {
								dRsidedxg -= (IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);
								dBsidedxg = -IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);

								dRsidedxg -= (IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								dBsidedxg -= IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							}
							else {
								dRsidedxg -= IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][2] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);
								dBsidedxg = -(IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][2] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);

								dRsidedxg -= IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								dBsidedxg -= (IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							}


							if (phaseStat[Ix][Iy][Iz - 1]) reCol2 = Nc;
							else reCol2 = 0;
							Jac1Row[JRowIndex] = -dBsidedxg * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
							JRowIndex++;
						}
						//jac[BLNo+2*Nc-1][BLNo+k]=(Vb/Dt)*porpor*sat[Ix][Iy][Iz][1]*dE[Ix][Iy][Iz][k][0];
						if (phaseStat[Ix][Iy][Iz] != -1) {
							Jac1Row[JRowIndex] = (Vb / Dt)*porpor*sat[Ix][Iy][Iz][1] * dE[Ix][Iy][Iz][k][0] - dRsidedxl;
							//Jac1Row[JRowIndex]=(Vb/Dt)*porpor*sat[Ix][Iy][Iz][1]*dE[Ix][Iy][Iz][k][0];
							Jac1Col[JRowIndex] = jacCol + k;
							JRowIndex++;
						}

						//jac[BLNo+2*Nc-1][BLNo+Nc+k]=(Vb/Dt)*porpor*sat[Ix][Iy][Iz][2]*dE[Ix][Iy][Iz][k][1];
						if (phaseStat[Ix][Iy][Iz] != 1) {
							//Jac1Row[JRowIndex]=(Vb/Dt)*porpor*sat[Ix][Iy][Iz][2]*dE[Ix][Iy][Iz][k][1];
							Jac1Row[JRowIndex] = (Vb / Dt)*porpor*sat[Ix][Iy][Iz][2] * dE[Ix][Iy][Iz][k][1] - dRsidedxg;
							Jac1Col[JRowIndex] = jacCol + Nc + k - reCol;
							JRowIndex++;
						}

						/////////////////////////////////////////////////Sadeq///////////////////////////////////
						if (fphaseStat[Ix][Iy][Iz] == 1) {
							//dRsidefdxl = 0;
							Jac1Row[JRowIndex] = dRsidefdxl;
							Jac1Col[JRowIndex] = FracEq + k;
							JRowIndex++;
						}
						else if (fphaseStat[Ix][Iy][Iz] == (-1)) {
							//dRsidefdxg = 0;
							Jac1Row[JRowIndex] = dRsidefdxg;
							Jac1Col[JRowIndex] = FracEq + k;
							JRowIndex++;
						}
						else {
							//dRsidefdxl = 0;
							Jac1Row[JRowIndex] = dRsidefdxl;
							Jac1Col[JRowIndex] = FracEq + k;
							JRowIndex++;
							//dRsidefdxg = 0;
							Jac1Row[JRowIndex] = dRsidefdxg;
							Jac1Col[JRowIndex] = FracEq + Nc + k;
							JRowIndex++;
						}
						////////////////////////sadeq/////////////////////////
					}
					//MatSetValues(Petsc_B, 1, &RowNO, JRowIndex, Jac1Col, Jac1Row, INSERT_VALUES);

				}
				else {

					LSide = (Vb / Dt)*(porpor*watRo*WAT_M_RO*sat[Ix][Iy][Iz][0] - preProp[Ix][Iy][Iz][Nc]);
					RSide = Wtran[Ix + 1][Iy + 1][Iz + 1][0] * (P[Ix + 2][Iy + 1][Iz + 1][0] - P[Ix + 1][Iy + 1][Iz + 1][0]) - Wtran[Ix][Iy + 1][Iz + 1][0] * (P[Ix + 1][Iy + 1][Iz + 1][0] - P[Ix][Iy + 1][Iz + 1][0]);
					RSide += Wtran[Ix + 1][Iy + 1][Iz + 1][1] * (P[Ix + 1][Iy + 2][Iz + 1][0] - P[Ix + 1][Iy + 1][Iz + 1][0]) - Wtran[Ix + 1][Iy][Iz + 1][1] * (P[Ix + 1][Iy + 1][Iz + 1][0] - P[Ix + 1][Iy][Iz + 1][0]);
					RSide += Wtran[Ix + 1][Iy + 1][Iz + 1][2] * (P[Ix + 1][Iy + 1][Iz + 2][0] - P[Ix + 1][Iy + 1][Iz + 1][0]) - Wtran[Ix + 1][Iy + 1][Iz][2] * (P[Ix + 1][Iy + 1][Iz + 1][0] - P[Ix + 1][Iy + 1][Iz][0]);

					RSide += G_ACC * watRo*Wtran[Ix + 1][Iy + 1][Iz + 1][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - G_ACC * watRo*Wtran[Ix][Iy + 1][Iz + 1][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
					RSide += G_ACC * watRo*Wtran[Ix + 1][Iy + 1][Iz + 1][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - G_ACC * watRo*Wtran[Ix + 1][Iy][Iz + 1][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
					RSide += G_ACC * watRo*Wtran[Ix + 1][Iy + 1][Iz + 1][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]) - G_ACC * watRo*Wtran[Ix + 1][Iy + 1][Iz][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);

					/////////////////////////////Transfer Function


					RSide += ZERO_CONV * SI_C* watRo *WAT_M_RO * ShapeFactor_2(Ix, Iy, Iz) * f_m_relperm[0] / watMu * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) *((fP[Ix + 1][Iy + 1][Iz + 1][0] - P[Ix + 1][Iy + 1][Iz + 1][0]) + (blockFProps[Ix][Iy][Iz][BLOCK_PC][0] - fblockFProps[Ix][Iy][Iz][BLOCK_PC][0]));

					////////////////////////////////////////////
					RSide += Qw;


					dLsidedp = (Vb / Dt)*watRo*WAT_M_RO*sat[Ix][Iy][Iz][0] * dPordp;
					dLsidedSw = (Vb / Dt)*(porpor*watRo*WAT_M_RO);


					dRsidedp = 0;
					dRsidefdp = 0;

					// Transfer Function dRside dp fdp
					dRsidedp = ZERO_CONV * -SI_C * watRo *WAT_M_RO * ShapeFactor_2(Ix, Iy, Iz) * f_m_relperm[0] / watMu * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]);
					dRsidefdp = ZERO_CONV * SI_C * watRo *WAT_M_RO * ShapeFactor_2(Ix, Iy, Iz) * f_m_relperm[0] / watMu * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]);


					dRsidedp += Wtran[Ix + 1][Iy + 1][Iz + 1][0] + Wtran[Ix][Iy + 1][Iz + 1][0];
					dRsidedp += Wtran[Ix + 1][Iy + 1][Iz + 1][1] + Wtran[Ix + 1][Iy][Iz + 1][1];
					dRsidedp += Wtran[Ix + 1][Iy + 1][Iz + 1][2] + Wtran[Ix + 1][Iy + 1][Iz][2];


					//jac[BLNo+2*Nc][BLNo+(2*Nc)]=PCoeff*(dLsidedp+dRsidedp);
					Jac1Row[JRowIndex] = PCoeff * (dLsidedp + dRsidedp + PIw);
					Jac1Col[JRowIndex] = jacCol + (2 * Nc) - reCol;
					JRowIndex++;

					//jac[BLNo+2*Nc][BLNo+(2*Nc+1)]=dLsidedSw;

					dRsidedSw = 0;
					dRsidefdSw = 0;

					// Transfer function drside dsw
					dRsidedSw += ZERO_CONV * SI_C *WAT_M_RO* f_m_drelperm[1][0] * watRo * ShapeFactor_2(Ix, Iy, Iz) / watMu * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) *((fP[Ix + 1][Iy + 1][Iz + 1][0] - P[Ix + 1][Iy + 1][Iz + 1][0]) + (blockFProps[Ix][Iy][Iz][BLOCK_PC][0] - fblockFProps[Ix][Iy][Iz][BLOCK_PC][0]));
					dRsidefdSw += ZERO_CONV * SI_C *WAT_M_RO* f_m_drelperm[1][5] * watRo * ShapeFactor_2(Ix, Iy, Iz) / watMu * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) *((fP[Ix + 1][Iy + 1][Iz + 1][0] - P[Ix + 1][Iy + 1][Iz + 1][0]) + (blockFProps[Ix][Iy][Iz][BLOCK_PC][0] - fblockFProps[Ix][Iy][Iz][BLOCK_PC][0]));


					if (Ix < (Nx - 1)) {
						if (phaseStat[Ix + 1][Iy][Iz]) reCol2 = Nc;
						else reCol2 = 0;
						mBLNo = preConRow[Iz*(Nx*Ny) + Iy * Nx + Ix + 1] - reCol2;
						Jac1Row[JRowIndex] = PCoeff * (-Wtran[Ix + 1][Iy + 1][Iz + 1][0]);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;

						dsw = dWtran[Ix + 1][Iy + 1][Iz + 1][0] * (P[Ix + 2][Iy + 1][Iz + 1][0] - P[Ix + 1][Iy + 1][Iz + 1][0]) + G_ACC * watRo*dWtran[Ix + 1][Iy + 1][Iz + 1][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (transS[Ix + 1][Iy + 1][Iz + 1][2][0]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;
					}
					if (Ix > 0) {
						if (phaseStat[Ix - 1][Iy][Iz]) reCol2 = Nc;
						else reCol2 = 0;
						mBLNo = preConRow[Iz*(Nx*Ny) + Iy * Nx + Ix - 1] - reCol2;
						Jac1Row[JRowIndex] = PCoeff * (-Wtran[Ix][Iy + 1][Iz + 1][0]);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;

						dsw = -dWtran[Ix][Iy + 1][Iz + 1][0] * (P[Ix + 1][Iy + 1][Iz + 1][0] - P[Ix][Iy + 1][Iz + 1][0]) - G_ACC * watRo*dWtran[Ix][Iy + 1][Iz + 1][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						if (!transS[Ix][Iy + 1][Iz + 1][2][0]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;
					}


					if (Iy < (Ny - 1)) {
						if (phaseStat[Ix][Iy + 1][Iz]) reCol2 = Nc;
						else reCol2 = 0;
						mBLNo = preConRow[Iz*(Nx*Ny) + (Iy + 1)*Nx + Ix] - reCol2;
						Jac1Row[JRowIndex] = PCoeff * (-Wtran[Ix + 1][Iy + 1][Iz + 1][1]);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;

						dsw = dWtran[Ix + 1][Iy + 1][Iz + 1][1] * (P[Ix + 1][Iy + 2][Iz + 1][0] - P[Ix + 1][Iy + 1][Iz + 1][0]) + G_ACC * watRo*dWtran[Ix + 1][Iy + 1][Iz + 1][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (transS[Ix + 1][Iy + 1][Iz + 1][2][1]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;
					}
					if (Iy > 0) {
						if (phaseStat[Ix][Iy - 1][Iz]) reCol2 = Nc;
						else reCol2 = 0;
						mBLNo = preConRow[Iz*(Nx*Ny) + (Iy - 1)*Nx + Ix] - reCol2;
						Jac1Row[JRowIndex] = PCoeff * (-Wtran[Ix + 1][Iy][Iz + 1][1]);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;

						dsw = -dWtran[Ix + 1][Iy][Iz + 1][1] * (P[Ix + 1][Iy + 1][Iz + 1][0] - P[Ix + 1][Iy][Iz + 1][0]) - G_ACC * watRo*dWtran[Ix + 1][Iy][Iz + 1][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						if (!transS[Ix + 1][Iy][Iz + 1][2][1]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;
					}


					if (Iz < (Nz - 1)) {
						if (phaseStat[Ix][Iy][Iz + 1]) reCol2 = Nc;
						else reCol2 = 0;
						mBLNo = preConRow[(Iz + 1)*(Nx*Ny) + Iy * Nx + Ix] - reCol2;
						Jac1Row[JRowIndex] = PCoeff * (-Wtran[Ix + 1][Iy + 1][Iz + 1][2]);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;

						dsw = dWtran[Ix + 1][Iy + 1][Iz + 1][2] * (P[Ix + 1][Iy + 1][Iz + 2][0] - P[Ix + 1][Iy + 1][Iz + 1][0]) + G_ACC * watRo*dWtran[Ix + 1][Iy + 1][Iz + 1][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (transS[Ix + 1][Iy + 1][Iz + 1][2][2]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;
					}
					if (Iz > 0) {
						if (phaseStat[Ix][Iy][Iz - 1]) reCol2 = Nc;
						else reCol2 = 0;
						mBLNo = preConRow[(Iz - 1)*(Nx*Ny) + Iy * Nx + Ix] - reCol2;
						Jac1Row[JRowIndex] = PCoeff * (-Wtran[Ix + 1][Iy + 1][Iz][2]);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;

						dsw = -dWtran[Ix + 1][Iy + 1][Iz][2] * (P[Ix + 1][Iy + 1][Iz + 1][0] - P[Ix + 1][Iy + 1][Iz][0]) - G_ACC * watRo*dWtran[Ix + 1][Iy + 1][Iz][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						if (!transS[Ix + 1][Iy + 1][Iz][2][2]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;
					}

					Jac1Row[JRowIndex] = dLsidedSw - dRsidedSw;
					Jac1Col[JRowIndex] = jacCol + (2 * Nc + 1) - reCol;
					JRowIndex++;

					/////////////////////////////////////////////////Sadeq///////////////////////////////////
					//dRsidefdp = 0;
					Jac1Row[JRowIndex] = PCoeff * dRsidefdp;
					Jac1Col[JRowIndex] = FracEq + 2 * Nc - reColF1;
					JRowIndex++;
					//dRsidefdSw = 0;
					Jac1Row[JRowIndex] = dRsidefdSw;
					Jac1Col[JRowIndex] = FracEq + 2 * Nc + 1 - reColF1;
					JRowIndex++;
					////////////////////////sadeq/////////////////////////



				}
				
			}
			
			else if (BENo < (Nc + 2)) {
				Sxg = 0;

				for (i = 0; i < Nc; i++) {
					Sxg += comp[Ix][Iy][Iz][i][1];

					Jac1Row[JRowIndex] = 1;
					Jac1Col[JRowIndex] = jacCol + Nc + i - reCol;
					JRowIndex++;
				}
			}
			else if (BENo < (Nc + 3)) {
				Jac1Row[JRowIndex] = 1;
				Jac1Col[JRowIndex] = jacCol + 2 * Nc + 1 - reCol;
				JRowIndex++;				

				Jac1Row[JRowIndex] = 1;
				Jac1Col[JRowIndex] = jacCol + 2 * Nc + 3 - reCol - reCol3;
				JRowIndex++;
			}
			else {
				std::cout << Ix << '\t' << Iy << '\t' << Iz << '\t' << BENo << "\tMatrix phase stat: " << phaseStat[Ix][Iy][Iz] << std::endl;

				TerM("Global Index Error!");
			}


			break;

		case 0:
			reCol = 0;
			reCol3 = 0;

			if (BENo < Nc) {
				

				Al = 0;
				Bl = 0;
				Ag = 0;
				Bg = 0;
				for (i = 0; i < Nc; i++) {
					Bl += comp[Ix][Iy][Iz][i][0] * fluidProp[i][EOS_B];
					Bg += comp[Ix][Iy][Iz][i][1] * fluidProp[i][EOS_B];
					for (j = 0; j < Nc; j++) {
						tempSQR = sqrt(fluidProp[i][EOS_A] * fluidProp[j][EOS_A])*bic[i][j];
						Al += comp[Ix][Iy][Iz][i][0] * comp[Ix][Iy][Iz][j][0] * tempSQR;
						Ag += comp[Ix][Iy][Iz][i][1] * comp[Ix][Iy][Iz][j][1] * tempSQR;
					}
				}

				Cal = Al;
				Cbl = Bl;
				Cag = Ag;
				Cbg = Bg;
				Al *= P[Ix + 1][Iy + 1][Iz + 1][1] / (RGAS*RGAS*resTemp*resTemp);
				Bl *= P[Ix + 1][Iy + 1][Iz + 1][1] / (RGAS*resTemp);
				Ag *= P[Ix + 1][Iy + 1][Iz + 1][2] / (RGAS*RGAS*resTemp*resTemp);
				Bg *= P[Ix + 1][Iy + 1][Iz + 1][2] / (RGAS*resTemp);

				dAdpl = Cal / (RGAS*RGAS*resTemp*resTemp);
				dAdpg = Cag / (RGAS*RGAS*resTemp*resTemp);
				dBdpl = Cbl / (RGAS*resTemp);
				dBdpg = Cbg / (RGAS*resTemp);


				Zl = P[Ix + 1][Iy + 1][Iz + 1][1] / (blockFProps[Ix][Iy][Iz][RO][0] * RGAS*resTemp);
				Zg = P[Ix + 1][Iy + 1][Iz + 1][2] / (blockFProps[Ix][Iy][Iz][RO][1] * RGAS*resTemp);


				dZdpl = (1 - dE[Ix][Iy][Iz][Nc][0] * RGAS*resTemp*Zl)*(Zl / P[Ix + 1][Iy + 1][Iz + 1][1]);
				dZdpg = (1 - dE[Ix][Iy][Iz][Nc][1] * RGAS*resTemp*Zg)*(Zg / P[Ix + 1][Iy + 1][Iz + 1][2]);

				if (SRK) {
					d1 = 1;
					d2 = 0;
				}
				else if (PR) {
					d1 = 1 + SQRT2;
					d2 = 1 - SQRT2;
				}

				i = BENo;
				
				tl = 0;
				tg = 0;
				for (j = 0; j < Nc; j++) {	//FFSS
					tempSQR = sqrt(fluidProp[i][EOS_A] * fluidProp[j][EOS_A])*bic[i][j];
					tl += comp[Ix][Iy][Iz][j][0] * tempSQR;
					tg += comp[Ix][Iy][Iz][j][1] * tempSQR;
				}
				t1l = fluidProp[i][EOS_B] / Cbl;
				t1g = fluidProp[i][EOS_B] / Cbg;

				EEl = 2 * tl / Cal - t1l;
				EEg = 2 * tg / Cag - t1g;

				DDl = Al / (Bl*(d1 - d2));
				DDg = Ag / (Bg*(d1 - d2));

				FFl = log((Zl + d2 * Bl) / (Zl + d1 * Bl));
				FFg = log((Zg + d2 * Bg) / (Zg + d1 * Bg));

				phiL = exp(t1l*(Zl - 1) - log(Zl - Bl) + DDl * EEl*FFl);
				phiG = exp(t1g*(Zg - 1) - log(Zg - Bg) + DDg * EEg*FFg);

				dAAdpl = fluidProp[i][EOS_B] * dZdpl / Cbl;
				dAAdpg = fluidProp[i][EOS_B] * dZdpg / Cbg;

				dBBdpl = (dBdpl - dZdpl) / (Zl - Bl);
				dBBdpg = (dBdpg - dZdpg) / (Zg - Bg);

				dDDdpl = (Bl*dAdpl - Al * dBdpl) / (Bl*Bl*(d1 - d2));
				dDDdpg = (Bg*dAdpg - Ag * dBdpg) / (Bg*Bg*(d1 - d2));

				dFFdpl = (dZdpl + d2 * dBdpl) / (Zl + d2 * Bl) - (dZdpl + d1 * dBdpl) / (Zl + d1 * Bl);
				dFFdpg = (dZdpg + d2 * dBdpg) / (Zg + d2 * Bg) - (dZdpg + d1 * dBdpg) / (Zg + d1 * Bg);

				dPhidpl = phiL * (dAAdpl + dBBdpl + EEl * (dDDdpl*FFl + DDl * dFFdpl));
				dPhidpg = phiG * (dAAdpg + dBBdpg + EEg * (dDDdpg*FFg + DDg * dFFdpg));

				//jac[BLNo+i][BLNo+(2*Nc)]=PCoeff*(comp[Ix][Iy][Iz][i][0]*(phiL+P[Ix+1][Iy+1][Iz+1][1]*dPhidpl)-comp[Ix][Iy][Iz][i][1]*(phiG+P[Ix+1][Iy+1][Iz+1][2]*dPhidpg));
				Jac1Row[JRowIndex] = PCoeff * (comp[Ix][Iy][Iz][i][0] * (phiL + P[Ix + 1][Iy + 1][Iz + 1][1] * dPhidpl) - comp[Ix][Iy][Iz][i][1] * (phiG + P[Ix + 1][Iy + 1][Iz + 1][2] * dPhidpg));
				Jac1Col[JRowIndex] = jacCol + (2 * Nc);
				JRowIndex++;
				//Jac1Col[JRowIndex] = jacCol + (2 * Nc);
				//JRowIndex++;



				//i: Row of Jac
				//k: Col of Jac
				for (k = 0; k < Nc; k++) {		//for all x
					dAdxl = 0;
					dAdxg = 0;
					for (n = 0; n < Nc; n++) {		//SSFF
						tempSQR = sqrt(fluidProp[k][EOS_A] * fluidProp[n][EOS_A])*bic[k][n];
						dAdxl += comp[Ix][Iy][Iz][n][0] * tempSQR;
						dAdxg += comp[Ix][Iy][Iz][n][1] * tempSQR;
						//This loop can be reduced
					}
					dAdxl *= 2 * P[Ix + 1][Iy + 1][Iz + 1][1] / (RGAS*RGAS*resTemp*resTemp);
					dAdxg *= 2 * P[Ix + 1][Iy + 1][Iz + 1][2] / (RGAS*RGAS*resTemp*resTemp);
					dBdxl = fluidProp[k][EOS_B] * P[Ix + 1][Iy + 1][Iz + 1][1] / (RGAS*resTemp);
					dBdxg = fluidProp[k][EOS_B] * P[Ix + 1][Iy + 1][Iz + 1][2] / (RGAS*resTemp);

					dZdxl = -dE[Ix][Iy][Iz][k][0] * RGAS*resTemp*Zl*Zl / P[Ix + 1][Iy + 1][Iz + 1][1];
					dZdxg = -dE[Ix][Iy][Iz][k][1] * RGAS*resTemp*Zg*Zg / P[Ix + 1][Iy + 1][Iz + 1][2];

					dAAdxl = -fluidProp[k][EOS_B] * fluidProp[i][EOS_B] * (Zl - 1) / (Cbl*Cbl) + fluidProp[i][EOS_B] * dZdxl / Cbl;
					dAAdxg = -fluidProp[k][EOS_B] * fluidProp[i][EOS_B] * (Zg - 1) / (Cbg*Cbg) + fluidProp[i][EOS_B] * dZdxg / Cbg;

					dBBdxl = (dBdxl - dZdxl) / (Zl - Bl);
					dBBdxg = (dBdxg - dZdxg) / (Zg - Bg);

					dDDdxl = (dAdxl*Bl - dBdxl * Al) / (Bl*Bl*(d1 - d2));
					dDDdxg = (dAdxg*Bg - dBdxg * Ag) / (Bg*Bg*(d1 - d2));

					dFFdxl = (dZdxl + d2 * dBdxl) / (Zl + d2 * Bl) - (dZdxl + d1 * dBdxl) / (Zl + d1 * Bl);
					dFFdxg = (dZdxg + d2 * dBdxg) / (Zg + d2 * Bg) - (dZdxg + d1 * dBdxg) / (Zg + d1 * Bg);

					tempSQR = sqrt(fluidProp[i][EOS_A] * fluidProp[k][EOS_A])*bic[i][k];
					dEEdxl = 2 * (tempSQR / Cal - dAdxl * RGAS*RGAS*resTemp*resTemp*tl / (P[Ix + 1][Iy + 1][Iz + 1][1] * Cal*Cal)) + fluidProp[i][EOS_B] * fluidProp[k][EOS_B] / (Cbl*Cbl);
					dEEdxg = 2 * (tempSQR / Cag - dAdxg * RGAS*RGAS*resTemp*resTemp*tg / (P[Ix + 1][Iy + 1][Iz + 1][2] * Cag*Cag)) + fluidProp[i][EOS_B] * fluidProp[k][EOS_B] / (Cbg*Cbg);

					dPhidxl = phiL * (dAAdxl + dBBdxl + dDDdxl * EEl*FFl + DDl * dEEdxl*FFl + DDl * EEl*dFFdxl);
					dPhidxg = phiG * (dAAdxg + dBBdxg + dDDdxg * EEg*FFg + DDg * dEEdxg*FFg + DDg * EEg*dFFdxg);

					if (i == k) {
						//jac[BLNo+i][BLNo+k]=P[Ix+1][Iy+1][Iz+1][1]*phiL+P[Ix+1][Iy+1][Iz+1][1]*comp[Ix][Iy][Iz][i][0]*dPhidxl;
						Jac1Row[JRowIndex] = P[Ix + 1][Iy + 1][Iz + 1][1] * phiL + P[Ix + 1][Iy + 1][Iz + 1][1] * comp[Ix][Iy][Iz][i][0] * dPhidxl;
						Jac1Col[JRowIndex] = jacCol + k;
						JRowIndex++;
						//JRowIndex++;

						//jac[BLNo+i][BLNo+Nc+k]=-(P[Ix+1][Iy+1][Iz+1][2]*phiG+P[Ix+1][Iy+1][Iz+1][2]*comp[Ix][Iy][Iz][i][1]*dPhidxg);
						Jac1Row[JRowIndex] = -(P[Ix + 1][Iy + 1][Iz + 1][2] * phiG + P[Ix + 1][Iy + 1][Iz + 1][2] * comp[Ix][Iy][Iz][i][1] * dPhidxg);
						Jac1Col[JRowIndex] = jacCol + Nc + k;
						JRowIndex++;
						//JRowIndex++;
					}
					else {
						//jac[BLNo+i][BLNo+k]=P[Ix+1][Iy+1][Iz+1][1]*comp[Ix][Iy][Iz][i][0]*dPhidxl;
						Jac1Row[JRowIndex] = P[Ix + 1][Iy + 1][Iz + 1][1] * comp[Ix][Iy][Iz][i][0] * dPhidxl;
						Jac1Col[JRowIndex] = jacCol + k;
						JRowIndex++;
						//JRowIndex++;

						//jac[BLNo+i][BLNo+Nc+k]=-P[Ix+1][Iy+1][Iz+1][2]*comp[Ix][Iy][Iz][i][1]*dPhidxg;
						Jac1Row[JRowIndex] = -P[Ix + 1][Iy + 1][Iz + 1][2] * comp[Ix][Iy][Iz][i][1] * dPhidxg;
						Jac1Col[JRowIndex] = jacCol + Nc + k;
						JRowIndex++;
						//JRowIndex++;
					}


				}
				//MatSetValues(Petsc_B, 1, &RowNO, JRowIndex, Jac1Col, Jac1Row, INSERT_VALUES);
			}

						
			else if (BENo < (2 * Nc + 1)) {

#pragma region sadeq
				
				fporpor = fporosity[Ix][Iy][Iz] * (1 + cpor * (fP[Ix + 1][Iy + 1][Iz + 1][1] - refP) + dcpor * (fP[Ix + 1][Iy + 1][Iz + 1][1] - refP)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - refP));
				fdPordp = fporosity[Ix][Iy][Iz] * (cpor + 2 * dcpor*(fP[Ix + 1][Iy + 1][Iz + 1][1] - refP));


				if (P[Ix + 1][Iy + 1][Iz + 1][1] >= fP[Ix + 1][Iy + 1][Iz + 1][1])
				{
					f_m_relperm[1] = relPerm[Ix][Iy][Iz][1];//oil relperm between matrix and fracture
					f_m_drelperm[1][1] = dRelPerm[Ix][Iy][Iz][1];//dkrodsw
					f_m_drelperm[1][2] = dRelPerm[Ix][Iy][Iz][2];//dkrodsg
					f_m_drelperm[1][4] = dRelPerm[Ix][Iy][Iz][4];//dkrodso

					f_m_drelperm[1][9] = 0;
					f_m_drelperm[1][7] = 0;
					f_m_drelperm[1][6] = 0;
				}
				else
				{
					f_m_relperm[1] = frelPerm[Ix][Iy][Iz][1];
					f_m_drelperm[1][6] = fdRelPerm[Ix][Iy][Iz][1];//fdkrofdsw
					f_m_drelperm[1][7] = fdRelPerm[Ix][Iy][Iz][2];//fdkrofdsg
					f_m_drelperm[1][9] = fdRelPerm[Ix][Iy][Iz][4];//fdkrofdso

					f_m_drelperm[1][4] = 0;
					f_m_drelperm[1][2] = 0;
					f_m_drelperm[1][1] = 0;
				}
				if (P[Ix + 1][Iy + 1][Iz + 1][2] >= fP[Ix + 1][Iy + 1][Iz + 1][2])
				{
					f_m_relperm[2] = relPerm[Ix][Iy][Iz][2];//gas relperm between matrix and fracture
					f_m_drelperm[2][3] = dRelPerm[Ix][Iy][Iz][3];//dkrgdsg

					f_m_drelperm[2][8] = 0;
				}
				else
				{
					f_m_relperm[2] = frelPerm[Ix][Iy][Iz][2];
					f_m_drelperm[2][8] = fdRelPerm[Ix][Iy][Iz][3];//fdkrgfdsg

					f_m_drelperm[2][3] = 0;
				}

				if (P[Ix + 1][Iy + 1][Iz + 1][0] >= fP[Ix + 1][Iy + 1][Iz + 1][0])
				{
					f_m_relperm[0] = relPerm[Ix][Iy][Iz][0];
					f_m_drelperm[1][0] = dRelPerm[Ix][Iy][Iz][0];//dkrwdsw

					f_m_drelperm[1][5] = 0;
				}
				else
				{
					f_m_relperm[0] = frelPerm[Ix][Iy][Iz][0];//water relperm between matrix and fracture
					f_m_drelperm[1][5] = fdRelPerm[Ix][Iy][Iz][0];//fdkrwfdsw

					f_m_drelperm[1][0] = 0;
				}
#pragma endregion

#pragma region Wells&Commons
				porpor = porosity[Ix][Iy][Iz] * (1 + cpor * (P[Ix + 1][Iy + 1][Iz + 1][1] - refP) + dcpor * (P[Ix + 1][Iy + 1][Iz + 1][1] - refP)*(P[Ix + 1][Iy + 1][Iz + 1][1] - refP));
				dPordp = porosity[Ix][Iy][Iz] * (cpor + 2 * dcpor*(P[Ix + 1][Iy + 1][Iz + 1][1] - refP));




				Qw = 0;
				Qo = 0;
				Qg = 0;

				PIw = 0;
				PIo = 0;
				PIg = 0;

				Vb = gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz];

				iWell = -1;
				for (i = 0; i < wellNO; i++) {
					if ((Ix == welli[i][1]) && (Iy == welli[i][2]) && (Iz >= welli[i][3]) && (Iz <= welli[i][4])) {
						Re = Calc_Re(Ix, Iy, Iz, i);
						if ((welli[i][0] == 0) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {		//Constant Pwf Pressure - Production
																																																			//Re = 0.14*sqrt(sqrt(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0])*gridDim[Ix] * gridDim[Ix] + sqrt(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1])*gridDim[Nx + Iy] * gridDim[Nx + Iy]);
																																																			//Re /= 0.5*(pow(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0], 0.25) + pow(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1], 0.25));
							if (Re <= wellf[i][3])
								Re += wellf[i][3];

							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][1] * perm[Ix][Iy][Iz][0]) / (log(Re / wellf[i][3]) + wellf[i][2]);

							PIw = S1 * watRo*WAT_M_RO*relPerm[Ix][Iy][Iz][0] / watMu;
							PIo = S1 * blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / blockFProps[Ix][Iy][Iz][BMU][0];
							PIg = S1 * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / blockFProps[Ix][Iy][Iz][BMU][1];

							Qw = PIw * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][0]);
							Qo = PIo * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][1]);
							Qg = PIg * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][2]);

							
							/*if ((wellf[i][1]) && ((-Qo) > wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								//std::cout << "HIT!\n";
								SSo1 = 0;
								for (j = welli[i][3]; j <= welli[i][4]; j++) {
									S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
									SSo1 += blockFProps[Ix][Iy][j][RO][0] * S2*relPerm[Ix][Iy][j][1] / blockFProps[Ix][Iy][Iz][BMU][0];
									S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
									SSo1 += fblockFProps[Ix][Iy][j][RO][0] * S2*frelPerm[Ix][Iy][j][1] / fblockFProps[Ix][Iy][Iz][BMU][0];
								}
								S1 = gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][0] * perm[Ix][Iy][Iz][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);

								if (SSo1) {
									if (SURFACE_RATES) Qo = -S1 * oilRateCh(Ix, Iy, Iz, relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * blockFProps[Ix][Iy][Iz][BMU][0] / (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * blockFProps[Ix][Iy][Iz][BMU][1]))*wellf[i][1] * blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / (blockFProps[Ix][Iy][Iz][BMU][0] * SSo1);
									else Qo = -S1 * wellf[i][1] * blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / (blockFProps[Ix][Iy][Iz][BMU][0] * SSo1);
								}
								Qw = Qo * relPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*blockFProps[Ix][Iy][Iz][BMU][0] / (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * watMu);
								Qg = Qo * relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * blockFProps[Ix][Iy][Iz][BMU][0] / (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * blockFProps[Ix][Iy][Iz][BMU][1]);

							}*/

							if (P[Ix + 1][Iy + 1][Iz + 1][1] < WELL_MIN_P) {
								Qw = 0;
								Qo = 0;
								Qg = 0;

								PIw = 0;
								PIo = 0;
								PIg = 0;
							}
							else if ((wellf[i][1]) && ((-Qo) > wellf[i][1])) {
								Qo = -wellf[i][1];
								Qw = Qo * relPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*blockFProps[Ix][Iy][Iz][BMU][0] / (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * watMu);
								Qg = Qo * relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * blockFProps[Ix][Iy][Iz][BMU][0] / (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * blockFProps[Ix][Iy][Iz][BMU][1]);
								PIw = 0;
								PIo = 0;
								PIg = 0;
							}
							if ((Qw > 0) || ((Qw - Qw) != 0)) {
								Qw = 0;
								PIw = 0;
							}
							if ((Qo > 0) || ((Qo - Qo) != 0)) {
								Qo = 0;
								PIo = 0;
							}
							if ((Qg > 0) || ((Qg - Qg) != 0)) {
								Qg = 0;
								PIg = 0;
							}

							QoProduced = Qo;
							Qoprod += Qo + Qg;
							//MethQM += Qo * (1 - comp[Ix][Iy][Iz][0][0]) + Qg * (1 - comp[Ix][Iy][Iz][0][1]);
							//Qoprod = Qo*(1 - comp[Ix][Iy][Iz][0][0])+ Qg*(1 - comp[Ix][Iy][Iz][0][1]);
							WellCompSadeq[0] += Qo * (comp[Ix][Iy][Iz][0][0]) + Qg * (comp[Ix][Iy][Iz][0][1]);
							WellCompSadeq[1] += Qo * (comp[Ix][Iy][Iz][1][0]) + Qg * (comp[Ix][Iy][Iz][1][1]);
							WellCompSadeq[2] += Qo * (comp[Ix][Iy][Iz][2][0]) + Qg * (comp[Ix][Iy][Iz][2][1]);
							WellCompSadeq2[0] += (Qo*(comp[Ix][Iy][Iz][0][0]) + Qg * (comp[Ix][Iy][Iz][0][1]));
							WellCompSadeq2[1] += (Qo*(comp[Ix][Iy][Iz][1][0]) + Qg * (comp[Ix][Iy][Iz][1][1]));
							WellCompSadeq2[2] += (Qo*(comp[Ix][Iy][Iz][2][0]) + Qg * (comp[Ix][Iy][Iz][2][1]));
						}

						else if ((welli[i][0] == 1) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {			//Constant Pwf- Gas Production
																																																						//Re = 0.14*sqrt(sqrt(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0])*gridDim[Ix] * gridDim[Ix] + sqrt(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1])*gridDim[Nx + Iy] * gridDim[Nx + Iy]);
																																																						//Re /= 0.5*(pow(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0], 0.25) + pow(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1], 0.25));
																																																						//Re = Calc_Re(Ix, Iy, Iz, i);
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][1] * perm[Ix][Iy][Iz][0]) / (log(Re / wellf[i][3]) + wellf[i][2]);

							PIw = S1 * watRo*WAT_M_RO*relPerm[Ix][Iy][Iz][0] / watMu;
							PIo = S1 * blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / blockFProps[Ix][Iy][Iz][BMU][0];
							PIg = S1 * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / blockFProps[Ix][Iy][Iz][BMU][1];

							Qw = PIw * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][0]);
							Qo = PIo * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][1]);
							Qg = PIg * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][2]);

							if ((Qw > 0) || ((Qw - Qw) != 0)) {
								Qw = 0;
								PIw = 0;
							}
							if ((Qo > 0) || ((Qo - Qo) != 0)) {
								Qo = 0;
								PIo = 0;
							}
							if ((Qg > 0) || ((Qg - Qg) != 0)) {
								Qg = 0;
								PIg = 0;
							}

							if ((wellf[i][1]) && ((-Qg) > wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								SSo1 = 0;
								for (j = welli[i][3]; j <= welli[i][4]; j++) {
									S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
									SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][Iz][BMU][1];
									S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
									SSo1 += fblockFProps[Ix][Iy][j][RO][1] * S2*frelPerm[Ix][Iy][j][2] / fblockFProps[Ix][Iy][Iz][BMU][1];
								}
								S1 = gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][0] * perm[Ix][Iy][Iz][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);

								if (SSo1) {
									if (SURFACE_RATES) Qg = -S1 * gasRateCh(Ix, Iy, Iz, (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * blockFProps[Ix][Iy][Iz][BMU][1]) / (relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * blockFProps[Ix][Iy][Iz][BMU][0]))*wellf[i][1] * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / (blockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
									else Qg = -S1 * wellf[i][1] * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / (blockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
								}
								Qw = Qg * relPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*blockFProps[Ix][Iy][Iz][BMU][1] / (relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * watMu);
								Qo = Qg * relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * blockFProps[Ix][Iy][Iz][BMU][1] / (relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * blockFProps[Ix][Iy][Iz][BMU][0]);

							}

							//QoProd=oilRateCh2(Ix, Iy, Iz, -Qo, -Qg);
							QoProduced = Qo;
						}

						else if ((welli[i][0] == 2) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {			//Constant Pwf Pressure - Water Injection
																																																						//Re = 0.14*sqrt(sqrt(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0])*gridDim[Ix] * gridDim[Ix] + sqrt(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1])*gridDim[Nx + Iy] * gridDim[Nx + Iy]);
																																																						//Re /= 0.5*(pow(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0], 0.25) + pow(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1], 0.25));
																																																						//Re = Calc_Re(Ix, Iy, Iz, i);
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][1] * perm[Ix][Iy][Iz][0]) / (log(Re / wellf[i][3]) + wellf[i][2]);

							PIw = S1 * watRo*WAT_M_RO*relPerm[Ix][Iy][Iz][0] / watMu;
							Qw = PIw * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][0]);


							if ((Qw < 0) || ((Qw - Qw) != 0)) {
								Qw = 0;
								PIw = 0;
							}

							if ((wellf[i][1]) && (Qw > wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								SSo1 = 0;
								for (j = welli[i][3]; j <= welli[i][4]; j++) {
									S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
									SSo1 += watRo * S2*relPerm[Ix][Iy][j][0] / watMu;
									S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
									SSo1 += watRo * S2*frelPerm[Ix][Iy][j][0] / watMu;
								}
								S1 = gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][0] * perm[Ix][Iy][Iz][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);

								if (SSo1) Qw = S1 * wellf[i][1] * watRo*WAT_M_RO * relPerm[Ix][Iy][Iz][0] / (watMu * SSo1);
							}
						}

						else if ((welli[i][0] == 3) && (((fabs(simTime - wellf[i][Nc + 4]) <= TSTEPIF) || (fabs(simTime - wellf[i][Nc + 5]) <= TSTEPIF)) || ((simTime >= wellf[i][Nc + 4]) && (simTime <= wellf[i][Nc + 5])))) {			//Constant Pwf Pressure - Gas Injection
																																																											//Re = 0.14*sqrt(sqrt(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0])*gridDim[Ix] * gridDim[Ix] + sqrt(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1])*gridDim[Nx + Iy] * gridDim[Nx + Iy]);
																																																											//Re /= 0.5*(pow(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0], 0.25) + pow(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1], 0.25));
							for (j = 0; j < Nc; j++) IComp[j] = wellf[i][4 + j];
							FlashInjection(IComp, wellf[i][0], IOComp, IGComp, iOF, iGF, iOD, iGD, iOV, iGV);
							//Re = Calc_Re(Ix, Iy, Iz, i);
							if (Re <= wellf[i][3])
								Re += wellf[i][3];

							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][1] * perm[Ix][Iy][Iz][0]) / (log(Re / wellf[i][3]) + wellf[i][2]);
							//S2 = sgt[Nsgt-1][1] / iGV;
							//S2 = relPerm[Ix][Iy][Iz][2] / blockFProps[Ix][Iy][Iz][BMU][1];

							PIg = S1 * iGD * sgt[Nsgt - 1][1] * iGF / iGV;
							Qg = PIg * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][2]);
							//PIo = S1*iOD * swt[0][2]*iOF / iOV;
							PIo = PIg * iOF / iGF;
							Qo = PIo * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][2]);

							if ((Qo < 0) || ((Qo - Qo) != 0)) {
								Qo = 0;
								PIo = 0;
							}
							if ((Qg < 0) || ((Qg - Qg) != 0)) {
								Qg = 0;
								PIg = 0;
							}

							iWell = i;

							if ((wellf[i][1]) && (Qg > wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								SSo1 = 0;
								for (j = welli[i][3]; j <= welli[i][4]; j++) {
									S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
									//SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][Iz][BMU][1];
									SSo1 += S2;
									S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
									//SSo1 += fblockFProps[Ix][Iy][j][RO][1] * S2*frelPerm[Ix][Iy][j][2] / fblockFProps[Ix][Iy][Iz][BMU][1];
									SSo1 += S2;
								}
								S1 = gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][0] * perm[Ix][Iy][Iz][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);

								//if (SSo1) Qg = S1*wellf[i][1] * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / (blockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
								if (SSo1) Qg = S1 * wellf[i][1] / SSo1;
								if (SSo1) Qo = Qg * iOF / iGF;
							}
							Qginj = Qg + Qo;
						}

						else if ((welli[i][0] == 4) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {		//Constant Oil Rate
							SSo1 = 0;
							for (j = welli[i][3]; j <= welli[i][4]; j++) {
								S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
								SSo1 += blockFProps[Ix][Iy][j][RO][0] * S2*relPerm[Ix][Iy][j][1] / blockFProps[Ix][Iy][Iz][BMU][0];
								S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
								SSo1 += fblockFProps[Ix][Iy][j][RO][0] * S2*frelPerm[Ix][Iy][j][1] / fblockFProps[Ix][Iy][Iz][BMU][0];
							}
							S1 = gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][0] * perm[Ix][Iy][Iz][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);

							if (SSo1) {
								if (SURFACE_RATES) Qo = -S1 * oilRateCh(Ix, Iy, Iz, relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * blockFProps[Ix][Iy][Iz][BMU][0] / (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * blockFProps[Ix][Iy][Iz][BMU][1]))*wellf[i][0] * blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / (blockFProps[Ix][Iy][Iz][BMU][0] * SSo1);
								else Qo = -S1 * wellf[i][0] * blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / (blockFProps[Ix][Iy][Iz][BMU][0] * SSo1);
							}
							Qw = Qo * relPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*blockFProps[Ix][Iy][Iz][BMU][0] / (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * watMu);
							Qg = Qo * relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * blockFProps[Ix][Iy][Iz][BMU][0] / (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * blockFProps[Ix][Iy][Iz][BMU][1]);

							//Re = 0.14*sqrt(sqrt(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0])*gridDim[Ix] * gridDim[Ix] + sqrt(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1])*gridDim[Nx + Iy] * gridDim[Nx + Iy]);
							//Re /= 0.5*(pow(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0], 0.25) + pow(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1], 0.25));
							//Re = Calc_Re(Ix, Iy, Iz, i);
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][1] * perm[Ix][Iy][Iz][0]) / (log(Re / wellf[i][3]) + wellf[i][2]);
							Pwf = P[Ix + 1][Iy + 1][Iz + 1][1] - Qo / (S1*blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / blockFProps[Ix][Iy][Iz][BMU][0]);

							if ((wellf[i][1]) && (Pwf < wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								PIw = S1 * watRo*WAT_M_RO*relPerm[Ix][Iy][Iz][0] / watMu;
								PIo = S1 * blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / blockFProps[Ix][Iy][Iz][BMU][0];
								PIg = S1 * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / blockFProps[Ix][Iy][Iz][BMU][1];

								Qw = PIw * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][0]);
								Qo = PIo * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][1]);
								Qg = PIg * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][2]);

								if ((Qw > 0) || ((Qw - Qw) != 0)) {
									Qw = 0;
									PIw = 0;
								}
								if ((Qo > 0) || ((Qo - Qo) != 0)) {
									Qo = 0;
									PIo = 0;
								}
								if ((Qg > 0) || ((Qg - Qg) != 0)) {
									Qg = 0;
									PIg = 0;
								}
							}

							/*Qw = 0;
							Qo = 0;// 6.553168256220581e-07 / Nz;
							Qg = 0;							
							PIw = 0;
							PIo = 0;
							PIg = 0;*/

							Qoprod = Qo + Qg;
							QoProduced = Qo;
						}

						else if ((welli[i][0] == 5) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {		//Constant Gas Rate
							SSo1 = 0;
							for (j = welli[i][3]; j <= welli[i][4]; j++) {
								S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
								SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][Iz][BMU][1];
								S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
								SSo1 += fblockFProps[Ix][Iy][j][RO][1] * S2*frelPerm[Ix][Iy][j][2] / fblockFProps[Ix][Iy][Iz][BMU][1];
							}
							S1 = gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][0] * perm[Ix][Iy][Iz][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);

							if (SSo1) {
								if (SURFACE_RATES) Qg = -S1 * gasRateCh(Ix, Iy, Iz, (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * blockFProps[Ix][Iy][Iz][BMU][1]) / (relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * blockFProps[Ix][Iy][Iz][BMU][0]))*wellf[i][1] * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / (blockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
								else Qg = -S1 * wellf[i][1] * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / (blockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
							}
							Qw = Qg * relPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*blockFProps[Ix][Iy][Iz][BMU][1] / (relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * watMu);
							Qo = Qg * relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * blockFProps[Ix][Iy][Iz][BMU][1] / (relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * blockFProps[Ix][Iy][Iz][BMU][0]);

							//Re = 0.14*sqrt(sqrt(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0])*gridDim[Ix] * gridDim[Ix] + sqrt(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1])*gridDim[Nx + Iy] * gridDim[Nx + Iy]);
							//Re /= 0.5*(pow(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0], 0.25) + pow(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1], 0.25));
							//Re = Calc_Re(Ix, Iy, Iz, i);
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][1] * perm[Ix][Iy][Iz][0]) / (log(Re / wellf[i][3]) + wellf[i][2]);
							Pwf = P[Ix + 1][Iy + 1][Iz + 1][2] - Qg / (S1*blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / blockFProps[Ix][Iy][Iz][BMU][1]);

							if ((wellf[i][1]) && (Pwf < wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								PIw = S1 * watRo*WAT_M_RO*relPerm[Ix][Iy][Iz][0] / watMu;
								PIo = S1 * blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / blockFProps[Ix][Iy][Iz][BMU][0];
								PIg = S1 * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / blockFProps[Ix][Iy][Iz][BMU][1];

								Qw = PIw * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][0]);
								Qo = PIo * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][1]);
								Qg = PIg * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][2]);

								if ((Qw > 0) || ((Qw - Qw) != 0)) {
									Qw = 0;
									PIw = 0;
								}
								if ((Qo > 0) || ((Qo - Qo) != 0)) {
									Qo = 0;
									PIo = 0;
								}
								if ((Qg > 0) || ((Qg - Qg) != 0)) {
									Qg = 0;
									PIg = 0;
								}
							}
						}

						else if ((welli[i][0] == 6) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {		//Constant Total Production Rate
							SSw = 0;
							SSo = 0;
							SSg = 0;
							SSo1 = 0;
							for (j = welli[i][3]; j <= welli[i][4]; j++) {
								S1 = ((relPerm[Ix][Iy][j][0] / watMu) + (relPerm[Ix][Iy][j][1] / blockFProps[Ix][Iy][j][BMU][0]) + (relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][j][BMU][1]));
								SSw += (relPerm[Ix][Iy][j][0] / watMu) / S1;
								SSo += (relPerm[Ix][Iy][j][1] / blockFProps[Ix][Iy][j][BMU][0]) / S1;
								SSg += (relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][j][BMU][1]) / S1;

								S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
								SSo1 += blockFProps[Ix][Iy][j][RO][0] * S2*relPerm[Ix][Iy][j][1] / blockFProps[Ix][Iy][Iz][BMU][0];

								S1 = ((frelPerm[Ix][Iy][j][0] / watMu) + (frelPerm[Ix][Iy][j][1] / fblockFProps[Ix][Iy][j][BMU][0]) + (frelPerm[Ix][Iy][j][2] / fblockFProps[Ix][Iy][j][BMU][1]));
								SSw += (frelPerm[Ix][Iy][j][0] / watMu) / S1;
								SSo += (frelPerm[Ix][Iy][j][1] / fblockFProps[Ix][Iy][j][BMU][0]) / S1;
								SSg += (frelPerm[Ix][Iy][j][2] / fblockFProps[Ix][Iy][j][BMU][1]) / S1;

								S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
								SSo1 += fblockFProps[Ix][Iy][j][RO][0] * S2*frelPerm[Ix][Iy][j][1] / fblockFProps[Ix][Iy][Iz][BMU][0];

							}
							QoP = SSo * wellf[i][0] / (SSw + SSo + SSg);

							S1 = gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][0] * perm[Ix][Iy][Iz][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
							if (SSo1) Qo = -S1 * QoP*blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / (blockFProps[Ix][Iy][Iz][BMU][0] * SSo1);
							Qw = Qo * relPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*blockFProps[Ix][Iy][Iz][BMU][0] / (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * watMu);
							Qg = Qo * relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * blockFProps[Ix][Iy][Iz][BMU][0] / (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * blockFProps[Ix][Iy][Iz][BMU][1]);


							//Re = 0.14*sqrt(sqrt(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0])*gridDim[Ix] * gridDim[Ix] + sqrt(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1])*gridDim[Nx + Iy] * gridDim[Nx + Iy]);
							//Re /= 0.5*(pow(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0], 0.25) + pow(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1], 0.25));
							//Re = Calc_Re(Ix, Iy, Iz, i);
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][1] * perm[Ix][Iy][Iz][0]) / (log(Re / wellf[i][3]) + wellf[i][2]);
							Pwf = P[Ix + 1][Iy + 1][Iz + 1][1] - (Qw + Qo + Qg) / (S1*(watRo*WAT_M_RO*relPerm[Ix][Iy][Iz][0] / watMu + blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / blockFProps[Ix][Iy][Iz][BMU][0] + blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / blockFProps[Ix][Iy][Iz][BMU][1]));

							if ((wellf[i][1]) && (Pwf < wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								PIw = S1 * watRo*WAT_M_RO*relPerm[Ix][Iy][Iz][0] / watMu;
								PIo = S1 * blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / blockFProps[Ix][Iy][Iz][BMU][0];
								PIg = S1 * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / blockFProps[Ix][Iy][Iz][BMU][1];

								Qw = PIw * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][0]);
								Qo = PIo * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][1]);
								Qg = PIg * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][2]);

								if ((Qw > 0) || ((Qw - Qw) != 0)) {
									Qw = 0;
									PIw = 0;
								}
								if ((Qo > 0) || ((Qo - Qo) != 0)) {
									Qo = 0;
									PIo = 0;
								}
								if ((Qg > 0) || ((Qg - Qg) != 0)) {
									Qg = 0;
									PIg = 0;
								}
							}
						}

						else if ((welli[i][0] == 7) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {			//Constant Water Injection Rate
							SSw = 0;
							for (j = welli[i][3]; j <= welli[i][4]; j++) {
								S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
								SSo1 += S2 * relPerm[Ix][Iy][j][0];
								S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
								SSo1 += S2 * frelPerm[Ix][Iy][j][0];
							}
							S1 = gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][0] * perm[Ix][Iy][Iz][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
							if (SSw) Qw = S1 * wellf[i][0] * relPerm[Ix][Iy][Iz][1] / SSw;

							//Re = 0.14*sqrt(sqrt(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0])*gridDim[Ix] * gridDim[Ix] + sqrt(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1])*gridDim[Nx + Iy] * gridDim[Nx + Iy]);
							//Re /= 0.5*(pow(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0], 0.25) + pow(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1], 0.25));
							//Re = Calc_Re(Ix, Iy, Iz, i);
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][1] * perm[Ix][Iy][Iz][0]) / (log(Re / wellf[i][3]) + wellf[i][2]);
							Pwf = P[Ix + 1][Iy + 1][Iz + 1][0] - Qw / (S1*watRo*WAT_M_RO * relPerm[Ix][Iy][Iz][1] / watMu);

							if ((wellf[i][1]) && (Pwf > wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								PIw = S1 * watRo*WAT_M_RO*relPerm[Ix][Iy][Iz][0] / watMu;
								Qw = PIw * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][0]);

								if ((Qw < 0) || ((Qw - Qw) != 0)) {
									Qw = 0;
									PIw = 0;
								}
							}
						}

						else if ((welli[i][0] == 8) && (((fabs(simTime - wellf[i][Nc + 4]) <= TSTEPIF) || (fabs(simTime - wellf[i][Nc + 5]) <= TSTEPIF)) || ((simTime >= wellf[i][Nc + 4]) && (simTime <= wellf[i][Nc + 5])))) {			//Constant Gas Injection Rate
							for (j = 0; j < Nc; j++) IComp[j] = wellf[i][4 + j];
							FlashInjection(IComp, wellf[i][1], IOComp, IGComp, iOF, iGF, iOD, iGD, iOV, iGV);
							//S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][1] * perm[Ix][Iy][Iz][0]) / (log(Re / wellf[i][3]) + wellf[i][2]);
							if (Re <= wellf[i][3])
								Re += wellf[i][3];

							SSo1 = 0;
							for (j = welli[i][3]; j <= welli[i][4]; j++) {
								S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
								//SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][Iz][BMU][1];
								//SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*sgt[Nsgt-1][1] / blockFProps[Ix][Iy][Iz][BMU][1];
								SSo1 += S2;
								S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
								//SSo1 += fblockFProps[Ix][Iy][j][RO][1] * S2*frelPerm[Ix][Iy][j][2] / fblockFProps[Ix][Iy][Iz][BMU][1];
								//SSo1 += fblockFProps[Ix][Iy][j][RO][1] * S2*sgt[Nsgt-1][1] / fblockFProps[Ix][Iy][Iz][BMU][1];
								SSo1 += S2;
							}
							S1 = gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][0] * perm[Ix][Iy][Iz][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);

							//if (SSo1) Qg = S1*wellf[i][0] * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / (blockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
							//if (SSo1) Qg = S1*wellf[i][0] * blockFProps[Ix][Iy][Iz][RO][1] * sgt[Nsgt - 1][1] / (blockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
							if (SSo1) Qg = S1 * wellf[i][0] / SSo1;
							if (SSo1) Qo = Qg * iOF / iGF;
							//Re = 0.14*sqrt(sqrt(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0])*gridDim[Ix] * gridDim[Ix] + sqrt(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1])*gridDim[Nx + Iy] * gridDim[Nx + Iy]);
							//Re /= 0.5*(pow(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0], 0.25) + pow(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1], 0.25));



							//Re = Calc_Re(Ix, Iy, Iz, i);

							//Pwf = P[Ix + 1][Iy + 1][Iz + 1][2] - Qg / (S1*blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / blockFProps[Ix][Iy][Iz][BMU][1]);
							//Pwf = P[Ix + 1][Iy + 1][Iz + 1][2] - Qg / (S1*blockFProps[Ix][Iy][Iz][RO][1] * sgt[Nsgt - 1][1] / blockFProps[Ix][Iy][Iz][BMU][1]);
							Pwf = P[Ix + 1][Iy + 1][Iz + 1][2] - Qg / (S1*iGD * sgt[Nsgt - 1][1] / iGV);

							if ((wellf[i][1]) && (Pwf > wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								PIg = S1 * iGD * sgt[Nsgt - 1][1] * iGF / iGV;
								Qg = PIg * (wellf[i][1] - P[Ix + 1][Iy + 1][Iz + 1][2]);
								//PIo = S1*iOD * swt[0][2]*iOF / iOV;
								PIo = PIg * iOF / iGF;
								Qo = PIo * (wellf[i][1] - P[Ix + 1][Iy + 1][Iz + 1][2]);

								if ((Qo < 0) || ((Qo - Qo) != 0)) {
									Qo = 0;
									PIo = 0;
								}
								if ((Qg < 0) || ((Qg - Qg) != 0)) {
									Qg = 0;
									PIg = 0;
								}
							}

							if (P[Ix + 1][Iy + 1][Iz + 1][1] > WELL_MAX_P) {
								Qw = 0;
								Qo = 0;
								Qg = 0;
								IOComp[0] = 0;
								IOComp[1] = 0;
								IGComp[0] = 0;
								IGComp[1] = 0;
								PIw = 0;
								PIo = 0;
								PIg = 0;
							}

							QgInjected = Qg;


							QgInj = Qg;

							iWell = i;
							gasInjStat = -1;

							Qginj += Qg + Qo;
						}


					}
					QwT += Qw;
					QoT += Qo;
					QgT += Qg;
				}




#pragma endregion
				if (BENo < (2 * Nc - 1)) {
					i = BENo - Nc;

					LSide = (Vb / Dt)*(porpor*(comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * sat[Ix][Iy][Iz][1] + comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * sat[Ix][Iy][Iz][2]) - preProp[Ix][Iy][Iz][i]);
					RSide = comp[(Ix + transS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][0][0] * (P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) - comp[(Ix - 1 + transS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix][Iy + 1][Iz + 1][0][0] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);
					RSide += comp[Ix][(Iy + transS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][0][1] * (P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) - comp[Ix][(Iy - 1 + transS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy][Iz + 1][0][1] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);
					RSide += comp[Ix][Iy][(Iz + transS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][0][2] * (P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) - comp[Ix][Iy][(Iz - 1 + transS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz][0][2] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);
					RSide += comp[(Ix + transS[Ix + 1][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][1][0] * (P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) - comp[(Ix - 1 + transS[Ix][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * trans[Ix][Iy + 1][Iz + 1][1][0] * (P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);
					RSide += comp[Ix][(Iy + transS[Ix + 1][Iy + 1][Iz + 1][1][1])][Iz][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][1][1] * (P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) - comp[Ix][(Iy - 1 + transS[Ix + 1][Iy][Iz + 1][1][1])][Iz][i][1] * trans[Ix + 1][Iy][Iz + 1][1][1] * (P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);
					RSide += comp[Ix][Iy][(Iz + transS[Ix + 1][Iy + 1][Iz + 1][1][2])][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][1][2] * (P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) - comp[Ix][Iy][(Iz - 1 + transS[Ix + 1][Iy + 1][Iz][1][2])][i][1] * trans[Ix + 1][Iy + 1][Iz][1][2] * (P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);

					RSide += comp[(Ix + transS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][2][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - comp[(Ix - 1 + transS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix][Iy + 1][Iz + 1][2][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
					RSide += comp[Ix][(Iy + transS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][2][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - comp[Ix][(Iy - 1 + transS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy][Iz + 1][2][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
					RSide += comp[Ix][Iy][(Iz + transS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][2][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]) - comp[Ix][Iy][(Iz - 1 + transS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz][2][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
					RSide += comp[(Ix + transS[Ix + 1][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][3][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - comp[(Ix - 1 + transS[Ix][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * trans[Ix][Iy + 1][Iz + 1][3][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
					RSide += comp[Ix][(Iy + transS[Ix + 1][Iy + 1][Iz + 1][1][1])][Iz][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][3][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - comp[Ix][(Iy - 1 + transS[Ix + 1][Iy][Iz + 1][1][1])][Iz][i][1] * trans[Ix + 1][Iy][Iz + 1][3][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
					RSide += comp[Ix][Iy][(Iz + transS[Ix + 1][Iy + 1][Iz + 1][1][2])][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][3][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]) - comp[Ix][Iy][(Iz - 1 + transS[Ix + 1][Iy + 1][Iz][1][2])][i][1] * trans[Ix + 1][Iy + 1][Iz][3][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);

					////////////////////////////Transfer Function 

					//	if (comp[Ix][Iy][Iz][i][0] > fcomp[Ix][Iy][Iz][i][0]) f_m_diffusion[0] = diffusion[Ix][Iy][Iz][i][0];
					//else f_m_diffusion[0] = fdiffusion[Ix][Iy][Iz][i][0];

					//		if (comp[Ix][Iy][Iz][i][1] > fcomp[Ix][Iy][Iz][i][1]) f_m_diffusion[1] = diffusion[Ix][Iy][Iz][i][1];
					//	else f_m_diffusion[1] = fdiffusion[Ix][Iy][Iz][i][1];

					// Rside Tran func
					RSide += ZERO_CONV * SI_C *comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
					RSide += ZERO_CONV * SI_C *comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor) / (porpor + fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (1))//only Liq in Fracture & Matrix
						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (-1))//only Gas in Fracture & Matrix
						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0)) {
						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);

						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

					}

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);

						//RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * fporpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
					}

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (1)) {
						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);

						//RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * fporpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
					}

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1)) {
						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);

						//RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * fporpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);

						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
					}

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1)) {
						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);

						//RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * fporpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
					}

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0)) {
						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);

						//RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * fporpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);

						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
					}

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0)) {
						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);

						///RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * fporpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
					}
					//

					/////////////////////////////////////////

					if (iWell == (-1)) {
						gComp = comp[Ix][Iy][Iz][i][1];
						oComp = comp[Ix][Iy][Iz][i][0];
					}
					else {
						if (welli[iWell][0] == 3) {
							gComp = IGComp[i];
							oComp = IOComp[i];
						}
						else if (welli[iWell][0] == 8) {
							//gComp = wellf[iWell][i + 4];
							gComp = IGComp[i];
							oComp = IOComp[i];
						}
					}

					RSide += oComp * Qo + gComp * Qg;

					dLsidedp = (Vb / Dt)*(comp[Ix][Iy][Iz][i][0] * sat[Ix][Iy][Iz][1] * (blockFProps[Ix][Iy][Iz][RO][0] * dPordp + dE[Ix][Iy][Iz][Nc][0] * porpor) + comp[Ix][Iy][Iz][i][1] * sat[Ix][Iy][Iz][2] * (blockFProps[Ix][Iy][Iz][RO][1] * dPordp + dE[Ix][Iy][Iz][Nc][1] * porpor));
					dLsidedSo = (Vb / Dt)*(comp[Ix][Iy][Iz][i][0] * porpor*blockFProps[Ix][Iy][Iz][RO][0]);
					dLsidedSg = (Vb / Dt)*(comp[Ix][Iy][Iz][i][1] * porpor*blockFProps[Ix][Iy][Iz][RO][1]);

					dRsidefdp = 0;
					dRsidedp = 0;
					// transfer function dRsidedp + drsidefdp
					//moshtagh transfer Function jabejaie naft nesbat be feshar matrix
					dRsidedp += ZERO_CONV * SI_C * dE[Ix][Iy][Iz][Nc][0] * comp[Ix][Iy][Iz][i][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
					dRsidedp += ZERO_CONV * -SI_C * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor));
					dRsidedp += ZERO_CONV * -SI_C * (DiffVisco(Ix, Iy, Iz, Nc, 0) * porpor + dPordp * blockFProps[Ix][Iy][Iz][BMU][0]) * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor)*(blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) * (porpor + fporpor);
					dRsidedp += ZERO_CONV * SI_C * dPordp * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / (blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					//moshtagh transfer Function jabejaie gaz nesbat be feshar matrix
					dRsidedp += ZERO_CONV * SI_C * dE[Ix][Iy][Iz][Nc][1] * comp[Ix][Iy][Iz][i][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor) / (porpor + fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));
					dRsidedp += ZERO_CONV * -SI_C * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor) / (porpor + fporpor));
					dRsidedp += ZERO_CONV * -SI_C * (DiffVisco(Ix, Iy, Iz, Nc, 1) * porpor + dPordp * blockFProps[Ix][Iy][Iz][BMU][1]) * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor)*(blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1])) * (porpor + fporpor);
					dRsidedp += ZERO_CONV * SI_C * dPordp * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / (blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (1)) { // //moshtagh transfer Function nofuze oil-oil nesbat be feshar matrix 
						dRsidedp += ZERO_DIFF * dPordp * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
						dRsidedp += ZERO_DIFF * dE[Ix][Iy][Iz][Nc][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
						dRsidedp += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
					}

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (-1)) { // //moshtagh transfer Function nofuze gas-gas nesbat be feshar matrix 
						dRsidedp += ZERO_DIFF * dPordp * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
						dRsidedp += ZERO_DIFF * dE[Ix][Iy][Iz][Nc][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
						dRsidedp += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
					}

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0)) {
						dRsidedp += ZERO_DIFF * dPordp * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
						dRsidedp += ZERO_DIFF * dE[Ix][Iy][Iz][Nc][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
						dRsidedp += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);

						dRsidedp += ZERO_DIFF * dPordp * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
						dRsidedp += ZERO_DIFF * dE[Ix][Iy][Iz][Nc][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
						dRsidedp += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
					}

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
						dRsidedp += ZERO_DIFF * dPordp * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
						dRsidedp += ZERO_DIFF * dE[Ix][Iy][Iz][Nc][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
						dRsidedp += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
					}

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (1)) {
						dRsidedp += ZERO_DIFF * dPordp * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
						dRsidedp += ZERO_DIFF * dE[Ix][Iy][Iz][Nc][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
						dRsidedp += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
					}

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1)) {
						dRsidedp += ZERO_DIFF * dPordp * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
						dRsidedp += ZERO_DIFF * dE[Ix][Iy][Iz][Nc][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
						dRsidedp += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);

						dRsidedp += ZERO_DIFF * dPordp * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
						dRsidedp += ZERO_DIFF * dE[Ix][Iy][Iz][Nc][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
						dRsidedp += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
					}

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1)) {
						dRsidedp += ZERO_DIFF * dPordp * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
						dRsidedp += ZERO_DIFF * dE[Ix][Iy][Iz][Nc][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
						dRsidedp += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

						dRsidedp += ZERO_DIFF * dPordp * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
						dRsidedp += ZERO_DIFF * dE[Ix][Iy][Iz][Nc][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
						dRsidedp += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
					}

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0)) {
						dRsidedp += ZERO_DIFF * dPordp * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
						dRsidedp += ZERO_DIFF * dE[Ix][Iy][Iz][Nc][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
						dRsidedp += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);

						dRsidedp += ZERO_DIFF * dPordp * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
						dRsidedp += ZERO_DIFF * dE[Ix][Iy][Iz][Nc][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
						dRsidedp += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
					}

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0)) {
						dRsidedp += ZERO_DIFF * dPordp * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
						dRsidedp += ZERO_DIFF * dE[Ix][Iy][Iz][Nc][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
						dRsidedp += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

						dRsidedp += ZERO_DIFF * dPordp * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
						dRsidedp += ZERO_DIFF * dE[Ix][Iy][Iz][Nc][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
						dRsidedp += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
					}




					//moshtagh transfer Function jabejaie naft nesbat be feshar Fracture
					dRsidefdp += ZERO_CONV * SI_C * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor));
					dRsidefdp += ZERO_CONV * -SI_C * (fDiffVisco(Ix, Iy, Iz, Nc, 0) * fporpor + fdPordp * fblockFProps[Ix][Iy][Iz][BMU][0]) * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor)*(blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) * (porpor + fporpor);
					dRsidefdp += ZERO_CONV * SI_C * fdPordp * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / (blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					//moshtagh transfer Function jabejaie gaz nesbat be feshar Fracture
					dRsidefdp += ZERO_CONV * SI_C * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor) / (porpor + fporpor));
					dRsidefdp += ZERO_CONV * -SI_C * (fDiffVisco(Ix, Iy, Iz, Nc, 1) * fporpor + fdPordp * fblockFProps[Ix][Iy][Iz][BMU][1]) * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor)*(blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1])) * (porpor + fporpor);
					dRsidefdp += ZERO_CONV * SI_C * fdPordp * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / (blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));

/*
// 					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
// 						dRsidefdp += ZERO_DIFF * fdPordp * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
// 						dRsidefdp += ZERO_DIFF * fdE[Ix][Iy][Iz][Nc][1] * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
// 						dRsidefdp += ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, Nc, 1) * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
// 					}
// 
// 					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (1)) {
// 						dRsidefdp += ZERO_DIFF * fdPordp * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
// 						dRsidefdp += ZERO_DIFF * fdE[Ix][Iy][Iz][Nc][0] * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
// 						dRsidefdp += ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, Nc, 0) * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
// 					}
// 
// 					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1)) {
// 						dRsidefdp += ZERO_DIFF * fdPordp * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
// 						dRsidefdp += ZERO_DIFF * fdE[Ix][Iy][Iz][Nc][0] * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
// 						dRsidefdp += ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, Nc, 0) * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
// 					}
// 
// 					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0)) {
// 						dRsidefdp += ZERO_DIFF * fdPordp * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
// 						dRsidefdp += ZERO_DIFF * fdE[Ix][Iy][Iz][Nc][1] * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
// 						dRsidefdp += ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, Nc, 1) * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
// 					}
// 
// 					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1)) {
// 						dRsidefdp += ZERO_DIFF * fdPordp * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
// 						dRsidefdp += ZERO_DIFF * fdE[Ix][Iy][Iz][Nc][1] * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
// 						dRsidefdp += ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, Nc, 1) * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
// 					}
// 
// 					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0)) {
// 						dRsidefdp += ZERO_DIFF * fdPordp * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
// 						dRsidefdp += ZERO_DIFF * fdE[Ix][Iy][Iz][Nc][0] * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
// 						dRsidefdp += ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, Nc, 0) * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
// 					}
*/



					dRsidedp += comp[(Ix + transS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][0][0] + comp[(Ix - 1 + transS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix][Iy + 1][Iz + 1][0][0];
					dRsidedp += comp[Ix][(Iy + transS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][0][1] + comp[Ix][(Iy - 1 + transS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy][Iz + 1][0][1];
					dRsidedp += comp[Ix][Iy][(Iz + transS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][0][2] + comp[Ix][Iy][(Iz - 1 + transS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz][0][2];
					dRsidedp += comp[(Ix + transS[Ix + 1][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][1][0] + comp[(Ix - 1 + transS[Ix][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * trans[Ix][Iy + 1][Iz + 1][1][0];
					dRsidedp += comp[Ix][(Iy + transS[Ix + 1][Iy + 1][Iz + 1][1][1])][Iz][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][1][1] + comp[Ix][(Iy - 1 + transS[Ix + 1][Iy][Iz + 1][1][1])][Iz][i][1] * trans[Ix + 1][Iy][Iz + 1][1][1];
					dRsidedp += comp[Ix][Iy][(Iz + transS[Ix + 1][Iy + 1][Iz + 1][1][2])][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][1][2] + comp[Ix][Iy][(Iz - 1 + transS[Ix + 1][Iy + 1][Iz][1][2])][i][1] * trans[Ix + 1][Iy + 1][Iz][1][2];

					//jac[BLNo+Nc+i][BLNo+(2*Nc)]=PCoeff*(dLsidedp+dRsidedp);

					//jac[BLNo+Nc+i][BLNo+(2*Nc+2)]=dLsidedSo;
					if (phaseStat[Ix][Iy][Iz] == (-1)) dCoefl = 0;
					else dCoefl = 1;
					if (phaseStat[Ix][Iy][Iz] == 1) dCoefg = 0;
					else dCoefg = 1;

					dMul = DiffVisco(Ix, Iy, Iz, Nc, 0);
					dMug = DiffVisco(Ix, Iy, Iz, Nc, 1);
					dDiffdpl = DifDiffusion(Ix, Iy, Iz, i, Nc, 0);
					dDiffdpg = DifDiffusion(Ix, Iy, Iz, i, Nc, 1);

					dRsidedSw = 0;
					dRsidedSg = 0;
					dRsidedSo = 0;
					dRsidefdSw = 0;
					dRsidefdSo = 0;
					dRsidefdSg = 0;

					//Transfer function dRside saturation 
					// moshtagh transfer Function jabejaie naft nesbat be So Matrix
					dRsidedSo += ZERO_CONV * SI_C * f_m_drelperm[1][4] * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (1))
						dRsidedSo += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0))
						dRsidedSo += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (-1))
						dRsidedSo += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0)) {
						dRsidedSo += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
						dRsidedSo += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
					}
					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1))
						dRsidedSo += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1))
						dRsidedSo += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);


					// moshtagh transfer Function jabejaie naft nesbat be So Fracture
					dRsidefdSo += ZERO_CONV * SI_C * f_m_drelperm[1][9] * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

/*
// 					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (1))
// 						dRsidefdSo += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * fporpor / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
// 
// 					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1))
// 						dRsidefdSo += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * fporpor / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
// 
// 					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0))
// 						dRsidefdSo += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * fporpor / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
*/




					// moshtagh transfer Function jabejaie naft nesbat be Sg Matrix
					dRsidedSg += ZERO_CONV * SI_C * f_m_drelperm[1][2] * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					// moshtagh transfer Function jabejaie gaz nesbat be Sg Matrix
					dRsidedSg += ZERO_CONV * SI_C * f_m_drelperm[2][3] * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor) / (porpor + fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (-1))
						dRsidedSg += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0))
						dRsidedSg += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (1))
						dRsidedSg += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1))
						dRsidedSg += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0)) {
						dRsidedSg += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
						dRsidedSg += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
					}


					// moshtagh transfer Function jabejaie naft nesbat be Sg Fracture 
					dRsidefdSg += ZERO_CONV * SI_C * f_m_drelperm[1][7] * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					// moshtagh transfer Function jabejaie gaz nesbat be Sg Fracture
					dRsidefdSg += ZERO_CONV * SI_C * f_m_drelperm[2][8] * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor) / (porpor + fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));

/*
// 					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (-1))
// 						dRsidefdSg += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * fporpor / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
// 
// 					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0))
// 						dRsidefdSg += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * fporpor / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
// 
// 					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1))
// 						dRsidefdSg += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * fporpor / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
*/



					// moshtagh transfer Function jabejaie naft nesbat be Sw Matrix
					dRsidedSw += ZERO_CONV * SI_C * f_m_drelperm[1][1] * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);


					// moshtagh transfer Function jabejaie naft nesbat be Sw Fracture
					dRsidefdSw += ZERO_CONV * SI_C * f_m_drelperm[1][6] * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
					//



					if (Ix<(Nx - 1)) {
						if (phaseStat[Ix + 1][Iy][Iz]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[Iz*(Nx*Ny) + Iy * Nx + Ix + 1] - reCol2;

						dsw = comp[(Ix + transS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][4][0] * (P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) + comp[(Ix + transS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][6][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (transS[Ix + 1][Iy + 1][Iz + 1][0][0]) {							
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dsgo = comp[(Ix + transS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][8][0] * (P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) + comp[(Ix + transS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][9][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						dsgg = comp[(Ix + transS[Ix + 1][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][5][0] * (P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + comp[(Ix + transS[Ix + 1][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][7][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (transS[Ix + 1][Iy + 1][Iz + 1][0][0]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix + 1][Iy][Iz] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}

						if (transS[Ix + 1][Iy + 1][Iz + 1][1][0]) {
							Jac1Row[JRowIndex] += (phaseStat[Ix + 1][Iy][Iz] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;

						//oil to oil
						dso = comp[(Ix + transS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][10][0] * (P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) + comp[(Ix + transS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][11][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (transS[Ix + 1][Iy + 1][Iz + 1][0][0]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix + 1][Iy][Iz] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;
						//////////////////////////////////////////////////////////
						/////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (phaseStat[Ix + 1][Iy][Iz] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][RO][0] * gridDim[Ix + 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BMU][0] * gridDim[Ix + 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][0] * gridDim[Ix] * Makhraj - dMul * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix + 1][Iy][Iz][Nc][0] * gridDim[Ix + 1] * Coef*Makhraj - DiffVisco(Ix + 1, Iy, Iz, Nc, 0)*gridDim[Ix + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Ix] * (blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][Nc][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Ix + 1] * (blockFProps[Ix + 1][Iy][Iz][BGAM][0] * dE[Ix + 1][Iy][Iz][Nc][0] / blockFProps[Ix + 1][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BGAM][0] * gridDim[Ix + 1] * Coef) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

						if (transS[Ix + 1][Iy + 1][Iz + 1][0][0]) {
							dRsidedp -= comp[Ix + 1][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][1] * Moshtaq*(P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = (comp[Ix + 1][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][1] * Bmoshtaq)*(P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= comp[Ix + 1][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (comp[Ix + 1][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= (comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}

						porpor2 = porosity[Ix + 1][Iy][Iz] * (1 + cpor * (P[Ix + 2][Iy + 1][Iz + 1][1] - refP) + dcpor * (P[Ix + 2][Iy + 1][Iz + 1][1] - refP)*(P[Ix + 2][Iy + 1][Iz + 1][1] - refP));
						dPordp2 = porosity[Ix + 1][Iy][Iz] * (cpor + 2 * dcpor*(P[Ix + 2][Iy + 1][Iz + 1][1] - refP));


						if (comp[Ix + 1][Iy][Iz][i][0]>comp[Ix][Iy][Iz][i][0]) {
							DupStream = diffusion[Ix + 1][Iy][Iz][i][0];
							dDdp = 0;
							dDdp2 = DifDiffusion(Ix + 1, Iy, Iz, i, Nc, 0);
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][0];
							dDdp = dDiffdpl;
							dDdp2 = 0;
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix + 1][Iy][Iz] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = blockFProps[Ix + 1][Iy][Iz][RO][0] * gridDim[Ix + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] * dCoefl;
						AAd *= (sat[Ix + 1][Iy][Iz][1] * gridDim[Ix + 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Ix] * dCoefl) / (gridDim[Ix + 1] + gridDim[Ix]);
						BBd = tor[Ix + 1][Iy][Iz] * gridDim[Ix + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Ix] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz] / (gridDim[Ix + 1] + gridDim[Ix]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = comp[Ix + 1][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0];
						RSide += DTran * DeltaX;

						dAAddp = dE[Ix][Iy][Iz][Nc][0] * gridDim[Ix] * dCoefl;
						dAAddp2 = dE[Ix + 1][Iy][Iz][Nc][0] * gridDim[Ix + 1] * Coef;
						dBBddp = -dPordp * tor[Ix][Iy][Iz] * gridDim[Ix] * dCoefl / (porpor*porpor);
						dBBddp2 = -dPordp2 * tor[Ix + 1][Iy][Iz] * gridDim[Ix + 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefl) {
							dRsidedp += -NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}

						if (phaseStat[Ix + 1][Iy][Iz] == 1) Coef = 0;
						else Coef = 1;
						Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][RO][1] * gridDim[Ix + 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BMU][1] * gridDim[Ix + 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][1] * gridDim[Ix] * Makhraj - dMug * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix + 1][Iy][Iz][Nc][1] * gridDim[Ix + 1] * Coef*Makhraj - DiffVisco(Ix + 1, Iy, Iz, Nc, 1)*gridDim[Ix + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Ix] * (blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][Nc][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Ix + 1] * (blockFProps[Ix + 1][Iy][Iz][BGAM][1] * dE[Ix + 1][Iy][Iz][Nc][1] / blockFProps[Ix + 1][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BGAM][1] * gridDim[Ix + 1] * Coef) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

						if (transS[Ix + 1][Iy + 1][Iz + 1][1][0]) {
							dRsidedp -= comp[Ix + 1][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][2] * Moshtaq*(P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += (comp[Ix + 1][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][2] * Bmoshtaq)*(P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= comp[Ix + 1][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (comp[Ix + 1][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= (comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);

						}
						//////////////////////////////////////////////////////
						if (comp[Ix + 1][Iy][Iz][i][1]>comp[Ix][Iy][Iz][i][1]) {
							DupStream = diffusion[Ix + 1][Iy][Iz][i][1];
							dDdp = 0;
							dDdp2 = DifDiffusion(Ix + 1, Iy, Iz, i, Nc, 1);
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][1];
							dDdp = dDiffdpg;
							dDdp2 = 0;
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix + 1][Iy][Iz] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = blockFProps[Ix + 1][Iy][Iz][RO][1] * gridDim[Ix + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] * dCoefg;
						AAd *= (sat[Ix + 1][Iy][Iz][2] * gridDim[Ix + 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Ix] * dCoefg) / (gridDim[Ix + 1] + gridDim[Ix]);
						BBd = tor[Ix + 1][Iy][Iz] * gridDim[Ix + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Ix] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Nx+Iy]*gridDim[Nx+Ny+Iz]/(gridDim[Ix+1]+gridDim[Ix]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = comp[Ix + 1][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1];
						RSide += DTran * DeltaX;

						dAAddp = dE[Ix][Iy][Iz][Nc][1] * gridDim[Ix] * dCoefg;
						dAAddp2 = dE[Ix + 1][Iy][Iz][Nc][1] * gridDim[Ix + 1] * Coef;
						dBBddp = -dPordp * tor[Ix][Iy][Iz] * gridDim[Ix] * dCoefg / (porpor*porpor);
						dBBddp2 = -dPordp2 * tor[Ix + 1][Iy][Iz] * gridDim[Ix + 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefg) {
							dRsidedp += -NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}


						//////////////////////////////////////////////////////
						Jac1Row[JRowIndex] = PCoeff * (-comp[(Ix + transS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][0][0] - comp[(Ix + transS[Ix + 1][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][1][0] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;

					}

					if (Ix>0) {
						if (phaseStat[Ix - 1][Iy][Iz]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[Iz*(Nx*Ny) + Iy * Nx + Ix - 1] - reCol2;

						dsw = -comp[(Ix - 1 + transS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix][Iy + 1][Iz + 1][4][0] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]) - comp[(Ix - 1 + transS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix][Iy + 1][Iz + 1][6][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						if (!transS[Ix][Iy + 1][Iz + 1][0][0]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dso = -comp[(Ix - 1 + transS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix][Iy + 1][Iz + 1][10][0] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]) - comp[(Ix - 1 + transS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix][Iy + 1][Iz + 1][11][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						if (!transS[Ix][Iy + 1][Iz + 1][0][0]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix - 1][Iy][Iz] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;

						dsgo = -comp[(Ix - 1 + transS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix][Iy + 1][Iz + 1][8][0] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]) - comp[(Ix - 1 + transS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix][Iy + 1][Iz + 1][9][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						dsgg = -comp[(Ix - 1 + transS[Ix][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * trans[Ix][Iy + 1][Iz + 1][5][0] * (P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]) - comp[(Ix - 1 + transS[Ix][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * trans[Ix][Iy + 1][Iz + 1][7][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						if (!transS[Ix][Iy + 1][Iz + 1][0][0]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix - 1][Iy][Iz] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}

						if (!transS[Ix][Iy + 1][Iz + 1][1][0]) {
							Jac1Row[JRowIndex] += (phaseStat[Ix - 1][Iy][Iz] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;
						/////////////////////////////////////////////////////////////
						////////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (phaseStat[Ix - 1][Iy][Iz] == (-1)) Coef = 0;
						else Coef = 1;
						Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][RO][0] * gridDim[Ix - 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][BMU][0] * gridDim[Ix - 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][0] * gridDim[Ix] * Makhraj - dMul * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix - 1][Iy][Iz][Nc][0] * gridDim[Ix - 1] * Coef*Makhraj - DiffVisco(Ix - 1, Iy, Iz, Nc, 0)*gridDim[Ix - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Ix] * (blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][Nc][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Ix - 1] * (blockFProps[Ix - 1][Iy][Iz][BGAM][0] * dE[Ix - 1][Iy][Iz][Nc][0] / blockFProps[Ix - 1][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][BGAM][0] * gridDim[Ix - 1] * Coef) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

						if (transS[Ix][Iy + 1][Iz + 1][0][0]) {
							dRsidedp += (comp[Ix][Iy][Iz][i][0] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);
							dBsidedp = -comp[Ix][Iy][Iz][i][0] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);

							dRsidedp += (comp[Ix][Iy][Iz][i][0] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1])*(Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
							dBsidedp -= comp[Ix][Iy][Iz][i][0] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp += comp[Ix - 1][Iy][Iz][i][0] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][1] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);
							dBsidedp = -(comp[Ix - 1][Iy][Iz][i][0] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][1] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);

							dRsidedp += comp[Ix - 1][Iy][Iz][i][0] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
							dBsidedp -= (comp[Ix - 1][Iy][Iz][i][0] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][1])*(Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						}

						porpor2 = porosity[Ix - 1][Iy][Iz] * (1 + cpor * (P[Ix][Iy + 1][Iz + 1][1] - refP) + dcpor * (P[Ix][Iy + 1][Iz + 1][1] - refP)*(P[Ix][Iy + 1][Iz + 1][1] - refP));
						dPordp2 = porosity[Ix - 1][Iy][Iz] * (cpor + 2 * dcpor*(P[Ix][Iy + 1][Iz + 1][1] - refP));


						if (comp[Ix - 1][Iy][Iz][i][0]>comp[Ix][Iy][Iz][i][0]) {
							DupStream = diffusion[Ix - 1][Iy][Iz][i][0];
							dDdp = 0;
							dDdp2 = DifDiffusion(Ix - 1, Iy, Iz, i, Nc, 0);
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][0];
							dDdp = dDiffdpl;
							dDdp2 = 0;
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix - 1][Iy][Iz] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = blockFProps[Ix - 1][Iy][Iz][RO][0] * gridDim[Ix - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] * dCoefl;
						AAd *= (sat[Ix - 1][Iy][Iz][1] * gridDim[Ix - 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Ix] * dCoefl) / (gridDim[Ix - 1] + gridDim[Ix]);
						BBd = tor[Ix - 1][Iy][Iz] * gridDim[Ix - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Ix] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz] / (gridDim[Ix - 1] + gridDim[Ix]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = comp[Ix][Iy][Iz][i][0] - comp[Ix - 1][Iy][Iz][i][0];
						RSide -= DTran * DeltaX;

						dAAddp = dE[Ix][Iy][Iz][Nc][0] * gridDim[Ix] * dCoefl;
						dAAddp2 = dE[Ix - 1][Iy][Iz][Nc][0] * gridDim[Ix - 1] * Coef;
						dBBddp = -dPordp * tor[Ix][Iy][Iz] * gridDim[Ix] * dCoefl / (porpor*porpor);
						dBBddp2 = -dPordp2 * tor[Ix - 1][Iy][Iz] * gridDim[Ix - 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefl) {
							dRsidedp += NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += -NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}

						if (phaseStat[Ix - 1][Iy][Iz] == 1) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][RO][1] * gridDim[Ix - 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][BMU][1] * gridDim[Ix - 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][1] * gridDim[Ix] * Makhraj - dMug * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix - 1][Iy][Iz][Nc][1] * gridDim[Ix - 1] * Coef*Makhraj - DiffVisco(Ix - 1, Iy, Iz, Nc, 1)*gridDim[Ix - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Ix] * (blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][Nc][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Ix - 1] * (blockFProps[Ix - 1][Iy][Iz][BGAM][1] * dE[Ix - 1][Iy][Iz][Nc][1] / blockFProps[Ix - 1][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][BGAM][1] * gridDim[Ix - 1] * Coef) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

						if (transS[Ix][Iy + 1][Iz + 1][1][0]) {
							dRsidedp += (comp[Ix][Iy][Iz][i][1] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);
							dBsidedp = -comp[Ix][Iy][Iz][i][1] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);

							dRsidedp += (comp[Ix][Iy][Iz][i][1] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
							dBsidedp -= comp[Ix][Iy][Iz][i][1] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp += comp[Ix - 1][Iy][Iz][i][1] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][2] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);
							dBsidedp = -(comp[Ix - 1][Iy][Iz][i][1] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][2] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);

							dRsidedp += comp[Ix - 1][Iy][Iz][i][1] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
							dBsidedp -= (comp[Ix - 1][Iy][Iz][i][1] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						}
						//////////////////////////////////////////////////////////////
						if (comp[Ix - 1][Iy][Iz][i][1]>comp[Ix][Iy][Iz][i][1]) {
							DupStream = diffusion[Ix - 1][Iy][Iz][i][1];
							dDdp = 0;
							dDdp2 = DifDiffusion(Ix - 1, Iy, Iz, i, Nc, 1);
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][1];
							dDdp = dDiffdpg;
							dDdp2 = 0;
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix - 1][Iy][Iz] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = blockFProps[Ix - 1][Iy][Iz][RO][1] * gridDim[Ix - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] * dCoefg;
						AAd *= (sat[Ix - 1][Iy][Iz][2] * gridDim[Ix - 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Ix] * dCoefg) / (gridDim[Ix - 1] + gridDim[Ix]);
						BBd = tor[Ix - 1][Iy][Iz] * gridDim[Ix - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Ix] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Nx+Iy]*gridDim[Nx+Ny+Iz]/(gridDim[Ix-1]+gridDim[Ix]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = comp[Ix][Iy][Iz][i][1] - comp[Ix - 1][Iy][Iz][i][1];
						RSide -= DTran * DeltaX;

						dAAddp = dE[Ix][Iy][Iz][Nc][1] * gridDim[Ix] * dCoefg;
						dAAddp2 = dE[Ix - 1][Iy][Iz][Nc][1] * gridDim[Ix - 1] * Coef;
						dBBddp = -dPordp * tor[Ix][Iy][Iz] * gridDim[Ix] * dCoefg / (porpor*porpor);
						dBBddp2 = -dPordp2 * tor[Ix - 1][Iy][Iz] * gridDim[Ix - 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefg) {
							dRsidedp += NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += -NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}

						///////////////////////////////////////////////////////////////
						Jac1Row[JRowIndex] = PCoeff * (-comp[(Ix - 1 + transS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix][Iy + 1][Iz + 1][0][0] - comp[(Ix - 1 + transS[Ix][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * trans[Ix][Iy + 1][Iz + 1][1][0] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;
					}

					if (Iy<(Ny - 1)) {
						if (phaseStat[Ix][Iy + 1][Iz]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[Iz*(Nx*Ny) + (Iy + 1)*Nx + Ix] - reCol2;

						dsw = comp[Ix][(Iy + transS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][4][1] * (P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) + comp[Ix][(Iy + transS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][6][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (transS[Ix + 1][Iy + 1][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dso = comp[Ix][(Iy + transS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][10][1] * (P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) + comp[Ix][(Iy + transS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][11][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (transS[Ix + 1][Iy + 1][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix][Iy + 1][Iz] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;

						dsgo = comp[Ix][(Iy + transS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][8][1] * (P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) + comp[Ix][(Iy + transS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][9][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						dsgg = comp[Ix][(Iy + transS[Ix + 1][Iy + 1][Iz + 1][1][1])][Iz][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][5][1] * (P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + comp[Ix][(Iy + transS[Ix + 1][Iy + 1][Iz + 1][1][1])][Iz][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][7][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (transS[Ix + 1][Iy + 1][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix][Iy + 1][Iz] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}
						if (transS[Ix + 1][Iy + 1][Iz + 1][1][1]) {
							Jac1Row[JRowIndex] += (phaseStat[Ix][Iy + 1][Iz] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;
						//////////////////////////////////////////////////////////////////////////////
						/////////////////////////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (phaseStat[Ix][Iy + 1][Iz] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][RO][0] * gridDim[Nx + Iy + 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][BMU][0] * gridDim[Nx + Iy + 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Iy] * Makhraj - dMul * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix][Iy + 1][Iz][Nc][0] * gridDim[Nx + Iy + 1] * Coef*Makhraj - DiffVisco(Ix, Iy + 1, Iz, Nc, 0)*gridDim[Nx + Iy + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Iy] * (blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][Nc][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Iy + 1] * (blockFProps[Ix][Iy + 1][Iz][BGAM][0] * dE[Ix][Iy + 1][Iz][Nc][0] / blockFProps[Ix][Iy + 1][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][BGAM][0] * gridDim[Nx + Iy + 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

						if (transS[Ix + 1][Iy + 1][Iz + 1][0][1]) {
							dRsidedp -= comp[Ix][Iy + 1][Iz][i][0] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][1] * Moshtaq*(P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = (comp[Ix][Iy + 1][Iz][i][0] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][1] * Bmoshtaq)*(P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= comp[Ix][Iy + 1][Iz][i][0] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (comp[Ix][Iy + 1][Iz][i][0] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= (comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}

						porpor2 = porosity[Ix][Iy + 1][Iz] * (1 + cpor * (P[Ix + 1][Iy + 2][Iz + 1][1] - refP) + dcpor * (P[Ix + 1][Iy + 2][Iz + 1][1] - refP)*(P[Ix + 1][Iy + 2][Iz + 1][1] - refP));
						dPordp2 = porosity[Ix][Iy + 1][Iz] * (cpor + 2 * dcpor*(P[Ix + 1][Iy + 2][Iz + 1][1] - refP));
						if (comp[Ix][Iy + 1][Iz][i][0]>comp[Ix][Iy][Iz][i][0]) {
							DupStream = diffusion[Ix][Iy + 1][Iz][i][0];
							dDdp = 0;
							dDdp2 = DifDiffusion(Ix, Iy + 1, Iz, i, Nc, 0);
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][0];
							dDdp = dDiffdpl;
							dDdp2 = 0;
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix][Iy + 1][Iz] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = blockFProps[Ix][Iy + 1][Iz][RO][0] * gridDim[Nx + Iy + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] * dCoefl;
						AAd *= (sat[Ix][Iy + 1][Iz][1] * gridDim[Nx + Iy + 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Nx + Iy] * dCoefl) / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
						BBd = tor[Ix][Iy + 1][Iz] * gridDim[Nx + Iy + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Iy] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Ix] * gridDim[Nx + Ny + Iz] / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = comp[Ix][Iy + 1][Iz][i][0] - comp[Ix][Iy][Iz][i][0];
						RSide += DTran * DeltaX;

						dAAddp = dE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Iy] * dCoefl;
						dAAddp2 = dE[Ix][Iy + 1][Iz][Nc][0] * gridDim[Nx + Iy + 1] * Coef;
						dBBddp = -dPordp * tor[Ix][Iy][Iz] * gridDim[Nx + Iy] * dCoefl / (porpor*porpor);
						dBBddp2 = -dPordp2 * tor[Ix][Iy + 1][Iz] * gridDim[Nx + Iy + 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefl) {
							dRsidedp += -NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}

						if (phaseStat[Ix][Iy + 1][Iz] == 1) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][RO][1] * gridDim[Nx + Iy + 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][BMU][1] * gridDim[Nx + Iy + 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Iy] * Makhraj - dMug * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix][Iy + 1][Iz][Nc][1] * gridDim[Nx + Iy + 1] * Coef*Makhraj - DiffVisco(Ix, Iy + 1, Iz, Nc, 1)*gridDim[Nx + Iy + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = Coef * gridDim[Nx + Iy] * (blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][Nc][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);
						BmoshtaqGama = gridDim[Nx + Iy + 1] * (blockFProps[Ix][Iy + 1][Iz][BGAM][1] * dE[Ix][Iy + 1][Iz][Nc][1] / blockFProps[Ix][Iy + 1][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][BGAM][1] * gridDim[Nx + Iy + 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

						if (transS[Ix + 1][Iy + 1][Iz + 1][1][1]) {
							dRsidedp -= comp[Ix][Iy + 1][Iz][i][1] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][2] * Moshtaq*(P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += (comp[Ix][Iy + 1][Iz][i][1] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][2] * Bmoshtaq)*(P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= comp[Ix][Iy + 1][Iz][i][1] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (comp[Ix][Iy + 1][Iz][i][1] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= (comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}

						/////////////////////////////////////////////////////////////////////////////
						if (comp[Ix][Iy + 1][Iz][i][1]>comp[Ix][Iy][Iz][i][1]) {
							DupStream = diffusion[Ix][Iy + 1][Iz][i][1];
							dDdp = 0;
							dDdp2 = DifDiffusion(Ix, Iy + 1, Iz, i, Nc, 1);
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][1];
							dDdp = dDiffdpg;
							dDdp2 = 0;
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix][Iy + 1][Iz] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = blockFProps[Ix][Iy + 1][Iz][RO][1] * gridDim[Nx + Iy + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] * dCoefg;
						AAd *= (sat[Ix][Iy + 1][Iz][2] * gridDim[Nx + Iy + 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Nx + Iy] * dCoefg) / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
						BBd = tor[Ix][Iy + 1][Iz] * gridDim[Nx + Iy + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Iy] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Ix]*gridDim[Nx+Ny+Iz]/(gridDim[Nx+Iy+1]+gridDim[Nx+Iy]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = comp[Ix][Iy + 1][Iz][i][1] - comp[Ix][Iy][Iz][i][1];
						RSide += DTran * DeltaX;

						dAAddp = dE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Iy] * dCoefg;
						dAAddp2 = dE[Ix][Iy + 1][Iz][Nc][1] * gridDim[Nx + Iy + 1] * Coef;
						dBBddp = -dPordp * tor[Ix][Iy][Iz] * gridDim[Nx + Iy] * dCoefg / (porpor*porpor);
						dBBddp2 = -dPordp2 * tor[Ix][Iy + 1][Iz] * gridDim[Nx + Iy + 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefg) {
							dRsidedp += -NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}
						/////////////////////////////////////////////////////////////////////////////
						Jac1Row[JRowIndex] = PCoeff * (-comp[Ix][(Iy + transS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][0][1] - comp[Ix][(Iy + transS[Ix + 1][Iy + 1][Iz + 1][1][1])][Iz][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][1][1] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;
					}

					if (Iy>0) {
						if (phaseStat[Ix][Iy - 1][Iz]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[Iz*(Nx*Ny) + (Iy - 1)*Nx + Ix] - reCol2;

						dsw = -comp[Ix][(Iy - 1 + transS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy][Iz + 1][4][1] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]) - comp[Ix][(Iy - 1 + transS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy][Iz + 1][6][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						if (!transS[Ix + 1][Iy][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dso = -comp[Ix][(Iy - 1 + transS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy][Iz + 1][10][1] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]) - comp[Ix][(Iy - 1 + transS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy][Iz + 1][11][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						if (!transS[Ix + 1][Iy][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix][Iy - 1][Iz] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;

						dsgo = -comp[Ix][(Iy - 1 + transS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy][Iz + 1][8][1] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]) - comp[Ix][(Iy - 1 + transS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy][Iz + 1][9][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						dsgg = -comp[Ix][(Iy - 1 + transS[Ix + 1][Iy][Iz + 1][1][1])][Iz][i][1] * trans[Ix + 1][Iy][Iz + 1][5][1] * (P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]) - comp[Ix][(Iy - 1 + transS[Ix + 1][Iy][Iz + 1][1][1])][Iz][i][1] * trans[Ix + 1][Iy][Iz + 1][7][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						if (!transS[Ix + 1][Iy][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix][Iy - 1][Iz] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}
						if (!transS[Ix + 1][Iy][Iz + 1][1][1]) {
							Jac1Row[JRowIndex] += (phaseStat[Ix][Iy - 1][Iz] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;

						//////////////////////////////////////////////////////////////////
						/////////////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (phaseStat[Ix][Iy - 1][Iz] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][RO][0] * gridDim[Nx + Iy - 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][BMU][0] * gridDim[Nx + Iy - 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Iy] * Makhraj - dMul * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix][Iy - 1][Iz][Nc][0] * gridDim[Nx + Iy - 1] * Coef*Makhraj - DiffVisco(Ix, Iy - 1, Iz, Nc, 0)*gridDim[Nx + Iy - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Iy] * (blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][Nc][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Iy - 1] * (blockFProps[Ix][Iy - 1][Iz][BGAM][0] * dE[Ix][Iy - 1][Iz][Nc][0] / blockFProps[Ix][Iy - 1][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][BGAM][0] * gridDim[Nx + Iy - 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

						if (transS[Ix + 1][Iy][Iz + 1][0][1]) {
							dRsidedp += (comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);
							dBsidedp = -comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);

							dRsidedp += (comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][1])*(Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
							dBsidedp -= comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						}
						else {
							dRsidedp += comp[Ix][Iy - 1][Iz][i][0] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][1] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);
							dBsidedp = -(comp[Ix][Iy - 1][Iz][i][0] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][1] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);

							dRsidedp += comp[Ix][Iy - 1][Iz][i][0] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
							dBsidedp -= (comp[Ix][Iy - 1][Iz][i][0] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][1])*(Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						}

						porpor2 = porosity[Ix][Iy - 1][Iz] * (1 + cpor * (P[Ix + 1][Iy][Iz + 1][1] - refP) + dcpor * (P[Ix + 1][Iy][Iz + 1][1] - refP)*(P[Ix + 1][Iy][Iz + 1][1] - refP));
						dPordp2 = porosity[Ix][Iy - 1][Iz] * (cpor + 2 * dcpor*(P[Ix + 1][Iy][Iz + 1][1] - refP));
						if (comp[Ix][Iy - 1][Iz][i][0]>comp[Ix][Iy][Iz][i][0]) {
							DupStream = diffusion[Ix][Iy - 1][Iz][i][0];
							dDdp = 0;
							dDdp2 = DifDiffusion(Ix, Iy - 1, Iz, i, Nc, 0);
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][0];
							dDdp = dDiffdpl;
							dDdp2 = 0;
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix][Iy - 1][Iz] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = blockFProps[Ix][Iy - 1][Iz][RO][0] * gridDim[Nx + Iy - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] * dCoefl;
						AAd *= (sat[Ix][Iy - 1][Iz][1] * gridDim[Nx + Iy - 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Nx + Iy] * dCoefl) / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
						BBd = tor[Ix][Iy - 1][Iz] * gridDim[Nx + Iy - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Iy] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Ix] * gridDim[Nx + Ny + Iz] / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = comp[Ix][Iy][Iz][i][0] - comp[Ix][Iy - 1][Iz][i][0];
						RSide -= DTran * DeltaX;

						dAAddp = dE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Iy] * dCoefl;
						dAAddp2 = dE[Ix][Iy - 1][Iz][Nc][0] * gridDim[Nx + Iy - 1] * Coef;
						dBBddp = -dPordp * tor[Ix][Iy][Iz] * gridDim[Nx + Iy] * dCoefl / (porpor*porpor);
						dBBddp2 = -dPordp2 * tor[Ix][Iy - 1][Iz] * gridDim[Nx + Iy - 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefl) {
							dRsidedp += NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += -NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}

						if (phaseStat[Ix][Iy - 1][Iz] == 1) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][RO][1] * gridDim[Nx + Iy - 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][BMU][1] * gridDim[Nx + Iy - 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Iy] * Makhraj - dMug * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix][Iy - 1][Iz][Nc][1] * gridDim[Nx + Iy - 1] * Coef*Makhraj - DiffVisco(Ix, Iy - 1, Iz, Nc, 1)*gridDim[Nx + Iy - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Iy] * (blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][Nc][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Iy - 1] * (blockFProps[Ix][Iy - 1][Iz][BGAM][1] * dE[Ix][Iy - 1][Iz][Nc][1] / blockFProps[Ix][Iy - 1][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][BGAM][1] * gridDim[Nx + Iy - 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

						if (transS[Ix + 1][Iy][Iz + 1][1][1]) {
							dRsidedp += (comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);
							dBsidedp -= comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);

							dRsidedp += (comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
							dBsidedp -= comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						}
						else {
							dRsidedp += comp[Ix][Iy - 1][Iz][i][1] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][2] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);
							dBsidedp -= (comp[Ix][Iy - 1][Iz][i][1] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][2] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);

							dRsidedp += comp[Ix][Iy - 1][Iz][i][1] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
							dBsidedp -= (comp[Ix][Iy - 1][Iz][i][1] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						}

						///////////////////////////////////////////////////////////////////
						if (comp[Ix][Iy - 1][Iz][i][1]>comp[Ix][Iy][Iz][i][1]) {
							DupStream = diffusion[Ix][Iy - 1][Iz][i][1];
							dDdp = 0;
							dDdp2 = DifDiffusion(Ix, Iy - 1, Iz, i, Nc, 1);
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][1];
							dDdp = dDiffdpg;
							dDdp2 = 0;
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix][Iy - 1][Iz] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = blockFProps[Ix][Iy - 1][Iz][RO][1] * gridDim[Nx + Iy - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] * dCoefg;
						AAd *= (sat[Ix][Iy - 1][Iz][2] * gridDim[Nx + Iy - 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Nx + Iy] * dCoefg) / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
						BBd = tor[Ix][Iy - 1][Iz] * gridDim[Nx + Iy - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Iy] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Ix]*gridDim[Nx+Ny+Iz]/(gridDim[Nx+Iy-1]+gridDim[Nx+Iy]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = comp[Ix][Iy][Iz][i][1] - comp[Ix][Iy - 1][Iz][i][1];
						RSide -= DTran * DeltaX;

						dAAddp = dE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Iy] * dCoefg;
						dAAddp2 = dE[Ix][Iy - 1][Iz][Nc][1] * gridDim[Nx + Iy - 1] * Coef;
						dBBddp = -dPordp * tor[Ix][Iy][Iz] * gridDim[Nx + Iy] * dCoefg / (porpor*porpor);
						dBBddp2 = -dPordp2 * tor[Ix][Iy - 1][Iz] * gridDim[Nx + Iy - 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefg) {
							dRsidedp += NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += -NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}

						//////////////////////////////////////////////////////////////////
						Jac1Row[JRowIndex] = PCoeff * (-comp[Ix][(Iy - 1 + transS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy][Iz + 1][0][1] - comp[Ix][(Iy - 1 + transS[Ix + 1][Iy][Iz + 1][1][1])][Iz][i][1] * trans[Ix + 1][Iy][Iz + 1][1][1] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;
					}

					if (Iz<(Nz - 1)) {
						if (phaseStat[Ix][Iy][Iz + 1]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[(Iz + 1)*(Nx*Ny) + Iy * Nx + Ix] - reCol2;

						dsw = comp[Ix][Iy][(Iz + transS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][4][2] * (P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) + comp[Ix][Iy][(Iz + transS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][6][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (transS[Ix + 1][Iy + 1][Iz + 1][0][2]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dso = comp[Ix][Iy][(Iz + transS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][10][2] * (P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) + comp[Ix][Iy][(Iz + transS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][11][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (transS[Ix + 1][Iy + 1][Iz + 1][0][2]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix][Iy][Iz + 1] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;

						dsgo = comp[Ix][Iy][(Iz + transS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][8][2] * (P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) + comp[Ix][Iy][(Iz + transS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][9][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						dsgg = comp[Ix][Iy][(Iz + transS[Ix + 1][Iy + 1][Iz + 1][1][2])][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][5][2] * (P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + comp[Ix][Iy][(Iz + transS[Ix + 1][Iy + 1][Iz + 1][1][2])][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][7][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (transS[Ix + 1][Iy + 1][Iz + 1][0][2]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix][Iy][Iz + 1] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}
						if (transS[Ix + 1][Iy + 1][Iz + 1][1][2]) {
							Jac1Row[JRowIndex] += (phaseStat[Ix][Iy][Iz + 1] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;
						///////////////////////////////////////////////////////////////////////////
						////////////////////////////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (phaseStat[Ix][Iy][Iz + 1] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][RO][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][BMU][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Ny + Iz] * Makhraj - dMul * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix][Iy][Iz + 1][Nc][0] * gridDim[Nx + Ny + Iz + 1] * Coef*Makhraj - DiffVisco(Ix, Iy, Iz + 1, Nc, 0)*gridDim[Nx + Ny + Iz + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Ny + Iz] * (blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][Nc][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz + 1] * (blockFProps[Ix][Iy][Iz + 1][BGAM][0] * dE[Ix][Iy][Iz + 1][Nc][0] / blockFProps[Ix][Iy][Iz + 1][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][BGAM][0] * gridDim[Nx + Ny + Iz + 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

						if (transS[Ix + 1][Iy + 1][Iz + 1][0][2]) {
							dRsidedp -= comp[Ix][Iy][Iz + 1][i][0] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][1] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = (comp[Ix][Iy][Iz + 1][i][0] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][1] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= comp[Ix][Iy][Iz + 1][i][0] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (comp[Ix][Iy][Iz + 1][i][0] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= (comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}

						porpor2 = porosity[Ix][Iy][Iz + 1] * (1 + cpor * (P[Ix + 1][Iy + 1][Iz + 2][1] - refP) + dcpor * (P[Ix + 1][Iy + 1][Iz + 2][1] - refP)*(P[Ix + 1][Iy + 1][Iz + 2][1] - refP));
						dPordp2 = porosity[Ix][Iy][Iz + 1] * (cpor + 2 * dcpor*(P[Ix + 1][Iy + 1][Iz + 2][1] - refP));
						if (comp[Ix][Iy][Iz + 1][i][0]>comp[Ix][Iy][Iz][i][0]) {
							DupStream = diffusion[Ix][Iy][Iz + 1][i][0];
							dDdp = 0;
							dDdp2 = DifDiffusion(Ix, Iy, Iz + 1, i, Nc, 0);
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][0];
							dDdp = dDiffdpl;
							dDdp2 = 0;
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix][Iy][Iz + 1] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = blockFProps[Ix][Iy][Iz + 1][RO][0] * gridDim[Nx + Ny + Iz + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] * dCoefl;
						AAd *= (sat[Ix][Iy][Iz + 1][1] * gridDim[Nx + Ny + Iz + 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Nx + Ny + Iz] * dCoefl) / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
						BBd = tor[Ix][Iy][Iz + 1] * gridDim[Nx + Ny + Iz + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Ny + Iz] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Ix] * gridDim[Nx + Iy] / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = comp[Ix][Iy][Iz + 1][i][0] - comp[Ix][Iy][Iz][i][0];
						RSide += DTran * DeltaX;

						dAAddp = dE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Ny + Iz] * dCoefl;
						dAAddp2 = dE[Ix][Iy][Iz + 1][Nc][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
						dBBddp = -dPordp * tor[Ix][Iy][Iz] * gridDim[Nx + Ny + Iz] * dCoefl / (porpor*porpor);
						dBBddp2 = -dPordp2 * tor[Ix][Iy][Iz + 1] * gridDim[Nx + Ny + Iz + 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefl) {
							dRsidedp += -NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}

						if (phaseStat[Ix][Iy][Iz + 1] == 1) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][RO][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][BMU][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Ny + Iz] * Makhraj - dMug * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix][Iy][Iz + 1][Nc][1] * gridDim[Nx + Ny + Iz + 1] * Coef*Makhraj - DiffVisco(Ix, Iy, Iz + 1, Nc, 1)*gridDim[Nx + Ny + Iz + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Ny + Iz] * (blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][Nc][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz + 1] * (blockFProps[Ix][Iy][Iz + 1][BGAM][1] * dE[Ix][Iy][Iz + 1][Nc][1] / blockFProps[Ix][Iy][Iz + 1][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][BGAM][1] * gridDim[Nx + Ny + Iz + 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

						if (transS[Ix + 1][Iy + 1][Iz + 1][1][2]) {
							dRsidedp -= comp[Ix][Iy][Iz + 1][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][2] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += (comp[Ix][Iy][Iz + 1][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][2] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= comp[Ix][Iy][Iz + 1][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (comp[Ix][Iy][Iz + 1][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= (comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						///////////////////////////////////////////////////////////////////////////////
						if (comp[Ix][Iy][Iz + 1][i][1]>comp[Ix][Iy][Iz][i][1]) {
							DupStream = diffusion[Ix][Iy][Iz + 1][i][1];
							dDdp = 0;
							dDdp2 = DifDiffusion(Ix, Iy, Iz + 1, i, Nc, 1);
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][1];
							dDdp = dDiffdpg;
							dDdp2 = 0;
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix][Iy][Iz + 1] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = blockFProps[Ix][Iy][Iz + 1][RO][1] * gridDim[Nx + Ny + Iz + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] * dCoefg;
						AAd *= (sat[Ix][Iy][Iz + 1][2] * gridDim[Nx + Ny + Iz + 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Nx + Ny + Iz] * dCoefg) / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
						BBd = tor[Ix][Iy][Iz + 1] * gridDim[Nx + Ny + Iz + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Ny + Iz] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Ix]*gridDim[Nx+Iy]/(gridDim[Nx+Ny+Iz+1]+gridDim[Nx+Ny+Iz]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = comp[Ix][Iy][Iz + 1][i][1] - comp[Ix][Iy][Iz][i][1];
						RSide += DTran * DeltaX;

						dAAddp = dE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Ny + Iz] * dCoefg;
						dAAddp2 = dE[Ix][Iy][Iz + 1][Nc][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
						dBBddp = -dPordp * tor[Ix][Iy][Iz] * gridDim[Nx + Ny + Iz] * dCoefg / (porpor*porpor);
						dBBddp2 = -dPordp2 * tor[Ix][Iy][Iz + 1] * gridDim[Nx + Ny + Iz + 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefg) {
							dRsidedp += -NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}

						//////////////////////////////////////////////////////////////////////////////
						Jac1Row[JRowIndex] = PCoeff * (-comp[Ix][Iy][(Iz + transS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][0][2] - comp[Ix][Iy][(Iz + transS[Ix + 1][Iy + 1][Iz + 1][1][2])][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][1][2] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;
					}

					if (Iz>0) {
						if (phaseStat[Ix][Iy][Iz - 1]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[(Iz - 1)*(Nx*Ny) + Iy * Nx + Ix] - reCol2;

						dsw = -comp[Ix][Iy][(Iz - 1 + transS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz][4][2] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]) - comp[Ix][Iy][(Iz - 1 + transS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz][6][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						if (!transS[Ix + 1][Iy + 1][Iz][0][2]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dso = -comp[Ix][Iy][(Iz - 1 + transS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz][10][2] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]) - comp[Ix][Iy][(Iz - 1 + transS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz][11][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						if (!transS[Ix + 1][Iy + 1][Iz][0][2]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix][Iy][Iz - 1] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;

						dsgo = -comp[Ix][Iy][(Iz - 1 + transS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz][8][2] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]) - comp[Ix][Iy][(Iz - 1 + transS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz][9][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						dsgg = -comp[Ix][Iy][(Iz - 1 + transS[Ix + 1][Iy + 1][Iz][1][2])][i][1] * trans[Ix + 1][Iy + 1][Iz][5][2] * (P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]) - comp[Ix][Iy][(Iz - 1 + transS[Ix + 1][Iy + 1][Iz][1][2])][i][1] * trans[Ix + 1][Iy + 1][Iz][7][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						if (!transS[Ix + 1][Iy + 1][Iz][0][2]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix][Iy][Iz - 1] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}
						if (!transS[Ix + 1][Iy + 1][Iz][1][2]) {
							Jac1Row[JRowIndex] += (phaseStat[Ix][Iy][Iz - 1] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;

						///////////////////////////////////////////////////////////////
						///////////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (phaseStat[Ix][Iy][Iz - 1] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][RO][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][BMU][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Ny + Iz] * Makhraj - dMul * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix][Iy][Iz - 1][Nc][0] * gridDim[Nx + Ny + Iz - 1] * Coef*Makhraj - DiffVisco(Ix, Iy, Iz - 1, Nc, 0)*gridDim[Nx + Ny + Iz - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Ny + Iz] * (blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][Nc][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz - 1] * (blockFProps[Ix][Iy][Iz - 1][BGAM][0] * dE[Ix][Iy][Iz - 1][Nc][0] / blockFProps[Ix][Iy][Iz - 1][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][BGAM][0] * gridDim[Nx + Ny + Iz - 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

						if (transS[Ix + 1][Iy + 1][Iz][0][2]) {
							dRsidedp += (comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);
							dBsidedp = -comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);

							dRsidedp += (comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][1])*(Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							dBsidedp -= comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						}
						else {
							dRsidedp += comp[Ix][Iy][Iz - 1][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][1] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);
							dBsidedp = -(comp[Ix][Iy][Iz - 1][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][1] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);

							dRsidedp += comp[Ix][Iy][Iz - 1][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							dBsidedp -= (comp[Ix][Iy][Iz - 1][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][1])*(Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						}

						porpor2 = porosity[Ix][Iy][Iz - 1] * (1 + cpor * (P[Ix + 1][Iy + 1][Iz][1] - refP) + dcpor * (P[Ix + 1][Iy + 1][Iz][1] - refP)*(P[Ix + 1][Iy + 1][Iz][1] - refP));
						dPordp2 = porosity[Ix][Iy][Iz - 1] * (cpor + 2 * dcpor*(P[Ix + 1][Iy + 1][Iz][1] - refP));
						if (comp[Ix][Iy][Iz - 1][i][0]>comp[Ix][Iy][Iz][i][0]) {
							DupStream = diffusion[Ix][Iy][Iz - 1][i][0];
							dDdp = 0;
							dDdp2 = DifDiffusion(Ix, Iy, Iz - 1, i, Nc, 0);
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][0];
							dDdp = dDiffdpl;
							dDdp2 = 0;
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix][Iy][Iz - 1] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = blockFProps[Ix][Iy][Iz - 1][RO][0] * gridDim[Nx + Ny + Iz - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] * dCoefl;
						AAd *= (sat[Ix][Iy][Iz - 1][1] * gridDim[Nx + Ny + Iz - 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Nx + Ny + Iz] * dCoefl) / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
						BBd = tor[Ix][Iy][Iz - 1] * gridDim[Nx + Ny + Iz - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Ny + Iz] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Ix] * gridDim[Nx + Iy] / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = comp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz - 1][i][0];
						RSide -= DTran * DeltaX;

						dAAddp = dE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Ny + Iz] * dCoefl;
						dAAddp2 = dE[Ix][Iy][Iz - 1][Nc][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
						dBBddp = -dPordp * tor[Ix][Iy][Iz] * gridDim[Nx + Ny + Iz] * dCoefl / (porpor*porpor);
						dBBddp2 = -dPordp2 * tor[Ix][Iy][Iz - 1] * gridDim[Nx + Ny + Iz - 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefl) {
							dRsidedp += NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += -NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}

						if (phaseStat[Ix][Iy][Iz - 1] == 1) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][RO][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][BMU][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Ny + Iz] * Makhraj - dMug * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix][Iy][Iz - 1][Nc][1] * gridDim[Nx + Ny + Iz - 1] * Coef*Makhraj - DiffVisco(Ix, Iy, Iz - 1, Nc, 1)*gridDim[Nx + Ny + Iz - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Ny + Iz] * (blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][Nc][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz - 1] * (blockFProps[Ix][Iy][Iz - 1][BGAM][1] * dE[Ix][Iy][Iz - 1][Nc][1] / blockFProps[Ix][Iy][Iz - 1][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][BGAM][1] * gridDim[Nx + Ny + Iz - 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

						if (transS[Ix + 1][Iy + 1][Iz][1][2]) {
							dRsidedp += (comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);
							dBsidedp -= comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);

							dRsidedp += (comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							dBsidedp -= comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						}
						else {
							dRsidedp += comp[Ix][Iy][Iz - 1][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][2] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);
							dBsidedp -= (comp[Ix][Iy][Iz - 1][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][2] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);

							dRsidedp += comp[Ix][Iy][Iz - 1][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							dBsidedp -= (comp[Ix][Iy][Iz - 1][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						}
						//////////////////////////////////////////////////////////////////
						if (comp[Ix][Iy][Iz - 1][i][1]>comp[Ix][Iy][Iz][i][1]) {
							DupStream = diffusion[Ix][Iy][Iz - 1][i][1];
							dDdp = 0;
							dDdp2 = DifDiffusion(Ix, Iy, Iz - 1, i, Nc, 1);
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][1];
							dDdp = dDiffdpg;
							dDdp2 = 0;
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix][Iy][Iz - 1] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = blockFProps[Ix][Iy][Iz - 1][RO][1] * gridDim[Nx + Ny + Iz - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] * dCoefg;
						AAd *= (sat[Ix][Iy][Iz - 1][2] * gridDim[Nx + Ny + Iz - 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Nx + Ny + Iz] * dCoefg) / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
						BBd = tor[Ix][Iy][Iz - 1] * gridDim[Nx + Ny + Iz - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Ny + Iz] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Ix]*gridDim[Nx+Iy]/(gridDim[Nx+Ny+Iz-1]+gridDim[Nx+Ny+Iz]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = comp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz - 1][i][1];
						RSide -= DTran * DeltaX;

						dAAddp = dE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Ny + Iz] * dCoefg;
						dAAddp2 = dE[Ix][Iy][Iz - 1][Nc][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
						dBBddp = -dPordp * tor[Ix][Iy][Iz] * gridDim[Nx + Ny + Iz] * dCoefg / (porpor*porpor);
						dBBddp2 = -dPordp2 * tor[Ix][Iy][Iz - 1] * gridDim[Nx + Ny + Iz - 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefg) {
							dRsidedp += NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += -NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}
						//////////////////////////////////////////////////////////////////
						Jac1Row[JRowIndex] = PCoeff * (-comp[Ix][Iy][(Iz - 1 + transS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz][0][2] - comp[Ix][Iy][(Iz - 1 + transS[Ix + 1][Iy + 1][Iz][1][2])][i][1] * trans[Ix + 1][Iy + 1][Iz][1][2] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;
					}

					Jac1Row[JRowIndex] = PCoeff * (dLsidedp + dRsidedp + comp[Ix][Iy][Iz][i][0] * PIo + gComp * PIg);
					Jac1Col[JRowIndex] = jacCol + (2 * Nc) - reCol;
					JRowIndex++;


					if (phaseStat[Ix][Iy][Iz] != -1) {
						Jac1Row[JRowIndex] = -dRsidedSw;
						Jac1Col[JRowIndex] = jacCol + (2 * Nc + 1) - reCol;
						JRowIndex++;
						Jac1Row[JRowIndex] = dLsidedSo - dRsidedSo;
						Jac1Col[JRowIndex] = jacCol + (2 * Nc + 2) - reCol;
						JRowIndex++;
						//reCol1 = 0;
						reCol3 = 0;
					}
					else {
						//reCol1 = 2;
						reCol3 = 1;
					}

					if (phaseStat[Ix][Iy][Iz] != 1) {
						Jac1Row[JRowIndex] = dLsidedSg - dRsidedSg;
						Jac1Col[JRowIndex] = jacCol + (2 * Nc + 3) - reCol - reCol3;
						JRowIndex++;
					}
					/////////////////////////////////////////////////Sadeq///////////////////////////////////
					if (fphaseStat[Ix][Iy][Iz] == 1) {
						reColF1 = Nc;
						//reColF2
						//dRsidefdSo = 0;
						Jac1Row[JRowIndex] = dRsidefdSo;
						Jac1Col[JRowIndex] = FracEq + 2 * Nc + 2 - reColF1;
						JRowIndex++;
					}
					else if (fphaseStat[Ix][Iy][Iz] == (-1)) {
						reColF1 = Nc;
						//reColF2 = Nc;
						//dRsidefdSg = 0;
						Jac1Row[JRowIndex] = dRsidefdSg;
						Jac1Col[JRowIndex] = FracEq + 2 * Nc + 2 - reColF1;
						JRowIndex++;
					}
					else {
						reColF1 = 0;
						//reColF2 = 0;
						//dRsidefdSo = 0;
						Jac1Row[JRowIndex] = dRsidefdSo;
						Jac1Col[JRowIndex] = FracEq + 2 * Nc + 2 - reColF1;
						JRowIndex++;
						//dRsidefdSg = 0;
						Jac1Row[JRowIndex] = dRsidefdSg;
						Jac1Col[JRowIndex] = FracEq + 2 * Nc + 3 - reColF1;
						JRowIndex++;
					}
					//dRsidefdp = 0;
					Jac1Row[JRowIndex] = PCoeff * dRsidefdp;
					Jac1Col[JRowIndex] = FracEq + 2 * Nc - reColF1;
					JRowIndex++;
					//dRsidefdSw = 0;
					Jac1Row[JRowIndex] = dRsidefdSw;
					Jac1Col[JRowIndex] = FracEq + 2 * Nc + 1 - reColF1;
					JRowIndex++;
					////////////////////////sadeq/////////////////////////

					for (k = 0; k<Nc; k++) {
						dRsidedxl = 0;
						dRsidedxg = 0;
						dRsidefdxl = 0;
						dRsidefdxg = 0;


						dMul = DiffVisco(Ix, Iy, Iz, k, 0);
						dMug = DiffVisco(Ix, Iy, Iz, k, 1);
						dDiffdxl = DifDiffusion(Ix, Iy, Iz, i, k, 0);
						dDiffdxg = DifDiffusion(Ix, Iy, Iz, i, k, 1);

						if (k == i) {


							// Transfer function drside dxl dxg fdxl fdxg
							// moshtagh transfer Function jabejaie naft nesbat be xl Matrix
							dRsidedxl += ZERO_CONV * SI_C * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
							dRsidedxl += ZERO_CONV * SI_C * dE[Ix][Iy][Iz][k][0] * comp[Ix][Iy][Iz][i][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
							dRsidedxl += ZERO_CONV * -SI_C * DiffVisco(Ix, Iy, Iz, k, 0) * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] * porpor / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor)*(blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) * (porpor + fporpor);

							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (1)) {
								dRsidedxl += ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
								dRsidedxl += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								dRsidedxl += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsidedxl += ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
								dRsidedxl += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								dRsidedxl += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
							}

							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								dRsidedxl += ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
								dRsidedxl += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								dRsidedxl += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
							}

							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsidedxl += ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
								dRsidedxl += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								dRsidedxl += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);

								dRsidedxl += ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
								dRsidedxl += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								dRsidedxl += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1)) {
								dRsidedxl += ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
								dRsidedxl += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								dRsidedxl += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								dRsidedxl += ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
								dRsidedxl += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								dRsidedxl += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
							}



							// moshtagh transfer Function jabejaie naft nesbat be xl Fracture
							dRsidefdxl += ZERO_CONV * -SI_C * fDiffVisco(Ix, Iy, Iz, k, 0) * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] * fporpor / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor)*(blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) * (porpor + fporpor);

							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (1)) {
								dRsidefdxl += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsidefdxl += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
							}

/*
// 							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (1)) {
// 								dRsidefdxl += ZERO_DIFF * fdE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
// 								dRsidefdxl += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0];
// 								dRsidefdxl += ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
// 							}
*/

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1)) {
/*
// 								dRsidefdxl += ZERO_DIFF * fdE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
// 								dRsidefdxl += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0];
// 								dRsidefdxl += ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
*/

								dRsidefdxl += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
							}

							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsidefdxl += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
							}

/*
// 							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0)) {
// 								dRsidefdxl += ZERO_DIFF * fdE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
// 								dRsidefdxl += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0];
// 								dRsidefdxl += ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
// 							}
*/



							// moshtagh transfer Function jabejaie gaz nesbat be xg Matrix
							dRsidedxg += ZERO_CONV * SI_C * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor) / (porpor + fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));
							dRsidedxg += ZERO_CONV * SI_C * dE[Ix][Iy][Iz][k][1] * comp[Ix][Iy][Iz][i][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor) / (porpor + fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));
							dRsidedxg += ZERO_CONV * -SI_C * DiffVisco(Ix, Iy, Iz, k, 1) * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] * porpor / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor)*(blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1])) * (porpor + fporpor);

							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								dRsidedxg += ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
								dRsidedxg += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								dRsidedxg += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsidedxg += ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
								dRsidedxg += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								dRsidedxg += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
							}

							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (1)) {
								dRsidedxg += ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
								dRsidedxg += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								dRsidedxg += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
							}


							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1)) {
								dRsidedxg += ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
								dRsidedxg += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								dRsidedxg += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								dRsidedxg += ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
								dRsidedxg += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								dRsidedxg += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
							}

							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsidedxg += ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
								dRsidedxg += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								dRsidedxg += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

								dRsidedxg += ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
								dRsidedxg += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								dRsidedxg += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
							}




							// moshtagh transfer Function jabejaie gaz nesbat be xg Fracture
							dRsidefdxg += ZERO_CONV * -SI_C * fDiffVisco(Ix, Iy, Iz, k, 1) * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] * fporpor / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor)*(blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1])) * (porpor + fporpor);

							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								dRsidefdxg += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsidefdxg += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
							}

/*
// 							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
// 								dRsidefdxg += ZERO_DIFF * fdE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
// 								dRsidefdxg += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1];
// 								dRsidefdxg += ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
// 							}
*/

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								dRsidefdxg += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];

/*
// 								dRsidefdxg += ZERO_DIFF * fdE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
// 								dRsidefdxg += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1];
// 								dRsidefdxg += ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
*/
							}

/*
// 							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0)) {
// 								dRsidefdxg += ZERO_DIFF * fdE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
// 								dRsidefdxg += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1];
// 								dRsidefdxg += ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
// 							}
*/

							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsidefdxg += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
							}
							//


							dLsidedxl = blockFProps[Ix][Iy][Iz][RO][0] + comp[Ix][Iy][Iz][i][0] * dE[Ix][Iy][Iz][k][0];
							dLsidedxg = blockFProps[Ix][Iy][Iz][RO][1] + comp[Ix][Iy][Iz][i][1] * dE[Ix][Iy][Iz][k][1];
							if (iWell != (-1)) {
								dQdxl = 0;
								dQdxg = 0;
							}
							else {
								dQdxl = Qo;
								dQdxg = Qg;
							}

							if (Ix<(Nx - 1)) {
								if (phaseStat[Ix + 1][Iy][Iz] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][RO][0] * gridDim[Ix + 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BMU][0] * gridDim[Ix + 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][0] * gridDim[Ix] * Makhraj - dMul * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix + 1][Iy][Iz][k][0] * gridDim[Ix + 1] * Coef*Makhraj - DiffVisco(Ix + 1, Iy, Iz, k, 0)*gridDim[Ix + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Ix] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][k][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Ix + 1] * (G_ACCG*blockFProps[Ix + 1][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix + 1][Iy][Iz][BGAM][0] * dE[Ix + 1][Iy][Iz][k][0] / blockFProps[Ix + 1][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BGAM][0] * gridDim[Ix + 1] * Coef) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

								if (transS[Ix + 1][Iy + 1][Iz + 1][0][0]) {
									dRsidedxl += comp[Ix + 1][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][1] * Moshtaq*(P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = (trans[Ix + 1][Iy + 1][Iz + 1][0][0] + comp[Ix + 1][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][1] * Bmoshtaq)*(P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

									//dRsidedxl+=comp[Ix+1][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxl+=(trans[Ix+1][Iy+1][Iz+1][2][0]+comp[Ix+1][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}
								else {
									dRsidedxl += (trans[Ix + 1][Iy + 1][Iz + 1][0][0] + comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

									//dRsidedxl+=(trans[Ix+1][Iy+1][Iz+1][2][0]+comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxl+=comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}

								porpor2 = porosity[Ix + 1][Iy][Iz] * (1 + cpor * (P[Ix + 2][Iy + 1][Iz + 1][1] - refP) + dcpor * (P[Ix + 2][Iy + 1][Iz + 1][1] - refP)*(P[Ix + 2][Iy + 1][Iz + 1][1] - refP));

								if (comp[Ix + 1][Iy][Iz][i][0]>comp[Ix][Iy][Iz][i][0]) {
									DupStream = diffusion[Ix + 1][Iy][Iz][i][0];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix + 1, Iy, Iz, i, k, 0);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix + 1][Iy][Iz][RO][0] * gridDim[Ix + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] * dCoefl;
								AAd *= (sat[Ix + 1][Iy][Iz][1] * gridDim[Ix + 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Ix] * dCoefl) / (gridDim[Ix + 1] + gridDim[Ix]);
								BBd = tor[Ix + 1][Iy][Iz] * gridDim[Ix + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Ix] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz] / (gridDim[Ix + 1] + gridDim[Ix]);
								DeltaX = comp[Ix + 1][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0];

								dAAddx = dE[Ix][Iy][Iz][k][0] * gridDim[Ix] * dCoefl;
								dAAddx2 = dE[Ix + 1][Iy][Iz][k][0] * gridDim[Ix + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								mBLNo = preConRow[Iz*(Nx*Ny) + Iy * Nx + Ix + 1];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;



								if (phaseStat[Ix + 1][Iy][Iz] == 1) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][RO][1] * gridDim[Ix + 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BMU][1] * gridDim[Ix + 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][1] * gridDim[Ix] * Makhraj - dMug * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix + 1][Iy][Iz][k][1] * gridDim[Ix + 1] * Coef*Makhraj - DiffVisco(Ix + 1, Iy, Iz, k, 1)*gridDim[Ix + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Ix] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][k][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Ix + 1] * (G_ACCG*blockFProps[Ix + 1][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix + 1][Iy][Iz][BGAM][1] * dE[Ix + 1][Iy][Iz][k][1] / blockFProps[Ix + 1][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BGAM][1] * gridDim[Ix + 1] * Coef) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

								if (transS[Ix + 1][Iy + 1][Iz + 1][1][0]) {
									dRsidedxg += comp[Ix + 1][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][2] * Moshtaq*(P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = (trans[Ix + 1][Iy + 1][Iz + 1][1][0] + comp[Ix + 1][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][2] * Bmoshtaq)*(P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

									//dRsidedxg+=comp[Ix+1][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxg+=(trans[Ix+1][Iy+1][Iz+1][3][0]+comp[Ix+1][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}
								else {
									dRsidedxg += (trans[Ix + 1][Iy + 1][Iz + 1][1][0] + comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

									//dRsidedxg+=(trans[Ix+1][Iy+1][Iz+1][3][0]+comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxg+=comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);

								}

								if (comp[Ix + 1][Iy][Iz][i][1]>comp[Ix][Iy][Iz][i][1]) {
									DupStream = diffusion[Ix + 1][Iy][Iz][i][1];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix + 1, Iy, Iz, i, k, 1);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix + 1][Iy][Iz][RO][1] * gridDim[Ix + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] * dCoefg;
								AAd *= (sat[Ix + 1][Iy][Iz][2] * gridDim[Ix + 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Ix] * dCoefg) / (gridDim[Ix + 1] + gridDim[Ix]);
								BBd = tor[Ix + 1][Iy][Iz] * gridDim[Ix + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Ix] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Nx+Iy]*gridDim[Nx+Ny+Iz]/(gridDim[Ix+1]+gridDim[Ix]);
								DeltaX = comp[Ix + 1][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1];

								dAAddx = dE[Ix][Iy][Iz][k][1] * gridDim[Ix] * dCoefg;
								dAAddx2 = dE[Ix + 1][Iy][Iz][k][1] * gridDim[Ix + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								if (phaseStat[Ix + 1][Iy][Iz]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;


							}

							if (Ix>0) {
								if (phaseStat[Ix - 1][Iy][Iz] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][RO][0] * gridDim[Ix - 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][BMU][0] * gridDim[Ix - 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][0] * gridDim[Ix] * Makhraj - dMul * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix - 1][Iy][Iz][k][0] * gridDim[Ix - 1] * Coef*Makhraj - DiffVisco(Ix - 1, Iy, Iz, k, 0)*gridDim[Ix - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Ix] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][k][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Ix - 1] * (G_ACCG*blockFProps[Ix - 1][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix - 1][Iy][Iz][BGAM][0] * dE[Ix - 1][Iy][Iz][k][0] / blockFProps[Ix - 1][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][BGAM][0] * gridDim[Ix - 1] * Coef) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

								if (transS[Ix][Iy + 1][Iz + 1][0][0]) {
									dRsidedxl -= (trans[Ix][Iy + 1][Iz + 1][0][0] + comp[Ix][Iy][Iz][i][0] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);
									dBsidedxl = -comp[Ix][Iy][Iz][i][0] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);

									//dRsidedxl-=(trans[Ix][Iy+1][Iz+1][2][0]+comp[Ix][Iy][Iz][i][0]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1])*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
									//dBsidedxl-=comp[Ix][Iy][Iz][i][0]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								}
								else {
									dRsidedxl -= comp[Ix - 1][Iy][Iz][i][0] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][1] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);
									dBsidedxl = -(trans[Ix][Iy + 1][Iz + 1][0][0] + comp[Ix - 1][Iy][Iz][i][0] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][1] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);

									//dRsidedxl-=comp[Ix-1][Iy][Iz][i][0]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
									//dBsidedxl-=(trans[Ix][Iy+1][Iz+1][2][0]+comp[Ix-1][Iy][Iz][i][0]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][1])*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								}

								porpor2 = porosity[Ix - 1][Iy][Iz] * (1 + cpor * (P[Ix][Iy + 1][Iz + 1][1] - refP) + dcpor * (P[Ix][Iy + 1][Iz + 1][1] - refP)*(P[Ix][Iy + 1][Iz + 1][1] - refP));

								if (comp[Ix - 1][Iy][Iz][i][0]>comp[Ix][Iy][Iz][i][0]) {
									DupStream = diffusion[Ix - 1][Iy][Iz][i][0];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix - 1, Iy, Iz, i, k, 0);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix - 1][Iy][Iz][RO][0] * gridDim[Ix - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] * dCoefl;
								AAd *= (sat[Ix - 1][Iy][Iz][1] * gridDim[Ix - 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Ix] * dCoefl) / (gridDim[Ix - 1] + gridDim[Ix]);
								BBd = tor[Ix - 1][Iy][Iz] * gridDim[Ix - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Ix] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz] / (gridDim[Ix - 1] + gridDim[Ix]);
								DeltaX = comp[Ix - 1][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0];

								dAAddx = dE[Ix][Iy][Iz][k][0] * gridDim[Ix] * dCoefl;
								dAAddx2 = dE[Ix - 1][Iy][Iz][k][0] * gridDim[Ix - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += -NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += -NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								mBLNo = preConRow[Iz*(Nx*Ny) + Iy * Nx + Ix - 1];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;


								if (phaseStat[Ix - 1][Iy][Iz] == 1) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][RO][1] * gridDim[Ix - 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][BMU][1] * gridDim[Ix - 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][1] * gridDim[Ix] * Makhraj - dMug * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix - 1][Iy][Iz][k][1] * gridDim[Ix - 1] * Coef*Makhraj - DiffVisco(Ix - 1, Iy, Iz, k, 1)*gridDim[Ix - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Ix] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][k][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);
								BmoshtaqGama = gridDim[Ix - 1] * (G_ACCG*blockFProps[Ix - 1][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix - 1][Iy][Iz][BGAM][1] * dE[Ix - 1][Iy][Iz][k][1] / blockFProps[Ix - 1][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][BGAM][1] * gridDim[Ix - 1] * Coef) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

								if (transS[Ix][Iy + 1][Iz + 1][1][0]) {
									dRsidedxg -= (trans[Ix][Iy + 1][Iz + 1][1][0] + comp[Ix][Iy][Iz][i][1] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);
									dBsidedxg = -comp[Ix][Iy][Iz][i][1] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);

									//dRsidedxg-=(trans[Ix][Iy+1][Iz+1][3][0]+comp[Ix][Iy][Iz][i][1]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
									//dBsidedxg-=comp[Ix][Iy][Iz][i][1]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								}
								else {
									dRsidedxg -= comp[Ix - 1][Iy][Iz][i][1] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][2] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);
									dBsidedxg = -(trans[Ix][Iy + 1][Iz + 1][1][0] + comp[Ix - 1][Iy][Iz][i][1] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][2] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);

									//dRsidedxg-=comp[Ix-1][Iy][Iz][i][1]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
									//dBsidedxg-=(trans[Ix][Iy+1][Iz+1][3][0]+comp[Ix-1][Iy][Iz][i][1]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								}


								if (comp[Ix - 1][Iy][Iz][i][1]>comp[Ix][Iy][Iz][i][1]) {
									DupStream = diffusion[Ix - 1][Iy][Iz][i][1];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix - 1, Iy, Iz, i, k, 1);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix - 1][Iy][Iz][RO][1] * gridDim[Ix - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] * dCoefg;
								AAd *= (sat[Ix - 1][Iy][Iz][2] * gridDim[Ix - 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Ix] * dCoefg) / (gridDim[Ix - 1] + gridDim[Ix]);
								BBd = tor[Ix - 1][Iy][Iz] * gridDim[Ix - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Ix] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Nx+Iy]*gridDim[Nx+Ny+Iz]/(gridDim[Ix-1]+gridDim[Ix]);
								DeltaX = comp[Ix - 1][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1];

								dAAddx = dE[Ix][Iy][Iz][k][1] * gridDim[Ix] * dCoefg;
								dAAddx2 = dE[Ix - 1][Iy][Iz][k][1] * gridDim[Ix - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += -NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += -NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}


								if (phaseStat[Ix - 1][Iy][Iz]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;

							}

							if (Iy<(Ny - 1)) {
								if (phaseStat[Ix][Iy + 1][Iz] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][RO][0] * gridDim[Nx + Iy + 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][BMU][0] * gridDim[Nx + Iy + 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][0] * gridDim[Nx + Iy] * Makhraj - dMul * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix][Iy + 1][Iz][k][0] * gridDim[Nx + Iy + 1] * Coef*Makhraj - DiffVisco(Ix, Iy + 1, Iz, k, 0)*gridDim[Nx + Iy + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][k][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Iy + 1] * (G_ACCG*blockFProps[Ix][Iy + 1][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy + 1][Iz][BGAM][0] * dE[Ix][Iy + 1][Iz][k][0] / blockFProps[Ix][Iy + 1][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][BGAM][0] * gridDim[Nx + Iy + 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

								if (transS[Ix + 1][Iy + 1][Iz + 1][0][1]) {
									dRsidedxl += comp[Ix][Iy + 1][Iz][i][0] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][1] * Moshtaq*(P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = (trans[Ix + 1][Iy + 1][Iz + 1][0][1] + comp[Ix][Iy + 1][Iz][i][0] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][1] * Bmoshtaq)*(P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

									//dRsidedxl+=comp[Ix][Iy+1][Iz][i][0]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxl+=(trans[Ix+1][Iy+1][Iz+1][2][1]+comp[Ix][Iy+1][Iz][i][0]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}
								else {
									dRsidedxl += (trans[Ix + 1][Iy + 1][Iz + 1][0][1] + comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

									//dRsidedxl+=(trans[Ix+1][Iy+1][Iz+1][2][1]+comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxl+=comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}

								porpor2 = porosity[Ix][Iy + 1][Iz] * (1 + cpor * (P[Ix + 1][Iy + 2][Iz + 1][1] - refP) + dcpor * (P[Ix + 1][Iy + 2][Iz + 1][1] - refP)*(P[Ix + 1][Iy + 2][Iz + 1][1] - refP));
								if (comp[Ix][Iy + 1][Iz][i][0]>comp[Ix][Iy][Iz][i][0]) {
									DupStream = diffusion[Ix][Iy + 1][Iz][i][0];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix, Iy + 1, Iz, i, k, 0);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix][Iy + 1][Iz][RO][0] * gridDim[Nx + Iy + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] * dCoefl;
								AAd *= (sat[Ix][Iy + 1][Iz][1] * gridDim[Nx + Iy + 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Nx + Iy] * dCoefl) / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
								BBd = tor[Ix][Iy + 1][Iz] * gridDim[Nx + Iy + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Iy] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Ix] * gridDim[Nx + Ny + Iz] / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
								DeltaX = comp[Ix][Iy + 1][Iz][i][0] - comp[Ix][Iy][Iz][i][0];

								dAAddx = dE[Ix][Iy][Iz][k][0] * gridDim[Nx + Iy] * dCoefl;
								dAAddx2 = dE[Ix][Iy + 1][Iz][k][0] * gridDim[Nx + Iy + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								mBLNo = preConRow[Iz*(Nx*Ny) + (Iy + 1)*Nx + Ix];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;


								if (phaseStat[Ix][Iy + 1][Iz] == 1) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][RO][1] * gridDim[Nx + Iy + 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][BMU][1] * gridDim[Nx + Iy + 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][1] * gridDim[Nx + Iy] * Makhraj - dMug * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix][Iy + 1][Iz][k][1] * gridDim[Nx + Iy + 1] * Coef*Makhraj - DiffVisco(Ix, Iy + 1, Iz, k, 1)*gridDim[Nx + Iy + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][k][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Iy + 1] * (G_ACCG*blockFProps[Ix][Iy + 1][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy + 1][Iz][BGAM][1] * dE[Ix][Iy + 1][Iz][k][1] / blockFProps[Ix][Iy + 1][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][BGAM][1] * gridDim[Nx + Iy + 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

								if (transS[Ix + 1][Iy + 1][Iz + 1][1][1]) {
									dRsidedxg += comp[Ix][Iy + 1][Iz][i][1] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][2] * Moshtaq*(P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = (trans[Ix + 1][Iy + 1][Iz + 1][1][1] + comp[Ix][Iy + 1][Iz][i][1] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][2] * Bmoshtaq)*(P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

									//dRsidedxg+=comp[Ix][Iy+1][Iz][i][1]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxg+=(trans[Ix+1][Iy+1][Iz+1][3][1]+comp[Ix][Iy+1][Iz][i][1]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}
								else {
									dRsidedxg += (trans[Ix + 1][Iy + 1][Iz + 1][1][1] + comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

									//dRsidedxg+=(trans[Ix+1][Iy+1][Iz+1][3][1]+comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxg+=comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);

								}

								if (comp[Ix][Iy + 1][Iz][i][1]>comp[Ix][Iy][Iz][i][1]) {
									DupStream = diffusion[Ix][Iy + 1][Iz][i][1];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix, Iy + 1, Iz, i, k, 1);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix][Iy + 1][Iz][RO][1] * gridDim[Nx + Iy + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] * dCoefg;
								AAd *= (sat[Ix][Iy + 1][Iz][2] * gridDim[Nx + Iy + 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Nx + Iy] * dCoefg) / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
								BBd = tor[Ix][Iy + 1][Iz] * gridDim[Nx + Iy + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Iy] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Ix]*gridDim[Nx+Ny+Iz]/(gridDim[Nx+Iy+1]+gridDim[Nx+Iy]);
								DeltaX = comp[Ix][Iy + 1][Iz][i][1] - comp[Ix][Iy][Iz][i][1];

								dAAddx = dE[Ix][Iy][Iz][k][1] * gridDim[Nx + Iy] * dCoefg;
								dAAddx2 = dE[Ix][Iy + 1][Iz][k][1] * gridDim[Nx + Iy + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								if (phaseStat[Ix][Iy + 1][Iz]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;
							}

							if (Iy>0) {
								if (phaseStat[Ix][Iy - 1][Iz] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][RO][0] * gridDim[Nx + Iy - 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][BMU][0] * gridDim[Nx + Iy - 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][0] * gridDim[Nx + Iy] * Makhraj - dMul * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix][Iy - 1][Iz][k][0] * gridDim[Nx + Iy - 1] * Coef*Makhraj - DiffVisco(Ix, Iy - 1, Iz, k, 0)*gridDim[Nx + Iy - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][k][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Iy - 1] * (G_ACCG*blockFProps[Ix][Iy - 1][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy - 1][Iz][BGAM][0] * dE[Ix][Iy - 1][Iz][k][0] / blockFProps[Ix][Iy - 1][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][BGAM][0] * gridDim[Nx + Iy - 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

								if (transS[Ix + 1][Iy][Iz + 1][0][1]) {
									dRsidedxl -= (trans[Ix + 1][Iy][Iz + 1][0][1] + comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);
									dBsidedxl = -comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);

									//dRsidedxl-=(trans[Ix+1][Iy][Iz+1][2][1]+comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][1])*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
									//dBsidedxl-=comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								}
								else {
									dRsidedxl -= comp[Ix][Iy - 1][Iz][i][0] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][1] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);
									dBsidedxl = -(trans[Ix + 1][Iy][Iz + 1][0][1] + comp[Ix][Iy - 1][Iz][i][0] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][1] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);

									//dRsidedxl-=comp[Ix][Iy-1][Iz][i][0]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
									//dBsidedxl-=(trans[Ix+1][Iy][Iz+1][2][1]+comp[Ix][Iy-1][Iz][i][0]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][1])*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								}

								porpor2 = porosity[Ix][Iy - 1][Iz] * (1 + cpor * (P[Ix + 1][Iy][Iz + 1][1] - refP) + dcpor * (P[Ix + 1][Iy][Iz + 1][1] - refP)*(P[Ix + 1][Iy][Iz + 1][1] - refP));
								if (comp[Ix][Iy - 1][Iz][i][0]>comp[Ix][Iy][Iz][i][0]) {
									DupStream = diffusion[Ix][Iy - 1][Iz][i][0];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix, Iy - 1, Iz, i, k, 0);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix][Iy - 1][Iz][RO][0] * gridDim[Nx + Iy - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] * dCoefl;
								AAd *= (sat[Ix][Iy - 1][Iz][1] * gridDim[Nx + Iy - 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Nx + Iy] * dCoefl) / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
								BBd = tor[Ix][Iy - 1][Iz] * gridDim[Nx + Iy - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Iy] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Ix] * gridDim[Nx + Ny + Iz] / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
								DeltaX = comp[Ix][Iy - 1][Iz][i][0] - comp[Ix][Iy][Iz][i][0];

								dAAddx = dE[Ix][Iy][Iz][k][0] * gridDim[Nx + Iy] * dCoefl;
								dAAddx2 = dE[Ix][Iy - 1][Iz][k][0] * gridDim[Nx + Iy - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += -NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += -NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								mBLNo = preConRow[Iz*(Nx*Ny) + (Iy - 1)*Nx + Ix];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;


								if (phaseStat[Ix][Iy - 1][Iz] == 1) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][RO][1] * gridDim[Nx + Iy - 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][BMU][1] * gridDim[Nx + Iy - 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][1] * gridDim[Nx + Iy] * Makhraj - dMug * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix][Iy - 1][Iz][k][1] * gridDim[Nx + Iy - 1] * Coef*Makhraj - DiffVisco(Ix, Iy - 1, Iz, k, 1)*gridDim[Nx + Iy - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][k][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Iy - 1] * (G_ACCG*blockFProps[Ix][Iy - 1][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy - 1][Iz][BGAM][1] * dE[Ix][Iy - 1][Iz][k][1] / blockFProps[Ix][Iy - 1][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][BGAM][1] * gridDim[Nx + Iy - 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

								if (transS[Ix + 1][Iy][Iz + 1][1][1]) {
									dRsidedxg -= (trans[Ix + 1][Iy][Iz + 1][1][1] + comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);
									dBsidedxg = -comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);

									//dRsidedxg-=(trans[Ix+1][Iy][Iz+1][3][1]+comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
									//dBsidedxg-=comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								}
								else {
									dRsidedxg -= comp[Ix][Iy - 1][Iz][i][1] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][2] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);
									dBsidedxg = -(trans[Ix + 1][Iy][Iz + 1][1][1] + comp[Ix][Iy - 1][Iz][i][1] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][2] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);

									//dRsidedxg-=comp[Ix][Iy-1][Iz][i][1]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
									//dBsidedxg-=(trans[Ix+1][Iy][Iz+1][3][1]+comp[Ix][Iy-1][Iz][i][1]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								}

								if (comp[Ix][Iy - 1][Iz][i][1]>comp[Ix][Iy][Iz][i][1]) {
									DupStream = diffusion[Ix][Iy - 1][Iz][i][1];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix, Iy - 1, Iz, i, k, 1);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix][Iy - 1][Iz][RO][1] * gridDim[Nx + Iy - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] * dCoefg;
								AAd *= (sat[Ix][Iy - 1][Iz][2] * gridDim[Nx + Iy - 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Nx + Iy] * dCoefg) / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
								BBd = tor[Ix][Iy - 1][Iz] * gridDim[Nx + Iy - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Iy] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Ix]*gridDim[Nx+Ny+Iz]/(gridDim[Nx+Iy-1]+gridDim[Nx+Iy]);
								DeltaX = comp[Ix][Iy - 1][Iz][i][1] - comp[Ix][Iy][Iz][i][1];

								dAAddx = dE[Ix][Iy][Iz][k][1] * gridDim[Nx + Iy] * dCoefg;
								dAAddx2 = dE[Ix][Iy - 1][Iz][k][1] * gridDim[Nx + Iy - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += -NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += -NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}



								if (phaseStat[Ix][Iy - 1][Iz]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;
							}

							if (Iz<(Nz - 1)) {
								if (phaseStat[Ix][Iy][Iz + 1] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][RO][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][BMU][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][0] * gridDim[Nx + Ny + Iz] * Makhraj - dMul * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix][Iy][Iz + 1][k][0] * gridDim[Nx + Ny + Iz + 1] * Coef*Makhraj - DiffVisco(Ix, Iy, Iz + 1, k, 0)*gridDim[Nx + Ny + Iz + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][k][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz + 1] * (G_ACCG*blockFProps[Ix][Iy][Iz + 1][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz + 1][BGAM][0] * dE[Ix][Iy][Iz + 1][k][0] / blockFProps[Ix][Iy][Iz + 1][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][BGAM][0] * gridDim[Nx + Ny + Iz + 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

								if (transS[Ix + 1][Iy + 1][Iz + 1][0][2]) {
									dRsidedxl += comp[Ix][Iy][Iz + 1][i][0] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][1] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = (trans[Ix + 1][Iy + 1][Iz + 1][0][2] + comp[Ix][Iy][Iz + 1][i][0] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][1] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

									dRsidedxl += comp[Ix][Iy][Iz + 1][i][0] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz + 1][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
									dBsidedxl += (trans[Ix + 1][Iy + 1][Iz + 1][2][2] + comp[Ix][Iy][Iz + 1][i][0] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
								}
								else {
									dRsidedxl += (trans[Ix + 1][Iy + 1][Iz + 1][0][2] + comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

									dRsidedxl += (trans[Ix + 1][Iy + 1][Iz + 1][2][2] + comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
									dBsidedxl += comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
								}

								porpor2 = porosity[Ix][Iy][Iz + 1] * (1 + cpor * (P[Ix + 1][Iy + 1][Iz + 2][1] - refP) + dcpor * (P[Ix + 1][Iy + 1][Iz + 2][1] - refP)*(P[Ix + 1][Iy + 1][Iz + 2][1] - refP));
								if (comp[Ix][Iy][Iz + 1][i][0]>comp[Ix][Iy][Iz][i][0]) {
									DupStream = diffusion[Ix][Iy][Iz + 1][i][0];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix, Iy, Iz + 1, i, k, 0);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix][Iy][Iz + 1][RO][0] * gridDim[Nx + Ny + Iz + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] * dCoefl;
								AAd *= (sat[Ix][Iy][Iz + 1][1] * gridDim[Nx + Ny + Iz + 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Nx + Ny + Iz] * dCoefl) / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
								BBd = tor[Ix][Iy][Iz + 1] * gridDim[Nx + Ny + Iz + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Ny + Iz] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Ix] * gridDim[Nx + Iy] / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
								DeltaX = comp[Ix][Iy][Iz + 1][i][0] - comp[Ix][Iy][Iz][i][0];

								dAAddx = dE[Ix][Iy][Iz][k][0] * gridDim[Nx + Ny + Iz] * dCoefl;
								dAAddx2 = dE[Ix][Iy][Iz + 1][k][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								mBLNo = preConRow[(Iz + 1)*(Nx*Ny) + Iy * Nx + Ix];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;


								if (phaseStat[Ix][Iy][Iz + 1] == 1) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][RO][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][BMU][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][1] * gridDim[Nx + Ny + Iz] * Makhraj - dMug * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix][Iy][Iz + 1][k][1] * gridDim[Nx + Ny + Iz + 1] * Coef*Makhraj - DiffVisco(Ix, Iy, Iz + 1, k, 1)*gridDim[Nx + Ny + Iz + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][k][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz + 1] * (G_ACCG*blockFProps[Ix][Iy][Iz + 1][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz + 1][BGAM][1] * dE[Ix][Iy][Iz + 1][k][1] / blockFProps[Ix][Iy][Iz + 1][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][BGAM][1] * gridDim[Nx + Ny + Iz + 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

								if (transS[Ix + 1][Iy + 1][Iz + 1][1][2]) {
									dRsidedxg += comp[Ix][Iy][Iz + 1][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][2] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = (trans[Ix + 1][Iy + 1][Iz + 1][1][2] + comp[Ix][Iy][Iz + 1][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][2] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

									dRsidedxg += comp[Ix][Iy][Iz + 1][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
									dBsidedxg += (trans[Ix + 1][Iy + 1][Iz + 1][3][2] + comp[Ix][Iy][Iz + 1][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
								}
								else {
									dRsidedxg += (trans[Ix + 1][Iy + 1][Iz + 1][1][2] + comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

									dRsidedxg += (trans[Ix + 1][Iy + 1][Iz + 1][3][2] + comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
									dBsidedxg += comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);

								}

								if (comp[Ix][Iy][Iz + 1][i][1]>comp[Ix][Iy][Iz][i][1]) {
									DupStream = diffusion[Ix][Iy][Iz + 1][i][1];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix, Iy, Iz + 1, i, k, 1);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix][Iy][Iz + 1][RO][1] * gridDim[Nx + Ny + Iz + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] * dCoefg;
								AAd *= (sat[Ix][Iy][Iz + 1][2] * gridDim[Nx + Ny + Iz + 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Nx + Ny + Iz] * dCoefg) / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
								BBd = tor[Ix][Iy][Iz + 1] * gridDim[Nx + Ny + Iz + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Ny + Iz] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Ix]*gridDim[Nx+Iy]/(gridDim[Nx+Ny+Iz+1]+gridDim[Nx+Ny+Iz]);
								DeltaX = comp[Ix][Iy][Iz + 1][i][1] - comp[Ix][Iy][Iz][i][1];

								dAAddx = dE[Ix][Iy][Iz][k][1] * gridDim[Nx + Ny + Iz] * dCoefg;
								dAAddx2 = dE[Ix][Iy][Iz + 1][k][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}


								if (phaseStat[Ix][Iy][Iz + 1]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;
							}

							if (Iz>0) {
								if (phaseStat[Ix][Iy][Iz - 1] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][RO][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][BMU][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][0] * gridDim[Nx + Ny + Iz] * Makhraj - dMul * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix][Iy][Iz - 1][k][0] * gridDim[Nx + Ny + Iz - 1] * Coef*Makhraj - DiffVisco(Ix, Iy, Iz - 1, k, 0)*gridDim[Nx + Ny + Iz - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][k][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz - 1] * (G_ACCG*blockFProps[Ix][Iy][Iz - 1][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz - 1][BGAM][0] * dE[Ix][Iy][Iz - 1][k][0] / blockFProps[Ix][Iy][Iz - 1][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][BGAM][0] * gridDim[Nx + Ny + Iz - 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

								if (transS[Ix + 1][Iy + 1][Iz][0][2]) {
									dRsidedxl -= (trans[Ix + 1][Iy + 1][Iz][0][2] + comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);
									dBsidedxl = -comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);

									dRsidedxl -= (trans[Ix + 1][Iy + 1][Iz][2][2] + comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
									dBsidedxl -= comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								}
								else {
									dRsidedxl -= comp[Ix][Iy][Iz - 1][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][1] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);
									dBsidedxl = -(trans[Ix + 1][Iy + 1][Iz][0][2] + comp[Ix][Iy][Iz - 1][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][1] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);

									dRsidedxl -= comp[Ix][Iy][Iz - 1][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
									dBsidedxl -= (trans[Ix + 1][Iy + 1][Iz][2][2] + comp[Ix][Iy][Iz - 1][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								}

								porpor2 = porosity[Ix][Iy][Iz - 1] * (1 + cpor * (P[Ix + 1][Iy + 1][Iz][1] - refP) + dcpor * (P[Ix + 1][Iy + 1][Iz][1] - refP)*(P[Ix + 1][Iy + 1][Iz][1] - refP));
								if (comp[Ix][Iy][Iz - 1][i][0]>comp[Ix][Iy][Iz][i][0]) {
									DupStream = diffusion[Ix][Iy][Iz - 1][i][0];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix, Iy, Iz - 1, i, k, 0);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix][Iy][Iz - 1][RO][0] * gridDim[Nx + Ny + Iz - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] * dCoefl;
								AAd *= (sat[Ix][Iy][Iz - 1][1] * gridDim[Nx + Ny + Iz - 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Nx + Ny + Iz] * dCoefl) / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
								BBd = tor[Ix][Iy][Iz - 1] * gridDim[Nx + Ny + Iz - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Ny + Iz] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Ix] * gridDim[Nx + Iy] / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
								DeltaX = comp[Ix][Iy][Iz - 1][i][0] - comp[Ix][Iy][Iz][i][0];

								dAAddx = dE[Ix][Iy][Iz][k][0] * gridDim[Nx + Ny + Iz] * dCoefl;
								dAAddx2 = dE[Ix][Iy][Iz - 1][k][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += -NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += -NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								mBLNo = preConRow[(Iz - 1)*(Nx*Ny) + Iy * Nx + Ix];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;


								if (phaseStat[Ix][Iy][Iz - 1] == 1) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][RO][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][BMU][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][1] * gridDim[Nx + Ny + Iz] * Makhraj - dMug * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix][Iy][Iz - 1][k][1] * gridDim[Nx + Ny + Iz - 1] * Coef*Makhraj - DiffVisco(Ix, Iy, Iz - 1, k, 1)*gridDim[Nx + Ny + Iz - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][k][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz - 1] * (G_ACCG*blockFProps[Ix][Iy][Iz - 1][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz - 1][BGAM][1] * dE[Ix][Iy][Iz - 1][k][1] / blockFProps[Ix][Iy][Iz - 1][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][BGAM][1] * gridDim[Nx + Ny + Iz - 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

								if (transS[Ix + 1][Iy + 1][Iz][1][2]) {
									dRsidedxg -= (trans[Ix + 1][Iy + 1][Iz][1][2] + comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);
									dBsidedxg = -comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);

									dRsidedxg -= (trans[Ix + 1][Iy + 1][Iz][3][2] + comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
									dBsidedxg -= comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								}
								else {
									dRsidedxg -= comp[Ix][Iy][Iz - 1][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][2] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);
									dBsidedxg = -(trans[Ix + 1][Iy + 1][Iz][1][2] + comp[Ix][Iy][Iz - 1][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][2] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);

									dRsidedxg -= comp[Ix][Iy][Iz - 1][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
									dBsidedxg -= (trans[Ix + 1][Iy + 1][Iz][3][2] + comp[Ix][Iy][Iz - 1][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								}

								if (comp[Ix][Iy][Iz - 1][i][1]>comp[Ix][Iy][Iz][i][1]) {
									DupStream = diffusion[Ix][Iy][Iz - 1][i][1];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix, Iy, Iz - 1, i, k, 1);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix][Iy][Iz - 1][RO][1] * gridDim[Nx + Ny + Iz - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] * dCoefg;
								AAd *= (sat[Ix][Iy][Iz - 1][2] * gridDim[Nx + Ny + Iz - 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Nx + Ny + Iz] * dCoefg) / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
								BBd = tor[Ix][Iy][Iz - 1] * gridDim[Nx + Ny + Iz - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Ny + Iz] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Ix]*gridDim[Nx+Iy]/(gridDim[Nx+Ny+Iz-1]+gridDim[Nx+Ny+Iz]);
								DeltaX = comp[Ix][Iy][Iz - 1][i][1] - comp[Ix][Iy][Iz][i][1];

								dAAddx = dE[Ix][Iy][Iz][k][1] * gridDim[Nx + Ny + Iz] * dCoefg;
								dAAddx2 = dE[Ix][Iy][Iz - 1][k][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += -NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += -NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}


								if (phaseStat[Ix][Iy][Iz - 1]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;
							}

							/////////////////////////////////////////////////Sadeq//k=i/////////////////////////////////
							if (fphaseStat[Ix][Iy][Iz] == 1) {
								//dRsidefdxl = 0;
								Jac1Row[JRowIndex] = dRsidefdxl;
								Jac1Col[JRowIndex] = FracEq + k;
								JRowIndex++;
							}
							else if (fphaseStat[Ix][Iy][Iz] == (-1)) {
								//dRsidefdxg = 0;
								Jac1Row[JRowIndex] = dRsidefdxg;
								Jac1Col[JRowIndex] = FracEq + k;
								JRowIndex++;
							}
							else {
								//dRsidefdxl = 0;
								Jac1Row[JRowIndex] = dRsidefdxl;
								Jac1Col[JRowIndex] = FracEq + k;
								JRowIndex++;
								//dRsidefdxg = 0;
								Jac1Row[JRowIndex] = dRsidefdxg;
								Jac1Col[JRowIndex] = FracEq + Nc + k;
								JRowIndex++;
							}
							////////////////////////sadeq/////////////////////////
						}
						else {
							dRsidedxl = 0;
							dRsidedxg = 0;
							dRsidefdxl = 0;
							dRsidefdxg = 0;
							// Transfer function drside dxl dxg fdxl fdxg
							// moshtagh transfer Function jabejaie naft nesbat be xl Matrix
							//dRsidedxl += ZERO_CONV * SI_C * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
							dRsidedxl += ZERO_CONV * SI_C * dE[Ix][Iy][Iz][k][0] * comp[Ix][Iy][Iz][i][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
							dRsidedxl += ZERO_CONV * -SI_C * DiffVisco(Ix, Iy, Iz, k, 0) * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] * porpor / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor)*(blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) * (porpor + fporpor);

							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (1)) {
								dRsidedxl += ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
								//dRsidedxl += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								dRsidedxl += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsidedxl += ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
								//dRsidedxl += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								dRsidedxl += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
							}

							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								dRsidedxl += ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
								//dRsidedxl += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								dRsidedxl += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
							}

							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsidedxl += ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
								//dRsidedxl += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								dRsidedxl += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);

								dRsidedxl += ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
								//dRsidedxl += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								dRsidedxl += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1)) {
								dRsidedxl += ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
								//dRsidedxl += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								dRsidedxl += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								dRsidedxl += ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
								//dRsidedxl += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								dRsidedxl += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
							}



							// moshtagh transfer Function jabejaie naft nesbat be xl Fracture
							dRsidefdxl += ZERO_CONV * -SI_C * fDiffVisco(Ix, Iy, Iz, k, 0) * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] * fporpor / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor)*(blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) * (porpor + fporpor);

/*
// 							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (1)) {
// 								//dRsidefdxl += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
// 							}
// 
// 							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0)) {
// 								//dRsidefdxl += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
// 							}
*/

/*
// 							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (1)) {
// 								dRsidefdxl += ZERO_DIFF * fdE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
// 								//dRsidefdxl += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0];
// 								dRsidefdxl += ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
// 							}
// 
// 							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1)) {
// 								dRsidefdxl += ZERO_DIFF * fdE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
// 								//dRsidefdxl += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0];
// 								dRsidefdxl += ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
// 
// 								//dRsidefdxl += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
// 							}
// 
// 							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0)) {
// 								//dRsidefdxl += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
// 							}
// 
// 							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0)) {
// 								dRsidefdxl += ZERO_DIFF * fdE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
// 								//dRsidefdxl += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0];
// 								dRsidefdxl += ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
// 							}
*/



							// moshtagh transfer Function jabejaie gaz nesbat be xg Matrix
							//dRsidedxg += ZERO_CONV * SI_C * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor) / (porpor + fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));
							dRsidedxg += ZERO_CONV * SI_C * dE[Ix][Iy][Iz][k][1] * comp[Ix][Iy][Iz][i][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor) / (porpor + fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));
							dRsidedxg += ZERO_CONV * -SI_C * DiffVisco(Ix, Iy, Iz, k, 1) * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] * porpor / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor)*(blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1])) * (porpor + fporpor);

							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								dRsidedxg += ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
								//dRsidedxg += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								dRsidedxg += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsidedxg += ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
								//dRsidedxg += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								dRsidedxg += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
							}

							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (1)) {
								dRsidedxg += ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
								//dRsidedxg += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								dRsidedxg += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
							}


							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1)) {
								dRsidedxg += ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
								//dRsidedxg += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								dRsidedxg += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								dRsidedxg += ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
								//dRsidedxg += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								dRsidedxg += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
							}

							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsidedxg += ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
								//dRsidedxg += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								dRsidedxg += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

								dRsidedxg += ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
								//dRsidedxg += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								dRsidedxg += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
							}




							// moshtagh transfer Function jabejaie gaz nesbat be xg Fracture
							dRsidefdxg += ZERO_CONV * -SI_C * fDiffVisco(Ix, Iy, Iz, k, 1) * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] * fporpor / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor)*(blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1])) * (porpor + fporpor);

/*
// 							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
// 								//dRsidefdxg += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
// 							}
// 
// 							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0)) {
// 								//dRsidefdxg += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
// 							}
// 
// 							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
// 								dRsidefdxg += ZERO_DIFF * fdE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
// 								//dRsidefdxg += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1];
// 								dRsidefdxg += ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
// 							}
// 
// 							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1)) {
// 								//dRsidefdxg += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
// 
// 								dRsidefdxg += ZERO_DIFF * fdE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
// 								//dRsidefdxg += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1];
// 								dRsidefdxg += ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
// 							}
// 
// 							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0)) {
// 								dRsidefdxg += ZERO_DIFF * fdE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
// 								//dRsidefdxg += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1];
// 								dRsidefdxg += ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
// 							}
// 
// 							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0)) {
// 								//dRsidefdxg += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
// 							}
// 							//
*/


							dLsidedxl = comp[Ix][Iy][Iz][i][0] * dE[Ix][Iy][Iz][k][0];
							dLsidedxg = comp[Ix][Iy][Iz][i][1] * dE[Ix][Iy][Iz][k][1];
							dQdxl = 0;
							dQdxg = 0;



							if (Ix<(Nx - 1)) {
								if (phaseStat[Ix + 1][Iy][Iz] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][RO][0] * gridDim[Ix + 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BMU][0] * gridDim[Ix + 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][0] * gridDim[Ix] * Makhraj - dMul * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix + 1][Iy][Iz][k][0] * gridDim[Ix + 1] * Coef*Makhraj - DiffVisco(Ix + 1, Iy, Iz, k, 0)*gridDim[Ix + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Ix] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][k][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Ix + 1] * (G_ACCG*blockFProps[Ix + 1][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix + 1][Iy][Iz][BGAM][0] * dE[Ix + 1][Iy][Iz][k][0] / blockFProps[Ix + 1][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BGAM][0] * gridDim[Ix + 1] * Coef) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

								if (transS[Ix + 1][Iy + 1][Iz + 1][0][0]) {
									dRsidedxl += comp[Ix + 1][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][1] * Moshtaq*(P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = (comp[Ix + 1][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][1] * Bmoshtaq)*(P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

									//dRsidedxl+=comp[Ix+1][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxl+=(comp[Ix+1][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}
								else {
									dRsidedxl += (comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

									//dRsidedxl+=(comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxl+=comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}

								porpor2 = porosity[Ix + 1][Iy][Iz] * (1 + cpor * (P[Ix + 2][Iy + 1][Iz + 1][1] - refP) + dcpor * (P[Ix + 2][Iy + 1][Iz + 1][1] - refP)*(P[Ix + 2][Iy + 1][Iz + 1][1] - refP));

								if (comp[Ix + 1][Iy][Iz][i][0]>comp[Ix][Iy][Iz][i][0]) {
									DupStream = diffusion[Ix + 1][Iy][Iz][i][0];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix + 1, Iy, Iz, i, k, 0);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix + 1][Iy][Iz][RO][0] * gridDim[Ix + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] * dCoefl;
								AAd *= (sat[Ix + 1][Iy][Iz][1] * gridDim[Ix + 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Ix] * dCoefl) / (gridDim[Ix + 1] + gridDim[Ix]);
								BBd = tor[Ix + 1][Iy][Iz] * gridDim[Ix + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Ix] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz] / (gridDim[Ix + 1] + gridDim[Ix]);
								DeltaX = comp[Ix + 1][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0];

								dAAddx = dE[Ix][Iy][Iz][k][0] * gridDim[Ix] * dCoefl;
								dAAddx2 = dE[Ix + 1][Iy][Iz][k][0] * gridDim[Ix + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								mBLNo = preConRow[Iz*(Nx*Ny) + Iy * Nx + Ix + 1];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;


								if (phaseStat[Ix + 1][Iy][Iz] == 1) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][RO][1] * gridDim[Ix + 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BMU][1] * gridDim[Ix + 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][1] * gridDim[Ix] * Makhraj - dMug * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix + 1][Iy][Iz][k][1] * gridDim[Ix + 1] * Coef*Makhraj - DiffVisco(Ix + 1, Iy, Iz, k, 1)*gridDim[Ix + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Ix] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][k][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Ix + 1] * (G_ACCG*blockFProps[Ix + 1][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix + 1][Iy][Iz][BGAM][1] * dE[Ix + 1][Iy][Iz][k][1] / blockFProps[Ix + 1][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BGAM][1] * gridDim[Ix + 1] * Coef) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

								if (transS[Ix + 1][Iy + 1][Iz + 1][1][0]) {
									dRsidedxg += comp[Ix + 1][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][2] * Moshtaq*(P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = (comp[Ix + 1][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][2] * Bmoshtaq)*(P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

									//dRsidedxg+=comp[Ix+1][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxg+=(comp[Ix+1][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}
								else {
									dRsidedxg += (comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

									//dRsidedxg+=(comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxg+=comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);

								}

								if (comp[Ix + 1][Iy][Iz][i][1]>comp[Ix][Iy][Iz][i][1]) {
									DupStream = diffusion[Ix + 1][Iy][Iz][i][1];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix + 1, Iy, Iz, i, k, 1);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix + 1][Iy][Iz][RO][1] * gridDim[Ix + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] * dCoefg;
								AAd *= (sat[Ix + 1][Iy][Iz][2] * gridDim[Ix + 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Ix] * dCoefg) / (gridDim[Ix + 1] + gridDim[Ix]);
								BBd = tor[Ix + 1][Iy][Iz] * gridDim[Ix + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Ix] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Nx+Iy]*gridDim[Nx+Ny+Iz]/(gridDim[Ix+1]+gridDim[Ix]);
								DeltaX = comp[Ix + 1][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1];

								dAAddx = dE[Ix][Iy][Iz][k][1] * gridDim[Ix] * dCoefg;
								dAAddx2 = dE[Ix + 1][Iy][Iz][k][1] * gridDim[Ix + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}


								if (phaseStat[Ix + 1][Iy][Iz]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;
							}

							if (Ix>0) {
								if (phaseStat[Ix - 1][Iy][Iz] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][RO][0] * gridDim[Ix - 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][BMU][0] * gridDim[Ix - 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][0] * gridDim[Ix] * Makhraj - dMul * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix - 1][Iy][Iz][k][0] * gridDim[Ix - 1] * Coef*Makhraj - DiffVisco(Ix - 1, Iy, Iz, k, 0)*gridDim[Ix - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Ix] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][k][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Ix - 1] * (G_ACCG*blockFProps[Ix - 1][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix - 1][Iy][Iz][BGAM][0] * dE[Ix - 1][Iy][Iz][k][0] / blockFProps[Ix - 1][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][BGAM][0] * gridDim[Ix - 1] * Coef) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

								if (transS[Ix][Iy + 1][Iz + 1][0][0]) {
									dRsidedxl -= (comp[Ix][Iy][Iz][i][0] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);
									dBsidedxl = -comp[Ix][Iy][Iz][i][0] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);

									//dRsidedxl-=(comp[Ix][Iy][Iz][i][0]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1])*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
									//dBsidedxl-=comp[Ix][Iy][Iz][i][0]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								}
								else {
									dRsidedxl -= comp[Ix - 1][Iy][Iz][i][0] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][1] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);
									dBsidedxl = -(comp[Ix - 1][Iy][Iz][i][0] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][1] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);

									//dRsidedxl-=comp[Ix-1][Iy][Iz][i][0]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
									//dBsidedxl-=(comp[Ix-1][Iy][Iz][i][0]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][1])*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								}

								porpor2 = porosity[Ix - 1][Iy][Iz] * (1 + cpor * (P[Ix][Iy + 1][Iz + 1][1] - refP) + dcpor * (P[Ix][Iy + 1][Iz + 1][1] - refP)*(P[Ix][Iy + 1][Iz + 1][1] - refP));

								if (comp[Ix - 1][Iy][Iz][i][0]>comp[Ix][Iy][Iz][i][0]) {
									DupStream = diffusion[Ix - 1][Iy][Iz][i][0];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix - 1, Iy, Iz, i, k, 0);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix - 1][Iy][Iz][RO][0] * gridDim[Ix - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] * dCoefl;
								AAd *= (sat[Ix - 1][Iy][Iz][1] * gridDim[Ix - 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Ix] * dCoefl) / (gridDim[Ix - 1] + gridDim[Ix]);
								BBd = tor[Ix - 1][Iy][Iz] * gridDim[Ix - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Ix] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz] / (gridDim[Ix - 1] + gridDim[Ix]);
								DeltaX = comp[Ix - 1][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0];

								dAAddx = dE[Ix][Iy][Iz][k][0] * gridDim[Ix] * dCoefl;
								dAAddx2 = dE[Ix - 1][Iy][Iz][k][0] * gridDim[Ix - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += -NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += -NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}


								mBLNo = preConRow[Iz*(Nx*Ny) + Iy * Nx + Ix - 1];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;


								if (phaseStat[Ix - 1][Iy][Iz]) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][RO][1] * gridDim[Ix - 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][BMU][1] * gridDim[Ix - 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][1] * gridDim[Ix] * Makhraj - dMug * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix - 1][Iy][Iz][k][1] * gridDim[Ix - 1] * Coef*Makhraj - DiffVisco(Ix - 1, Iy, Iz, k, 1)*gridDim[Ix - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Ix] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][k][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Ix - 1] * (G_ACCG*blockFProps[Ix - 1][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix - 1][Iy][Iz][BGAM][1] * dE[Ix - 1][Iy][Iz][k][1] / blockFProps[Ix - 1][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][BGAM][1] * gridDim[Ix - 1] * Coef) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

								if (transS[Ix][Iy + 1][Iz + 1][1][0]) {
									dRsidedxg -= (comp[Ix][Iy][Iz][i][1] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);
									dBsidedxg = -comp[Ix][Iy][Iz][i][1] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);

									//dRsidedxg-=(comp[Ix][Iy][Iz][i][1]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
									//dBsidedxg-=comp[Ix][Iy][Iz][i][1]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								}
								else {
									dRsidedxg -= comp[Ix - 1][Iy][Iz][i][1] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][2] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);
									dBsidedxg = -(comp[Ix - 1][Iy][Iz][i][1] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][2] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);

									//dRsidedxg-=comp[Ix-1][Iy][Iz][i][1]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
									//dBsidedxg-=(comp[Ix-1][Iy][Iz][i][1]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								}

								if (comp[Ix - 1][Iy][Iz][i][1]>comp[Ix][Iy][Iz][i][1]) {
									DupStream = diffusion[Ix - 1][Iy][Iz][i][1];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix - 1, Iy, Iz, i, k, 1);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix - 1][Iy][Iz][RO][1] * gridDim[Ix - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] * dCoefg;
								AAd *= (sat[Ix - 1][Iy][Iz][2] * gridDim[Ix - 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Ix] * dCoefg) / (gridDim[Ix - 1] + gridDim[Ix]);
								BBd = tor[Ix - 1][Iy][Iz] * gridDim[Ix - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Ix] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Nx+Iy]*gridDim[Nx+Ny+Iz]/(gridDim[Ix-1]+gridDim[Ix]);
								DeltaX = comp[Ix - 1][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1];

								dAAddx = dE[Ix][Iy][Iz][k][1] * gridDim[Ix] * dCoefg;
								dAAddx2 = dE[Ix - 1][Iy][Iz][k][1] * gridDim[Ix - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += -NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += -NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}


								if (phaseStat[Ix - 1][Iy][Iz]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;
							}

							if (Iy<(Ny - 1)) {
								if (phaseStat[Ix][Iy + 1][Iz] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][RO][0] * gridDim[Nx + Iy + 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][BMU][0] * gridDim[Nx + Iy + 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][0] * gridDim[Nx + Iy] * Makhraj - dMul * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix][Iy + 1][Iz][k][0] * gridDim[Nx + Iy + 1] * Coef*Makhraj - DiffVisco(Ix, Iy + 1, Iz, k, 0)*gridDim[Nx + Iy + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][k][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Iy + 1] * (G_ACCG*blockFProps[Ix][Iy + 1][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy + 1][Iz][BGAM][0] * dE[Ix][Iy + 1][Iz][k][0] / blockFProps[Ix][Iy + 1][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][BGAM][0] * gridDim[Nx + Iy + 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

								if (transS[Ix + 1][Iy + 1][Iz + 1][0][1]) {
									dRsidedxl += comp[Ix][Iy + 1][Iz][i][0] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][1] * Moshtaq*(P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = (comp[Ix][Iy + 1][Iz][i][0] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][1] * Bmoshtaq)*(P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

									//dRsidedxl+=comp[Ix][Iy+1][Iz][i][0]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxl+=(comp[Ix][Iy+1][Iz][i][0]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}
								else {
									dRsidedxl += (comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

									//dRsidedxl+=(comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxl+=comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}

								porpor2 = porosity[Ix][Iy + 1][Iz] * (1 + cpor * (P[Ix + 1][Iy + 2][Iz + 1][1] - refP) + dcpor * (P[Ix + 1][Iy + 2][Iz + 1][1] - refP)*(P[Ix + 1][Iy + 2][Iz + 1][1] - refP));
								if (comp[Ix][Iy + 1][Iz][i][0]>comp[Ix][Iy][Iz][i][0]) {
									DupStream = diffusion[Ix][Iy + 1][Iz][i][0];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix, Iy + 1, Iz, i, k, 0);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix][Iy + 1][Iz][RO][0] * gridDim[Nx + Iy + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] * dCoefl;
								AAd *= (sat[Ix][Iy + 1][Iz][1] * gridDim[Nx + Iy + 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Nx + Iy] * dCoefl) / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
								BBd = tor[Ix][Iy + 1][Iz] * gridDim[Nx + Iy + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Iy] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Ix] * gridDim[Nx + Ny + Iz] / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
								DeltaX = comp[Ix][Iy + 1][Iz][i][0] - comp[Ix][Iy][Iz][i][0];

								dAAddx = dE[Ix][Iy][Iz][k][0] * gridDim[Nx + Iy] * dCoefl;
								dAAddx2 = dE[Ix][Iy + 1][Iz][k][0] * gridDim[Nx + Iy + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}


								mBLNo = preConRow[Iz*(Nx*Ny) + (Iy + 1)*Nx + Ix];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;


								if (phaseStat[Ix][Iy + 1][Iz] == 1) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][RO][1] * gridDim[Nx + Iy + 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][BMU][1] * gridDim[Nx + Iy + 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][1] * gridDim[Nx + Iy] * Makhraj - dMug * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix][Iy + 1][Iz][k][1] * gridDim[Nx + Iy + 1] * Coef*Makhraj - DiffVisco(Ix, Iy + 1, Iz, k, 1)*gridDim[Nx + Iy + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][k][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Iy + 1] * (G_ACCG*blockFProps[Ix][Iy + 1][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy + 1][Iz][BGAM][1] * dE[Ix][Iy + 1][Iz][k][1] / blockFProps[Ix][Iy + 1][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][BGAM][1] * gridDim[Nx + Iy + 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

								if (transS[Ix + 1][Iy + 1][Iz + 1][1][1]) {
									dRsidedxg += comp[Ix][Iy + 1][Iz][i][1] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][2] * Moshtaq*(P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = (comp[Ix][Iy + 1][Iz][i][1] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][2] * Bmoshtaq)*(P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

									//dRsidedxg+=comp[Ix][Iy+1][Iz][i][1]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxg+=(comp[Ix][Iy+1][Iz][i][1]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}
								else {
									dRsidedxg += (comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

									//dRsidedxg+=(comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxg+=comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);

								}

								if (comp[Ix][Iy + 1][Iz][i][1]>comp[Ix][Iy][Iz][i][1]) {
									DupStream = diffusion[Ix][Iy + 1][Iz][i][1];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix, Iy + 1, Iz, i, k, 1);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix][Iy + 1][Iz][RO][1] * gridDim[Nx + Iy + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] * dCoefg;
								AAd *= (sat[Ix][Iy + 1][Iz][2] * gridDim[Nx + Iy + 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Nx + Iy] * dCoefg) / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
								BBd = tor[Ix][Iy + 1][Iz] * gridDim[Nx + Iy + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Iy] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Ix]*gridDim[Nx+Ny+Iz]/(gridDim[Nx+Iy+1]+gridDim[Nx+Iy]);
								DeltaX = comp[Ix][Iy + 1][Iz][i][1] - comp[Ix][Iy][Iz][i][1];

								dAAddx = dE[Ix][Iy][Iz][k][1] * gridDim[Nx + Iy] * dCoefg;
								dAAddx2 = dE[Ix][Iy + 1][Iz][k][1] * gridDim[Nx + Iy + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								if (phaseStat[Ix][Iy + 1][Iz]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;
							}

							if (Iy>0) {
								if (phaseStat[Ix][Iy - 1][Iz] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][RO][0] * gridDim[Nx + Iy - 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][BMU][0] * gridDim[Nx + Iy - 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][0] * gridDim[Nx + Iy] * Makhraj - dMul * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix][Iy - 1][Iz][k][0] * gridDim[Nx + Iy - 1] * Coef*Makhraj - DiffVisco(Ix, Iy - 1, Iz, k, 0)*gridDim[Nx + Iy - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][k][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Iy - 1] * (G_ACCG*blockFProps[Ix][Iy - 1][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy - 1][Iz][BGAM][0] * dE[Ix][Iy - 1][Iz][k][0] / blockFProps[Ix][Iy - 1][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][BGAM][0] * gridDim[Nx + Iy - 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

								if (transS[Ix + 1][Iy][Iz + 1][0][1]) {
									dRsidedxl -= (comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);
									dBsidedxl = -comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);

									//dRsidedxl-=(comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][1])*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
									//dBsidedxl-=comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								}
								else {
									dRsidedxl -= comp[Ix][Iy - 1][Iz][i][0] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][1] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);
									dBsidedxl = -(comp[Ix][Iy - 1][Iz][i][0] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][1] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);

									//dRsidedxl-=comp[Ix][Iy-1][Iz][i][0]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
									//dBsidedxl-=(comp[Ix][Iy-1][Iz][i][0]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][1])*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								}

								porpor2 = porosity[Ix][Iy - 1][Iz] * (1 + cpor * (P[Ix + 1][Iy][Iz + 1][1] - refP) + dcpor * (P[Ix + 1][Iy][Iz + 1][1] - refP)*(P[Ix + 1][Iy][Iz + 1][1] - refP));
								if (comp[Ix][Iy - 1][Iz][i][0]>comp[Ix][Iy][Iz][i][0]) {
									DupStream = diffusion[Ix][Iy - 1][Iz][i][0];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix, Iy - 1, Iz, i, k, 0);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix][Iy - 1][Iz][RO][0] * gridDim[Nx + Iy - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] * dCoefl;
								AAd *= (sat[Ix][Iy - 1][Iz][1] * gridDim[Nx + Iy - 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Nx + Iy] * dCoefl) / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
								BBd = tor[Ix][Iy - 1][Iz] * gridDim[Nx + Iy - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Iy] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Ix] * gridDim[Nx + Ny + Iz] / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
								DeltaX = comp[Ix][Iy - 1][Iz][i][0] - comp[Ix][Iy][Iz][i][0];

								dAAddx = dE[Ix][Iy][Iz][k][0] * gridDim[Nx + Iy] * dCoefl;
								dAAddx2 = dE[Ix][Iy - 1][Iz][k][0] * gridDim[Nx + Iy - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += -NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += -NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}


								mBLNo = preConRow[Iz*(Nx*Ny) + (Iy - 1)*Nx + Ix];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;


								if (phaseStat[Ix][Iy - 1][Iz] == 1) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][RO][1] * gridDim[Nx + Iy - 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][BMU][1] * gridDim[Nx + Iy - 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][1] * gridDim[Nx + Iy] * Makhraj - dMug * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix][Iy - 1][Iz][k][1] * gridDim[Nx + Iy - 1] * Coef*Makhraj - DiffVisco(Ix, Iy - 1, Iz, k, 1)*gridDim[Nx + Iy - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][k][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Iy - 1] * (G_ACCG*blockFProps[Ix][Iy - 1][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy - 1][Iz][BGAM][1] * dE[Ix][Iy - 1][Iz][k][1] / blockFProps[Ix][Iy - 1][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][BGAM][1] * gridDim[Nx + Iy - 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

								if (transS[Ix + 1][Iy][Iz + 1][1][1]) {
									dRsidedxg -= (comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);
									dBsidedxg = -comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);

									//dRsidedxg-=(comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
									//dBsidedxg-=comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								}
								else {
									dRsidedxg -= comp[Ix][Iy - 1][Iz][i][1] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][2] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);
									dBsidedxg = -(comp[Ix][Iy - 1][Iz][i][1] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][2] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);

									//dRsidedxg-=comp[Ix][Iy-1][Iz][i][1]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
									//dBsidedxg-=(comp[Ix][Iy-1][Iz][i][1]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								}

								if (comp[Ix][Iy - 1][Iz][i][1]>comp[Ix][Iy][Iz][i][1]) {
									DupStream = diffusion[Ix][Iy - 1][Iz][i][1];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix, Iy - 1, Iz, i, k, 1);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix][Iy - 1][Iz][RO][1] * gridDim[Nx + Iy - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] * dCoefg;
								AAd *= (sat[Ix][Iy - 1][Iz][2] * gridDim[Nx + Iy - 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Nx + Iy] * dCoefg) / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
								BBd = tor[Ix][Iy - 1][Iz] * gridDim[Nx + Iy - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Iy] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Ix]*gridDim[Nx+Ny+Iz]/(gridDim[Nx+Iy-1]+gridDim[Nx+Iy]);
								DeltaX = comp[Ix][Iy - 1][Iz][i][1] - comp[Ix][Iy][Iz][i][1];

								dAAddx = dE[Ix][Iy][Iz][k][1] * gridDim[Nx + Iy] * dCoefg;
								dAAddx2 = dE[Ix][Iy - 1][Iz][k][1] * gridDim[Nx + Iy - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += -NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += -NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}


								if (phaseStat[Ix][Iy - 1][Iz]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;
							}

							if (Iz<(Nz - 1)) {
								if (phaseStat[Ix][Iy][Iz + 1] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][RO][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][BMU][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][0] * gridDim[Nx + Ny + Iz] * Makhraj - dMul * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix][Iy][Iz + 1][k][0] * gridDim[Nx + Ny + Iz + 1] * Coef*Makhraj - DiffVisco(Ix, Iy, Iz + 1, k, 0)*gridDim[Nx + Ny + Iz + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][k][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz + 1] * (G_ACCG*blockFProps[Ix][Iy][Iz + 1][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz + 1][BGAM][0] * dE[Ix][Iy][Iz + 1][k][0] / blockFProps[Ix][Iy][Iz + 1][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][BGAM][0] * gridDim[Nx + Ny + Iz + 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

								if (transS[Ix + 1][Iy + 1][Iz + 1][0][2]) {
									dRsidedxl += comp[Ix][Iy][Iz + 1][i][0] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][1] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = (comp[Ix][Iy][Iz + 1][i][0] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][1] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

									dRsidedxl += comp[Ix][Iy][Iz + 1][i][0] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
									dBsidedxl += (comp[Ix][Iy][Iz + 1][i][0] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
								}
								else {
									dRsidedxl += (comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

									dRsidedxl += (comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
									dBsidedxl += comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
								}

								porpor2 = porosity[Ix][Iy][Iz + 1] * (1 + cpor * (P[Ix + 1][Iy + 1][Iz + 2][1] - refP) + dcpor * (P[Ix + 1][Iy + 1][Iz + 2][1] - refP)*(P[Ix + 1][Iy + 1][Iz + 2][1] - refP));
								if (comp[Ix][Iy][Iz + 1][i][0]>comp[Ix][Iy][Iz][i][0]) {
									DupStream = diffusion[Ix][Iy][Iz + 1][i][0];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix, Iy, Iz + 1, i, k, 0);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix][Iy][Iz + 1][RO][0] * gridDim[Nx + Ny + Iz + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] * dCoefl;
								AAd *= (sat[Ix][Iy][Iz + 1][1] * gridDim[Nx + Ny + Iz + 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Nx + Ny + Iz] * dCoefl) / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
								BBd = tor[Ix][Iy][Iz + 1] * gridDim[Nx + Ny + Iz + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Ny + Iz] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Ix] * gridDim[Nx + Iy] / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
								DeltaX = comp[Ix][Iy][Iz + 1][i][0] - comp[Ix][Iy][Iz][i][0];

								dAAddx = dE[Ix][Iy][Iz][k][0] * gridDim[Nx + Ny + Iz] * dCoefl;
								dAAddx2 = dE[Ix][Iy][Iz + 1][k][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								mBLNo = preConRow[(Iz + 1)*(Nx*Ny) + Iy * Nx + Ix];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;


								if (phaseStat[Ix][Iy][Iz + 1] == 1) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][RO][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][BMU][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][1] * gridDim[Nx + Ny + Iz] * Makhraj - dMug * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix][Iy][Iz + 1][k][1] * gridDim[Nx + Ny + Iz + 1] * Coef*Makhraj - DiffVisco(Ix, Iy, Iz + 1, k, 1)*gridDim[Nx + Ny + Iz + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][k][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz + 1] * (G_ACCG*blockFProps[Ix][Iy][Iz + 1][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz + 1][BGAM][1] * dE[Ix][Iy][Iz + 1][k][1] / blockFProps[Ix][Iy][Iz + 1][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][BGAM][1] * gridDim[Nx + Ny + Iz + 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

								if (transS[Ix + 1][Iy + 1][Iz + 1][1][2]) {
									dRsidedxg += comp[Ix][Iy][Iz + 1][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][2] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = (comp[Ix][Iy][Iz + 1][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][2] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

									dRsidedxg += comp[Ix][Iy][Iz + 1][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
									dBsidedxg += (comp[Ix][Iy][Iz + 1][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
								}
								else {
									dRsidedxg += (comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

									dRsidedxg += (comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
									dBsidedxg += comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);

								}

								if (comp[Ix][Iy][Iz + 1][i][1]>comp[Ix][Iy][Iz][i][1]) {
									DupStream = diffusion[Ix][Iy][Iz + 1][i][1];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix, Iy, Iz + 1, i, k, 1);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix][Iy][Iz + 1][RO][1] * gridDim[Nx + Ny + Iz + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] * dCoefg;
								AAd *= (sat[Ix][Iy][Iz + 1][2] * gridDim[Nx + Ny + Iz + 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Nx + Ny + Iz] * dCoefg) / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
								BBd = tor[Ix][Iy][Iz + 1] * gridDim[Nx + Ny + Iz + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Ny + Iz] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Ix]*gridDim[Nx+Iy]/(gridDim[Nx+Ny+Iz+1]+gridDim[Nx+Ny+Iz]);
								DeltaX = comp[Ix][Iy][Iz + 1][i][1] - comp[Ix][Iy][Iz][i][1];

								dAAddx = dE[Ix][Iy][Iz][k][1] * gridDim[Nx + Ny + Iz] * dCoefg;
								dAAddx2 = dE[Ix][Iy][Iz + 1][k][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}


								if (phaseStat[Ix][Iy][Iz + 1]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;
							}

							if (Iz>0) {
								if (phaseStat[Ix][Iy][Iz - 1] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][RO][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][BMU][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][0] * gridDim[Nx + Ny + Iz] * Makhraj - dMul * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix][Iy][Iz - 1][k][0] * gridDim[Nx + Ny + Iz - 1] * Coef*Makhraj - DiffVisco(Ix, Iy, Iz - 1, k, 0)*gridDim[Nx + Ny + Iz - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][k][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz - 1] * (G_ACCG*blockFProps[Ix][Iy][Iz - 1][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz - 1][BGAM][0] * dE[Ix][Iy][Iz - 1][k][0] / blockFProps[Ix][Iy][Iz - 1][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][BGAM][0] * gridDim[Nx + Ny + Iz - 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

								if (transS[Ix + 1][Iy + 1][Iz][0][2]) {
									dRsidedxl -= (comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);
									dBsidedxl = -comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);

									dRsidedxl -= (comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][1])*(Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
									dBsidedxl -= comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								}
								else {
									dRsidedxl -= comp[Ix][Iy][Iz - 1][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][1] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);
									dBsidedxl = -(comp[Ix][Iy][Iz - 1][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][1] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);

									dRsidedxl -= -comp[Ix][Iy][Iz - 1][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
									dBsidedxl -= -(comp[Ix][Iy][Iz - 1][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][1])*(Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								}

								porpor2 = porosity[Ix][Iy][Iz - 1] * (1 + cpor * (P[Ix + 1][Iy + 1][Iz][1] - refP) + dcpor * (P[Ix + 1][Iy + 1][Iz][1] - refP)*(P[Ix + 1][Iy + 1][Iz][1] - refP));
								if (comp[Ix][Iy][Iz - 1][i][0]>comp[Ix][Iy][Iz][i][0]) {
									DupStream = diffusion[Ix][Iy][Iz - 1][i][0];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix, Iy, Iz - 1, i, k, 0);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix][Iy][Iz - 1][RO][0] * gridDim[Nx + Ny + Iz - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] * dCoefl;
								AAd *= (sat[Ix][Iy][Iz - 1][1] * gridDim[Nx + Ny + Iz - 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Nx + Ny + Iz] * dCoefl) / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
								BBd = tor[Ix][Iy][Iz - 1] * gridDim[Nx + Ny + Iz - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Ny + Iz] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Ix] * gridDim[Nx + Iy] / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
								DeltaX = comp[Ix][Iy][Iz - 1][i][0] - comp[Ix][Iy][Iz][i][0];

								dAAddx = dE[Ix][Iy][Iz][k][0] * gridDim[Nx + Ny + Iz] * dCoefl;
								dAAddx2 = dE[Ix][Iy][Iz - 1][k][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += -NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += -NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								mBLNo = preConRow[(Iz - 1)*(Nx*Ny) + Iy * Nx + Ix];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;


								if (phaseStat[Ix][Iy][Iz - 1] == 1) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][RO][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][BMU][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][1] * gridDim[Nx + Ny + Iz] * Makhraj - dMug * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix][Iy][Iz - 1][k][1] * gridDim[Nx + Ny + Iz - 1] * Coef*Makhraj - DiffVisco(Ix, Iy, Iz - 1, k, 1)*gridDim[Nx + Ny + Iz - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][k][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz - 1] * (G_ACCG*blockFProps[Ix][Iy][Iz - 1][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz - 1][BGAM][1] * dE[Ix][Iy][Iz - 1][k][1] / blockFProps[Ix][Iy][Iz - 1][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][BGAM][1] * gridDim[Nx + Ny + Iz - 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

								if (transS[Ix + 1][Iy + 1][Iz][1][2]) {
									dRsidedxg -= (comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);
									dBsidedxg = -comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);

									dRsidedxg -= (comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
									dBsidedxg -= comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								}
								else {
									dRsidedxg -= comp[Ix][Iy][Iz - 1][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][2] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);
									dBsidedxg = -(comp[Ix][Iy][Iz - 1][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][2] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);

									dRsidedxg -= comp[Ix][Iy][Iz - 1][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
									dBsidedxg -= (comp[Ix][Iy][Iz - 1][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								}

								if (comp[Ix][Iy][Iz - 1][i][1]>comp[Ix][Iy][Iz][i][1]) {
									DupStream = diffusion[Ix][Iy][Iz - 1][i][1];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix, Iy, Iz - 1, i, k, 1);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix][Iy][Iz - 1][RO][1] * gridDim[Nx + Ny + Iz - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] * dCoefg;
								AAd *= (sat[Ix][Iy][Iz - 1][2] * gridDim[Nx + Ny + Iz - 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Nx + Ny + Iz] * dCoefg) / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
								BBd = tor[Ix][Iy][Iz - 1] * gridDim[Nx + Ny + Iz - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Ny + Iz] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Ix]*gridDim[Nx+Iy]/(gridDim[Nx+Ny+Iz-1]+gridDim[Nx+Ny+Iz]);
								DeltaX = comp[Ix][Iy][Iz - 1][i][1] - comp[Ix][Iy][Iz][i][1];

								dAAddx = dE[Ix][Iy][Iz][k][1] * gridDim[Nx + Ny + Iz] * dCoefg;
								dAAddx2 = dE[Ix][Iy][Iz - 1][k][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += -NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += -NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}



								if (phaseStat[Ix][Iy][Iz - 1]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;
							}

							/////////////////////////////////////////////////Sadeq//k!=i/////////////////////////////////
							if (fphaseStat[Ix][Iy][Iz] == 1) {
								//dRsidefdxl = 0;
								Jac1Row[JRowIndex] = dRsidefdxl;
								Jac1Col[JRowIndex] = FracEq + k;
								JRowIndex++;
							}
							else if (fphaseStat[Ix][Iy][Iz] == (-1)) {
								//dRsidefdxg = 0;
								Jac1Row[JRowIndex] = dRsidefdxg;
								Jac1Col[JRowIndex] = FracEq + k;
								JRowIndex++;
							}
							else {
								//dRsidefdxl = 0;
								Jac1Row[JRowIndex] = dRsidefdxl;
								Jac1Col[JRowIndex] = FracEq + k;
								JRowIndex++;
								//dRsidefdxg = 0;
								Jac1Row[JRowIndex] = dRsidefdxg;
								Jac1Col[JRowIndex] = FracEq + Nc + k;
								JRowIndex++;
							}
							////////////////////////sadeq/////////////////////////
						}
						//jac[BLNo+Nc+i][BLNo+k]=(Vb/Dt)*porpor*sat[Ix][Iy][Iz][1]*dLsidedxl-dQdxl;
						if (phaseStat[Ix][Iy][Iz] != -1) {
							Jac1Row[JRowIndex] = (Vb / Dt)*porpor*sat[Ix][Iy][Iz][1] * dLsidedxl - dQdxl - dRsidedxl;
							//Jac1Row[JRowIndex]=(Vb/Dt)*porpor*sat[Ix][Iy][Iz][1]*dLsidedxl-dQdxl;
							Jac1Col[JRowIndex] = jacCol + k;
							JRowIndex++;
						}

						//jac[BLNo+Nc+i][BLNo+Nc+k]=(Vb/Dt)*porpor*sat[Ix][Iy][Iz][2]*dLsidedxg-dQdxg;
						if (phaseStat[Ix][Iy][Iz] != 1) {
							Jac1Row[JRowIndex] = (Vb / Dt)*porpor*sat[Ix][Iy][Iz][2] * dLsidedxg - dQdxg - dRsidedxg;
							//Jac1Row[JRowIndex]=(Vb/Dt)*porpor*sat[Ix][Iy][Iz][2]*dLsidedxg-dQdxg;
							Jac1Col[JRowIndex] = jacCol + Nc + k - reCol;
							JRowIndex++;
						}

					}
					//MatSetValues(Petsc_B, 1, &RowNO, JRowIndex, Jac1Col, Jac1Row, INSERT_VALUES);
				}
				else if (BENo < (2 * Nc)) {

					LSide = (Vb / Dt)*(porpor*(blockFProps[Ix][Iy][Iz][RO][0] * sat[Ix][Iy][Iz][1] + blockFProps[Ix][Iy][Iz][RO][1] * sat[Ix][Iy][Iz][2]) - preProp[Ix][Iy][Iz][Nc - 1]);
					RSide = trans[Ix + 1][Iy + 1][Iz + 1][0][0] * (P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) - trans[Ix][Iy + 1][Iz + 1][0][0] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);
					RSide += trans[Ix + 1][Iy + 1][Iz + 1][0][1] * (P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) - trans[Ix + 1][Iy][Iz + 1][0][1] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);
					RSide += trans[Ix + 1][Iy + 1][Iz + 1][0][2] * (P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) - trans[Ix + 1][Iy + 1][Iz][0][2] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);
					RSide += trans[Ix + 1][Iy + 1][Iz + 1][1][0] * (P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) - trans[Ix][Iy + 1][Iz + 1][1][0] * (P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);
					RSide += trans[Ix + 1][Iy + 1][Iz + 1][1][1] * (P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) - trans[Ix + 1][Iy][Iz + 1][1][1] * (P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);
					RSide += trans[Ix + 1][Iy + 1][Iz + 1][1][2] * (P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) - trans[Ix + 1][Iy + 1][Iz][1][2] * (P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);

					RSide += trans[Ix + 1][Iy + 1][Iz + 1][2][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - trans[Ix][Iy + 1][Iz + 1][2][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
					RSide += trans[Ix + 1][Iy + 1][Iz + 1][2][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - trans[Ix + 1][Iy][Iz + 1][2][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
					RSide += trans[Ix + 1][Iy + 1][Iz + 1][2][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]) - trans[Ix + 1][Iy + 1][Iz][2][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
					RSide += trans[Ix + 1][Iy + 1][Iz + 1][3][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - trans[Ix][Iy + 1][Iz + 1][3][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
					RSide += trans[Ix + 1][Iy + 1][Iz + 1][3][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - trans[Ix + 1][Iy][Iz + 1][3][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
					RSide += trans[Ix + 1][Iy + 1][Iz + 1][3][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]) - trans[Ix + 1][Iy + 1][Iz][3][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);

					////////////////////////////Transfer Function


					RSide += ZERO_CONV * SI_C * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
					RSide += ZERO_CONV * SI_C * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor) / (porpor + fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));

					//////////////////////
					RSide += Qo + Qg;
					

					dLsidedp = (Vb / Dt)*(sat[Ix][Iy][Iz][1] * (blockFProps[Ix][Iy][Iz][RO][0] * dPordp + dE[Ix][Iy][Iz][Nc][0] * porpor) + sat[Ix][Iy][Iz][2] * (blockFProps[Ix][Iy][Iz][RO][1] * dPordp + dE[Ix][Iy][Iz][Nc][1] * porpor));
					dLsidedSo = (Vb / Dt)*(porpor*blockFProps[Ix][Iy][Iz][RO][0]);
					dLsidedSg = (Vb / Dt)*(porpor*blockFProps[Ix][Iy][Iz][RO][1]);

					dRsidefdp = 0;
					dRsidedp = 0;
					// Transfer Function dRside dp fdp
					//moshtagh transfer Function jabejaie naft nesbat be feshar matrix
					dRsidedp += ZERO_CONV * SI_C * dE[Ix][Iy][Iz][Nc][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
					dRsidedp += ZERO_CONV * -SI_C * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor));
					dRsidedp += ZERO_CONV * -SI_C * (DiffVisco(Ix, Iy, Iz, Nc, 0) * porpor + dPordp * blockFProps[Ix][Iy][Iz][BMU][0]) * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor)*(blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) * (porpor + fporpor);
					dRsidedp += ZERO_CONV * SI_C * dPordp * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / (blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					//moshtagh transfer Function jabejaie gaz nesbat be feshar matrix
					dRsidedp += ZERO_CONV * SI_C * dE[Ix][Iy][Iz][Nc][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor) / (porpor + fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));
					dRsidedp += ZERO_CONV * -SI_C * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor) / (porpor + fporpor));
					dRsidedp += ZERO_CONV * -SI_C * (DiffVisco(Ix, Iy, Iz, Nc, 1) * porpor + dPordp * blockFProps[Ix][Iy][Iz][BMU][1]) * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor)*(blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1])) * (porpor + fporpor);
					dRsidedp += ZERO_CONV * SI_C * dPordp * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / (blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));

					//moshtagh transfer Function jabejaie naft nesbat be feshar Fracture
					dRsidefdp += ZERO_CONV * SI_C * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor));
					dRsidefdp += ZERO_CONV * -SI_C * (fDiffVisco(Ix, Iy, Iz, Nc, 0) * fporpor + fdPordp * fblockFProps[Ix][Iy][Iz][BMU][0]) * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor)*(blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) * (porpor + fporpor);
					dRsidefdp += ZERO_CONV * SI_C * fdPordp * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / (blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					//moshtagh transfer Function jabejaie gaz nesbat be feshar Fracture
					dRsidefdp += ZERO_CONV * SI_C * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor) / (porpor + fporpor));
					dRsidefdp += ZERO_CONV * -SI_C * (fDiffVisco(Ix, Iy, Iz, Nc, 1) * fporpor + fdPordp * fblockFProps[Ix][Iy][Iz][BMU][1]) * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor)*(blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1])) * (porpor + fporpor);
					dRsidefdp += ZERO_CONV * SI_C * fdPordp * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / (blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));
					//


					dRsidedp += trans[Ix + 1][Iy + 1][Iz + 1][0][0] + trans[Ix][Iy + 1][Iz + 1][0][0];
					dRsidedp += trans[Ix + 1][Iy + 1][Iz + 1][0][1] + trans[Ix + 1][Iy][Iz + 1][0][1];
					dRsidedp += trans[Ix + 1][Iy + 1][Iz + 1][0][2] + trans[Ix + 1][Iy + 1][Iz][0][2];
					dRsidedp += trans[Ix + 1][Iy + 1][Iz + 1][1][0] + trans[Ix][Iy + 1][Iz + 1][1][0];
					dRsidedp += trans[Ix + 1][Iy + 1][Iz + 1][1][1] + trans[Ix + 1][Iy][Iz + 1][1][1];
					dRsidedp += trans[Ix + 1][Iy + 1][Iz + 1][1][2] + trans[Ix + 1][Iy + 1][Iz][1][2];

					//jac[BLNo+2*Nc-1][BLNo+(2*Nc)]=PCoeff*(dLsidedp+dRsidedp);
					dMul = DiffVisco(Ix, Iy, Iz, Nc, 0);
					dMug = DiffVisco(Ix, Iy, Iz, Nc, 1);

					dRsidedSw = 0;
					dRsidedSg = 0;
					dRsidedSo = 0;
					dRsidefdSo = 0;
					dRsidefdSg = 0;
					dRsidefdSw = 0;

					//Transfer Function dRside satuaration 
					// moshtagh transfer Function jabejaie naft nesbat be So Matrix
					dRsidedSo += ZERO_CONV * SI_C * f_m_drelperm[1][4] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					// moshtagh transfer Function jabejaie naft nesbat be So Fracture
					dRsidefdSo += ZERO_CONV * SI_C * f_m_drelperm[1][9] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					// moshtagh transfer Function jabejaie naft nesbat be Sg Matrix
					dRsidedSg += ZERO_CONV * SI_C * f_m_drelperm[1][2] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					// moshtagh transfer Function jabejaie gaz nesbat be Sg Matrix
					dRsidedSg += ZERO_CONV * SI_C * f_m_drelperm[2][3] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor) / (porpor + fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));

					// moshtagh transfer Function jabejaie naft nesbat be Sg Fracture 
					dRsidefdSg += ZERO_CONV * SI_C * f_m_drelperm[1][7] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					// moshtagh transfer Function jabejaie gaz nesbat be Sg Fracture
					dRsidefdSg += ZERO_CONV * SI_C * f_m_drelperm[2][8] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor) / (porpor + fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));

					// moshtagh transfer Function jabejaie naft nesbat be Sw Matrix
					dRsidedSw += ZERO_CONV * SI_C * f_m_drelperm[1][1] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					// moshtagh transfer Function jabejaie naft nesbat be Sw Fracture
					dRsidefdSw += ZERO_CONV * SI_C * f_m_drelperm[1][6] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
					//


					if (Ix<(Nx - 1)) {
						if (phaseStat[Ix + 1][Iy][Iz]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[Iz*(Nx*Ny) + Iy * Nx + Ix + 1] - reCol2;

						dsw = trans[Ix + 1][Iy + 1][Iz + 1][4][0] * (P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) + trans[Ix + 1][Iy + 1][Iz + 1][6][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (transS[Ix + 1][Iy + 1][Iz + 1][0][0]) {							
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;							
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dso = trans[Ix + 1][Iy + 1][Iz + 1][10][0] * (P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) + trans[Ix + 1][Iy + 1][Iz + 1][11][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (transS[Ix + 1][Iy + 1][Iz + 1][0][0]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix + 1][Iy][Iz] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;

						dsgo = trans[Ix + 1][Iy + 1][Iz + 1][8][0] * (P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) + trans[Ix + 1][Iy + 1][Iz + 1][9][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						dsgg = trans[Ix + 1][Iy + 1][Iz + 1][5][0] * (P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + trans[Ix + 1][Iy + 1][Iz + 1][7][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (transS[Ix + 1][Iy + 1][Iz + 1][0][0]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix + 1][Iy][Iz] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}
						if (transS[Ix + 1][Iy + 1][Iz + 1][1][0]) {
							Jac1Row[JRowIndex] += (phaseStat[Ix + 1][Iy][Iz] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;
						///////////////////////////////////////////////////////////////////
						//////////////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (phaseStat[Ix + 1][Iy][Iz] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][RO][0] * gridDim[Ix + 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BMU][0] * gridDim[Ix + 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][0] * gridDim[Ix] * Makhraj - dMul * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix + 1][Iy][Iz][Nc][0] * gridDim[Ix + 1] * Coef*Makhraj - DiffVisco(Ix + 1, Iy, Iz, Nc, 0)*gridDim[Ix + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Ix] * (blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][Nc][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Ix + 1] * (blockFProps[Ix + 1][Iy][Iz][BGAM][0] * dE[Ix + 1][Iy][Iz][Nc][0] / blockFProps[Ix + 1][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BGAM][0] * gridDim[Ix + 1] * Coef) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

						if (transS[Ix + 1][Iy + 1][Iz + 1][0][0]) {
							dRsidedp -= IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][1] * Moshtaq*(P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = (IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][1] * Bmoshtaq)*(P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= (IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}

						if (phaseStat[Ix + 1][Iy][Iz] == 1) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][RO][1] * gridDim[Ix + 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BMU][1] * gridDim[Ix + 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][1] * gridDim[Ix] * Makhraj - dMug * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix + 1][Iy][Iz][Nc][1] * gridDim[Ix + 1] * Coef*Makhraj - DiffVisco(Ix + 1, Iy, Iz, Nc, 1)*gridDim[Ix + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Ix] * (blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][Nc][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Ix + 1] * (blockFProps[Ix + 1][Iy][Iz][BGAM][1] * dE[Ix + 1][Iy][Iz][Nc][1] / blockFProps[Ix + 1][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BGAM][1] * gridDim[Ix + 1] * Coef) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

						if (transS[Ix + 1][Iy + 1][Iz + 1][1][0]) {
							dRsidedp -= IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][2] * Moshtaq*(P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += (IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][2] * Bmoshtaq)*(P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= (IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);

						}
						////////////////////////////////////////////////////////////////////
						////////////////////////////////////////////////////////////////////
						Jac1Row[JRowIndex] = PCoeff * (-trans[Ix + 1][Iy + 1][Iz + 1][0][0] - trans[Ix + 1][Iy + 1][Iz + 1][1][0] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;
					}

					if (Ix>0) {
						if (phaseStat[Ix - 1][Iy][Iz]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[Iz*(Nx*Ny) + Iy * Nx + Ix - 1] - reCol2;

						dsw = -trans[Ix][Iy + 1][Iz + 1][4][0] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]) - trans[Ix][Iy + 1][Iz + 1][6][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						if (!transS[Ix][Iy + 1][Iz + 1][0][0]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dso = -trans[Ix][Iy + 1][Iz + 1][10][0] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]) - trans[Ix][Iy + 1][Iz + 1][11][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						if (!transS[Ix][Iy + 1][Iz + 1][0][0]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix - 1][Iy][Iz] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;

						dsgo = -trans[Ix][Iy + 1][Iz + 1][8][0] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]) - trans[Ix][Iy + 1][Iz + 1][9][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						dsgg = -trans[Ix][Iy + 1][Iz + 1][5][0] * (P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]) - trans[Ix][Iy + 1][Iz + 1][7][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						if (!transS[Ix][Iy + 1][Iz + 1][0][0]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix - 1][Iy][Iz] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}
						if (!transS[Ix][Iy + 1][Iz + 1][1][0]) {
							Jac1Row[JRowIndex] += (phaseStat[Ix - 1][Iy][Iz] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;
						////////////////////////////////////////////////////////
						//////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (phaseStat[Ix - 1][Iy][Iz] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][RO][0] * gridDim[Ix - 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][BMU][0] * gridDim[Ix - 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][0] * gridDim[Ix] * Makhraj - dMul * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix - 1][Iy][Iz][Nc][0] * gridDim[Ix - 1] * Coef*Makhraj - DiffVisco(Ix - 1, Iy, Iz, Nc, 0)*gridDim[Ix - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Ix] * (blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][Nc][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Ix - 1] * (blockFProps[Ix - 1][Iy][Iz][BGAM][0] * dE[Ix - 1][Iy][Iz][Nc][0] / blockFProps[Ix - 1][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][BGAM][0] * gridDim[Ix - 1] * Coef) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

						if (transS[Ix][Iy + 1][Iz + 1][0][0]) {
							dRsidedp += (IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);
							dBsidedp = -IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);

							dRsidedp += (IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1])*(Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
							dBsidedp -= IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp += IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][1] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);
							dBsidedp = -(IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][1] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);

							dRsidedp += IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
							dBsidedp -= (IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][1])*(Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						}

						if (phaseStat[Ix - 1][Iy][Iz] == 1) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][RO][1] * gridDim[Ix - 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][BMU][1] * gridDim[Ix - 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][1] * gridDim[Ix] * Makhraj - dMug * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix - 1][Iy][Iz][Nc][1] * gridDim[Ix - 1] * Coef*Makhraj - DiffVisco(Ix - 1, Iy, Iz, Nc, 1)*gridDim[Ix - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Ix] * (blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][Nc][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Ix - 1] * (blockFProps[Ix - 1][Iy][Iz][BGAM][1] * dE[Ix - 1][Iy][Iz][Nc][1] / blockFProps[Ix - 1][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][BGAM][1] * gridDim[Ix - 1] * Coef) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

						if (transS[Ix][Iy + 1][Iz + 1][1][0]) {
							dRsidedp += (IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);
							dBsidedp -= IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);

							dRsidedp += (IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
							dBsidedp -= IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp += IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][2] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);
							dBsidedp -= (IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][2] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);

							dRsidedp += IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
							dBsidedp -= (IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						}
						///////////////////////////////////////////////////////////
						///////////////////////////////////////////////////////////
						Jac1Row[JRowIndex] = PCoeff * (-trans[Ix][Iy + 1][Iz + 1][0][0] - trans[Ix][Iy + 1][Iz + 1][1][0] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;
					}


					if (Iy<(Ny - 1)) {
						if (phaseStat[Ix][Iy + 1][Iz]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[Iz*(Nx*Ny) + (Iy + 1)*Nx + Ix] - reCol2;

						dsw = trans[Ix + 1][Iy + 1][Iz + 1][4][1] * (P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) + trans[Ix + 1][Iy + 1][Iz + 1][6][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (transS[Ix + 1][Iy + 1][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dso = trans[Ix + 1][Iy + 1][Iz + 1][10][1] * (P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) + trans[Ix + 1][Iy + 1][Iz + 1][11][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (transS[Ix + 1][Iy + 1][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix][Iy + 1][Iz] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;

						dsgo = trans[Ix + 1][Iy + 1][Iz + 1][8][1] * (P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) + trans[Ix + 1][Iy + 1][Iz + 1][9][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						dsgg = trans[Ix + 1][Iy + 1][Iz + 1][5][1] * (P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + trans[Ix + 1][Iy + 1][Iz + 1][7][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (transS[Ix + 1][Iy + 1][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix][Iy + 1][Iz] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}
						if (transS[Ix + 1][Iy + 1][Iz + 1][1][1]) {
							Jac1Row[JRowIndex] += (phaseStat[Ix][Iy + 1][Iz] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;
						//////////////////////////////////////////////////////////////////////////////
						/////////////////////////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (phaseStat[Ix][Iy + 1][Iz] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][RO][0] * gridDim[Nx + Iy + 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][BMU][0] * gridDim[Nx + Iy + 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Iy] * Makhraj - dMul * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix][Iy + 1][Iz][Nc][0] * gridDim[Nx + Iy + 1] * Coef*Makhraj - DiffVisco(Ix, Iy + 1, Iz, Nc, 0)*gridDim[Nx + Iy + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Iy] * (blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][Nc][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Iy + 1] * (blockFProps[Ix][Iy + 1][Iz][BGAM][0] * dE[Ix][Iy + 1][Iz][Nc][0] / blockFProps[Ix][Iy + 1][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][BGAM][0] * gridDim[Nx + Iy + 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

						if (transS[Ix + 1][Iy + 1][Iz + 1][0][1]) {
							dRsidedp -= IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][1] * Moshtaq*(P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = (IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][1] * Bmoshtaq)*(P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= (IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}

						if (phaseStat[Ix][Iy + 1][Iz] == 1) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][RO][1] * gridDim[Nx + Iy + 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][BMU][1] * gridDim[Nx + Iy + 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Iy] * Makhraj - dMug * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix][Iy + 1][Iz][Nc][1] * gridDim[Nx + Iy + 1] * Coef*Makhraj - DiffVisco(Ix, Iy + 1, Iz, Nc, 1)*gridDim[Nx + Iy + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Iy] * (blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][Nc][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Iy + 1] * (blockFProps[Ix][Iy + 1][Iz][BGAM][1] * dE[Ix][Iy + 1][Iz][Nc][1] / blockFProps[Ix][Iy + 1][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][BGAM][1] * gridDim[Nx + Iy + 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

						if (transS[Ix + 1][Iy + 1][Iz + 1][1][1]) {
							dRsidedp -= IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][2] * Moshtaq*(P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += (IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][2] * Bmoshtaq)*(P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= (IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}

						/////////////////////////////////////////////////////////////////////////////
						/////////////////////////////////////////////////////////////////////////////
						Jac1Row[JRowIndex] = PCoeff * (-trans[Ix + 1][Iy + 1][Iz + 1][0][1] - trans[Ix + 1][Iy + 1][Iz + 1][1][1] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;
					}
					if (Iy>0) {
						if (phaseStat[Ix][Iy - 1][Iz]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[Iz*(Nx*Ny) + (Iy - 1)*Nx + Ix + 1] - reCol2;

						dsw = -trans[Ix + 1][Iy][Iz + 1][4][1] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]) - trans[Ix + 1][Iy][Iz + 1][6][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						if (!transS[Ix + 1][Iy][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dso = -trans[Ix + 1][Iy][Iz + 1][10][1] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]) - trans[Ix + 1][Iy][Iz + 1][11][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						if (!transS[Ix + 1][Iy][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix][Iy - 1][Iz] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;

						dsgo = -trans[Ix + 1][Iy][Iz + 1][8][1] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]) - trans[Ix + 1][Iy][Iz + 1][9][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						dsgg = -trans[Ix + 1][Iy][Iz + 1][5][1] * (P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]) - trans[Ix + 1][Iy][Iz + 1][7][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						if (!transS[Ix + 1][Iy][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix][Iy - 1][Iz] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}
						if (!transS[Ix + 1][Iy][Iz + 1][1][1]) {
							Jac1Row[JRowIndex] += (phaseStat[Ix][Iy - 1][Iz] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;


						//////////////////////////////////////////////////////////////////
						/////////////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (phaseStat[Ix][Iy - 1][Iz] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][RO][0] * gridDim[Nx + Iy - 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][BMU][0] * gridDim[Nx + Iy - 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Iy] * Makhraj - dMul * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix][Iy - 1][Iz][Nc][0] * gridDim[Nx + Iy - 1] * Coef*Makhraj - DiffVisco(Ix, Iy - 1, Iz, Nc, 0)*gridDim[Nx + Iy - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Iy] * (blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][Nc][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Iy - 1] * (blockFProps[Ix][Iy - 1][Iz][BGAM][0] * dE[Ix][Iy - 1][Iz][Nc][0] / blockFProps[Ix][Iy - 1][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][BGAM][0] * gridDim[Nx + Iy - 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

						if (transS[Ix + 1][Iy][Iz + 1][0][1]) {
							dRsidedp += (IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);
							dBsidedp = -IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);

							dRsidedp += (IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][1])*(Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
							dBsidedp -= IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						}
						else {
							dRsidedp += IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][1] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);
							dBsidedp = -(IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][1] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);

							dRsidedp += IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
							dBsidedp = -(IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][1])*(Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						}

						if (phaseStat[Ix][Iy - 1][Iz] == 1) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][RO][1] * gridDim[Nx + Iy - 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][BMU][1] * gridDim[Nx + Iy - 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Iy] * Makhraj - dMug * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix][Iy - 1][Iz][Nc][1] * gridDim[Nx + Iy - 1] * Coef*Makhraj - DiffVisco(Ix, Iy - 1, Iz, Nc, 1)*gridDim[Nx + Iy - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Iy] * (blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][Nc][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Iy - 1] * (blockFProps[Ix][Iy - 1][Iz][BGAM][1] * dE[Ix][Iy - 1][Iz][Nc][1] / blockFProps[Ix][Iy - 1][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][BGAM][1] * gridDim[Nx + Iy - 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

						if (transS[Ix + 1][Iy][Iz + 1][1][1]) {
							dRsidedp += (IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);
							dBsidedp -= IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);

							dRsidedp += (IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
							dBsidedp -= IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						}
						else {
							dRsidedp += IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][2] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);
							dBsidedp = -(IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][2] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);

							dRsidedp += IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
							dBsidedp -= (IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						}
						///////////////////////////////////////////////////////////////////
						//////////////////////////////////////////////////////////////////
						Jac1Row[JRowIndex] = PCoeff * (-trans[Ix + 1][Iy][Iz + 1][0][1] - trans[Ix + 1][Iy][Iz + 1][1][1] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;
					}

					if (Iz<(Nz - 1)) {
						if (phaseStat[Ix][Iy][Iz + 1]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[(Iz + 1)*(Nx*Ny) + Iy * Nx + Ix] - reCol2;

						dsw = trans[Ix + 1][Iy + 1][Iz + 1][4][2] * (P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) + trans[Ix + 1][Iy + 1][Iz + 1][6][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (transS[Ix + 1][Iy + 1][Iz + 1][0][2]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dso = trans[Ix + 1][Iy + 1][Iz + 1][10][2] * (P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) + trans[Ix + 1][Iy + 1][Iz + 1][11][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (transS[Ix + 1][Iy + 1][Iz + 1][0][2]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix][Iy][Iz + 1] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;

						dsgo = trans[Ix + 1][Iy + 1][Iz + 1][8][2] * (P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) + trans[Ix + 1][Iy + 1][Iz + 1][9][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						dsgg = trans[Ix + 1][Iy + 1][Iz + 1][5][2] * (P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + trans[Ix + 1][Iy + 1][Iz + 1][7][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (transS[Ix + 1][Iy + 1][Iz + 1][0][2]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix][Iy][Iz + 1] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}
						if (transS[Ix + 1][Iy + 1][Iz + 1][1][2]) {
							Jac1Row[JRowIndex] += (phaseStat[Ix][Iy][Iz + 1] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;
						///////////////////////////////////////////////////////////////////////////
						////////////////////////////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (phaseStat[Ix][Iy][Iz + 1] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][RO][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][BMU][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Ny + Iz] * Makhraj - dMul * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix][Iy][Iz + 1][Nc][0] * gridDim[Nx + Ny + Iz + 1] * Coef*Makhraj - DiffVisco(Ix, Iy, Iz + 1, Nc, 0)*gridDim[Nx + Ny + Iz + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Ny + Iz] * (blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][Nc][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz + 1] * (blockFProps[Ix][Iy][Iz + 1][BGAM][0] * dE[Ix][Iy][Iz + 1][Nc][0] / blockFProps[Ix][Iy][Iz + 1][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][BGAM][0] * gridDim[Nx + Ny + Iz + 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

						if (transS[Ix + 1][Iy + 1][Iz + 1][0][2]) {
							dRsidedp -= IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][1] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = (IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][1] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= (IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}

						if (phaseStat[Ix][Iy][Iz + 1] == 1) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][RO][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][BMU][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Ny + Iz] * Makhraj - dMug * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix][Iy][Iz + 1][Nc][1] * gridDim[Nx + Ny + Iz + 1] * Coef*Makhraj - DiffVisco(Ix, Iy, Iz + 1, Nc, 1)*gridDim[Nx + Ny + Iz + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Ny + Iz] * (blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][Nc][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz + 1] * (blockFProps[Ix][Iy][Iz + 1][BGAM][1] * dE[Ix][Iy][Iz + 1][Nc][1] / blockFProps[Ix][Iy][Iz + 1][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][BGAM][1] * gridDim[Nx + Ny + Iz + 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

						if (transS[Ix + 1][Iy + 1][Iz + 1][1][2]) {
							dRsidedp -= IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][2] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += (IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][2] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= (IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						///////////////////////////////////////////////////////////////////////////////
						//////////////////////////////////////////////////////////////////////////////

						Jac1Row[JRowIndex] = PCoeff * (-trans[Ix + 1][Iy + 1][Iz + 1][0][2] - trans[Ix + 1][Iy + 1][Iz + 1][1][2] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;
					}

					if (Iz>0) {
						if (phaseStat[Ix][Iy][Iz - 1]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[(Iz - 1)*(Nx*Ny) + Iy * Nx + Ix + 1] - reCol2;

						dsw = -trans[Ix + 1][Iy + 1][Iz][4][2] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]) - trans[Ix + 1][Iy + 1][Iz][6][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						if (!transS[Ix + 1][Iy + 1][Iz][0][2]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dso = -trans[Ix + 1][Iy + 1][Iz][10][2] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]) - trans[Ix + 1][Iy + 1][Iz][11][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						if (!transS[Ix + 1][Iy + 1][Iz][0][2]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix][Iy][Iz - 1] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;

						dsgo = -trans[Ix + 1][Iy + 1][Iz][8][2] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]) - trans[Ix + 1][Iy + 1][Iz][9][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						dsgg = -trans[Ix + 1][Iy + 1][Iz][5][2] * (P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]) - trans[Ix + 1][Iy + 1][Iz][7][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						if (!transS[Ix + 1][Iy + 1][Iz][0][2]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix][Iy][Iz - 1] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}
						if (!transS[Ix + 1][Iy + 1][Iz][1][2]) {
							Jac1Row[JRowIndex] += (phaseStat[Ix][Iy][Iz - 1] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;
						///////////////////////////////////////////////////////////////
						///////////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (phaseStat[Ix][Iy][Iz - 1] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][RO][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][BMU][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Ny + Iz] * Makhraj - dMul * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix][Iy][Iz - 1][Nc][0] * gridDim[Nx + Ny + Iz - 1] * Coef*Makhraj - DiffVisco(Ix, Iy, Iz - 1, Nc, 0)*gridDim[Nx + Ny + Iz - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Ny + Iz] * (blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][Nc][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz - 1] * (blockFProps[Ix][Iy][Iz - 1][BGAM][0] * dE[Ix][Iy][Iz - 1][Nc][0] / blockFProps[Ix][Iy][Iz - 1][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][BGAM][0] * gridDim[Nx + Ny + Iz - 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

						if (transS[Ix + 1][Iy + 1][Iz][0][2]) {
							dRsidedp += (IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);
							dBsidedp = -IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);

							dRsidedp += (IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][1])*(Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							dBsidedp -= IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						}
						else {
							dRsidedp += IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][1] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);
							dBsidedp = -(IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][1] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);

							dRsidedp += IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							dBsidedp -= (IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][1])*(Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						}

						if (phaseStat[Ix][Iy][Iz - 1] == 1) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][RO][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][BMU][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Ny + Iz] * Makhraj - dMug * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix][Iy][Iz - 1][Nc][1] * gridDim[Nx + Ny + Iz - 1] * Coef*Makhraj - DiffVisco(Ix, Iy, Iz - 1, Nc, 1)*gridDim[Nx + Ny + Iz - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Ny + Iz] * (blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][Nc][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz - 1] * (blockFProps[Ix][Iy][Iz - 1][BGAM][1] * dE[Ix][Iy][Iz - 1][Nc][1] / blockFProps[Ix][Iy][Iz - 1][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][BGAM][1] * gridDim[Nx + Ny + Iz - 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

						if (transS[Ix + 1][Iy + 1][Iz][1][2]) {
							dRsidedp += (IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);
							dBsidedp -= IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);

							dRsidedp += (IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							dBsidedp -= IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						}
						else {
							dRsidedp += IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][2] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);
							dBsidedp -= (IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][2] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);

							dRsidedp += IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							dBsidedp -= (IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						}
						//////////////////////////////////////////////////////////////////
						//////////////////////////////////////////////////////////////////
						Jac1Row[JRowIndex] = PCoeff * (-trans[Ix + 1][Iy + 1][Iz][0][2] - trans[Ix + 1][Iy + 1][Iz][1][2] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;
					}

					Jac1Row[JRowIndex] = PCoeff * (dLsidedp + dRsidedp + PIo + PIg);
					Jac1Col[JRowIndex] = jacCol + (2 * Nc) - reCol;
					JRowIndex++;

					if (phaseStat[Ix][Iy][Iz] != -1) {
						Jac1Row[JRowIndex] = -dRsidedSw;
						Jac1Col[JRowIndex] = jacCol + (2 * Nc + 1) - reCol;
						JRowIndex++;

						Jac1Row[JRowIndex] = dLsidedSo - dRsidedSo;
						Jac1Col[JRowIndex] = jacCol + (2 * Nc + 2) - reCol;
						JRowIndex++;
					}

					if (phaseStat[Ix][Iy][Iz] != 1) {
						Jac1Row[JRowIndex] = dLsidedSg - dRsidedSg;
						Jac1Col[JRowIndex] = jacCol + (2 * Nc + 3) - reCol - reCol3;
						JRowIndex++;
					}
					//////////////////////////////////////////////

					/////////////////////////////////////////////////Sadeq///////////////////////////////////
					if (fphaseStat[Ix][Iy][Iz] == 1) {
						//dRsidefdSo = 0;
						Jac1Row[JRowIndex] = dRsidefdSo;
						Jac1Col[JRowIndex] = FracEq + 2 * Nc + 2 - reColF1;
						JRowIndex++;
					}
					else if (fphaseStat[Ix][Iy][Iz] == (-1)) {
						//dRsidefdSg = 0;
						Jac1Row[JRowIndex] = dRsidefdSg;
						Jac1Col[JRowIndex] = FracEq + 2 * Nc + 2 - reColF1;
						JRowIndex++;
					}
					else {
						//dRsidefdSo = 0;
						Jac1Row[JRowIndex] = dRsidefdSo;
						Jac1Col[JRowIndex] = FracEq + 2 * Nc + 2 - reColF1;
						JRowIndex++;
						//dRsidefdSg = 0;
						Jac1Row[JRowIndex] = dRsidefdSg;
						Jac1Col[JRowIndex] = FracEq + 2 * Nc + 3 - reColF1;
						JRowIndex++;
					}
					//dRsidefdp = 0;
					Jac1Row[JRowIndex] = PCoeff * dRsidefdp;
					Jac1Col[JRowIndex] = FracEq + 2 * Nc - reColF1;
					JRowIndex++;
					//dRsidefdSw = 0;
					Jac1Row[JRowIndex] = dRsidefdSw;
					Jac1Col[JRowIndex] = FracEq + 2 * Nc + 1 - reColF1;
					JRowIndex++;
					////////////////////////sadeq/////////////////////////


					for (k = 0; k<Nc; k++) {
						dRsidedxl = 0;
						dRsidedxg = 0;
						dRsidefdxl = 0;
						dRsidefdxg = 0;

						dLsidedxl = dE[Ix][Iy][Iz][k][0];
						dLsidedxg = dE[Ix][Iy][Iz][k][1];
						dQdxl = 0;
						dQdxg = 0;

						dMul = DiffVisco(Ix, Iy, Iz, k, 0);
						dMug = DiffVisco(Ix, Iy, Iz, k, 1);

						//Transfer Function dRside dxl dxg
						// moshtagh transfer Function jabejaie naft nesbat be xl Matrix
						dRsidedxl += ZERO_CONV * SI_C * dE[Ix][Iy][Iz][k][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
						dRsidedxl += ZERO_CONV * -SI_C * DiffVisco(Ix, Iy, Iz, k, 0) * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] * porpor / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor)*(blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) * (porpor + fporpor);

						// moshtagh transfer Function jabejaie naft nesbat be xl Fracture
						dRsidefdxl += ZERO_CONV * -SI_C * fDiffVisco(Ix, Iy, Iz, k, 0) * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] * fporpor / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor)*(blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) * (porpor + fporpor);

						// moshtagh transfer Function jabejaie gaz nesbat be xg Matrix
						dRsidedxg += ZERO_CONV * SI_C * dE[Ix][Iy][Iz][k][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor) / (porpor + fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));
						dRsidedxg += ZERO_CONV * -SI_C * DiffVisco(Ix, Iy, Iz, k, 1) * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] * porpor / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor)*(blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1])) * (porpor + fporpor);

						// moshtagh transfer Function jabejaie gaz nesbat be xg Fracture
						dRsidefdxg += ZERO_CONV * -SI_C * fDiffVisco(Ix, Iy, Iz, k, 1) * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] * fporpor / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor)*(blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1])) * (porpor + fporpor);
						//

						if (Ix<(Nx - 1)) {
							if (phaseStat[Ix + 1][Iy][Iz] == (-1)) Coef = 0;
							else Coef = 1;

							Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][RO][0] * gridDim[Ix + 1] * Coef;
							Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BMU][0] * gridDim[Ix + 1] * Coef;
							Moshtaq = (dE[Ix][Iy][Iz][k][0] * gridDim[Ix] * Makhraj - dMul * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (dE[Ix + 1][Iy][Iz][k][0] * gridDim[Ix + 1] * Coef*Makhraj - DiffVisco(Ix + 1, Iy, Iz, k, 0)*gridDim[Ix + 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Ix] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][k][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Ix + 1] * (G_ACCG*blockFProps[Ix + 1][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix + 1][Iy][Iz][BGAM][0] * dE[Ix + 1][Iy][Iz][k][0] / blockFProps[Ix + 1][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

							tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BGAM][0] * gridDim[Ix + 1] * Coef) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

							if (transS[Ix + 1][Iy + 1][Iz + 1][0][0]) {
								dRsidedxl += IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][1] * Moshtaq*(P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
								dBsidedxl = (IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][1] * Bmoshtaq)*(P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

								//dRsidedxl+=IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								//dBsidedxl+=(IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
							}
							else {
								dRsidedxl += (IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
								dBsidedxl = IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

								//dRsidedxl+=(IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								//dBsidedxl+=IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
							}

							mBLNo = preConRow[Iz*(Nx*Ny) + Iy * Nx + Ix + 1];
							Jac1Row[JRowIndex] = -dBsidedxl * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo + k;
							JRowIndex++;


							if (phaseStat[Ix + 1][Iy][Iz] == 1) Coef = 0;
							else Coef = 1;

							Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][RO][1] * gridDim[Ix + 1] * Coef;
							Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BMU][1] * gridDim[Ix + 1] * Coef;
							Moshtaq = (dE[Ix][Iy][Iz][k][1] * gridDim[Ix] * Makhraj - dMug * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (dE[Ix + 1][Iy][Iz][k][1] * gridDim[Ix + 1] * Coef*Makhraj - DiffVisco(Ix + 1, Iy, Iz, k, 1)*gridDim[Ix + 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Ix] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][k][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Ix + 1] * (G_ACCG*blockFProps[Ix + 1][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix + 1][Iy][Iz][BGAM][1] * dE[Ix + 1][Iy][Iz][k][1] / blockFProps[Ix + 1][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

							tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BGAM][1] * gridDim[Ix + 1] * Coef) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

							if (transS[Ix + 1][Iy + 1][Iz + 1][1][0]) {
								dRsidedxg += IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][2] * Moshtaq*(P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
								dBsidedxg = (IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][2] * Bmoshtaq)*(P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

								//dRsidedxg+=IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								//dBsidedxg+=(IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
							}
							else {
								dRsidedxg += (IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
								dBsidedxg = IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

								//dRsidedxg+=(IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								//dBsidedxg+=IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);

							}

							if (phaseStat[Ix + 1][Iy][Iz]) reCol2 = Nc;
							else reCol2 = 0;
							Jac1Row[JRowIndex] = -dBsidedxg * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
							JRowIndex++;
						}

						if (Ix>0) {
							if (phaseStat[Ix - 1][Iy][Iz] == (-1)) Coef = 0;
							else Coef = 1;

							Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][RO][0] * gridDim[Ix - 1] * Coef;
							Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][BMU][0] * gridDim[Ix - 1] * Coef;
							Moshtaq = (dE[Ix][Iy][Iz][k][0] * gridDim[Ix] * Makhraj - dMul * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (dE[Ix - 1][Iy][Iz][k][0] * gridDim[Ix - 1] * Coef*Makhraj - DiffVisco(Ix - 1, Iy, Iz, k, 0)*gridDim[Ix - 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Ix] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][k][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Ix - 1] * (G_ACCG*blockFProps[Ix - 1][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix - 1][Iy][Iz][BGAM][0] * dE[Ix - 1][Iy][Iz][k][0] / blockFProps[Ix - 1][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

							tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][BGAM][0] * gridDim[Ix - 1] * Coef) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

							if (transS[Ix][Iy + 1][Iz + 1][0][0]) {
								dRsidedxl -= (IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);
								dBsidedxl = -IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);

								//dRsidedxl-=(IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1])*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								//dBsidedxl-=IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
							}
							else {
								dRsidedxl -= IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][1] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);
								dBsidedxl = -(IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][1] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);

								//dRsidedxl-=IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								//dBsidedxl-=(IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][1])*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
							}

							mBLNo = preConRow[Iz*(Nx*Ny) + Iy * Nx + Ix - 1];
							Jac1Row[JRowIndex] = -dBsidedxl * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo + k;
							JRowIndex++;


							if (phaseStat[Ix - 1][Iy][Iz] == 1) Coef = 0;
							else Coef = 1;

							Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][RO][1] * gridDim[Ix - 1] * Coef;
							Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][BMU][1] * gridDim[Ix - 1] * Coef;
							Moshtaq = (dE[Ix][Iy][Iz][k][1] * gridDim[Ix] * Makhraj - dMug * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (dE[Ix - 1][Iy][Iz][k][1] * gridDim[Ix - 1] * Coef*Makhraj - DiffVisco(Ix - 1, Iy, Iz, k, 1)*gridDim[Ix - 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Ix] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][k][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Ix - 1] * (G_ACCG*blockFProps[Ix - 1][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix - 1][Iy][Iz][BGAM][1] * dE[Ix - 1][Iy][Iz][k][1] / blockFProps[Ix - 1][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

							tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][BGAM][1] * gridDim[Ix - 1] * Coef) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

							if (transS[Ix][Iy + 1][Iz + 1][1][0]) {
								dRsidedxg -= (IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);
								dBsidedxg = -IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);

								//dRsidedxg-=(IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								//dBsidedxg-=IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
							}
							else {
								dRsidedxg -= IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][2] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);
								dBsidedxg = -(IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][2] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);

								//dRsidedxg-=IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								//dBsidedxg-=(IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
							}


							if (phaseStat[Ix - 1][Iy][Iz]) reCol2 = Nc;
							else reCol2 = 0;
							Jac1Row[JRowIndex] = -dBsidedxg * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
							JRowIndex++;
						}

						if (Iy<(Ny - 1)) {
							if (phaseStat[Ix][Iy + 1][Iz] == (-1)) Coef = 0;
							else Coef = 1;

							Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][RO][0] * gridDim[Nx + Iy + 1] * Coef;
							Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][BMU][0] * gridDim[Nx + Iy + 1] * Coef;
							Moshtaq = (dE[Ix][Iy][Iz][k][0] * gridDim[Nx + Iy] * Makhraj - dMul * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (dE[Ix][Iy + 1][Iz][k][0] * gridDim[Nx + Iy + 1] * Coef*Makhraj - DiffVisco(Ix, Iy + 1, Iz, k, 0)*gridDim[Nx + Iy + 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][k][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Nx + Iy + 1] * (G_ACCG*blockFProps[Ix][Iy + 1][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy + 1][Iz][BGAM][0] * dE[Ix][Iy + 1][Iz][k][0] / blockFProps[Ix][Iy + 1][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

							tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][BGAM][0] * gridDim[Nx + Iy + 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

							if (transS[Ix + 1][Iy + 1][Iz + 1][0][1]) {
								dRsidedxl += IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][1] * Moshtaq*(P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
								dBsidedxl = (IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][1] * Bmoshtaq)*(P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

								//dRsidedxl+=IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								//dBsidedxl+=(IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
							}
							else {
								dRsidedxl += (IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
								dBsidedxl = IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

								//dRsidedxl+=(IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								//dBsidedxl+=IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
							}

							mBLNo = preConRow[Iz*(Nx*Ny) + (Iy + 1)*Nx + Ix];
							Jac1Row[JRowIndex] = -dBsidedxl * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo + k;
							JRowIndex++;


							if (phaseStat[Ix][Iy + 1][Iz] == 1) Coef = 0;
							else Coef = 1;

							Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][RO][1] * gridDim[Nx + Iy + 1] * Coef;
							Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][BMU][1] * gridDim[Nx + Iy + 1] * Coef;
							Moshtaq = (dE[Ix][Iy][Iz][k][1] * gridDim[Nx + Iy] * Makhraj - dMug * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (dE[Ix][Iy + 1][Iz][k][1] * gridDim[Nx + Iy + 1] * Coef*Makhraj - DiffVisco(Ix, Iy + 1, Iz, k, 1)*gridDim[Nx + Iy + 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][k][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Nx + Iy + 1] * (G_ACCG*blockFProps[Ix][Iy + 1][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy + 1][Iz][BGAM][1] * dE[Ix][Iy + 1][Iz][k][1] / blockFProps[Ix][Iy + 1][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

							tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][BGAM][1] * gridDim[Nx + Iy + 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

							if (transS[Ix + 1][Iy + 1][Iz + 1][1][1]) {
								dRsidedxg += IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][2] * Moshtaq*(P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
								dBsidedxg = (IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][2] * Bmoshtaq)*(P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

								//dRsidedxg+=IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								//dBsidedxg+=(IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
							}
							else {
								dRsidedxg += (IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
								dBsidedxg = IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

								//dRsidedxg+=(IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								//dBsidedxg+=IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);

							}

							if (phaseStat[Ix][Iy + 1][Iz]) reCol2 = Nc;
							else reCol2 = 0;
							Jac1Row[JRowIndex] = -dBsidedxg * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
							JRowIndex++;
						}

						if (Iy>0) {
							if (phaseStat[Ix][Iy - 1][Iz] == (-1)) Coef = 0;
							else Coef = 1;

							Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][RO][0] * gridDim[Nx + Iy - 1] * Coef;
							Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][BMU][0] * gridDim[Nx + Iy - 1] * Coef;
							Moshtaq = (dE[Ix][Iy][Iz][k][0] * gridDim[Nx + Iy] * Makhraj - dMul * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (dE[Ix][Iy - 1][Iz][k][0] * gridDim[Nx + Iy - 1] * Coef*Makhraj - DiffVisco(Ix, Iy - 1, Iz, k, 0)*gridDim[Nx + Iy - 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][k][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Nx + Iy - 1] * (G_ACCG*blockFProps[Ix][Iy - 1][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy - 1][Iz][BGAM][0] * dE[Ix][Iy - 1][Iz][k][0] / blockFProps[Ix][Iy - 1][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

							tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][BGAM][0] * gridDim[Nx + Iy - 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

							if (transS[Ix + 1][Iy][Iz + 1][0][1]) {
								dRsidedxl -= (IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);
								dBsidedxl = -IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);

								//dRsidedxl-=(IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][1])*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								//dBsidedxl-=IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
							}
							else {
								dRsidedxl -= IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][1] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);
								dBsidedxl = -(IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][1] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);

								//dRsidedxl-=IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								//dBsidedxl-=(IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][1])*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
							}

							mBLNo = preConRow[Iz*(Nx*Ny) + (Iy - 1)*Nx + Ix];
							Jac1Row[JRowIndex] = -dBsidedxl * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo + k;
							JRowIndex++;


							if (phaseStat[Ix][Iy - 1][Iz] == 1) Coef = 0;
							else Coef = 1;

							Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][RO][1] * gridDim[Nx + Iy - 1] * Coef;
							Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][BMU][1] * gridDim[Nx + Iy - 1] * Coef;
							Moshtaq = (dE[Ix][Iy][Iz][k][1] * gridDim[Nx + Iy] * Makhraj - dMug * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (dE[Ix][Iy - 1][Iz][k][1] * gridDim[Nx + Iy - 1] * Coef*Makhraj - DiffVisco(Ix, Iy - 1, Iz, k, 1)*gridDim[Nx + Iy - 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][k][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Nx + Iy - 1] * (G_ACCG*blockFProps[Ix][Iy - 1][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy - 1][Iz][BGAM][1] * dE[Ix][Iy - 1][Iz][k][1] / blockFProps[Ix][Iy - 1][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

							tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][BGAM][1] * gridDim[Nx + Iy - 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

							if (transS[Ix + 1][Iy][Iz + 1][1][1]) {
								dRsidedxg -= (IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);
								dBsidedxg = -IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);

								//dRsidedxg-=(IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								//dBsidedxg-=IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
							}
							else {
								dRsidedxg -= IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][2] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);
								dBsidedxg = -(IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][2] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);

								//dRsidedxg-=IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								//dBsidedxg-=(IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
							}


							if (phaseStat[Ix][Iy - 1][Iz]) reCol2 = Nc;
							else reCol2 = 0;
							Jac1Row[JRowIndex] = -dBsidedxg * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
							JRowIndex++;
						}

						if (Iz<(Nz - 1)) {
							if (phaseStat[Ix][Iy][Iz + 1] == (-1)) Coef = 0;
							else Coef = 1;

							Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][RO][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
							Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][BMU][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
							Moshtaq = (dE[Ix][Iy][Iz][k][0] * gridDim[Nx + Ny + Iz] * Makhraj - dMul * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (dE[Ix][Iy][Iz + 1][k][0] * gridDim[Nx + Ny + Iz + 1] * Coef*Makhraj - DiffVisco(Ix, Iy, Iz + 1, k, 0)*gridDim[Nx + Ny + Iz + 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][k][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz + 1] * (G_ACCG*blockFProps[Ix][Iy][Iz + 1][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz + 1][BGAM][0] * dE[Ix][Iy][Iz + 1][k][0] / blockFProps[Ix][Iy][Iz + 1][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

							tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][BGAM][0] * gridDim[Nx + Ny + Iz + 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

							if (transS[Ix + 1][Iy + 1][Iz + 1][0][2]) {
								dRsidedxl += IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][1] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
								dBsidedxl = (IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][1] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

								dRsidedxl += IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
								dBsidedxl += (IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							}
							else {
								dRsidedxl += (IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
								dBsidedxl = IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

								dRsidedxl += (IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
								dBsidedxl += IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							}

							mBLNo = preConRow[(Iz + 1)*(Nx*Ny) + Iy * Nx + Ix];
							Jac1Row[JRowIndex] = -dBsidedxl * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo + k;
							JRowIndex++;


							if (phaseStat[Ix][Iy][Iz + 1] == 1) Coef = 0;
							else Coef = 1;

							Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][RO][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
							Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][BMU][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
							Moshtaq = (dE[Ix][Iy][Iz][k][1] * gridDim[Nx + Ny + Iz] * Makhraj - dMug * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (dE[Ix][Iy][Iz + 1][k][1] * gridDim[Nx + Ny + Iz + 1] * Coef*Makhraj - DiffVisco(Ix, Iy, Iz + 1, k, 1)*gridDim[Nx + Ny + Iz + 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][k][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz + 1] * (G_ACCG*blockFProps[Ix][Iy][Iz + 1][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz + 1][BGAM][1] * dE[Ix][Iy][Iz + 1][k][1] / blockFProps[Ix][Iy][Iz + 1][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

							tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][BGAM][1] * gridDim[Nx + Ny + Iz + 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

							if (transS[Ix + 1][Iy + 1][Iz + 1][1][2]) {
								dRsidedxg += IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][2] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
								dBsidedxg = (IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][2] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

								dRsidedxg += IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
								dBsidedxg += (IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							}
							else {
								dRsidedxg += (IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
								dBsidedxg = IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

								dRsidedxg += (IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
								dBsidedxg += IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);

							}

							if (phaseStat[Ix][Iy][Iz + 1]) reCol2 = Nc;
							else reCol2 = 0;
							Jac1Row[JRowIndex] = -dBsidedxg * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
							JRowIndex++;
						}

						if (Iz>0) {
							if (phaseStat[Ix][Iy][Iz - 1] == (-1)) Coef = 0;
							else Coef = 1;

							Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][RO][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
							Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][BMU][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
							Moshtaq = (dE[Ix][Iy][Iz][k][0] * gridDim[Nx + Ny + Iz] * Makhraj - dMul * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (dE[Ix][Iy][Iz - 1][k][0] * gridDim[Nx + Ny + Iz - 1] * Coef*Makhraj - DiffVisco(Ix, Iy, Iz - 1, k, 0)*gridDim[Nx + Ny + Iz - 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][k][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz - 1] * (G_ACCG*blockFProps[Ix][Iy][Iz - 1][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz - 1][BGAM][0] * dE[Ix][Iy][Iz - 1][k][0] / blockFProps[Ix][Iy][Iz - 1][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

							tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][BGAM][0] * gridDim[Nx + Ny + Iz - 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

							if (transS[Ix + 1][Iy + 1][Iz][0][2]) {
								dRsidedxl -= (IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);
								dBsidedxl = -IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);

								dRsidedxl -= (IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][1])*(Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								dBsidedxl -= IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							}
							else {
								dRsidedxl -= IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][1] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);
								dBsidedxl = -(IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][1] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);

								dRsidedxl -= IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								dBsidedxl -= (IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][1])*(Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							}

							mBLNo = preConRow[(Iz - 1)*(Nx*Ny) + Iy * Nx + Ix];
							Jac1Row[JRowIndex] = -dBsidedxl * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo + k;
							JRowIndex++;


							if (phaseStat[Ix][Iy][Iz - 1] == 1) Coef = 0;
							else Coef = 1;

							Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][RO][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
							Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][BMU][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
							Moshtaq = (dE[Ix][Iy][Iz][k][1] * gridDim[Nx + Ny + Iz] * Makhraj - dMug * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (dE[Ix][Iy][Iz - 1][k][1] * gridDim[Nx + Ny + Iz - 1] * Coef*Makhraj - DiffVisco(Ix, Iy, Iz - 1, k, 1)*gridDim[Nx + Ny + Iz - 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][k][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz - 1] * (G_ACCG*blockFProps[Ix][Iy][Iz - 1][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz - 1][BGAM][1] * dE[Ix][Iy][Iz - 1][k][1] / blockFProps[Ix][Iy][Iz - 1][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

							tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][BGAM][1] * gridDim[Nx + Ny + Iz - 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

							if (transS[Ix + 1][Iy + 1][Iz][1][2]) {
								dRsidedxg -= (IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);
								dBsidedxg = -IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);

								dRsidedxg -= (IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								dBsidedxg -= IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							}
							else {
								dRsidedxg -= IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][2] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);
								dBsidedxg = -(IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][2] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);

								dRsidedxg -= IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								dBsidedxg -= (IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							}


							if (phaseStat[Ix][Iy][Iz - 1]) reCol2 = Nc;
							else reCol2 = 0;
							Jac1Row[JRowIndex] = -dBsidedxg * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
							JRowIndex++;
						}
						//jac[BLNo+2*Nc-1][BLNo+k]=(Vb/Dt)*porpor*sat[Ix][Iy][Iz][1]*dE[Ix][Iy][Iz][k][0];
						if (phaseStat[Ix][Iy][Iz] != -1) {
							Jac1Row[JRowIndex] = (Vb / Dt)*porpor*sat[Ix][Iy][Iz][1] * dE[Ix][Iy][Iz][k][0] - dRsidedxl;
							//Jac1Row[JRowIndex]=(Vb/Dt)*porpor*sat[Ix][Iy][Iz][1]*dE[Ix][Iy][Iz][k][0];
							Jac1Col[JRowIndex] = jacCol + k;
							JRowIndex++;
						}

						//jac[BLNo+2*Nc-1][BLNo+Nc+k]=(Vb/Dt)*porpor*sat[Ix][Iy][Iz][2]*dE[Ix][Iy][Iz][k][1];
						if (phaseStat[Ix][Iy][Iz] != 1) {
							//Jac1Row[JRowIndex]=(Vb/Dt)*porpor*sat[Ix][Iy][Iz][2]*dE[Ix][Iy][Iz][k][1];
							Jac1Row[JRowIndex] = (Vb / Dt)*porpor*sat[Ix][Iy][Iz][2] * dE[Ix][Iy][Iz][k][1] - dRsidedxg;
							Jac1Col[JRowIndex] = jacCol + Nc + k - reCol;
							JRowIndex++;
						}

						/////////////////////////////////////////////////Sadeq///////////////////////////////////
						if (fphaseStat[Ix][Iy][Iz] == 1) {
							//dRsidefdxl = 0;
							Jac1Row[JRowIndex] = dRsidefdxl;
							Jac1Col[JRowIndex] = FracEq + k;
							JRowIndex++;
						}
						else if (fphaseStat[Ix][Iy][Iz] == (-1)) {
							//dRsidefdxg = 0;
							Jac1Row[JRowIndex] = dRsidefdxg;
							Jac1Col[JRowIndex] = FracEq + k;
							JRowIndex++;
						}
						else {
							//dRsidefdxl = 0;
							Jac1Row[JRowIndex] = dRsidefdxl;
							Jac1Col[JRowIndex] = FracEq + k;
							JRowIndex++;
							//dRsidefdxg = 0;
							Jac1Row[JRowIndex] = dRsidefdxg;
							Jac1Col[JRowIndex] = FracEq + Nc + k;
							JRowIndex++;
						}
						////////////////////////sadeq/////////////////////////
					}
					//MatSetValues(Petsc_B, 1, &RowNO, JRowIndex, Jac1Col, Jac1Row, INSERT_VALUES);

				}
				else {

					LSide = (Vb / Dt)*(porpor*watRo*WAT_M_RO*sat[Ix][Iy][Iz][0] - preProp[Ix][Iy][Iz][Nc]);
					RSide = Wtran[Ix + 1][Iy + 1][Iz + 1][0] * (P[Ix + 2][Iy + 1][Iz + 1][0] - P[Ix + 1][Iy + 1][Iz + 1][0]) - Wtran[Ix][Iy + 1][Iz + 1][0] * (P[Ix + 1][Iy + 1][Iz + 1][0] - P[Ix][Iy + 1][Iz + 1][0]);
					RSide += Wtran[Ix + 1][Iy + 1][Iz + 1][1] * (P[Ix + 1][Iy + 2][Iz + 1][0] - P[Ix + 1][Iy + 1][Iz + 1][0]) - Wtran[Ix + 1][Iy][Iz + 1][1] * (P[Ix + 1][Iy + 1][Iz + 1][0] - P[Ix + 1][Iy][Iz + 1][0]);
					RSide += Wtran[Ix + 1][Iy + 1][Iz + 1][2] * (P[Ix + 1][Iy + 1][Iz + 2][0] - P[Ix + 1][Iy + 1][Iz + 1][0]) - Wtran[Ix + 1][Iy + 1][Iz][2] * (P[Ix + 1][Iy + 1][Iz + 1][0] - P[Ix + 1][Iy + 1][Iz][0]);

					RSide += G_ACC * watRo*Wtran[Ix + 1][Iy + 1][Iz + 1][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - G_ACC * watRo*Wtran[Ix][Iy + 1][Iz + 1][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
					RSide += G_ACC * watRo*Wtran[Ix + 1][Iy + 1][Iz + 1][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - G_ACC * watRo*Wtran[Ix + 1][Iy][Iz + 1][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
					RSide += G_ACC * watRo*Wtran[Ix + 1][Iy + 1][Iz + 1][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]) - G_ACC * watRo*Wtran[Ix + 1][Iy + 1][Iz][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);

					/////////////////////////////Transfer Function


					RSide += ZERO_CONV * SI_C* watRo *WAT_M_RO * ShapeFactor_2(Ix, Iy, Iz) * f_m_relperm[0] / watMu * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) *((fP[Ix + 1][Iy + 1][Iz + 1][0] - P[Ix + 1][Iy + 1][Iz + 1][0]) + (blockFProps[Ix][Iy][Iz][BLOCK_PC][0] - fblockFProps[Ix][Iy][Iz][BLOCK_PC][0]));

					////////////////////////////////////////////
					RSide += Qw;
					

					dLsidedp = (Vb / Dt)*watRo*WAT_M_RO*sat[Ix][Iy][Iz][0] * dPordp;
					dLsidedSw = (Vb / Dt)*(porpor*watRo*WAT_M_RO);


					dRsidedp = 0;
					dRsidefdp = 0;

					// Transfer Function dRside dp fdp
					dRsidedp = ZERO_CONV * -SI_C * watRo *WAT_M_RO * ShapeFactor_2(Ix, Iy, Iz) * f_m_relperm[0] / watMu * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]);
					dRsidefdp = ZERO_CONV * SI_C * watRo *WAT_M_RO * ShapeFactor_2(Ix, Iy, Iz) * f_m_relperm[0] / watMu * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]);


					dRsidedp += Wtran[Ix + 1][Iy + 1][Iz + 1][0] + Wtran[Ix][Iy + 1][Iz + 1][0];
					dRsidedp += Wtran[Ix + 1][Iy + 1][Iz + 1][1] + Wtran[Ix + 1][Iy][Iz + 1][1];
					dRsidedp += Wtran[Ix + 1][Iy + 1][Iz + 1][2] + Wtran[Ix + 1][Iy + 1][Iz][2];


					//jac[BLNo+2*Nc][BLNo+(2*Nc)]=PCoeff*(dLsidedp+dRsidedp);
					Jac1Row[JRowIndex] = PCoeff * (dLsidedp + dRsidedp + PIw);
					Jac1Col[JRowIndex] = jacCol + (2 * Nc) - reCol;
					JRowIndex++;

					//jac[BLNo+2*Nc][BLNo+(2*Nc+1)]=dLsidedSw;

					dRsidedSw = 0;
					dRsidefdSw = 0;

					// Transfer function drside dsw
					dRsidedSw += ZERO_CONV * SI_C *WAT_M_RO* f_m_drelperm[1][0] * watRo * ShapeFactor_2(Ix, Iy, Iz) / watMu * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) *((fP[Ix + 1][Iy + 1][Iz + 1][0] - P[Ix + 1][Iy + 1][Iz + 1][0]) + (blockFProps[Ix][Iy][Iz][BLOCK_PC][0] - fblockFProps[Ix][Iy][Iz][BLOCK_PC][0]));
					dRsidefdSw += ZERO_CONV * SI_C *WAT_M_RO* f_m_drelperm[1][5] * watRo * ShapeFactor_2(Ix, Iy, Iz) / watMu * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) *((fP[Ix + 1][Iy + 1][Iz + 1][0] - P[Ix + 1][Iy + 1][Iz + 1][0]) + (blockFProps[Ix][Iy][Iz][BLOCK_PC][0] - fblockFProps[Ix][Iy][Iz][BLOCK_PC][0]));


					if (Ix < (Nx - 1)) {
						if (phaseStat[Ix + 1][Iy][Iz]) reCol2 = Nc;
						else reCol2 = 0;
						mBLNo = preConRow[Iz*(Nx*Ny) + Iy * Nx + Ix + 1] - reCol2;
						Jac1Row[JRowIndex] = PCoeff * (-Wtran[Ix + 1][Iy + 1][Iz + 1][0]);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;

						dsw = dWtran[Ix + 1][Iy + 1][Iz + 1][0] * (P[Ix + 2][Iy + 1][Iz + 1][0] - P[Ix + 1][Iy + 1][Iz + 1][0]) + G_ACC * watRo*dWtran[Ix + 1][Iy + 1][Iz + 1][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (transS[Ix + 1][Iy + 1][Iz + 1][2][0]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;
					}
					if (Ix > 0) {
						if (phaseStat[Ix - 1][Iy][Iz]) reCol2 = Nc;
						else reCol2 = 0;
						mBLNo = preConRow[Iz*(Nx*Ny) + Iy * Nx + Ix - 1] - reCol2;
						Jac1Row[JRowIndex] = PCoeff * (-Wtran[Ix][Iy + 1][Iz + 1][0]);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;

						dsw = -dWtran[Ix][Iy + 1][Iz + 1][0] * (P[Ix + 1][Iy + 1][Iz + 1][0] - P[Ix][Iy + 1][Iz + 1][0]) - G_ACC * watRo*dWtran[Ix][Iy + 1][Iz + 1][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						if (!transS[Ix][Iy + 1][Iz + 1][2][0]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;
					}


					if (Iy < (Ny - 1)) {
						if (phaseStat[Ix][Iy + 1][Iz]) reCol2 = Nc;
						else reCol2 = 0;
						mBLNo = preConRow[Iz*(Nx*Ny) + (Iy + 1)*Nx + Ix] - reCol2;
						Jac1Row[JRowIndex] = PCoeff * (-Wtran[Ix + 1][Iy + 1][Iz + 1][1]);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;

						dsw = dWtran[Ix + 1][Iy + 1][Iz + 1][1] * (P[Ix + 1][Iy + 2][Iz + 1][0] - P[Ix + 1][Iy + 1][Iz + 1][0]) + G_ACC * watRo*dWtran[Ix + 1][Iy + 1][Iz + 1][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (transS[Ix + 1][Iy + 1][Iz + 1][2][1]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;
					}
					if (Iy > 0) {
						if (phaseStat[Ix][Iy - 1][Iz]) reCol2 = Nc;
						else reCol2 = 0;
						mBLNo = preConRow[Iz*(Nx*Ny) + (Iy - 1)*Nx + Ix] - reCol2;
						Jac1Row[JRowIndex] = PCoeff * (-Wtran[Ix + 1][Iy][Iz + 1][1]);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;

						dsw = -dWtran[Ix + 1][Iy][Iz + 1][1] * (P[Ix + 1][Iy + 1][Iz + 1][0] - P[Ix + 1][Iy][Iz + 1][0]) - G_ACC * watRo*dWtran[Ix + 1][Iy][Iz + 1][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						if (!transS[Ix + 1][Iy][Iz + 1][2][1]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;
					}


					if (Iz < (Nz - 1)) {
						if (phaseStat[Ix][Iy][Iz + 1]) reCol2 = Nc;
						else reCol2 = 0;
						mBLNo = preConRow[(Iz + 1)*(Nx*Ny) + Iy * Nx + Ix] - reCol2;
						Jac1Row[JRowIndex] = PCoeff * (-Wtran[Ix + 1][Iy + 1][Iz + 1][2]);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;

						dsw = dWtran[Ix + 1][Iy + 1][Iz + 1][2] * (P[Ix + 1][Iy + 1][Iz + 2][0] - P[Ix + 1][Iy + 1][Iz + 1][0]) + G_ACC * watRo*dWtran[Ix + 1][Iy + 1][Iz + 1][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (transS[Ix + 1][Iy + 1][Iz + 1][2][2]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;
					}
					if (Iz > 0) {
						if (phaseStat[Ix][Iy][Iz - 1]) reCol2 = Nc;
						else reCol2 = 0;
						mBLNo = preConRow[(Iz - 1)*(Nx*Ny) + Iy * Nx + Ix] - reCol2;
						Jac1Row[JRowIndex] = PCoeff * (-Wtran[Ix + 1][Iy + 1][Iz][2]);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;

						dsw = -dWtran[Ix + 1][Iy + 1][Iz][2] * (P[Ix + 1][Iy + 1][Iz + 1][0] - P[Ix + 1][Iy + 1][Iz][0]) - G_ACC * watRo*dWtran[Ix + 1][Iy + 1][Iz][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						if (!transS[Ix + 1][Iy + 1][Iz][2][2]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;
					}

					Jac1Row[JRowIndex] = dLsidedSw - dRsidedSw;
					Jac1Col[JRowIndex] = jacCol + (2 * Nc + 1) - reCol;
					JRowIndex++;

					/////////////////////////////////////////////////Sadeq///////////////////////////////////
					//dRsidefdp = 0;
					Jac1Row[JRowIndex] = PCoeff * dRsidefdp;
					Jac1Col[JRowIndex] = FracEq + 2 * Nc - reColF1;
					JRowIndex++;
					//dRsidefdSw = 0;
					Jac1Row[JRowIndex] = dRsidefdSw;
					Jac1Col[JRowIndex] = FracEq + 2 * Nc + 1 - reColF1;
					JRowIndex++;
					////////////////////////sadeq/////////////////////////



				}
				//MatSetValues(Petsc_B, 1, &RowNO, JRowIndex, Jac1Col, Jac1Row, INSERT_VALUES);
			}
			else if (BENo < (2 * Nc + 2)) {
				Sxl = 0;				

				for (i = 0; i < Nc; i++) {
					Sxl += comp[Ix][Iy][Iz][i][0];

					Jac1Row[JRowIndex] = 1;
					Jac1Col[JRowIndex] = jacCol + i;
					JRowIndex++;
				}
				//MatSetValues(Petsc_B, 1, &RowNO, JRowIndex, Jac1Col, Jac1Row, INSERT_VALUES);
			}
			else if (BENo < (2 * Nc + 3)) {
				Sxg = 0;

				for (i = 0; i < Nc; i++) {
					Sxg += comp[Ix][Iy][Iz][i][1];

					Jac1Row[JRowIndex] = 1;
					Jac1Col[JRowIndex] = jacCol + Nc + i - reCol;
					JRowIndex++;
				}
				//MatSetValues(Petsc_B, 1, &RowNO, JRowIndex, Jac1Col, Jac1Row, INSERT_VALUES);
			}
			else if (BENo < (2 * Nc + 4)) {
				Jac1Row[JRowIndex] = 1;
				Jac1Col[JRowIndex] = jacCol + 2 * Nc + 1 - reCol;
				JRowIndex++;

				Jac1Row[JRowIndex] = 1;
				Jac1Col[JRowIndex] = jacCol + 2 * Nc + 2 - reCol;
				JRowIndex++;

				Jac1Row[JRowIndex] = 1;
				Jac1Col[JRowIndex] = jacCol + 2 * Nc + 3 - reCol - reCol3;
				JRowIndex++;
				//MatSetValues(Petsc_B, 1, &RowNO, JRowIndex, Jac1Col, Jac1Row, INSERT_VALUES);

			}
			else {
				std::cout << Ix << '\t' << Iy << '\t' << Iz << '\t' << BENo << "\tMatrix phase stat: " << phaseStat[Ix][Iy][Iz] << std::endl;

				TerM("Global Index Error!");
			}

			break;

		case 1:
			reCol = Nc;
			reCol3 = 0;

			if (BENo < (Nc + 1)) {



#pragma region sadeq				
				fporpor = fporosity[Ix][Iy][Iz] * (1 + cpor * (fP[Ix + 1][Iy + 1][Iz + 1][1] - refP) + dcpor * (fP[Ix + 1][Iy + 1][Iz + 1][1] - refP)*(fP[Ix + 1][Iy + 1][Iz + 1][1] - refP));
				fdPordp = fporosity[Ix][Iy][Iz] * (cpor + 2 * dcpor*(fP[Ix + 1][Iy + 1][Iz + 1][1] - refP));


				if (P[Ix + 1][Iy + 1][Iz + 1][1] >= fP[Ix + 1][Iy + 1][Iz + 1][1])
				{
					f_m_relperm[1] = relPerm[Ix][Iy][Iz][1];//oil relperm between matrix and fracture
					f_m_drelperm[1][1] = dRelPerm[Ix][Iy][Iz][1];//dkrodsw
					f_m_drelperm[1][2] = dRelPerm[Ix][Iy][Iz][2];//dkrodsg
					f_m_drelperm[1][4] = dRelPerm[Ix][Iy][Iz][4];//dkrodso

					f_m_drelperm[1][9] = 0;
					f_m_drelperm[1][7] = 0;
					f_m_drelperm[1][6] = 0;
				}
				else
				{
					f_m_relperm[1] = frelPerm[Ix][Iy][Iz][1];
					f_m_drelperm[1][6] = fdRelPerm[Ix][Iy][Iz][1];//fdkrofdsw
					f_m_drelperm[1][7] = fdRelPerm[Ix][Iy][Iz][2];//fdkrofdsg
					f_m_drelperm[1][9] = fdRelPerm[Ix][Iy][Iz][4];//fdkrofdso

					f_m_drelperm[1][4] = 0;
					f_m_drelperm[1][2] = 0;
					f_m_drelperm[1][1] = 0;
				}
				if (P[Ix + 1][Iy + 1][Iz + 1][2] >= fP[Ix + 1][Iy + 1][Iz + 1][2])
				{
					f_m_relperm[2] = relPerm[Ix][Iy][Iz][2];//gas relperm between matrix and fracture
					f_m_drelperm[2][3] = dRelPerm[Ix][Iy][Iz][3];//dkrgdsg

					f_m_drelperm[2][8] = 0;
				}
				else
				{
					f_m_relperm[2] = frelPerm[Ix][Iy][Iz][2];
					f_m_drelperm[2][8] = fdRelPerm[Ix][Iy][Iz][3];//fdkrgfdsg

					f_m_drelperm[2][3] = 0;
				}

				if (P[Ix + 1][Iy + 1][Iz + 1][0] >= fP[Ix + 1][Iy + 1][Iz + 1][0])
				{
					f_m_relperm[0] = relPerm[Ix][Iy][Iz][0];
					f_m_drelperm[1][0] = dRelPerm[Ix][Iy][Iz][0];//dkrwdsw

					f_m_drelperm[1][5] = 0;
				}
				else
				{
					f_m_relperm[0] = frelPerm[Ix][Iy][Iz][0];//water relperm between matrix and fracture
					f_m_drelperm[1][5] = fdRelPerm[Ix][Iy][Iz][0];//fdkrwfdsw

					f_m_drelperm[1][0] = 0;
				}
#pragma endregion

#pragma region Wells&Commons
				porpor = porosity[Ix][Iy][Iz] * (1 + cpor * (P[Ix + 1][Iy + 1][Iz + 1][1] - refP) + dcpor * (P[Ix + 1][Iy + 1][Iz + 1][1] - refP)*(P[Ix + 1][Iy + 1][Iz + 1][1] - refP));
				dPordp = porosity[Ix][Iy][Iz] * (cpor + 2 * dcpor*(P[Ix + 1][Iy + 1][Iz + 1][1] - refP));




				Qw = 0;
				Qo = 0;
				Qg = 0;

				PIw = 0;
				PIo = 0;
				PIg = 0;

				Vb = gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz];

				iWell = -1;
				for (i = 0; i < wellNO; i++) {
					if ((Ix == welli[i][1]) && (Iy == welli[i][2]) && (Iz >= welli[i][3]) && (Iz <= welli[i][4])) {
						Re = Calc_Re(Ix, Iy, Iz, i);
						if ((welli[i][0] == 0) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {		//Constant Pwf Pressure - Production
																																																			//Re = 0.14*sqrt(sqrt(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0])*gridDim[Ix] * gridDim[Ix] + sqrt(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1])*gridDim[Nx + Iy] * gridDim[Nx + Iy]);
																																																			//Re /= 0.5*(pow(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0], 0.25) + pow(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1], 0.25));
							if (Re <= wellf[i][3])
								Re += wellf[i][3];

							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][1] * perm[Ix][Iy][Iz][0]) / (log(Re / wellf[i][3]) + wellf[i][2]);

							PIw = S1 * watRo*WAT_M_RO*relPerm[Ix][Iy][Iz][0] / watMu;
							PIo = S1 * blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / blockFProps[Ix][Iy][Iz][BMU][0];
							PIg = S1 * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / blockFProps[Ix][Iy][Iz][BMU][1];

							Qw = PIw * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][0]);
							Qo = PIo * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][1]);
							Qg = PIg * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][2]);

							
							/*if ((wellf[i][1]) && ((-Qo) > wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								//std::cout << "HIT!\n";
								SSo1 = 0;
								for (j = welli[i][3]; j <= welli[i][4]; j++) {
									S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
									SSo1 += blockFProps[Ix][Iy][j][RO][0] * S2*relPerm[Ix][Iy][j][1] / blockFProps[Ix][Iy][Iz][BMU][0];
									S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
									SSo1 += fblockFProps[Ix][Iy][j][RO][0] * S2*frelPerm[Ix][Iy][j][1] / fblockFProps[Ix][Iy][Iz][BMU][0];
								}
								S1 = gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][0] * perm[Ix][Iy][Iz][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);

								if (SSo1) {
									if (SURFACE_RATES) Qo = -S1 * oilRateCh(Ix, Iy, Iz, relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * blockFProps[Ix][Iy][Iz][BMU][0] / (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * blockFProps[Ix][Iy][Iz][BMU][1]))*wellf[i][1] * blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / (blockFProps[Ix][Iy][Iz][BMU][0] * SSo1);
									else Qo = -S1 * wellf[i][1] * blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / (blockFProps[Ix][Iy][Iz][BMU][0] * SSo1);
								}
								Qw = Qo * relPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*blockFProps[Ix][Iy][Iz][BMU][0] / (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * watMu);
								Qg = Qo * relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * blockFProps[Ix][Iy][Iz][BMU][0] / (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * blockFProps[Ix][Iy][Iz][BMU][1]);

							}*/

							if (P[Ix + 1][Iy + 1][Iz + 1][1] < WELL_MIN_P) {
								Qw = 0;
								Qo = 0;
								Qg = 0;

								PIw = 0;
								PIo = 0;
								PIg = 0;
							}
							else if ((wellf[i][1]) && ((-Qo) > wellf[i][1])) {
								Qo = -wellf[i][1];
								Qw = Qo * relPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*blockFProps[Ix][Iy][Iz][BMU][0] / (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * watMu);
								Qg = Qo * relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * blockFProps[Ix][Iy][Iz][BMU][0] / (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * blockFProps[Ix][Iy][Iz][BMU][1]);
								PIw = 0;
								PIo = 0;
								PIg = 0;
							}
							if ((Qw > 0) || ((Qw - Qw) != 0)) {
								Qw = 0;
								PIw = 0;
							}
							if ((Qo > 0) || ((Qo - Qo) != 0)) {
								Qo = 0;
								PIo = 0;
							}
							if ((Qg > 0) || ((Qg - Qg) != 0)) {
								Qg = 0;
								PIg = 0;
							}

							QoProduced = Qo;
							Qoprod += Qo + Qg;
							//MethQM += Qo * (1 - comp[Ix][Iy][Iz][0][0]) + Qg * (1 - comp[Ix][Iy][Iz][0][1]);
							//Qoprod = Qo*(1 - comp[Ix][Iy][Iz][0][0])+ Qg*(1 - comp[Ix][Iy][Iz][0][1]);
							WellCompSadeq[0] += Qo * (comp[Ix][Iy][Iz][0][0]) + Qg * (comp[Ix][Iy][Iz][0][1]);
							WellCompSadeq[1] += Qo * (comp[Ix][Iy][Iz][1][0]) + Qg * (comp[Ix][Iy][Iz][1][1]);
							WellCompSadeq[2] += Qo * (comp[Ix][Iy][Iz][2][0]) + Qg * (comp[Ix][Iy][Iz][2][1]);
							WellCompSadeq2[0] += (Qo*(comp[Ix][Iy][Iz][0][0]) + Qg * (comp[Ix][Iy][Iz][0][1]));
							WellCompSadeq2[1] += (Qo*(comp[Ix][Iy][Iz][1][0]) + Qg * (comp[Ix][Iy][Iz][1][1]));
							WellCompSadeq2[2] += (Qo*(comp[Ix][Iy][Iz][2][0]) + Qg * (comp[Ix][Iy][Iz][2][1]));
						}

						else if ((welli[i][0] == 1) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {			//Constant Pwf- Gas Production
																																																						//Re = 0.14*sqrt(sqrt(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0])*gridDim[Ix] * gridDim[Ix] + sqrt(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1])*gridDim[Nx + Iy] * gridDim[Nx + Iy]);
																																																						//Re /= 0.5*(pow(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0], 0.25) + pow(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1], 0.25));
																																																						//Re = Calc_Re(Ix, Iy, Iz, i);
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][1] * perm[Ix][Iy][Iz][0]) / (log(Re / wellf[i][3]) + wellf[i][2]);

							PIw = S1 * watRo*WAT_M_RO*relPerm[Ix][Iy][Iz][0] / watMu;
							PIo = S1 * blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / blockFProps[Ix][Iy][Iz][BMU][0];
							PIg = S1 * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / blockFProps[Ix][Iy][Iz][BMU][1];

							Qw = PIw * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][0]);
							Qo = PIo * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][1]);
							Qg = PIg * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][2]);

							if ((Qw > 0) || ((Qw - Qw) != 0)) {
								Qw = 0;
								PIw = 0;
							}
							if ((Qo > 0) || ((Qo - Qo) != 0)) {
								Qo = 0;
								PIo = 0;
							}
							if ((Qg > 0) || ((Qg - Qg) != 0)) {
								Qg = 0;
								PIg = 0;
							}

							if ((wellf[i][1]) && ((-Qg) > wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								SSo1 = 0;
								for (j = welli[i][3]; j <= welli[i][4]; j++) {
									S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
									SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][Iz][BMU][1];
									S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
									SSo1 += fblockFProps[Ix][Iy][j][RO][1] * S2*frelPerm[Ix][Iy][j][2] / fblockFProps[Ix][Iy][Iz][BMU][1];
								}
								S1 = gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][0] * perm[Ix][Iy][Iz][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);

								if (SSo1) {
									if (SURFACE_RATES) Qg = -S1 * gasRateCh(Ix, Iy, Iz, (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * blockFProps[Ix][Iy][Iz][BMU][1]) / (relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * blockFProps[Ix][Iy][Iz][BMU][0]))*wellf[i][1] * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / (blockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
									else Qg = -S1 * wellf[i][1] * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / (blockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
								}
								Qw = Qg * relPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*blockFProps[Ix][Iy][Iz][BMU][1] / (relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * watMu);
								Qo = Qg * relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * blockFProps[Ix][Iy][Iz][BMU][1] / (relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * blockFProps[Ix][Iy][Iz][BMU][0]);

							}

							//QoProd=oilRateCh2(Ix, Iy, Iz, -Qo, -Qg);
							QoProduced = Qo;
						}

						else if ((welli[i][0] == 2) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {			//Constant Pwf Pressure - Water Injection
																																																						//Re = 0.14*sqrt(sqrt(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0])*gridDim[Ix] * gridDim[Ix] + sqrt(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1])*gridDim[Nx + Iy] * gridDim[Nx + Iy]);
																																																						//Re /= 0.5*(pow(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0], 0.25) + pow(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1], 0.25));
																																																						//Re = Calc_Re(Ix, Iy, Iz, i);
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][1] * perm[Ix][Iy][Iz][0]) / (log(Re / wellf[i][3]) + wellf[i][2]);

							PIw = S1 * watRo*WAT_M_RO*relPerm[Ix][Iy][Iz][0] / watMu;
							Qw = PIw * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][0]);


							if ((Qw < 0) || ((Qw - Qw) != 0)) {
								Qw = 0;
								PIw = 0;
							}

							if ((wellf[i][1]) && (Qw > wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								SSo1 = 0;
								for (j = welli[i][3]; j <= welli[i][4]; j++) {
									S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
									SSo1 += watRo * S2*relPerm[Ix][Iy][j][0] / watMu;
									S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
									SSo1 += watRo * S2*frelPerm[Ix][Iy][j][0] / watMu;
								}
								S1 = gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][0] * perm[Ix][Iy][Iz][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);

								if (SSo1) Qw = S1 * wellf[i][1] * watRo*WAT_M_RO * relPerm[Ix][Iy][Iz][0] / (watMu * SSo1);
							}
						}

						else if ((welli[i][0] == 3) && (((fabs(simTime - wellf[i][Nc + 4]) <= TSTEPIF) || (fabs(simTime - wellf[i][Nc + 5]) <= TSTEPIF)) || ((simTime >= wellf[i][Nc + 4]) && (simTime <= wellf[i][Nc + 5])))) {			//Constant Pwf Pressure - Gas Injection
																																																											//Re = 0.14*sqrt(sqrt(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0])*gridDim[Ix] * gridDim[Ix] + sqrt(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1])*gridDim[Nx + Iy] * gridDim[Nx + Iy]);
																																																											//Re /= 0.5*(pow(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0], 0.25) + pow(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1], 0.25));
							for (j = 0; j < Nc; j++) IComp[j] = wellf[i][4 + j];
							FlashInjection(IComp, wellf[i][0], IOComp, IGComp, iOF, iGF, iOD, iGD, iOV, iGV);
							//Re = Calc_Re(Ix, Iy, Iz, i);
							if (Re <= wellf[i][3])
								Re += wellf[i][3];

							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][1] * perm[Ix][Iy][Iz][0]) / (log(Re / wellf[i][3]) + wellf[i][2]);
							//S2 = sgt[Nsgt-1][1] / iGV;
							//S2 = relPerm[Ix][Iy][Iz][2] / blockFProps[Ix][Iy][Iz][BMU][1];

							PIg = S1 * iGD * sgt[Nsgt - 1][1] * iGF / iGV;
							Qg = PIg * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][2]);
							//PIo = S1*iOD * swt[0][2]*iOF / iOV;
							PIo = PIg * iOF / iGF;
							Qo = PIo * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][2]);

							if ((Qo < 0) || ((Qo - Qo) != 0)) {
								Qo = 0;
								PIo = 0;
							}
							if ((Qg < 0) || ((Qg - Qg) != 0)) {
								Qg = 0;
								PIg = 0;
							}

							iWell = i;

							if ((wellf[i][1]) && (Qg > wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								SSo1 = 0;
								for (j = welli[i][3]; j <= welli[i][4]; j++) {
									S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
									//SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][Iz][BMU][1];
									SSo1 += S2;
									S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
									//SSo1 += fblockFProps[Ix][Iy][j][RO][1] * S2*frelPerm[Ix][Iy][j][2] / fblockFProps[Ix][Iy][Iz][BMU][1];
									SSo1 += S2;
								}
								S1 = gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][0] * perm[Ix][Iy][Iz][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);

								//if (SSo1) Qg = S1*wellf[i][1] * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / (blockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
								if (SSo1) Qg = S1 * wellf[i][1] / SSo1;
								if (SSo1) Qo = Qg * iOF / iGF;
							}
							Qginj = Qg + Qo;
						}

						else if ((welli[i][0] == 4) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {		//Constant Oil Rate
							SSo1 = 0;
							for (j = welli[i][3]; j <= welli[i][4]; j++) {
								S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
								SSo1 += blockFProps[Ix][Iy][j][RO][0] * S2*relPerm[Ix][Iy][j][1] / blockFProps[Ix][Iy][Iz][BMU][0];
								S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
								SSo1 += fblockFProps[Ix][Iy][j][RO][0] * S2*frelPerm[Ix][Iy][j][1] / fblockFProps[Ix][Iy][Iz][BMU][0];
							}
							S1 = gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][0] * perm[Ix][Iy][Iz][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);

							if (SSo1) {
								if (SURFACE_RATES) Qo = -S1 * oilRateCh(Ix, Iy, Iz, relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * blockFProps[Ix][Iy][Iz][BMU][0] / (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * blockFProps[Ix][Iy][Iz][BMU][1]))*wellf[i][0] * blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / (blockFProps[Ix][Iy][Iz][BMU][0] * SSo1);
								else Qo = -S1 * wellf[i][0] * blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / (blockFProps[Ix][Iy][Iz][BMU][0] * SSo1);
							}
							Qw = Qo * relPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*blockFProps[Ix][Iy][Iz][BMU][0] / (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * watMu);
							Qg = Qo * relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * blockFProps[Ix][Iy][Iz][BMU][0] / (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * blockFProps[Ix][Iy][Iz][BMU][1]);

							//Re = 0.14*sqrt(sqrt(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0])*gridDim[Ix] * gridDim[Ix] + sqrt(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1])*gridDim[Nx + Iy] * gridDim[Nx + Iy]);
							//Re /= 0.5*(pow(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0], 0.25) + pow(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1], 0.25));
							//Re = Calc_Re(Ix, Iy, Iz, i);
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][1] * perm[Ix][Iy][Iz][0]) / (log(Re / wellf[i][3]) + wellf[i][2]);
							Pwf = P[Ix + 1][Iy + 1][Iz + 1][1] - Qo / (S1*blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / blockFProps[Ix][Iy][Iz][BMU][0]);

							if ((wellf[i][1]) && (Pwf < wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								PIw = S1 * watRo*WAT_M_RO*relPerm[Ix][Iy][Iz][0] / watMu;
								PIo = S1 * blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / blockFProps[Ix][Iy][Iz][BMU][0];
								PIg = S1 * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / blockFProps[Ix][Iy][Iz][BMU][1];

								Qw = PIw * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][0]);
								Qo = PIo * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][1]);
								Qg = PIg * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][2]);

								if ((Qw > 0) || ((Qw - Qw) != 0)) {
									Qw = 0;
									PIw = 0;
								}
								if ((Qo > 0) || ((Qo - Qo) != 0)) {
									Qo = 0;
									PIo = 0;
								}
								if ((Qg > 0) || ((Qg - Qg) != 0)) {
									Qg = 0;
									PIg = 0;
								}
							}

							/*Qw = 0;
							Qo = 0;// 6.553168256220581e-07 / Nz;
							Qg = 0;
							
							PIw = 0;
							PIo = 0;
							PIg = 0;*/

							Qoprod = Qo + Qg;
							QoProduced = Qo;
						}

						else if ((welli[i][0] == 5) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {		//Constant Gas Rate
							SSo1 = 0;
							for (j = welli[i][3]; j <= welli[i][4]; j++) {
								S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
								SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][Iz][BMU][1];
								S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
								SSo1 += fblockFProps[Ix][Iy][j][RO][1] * S2*frelPerm[Ix][Iy][j][2] / fblockFProps[Ix][Iy][Iz][BMU][1];
							}
							S1 = gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][0] * perm[Ix][Iy][Iz][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);

							if (SSo1) {
								if (SURFACE_RATES) Qg = -S1 * gasRateCh(Ix, Iy, Iz, (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * blockFProps[Ix][Iy][Iz][BMU][1]) / (relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * blockFProps[Ix][Iy][Iz][BMU][0]))*wellf[i][1] * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / (blockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
								else Qg = -S1 * wellf[i][1] * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / (blockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
							}
							Qw = Qg * relPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*blockFProps[Ix][Iy][Iz][BMU][1] / (relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * watMu);
							Qo = Qg * relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * blockFProps[Ix][Iy][Iz][BMU][1] / (relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * blockFProps[Ix][Iy][Iz][BMU][0]);

							//Re = 0.14*sqrt(sqrt(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0])*gridDim[Ix] * gridDim[Ix] + sqrt(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1])*gridDim[Nx + Iy] * gridDim[Nx + Iy]);
							//Re /= 0.5*(pow(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0], 0.25) + pow(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1], 0.25));
							//Re = Calc_Re(Ix, Iy, Iz, i);
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][1] * perm[Ix][Iy][Iz][0]) / (log(Re / wellf[i][3]) + wellf[i][2]);
							Pwf = P[Ix + 1][Iy + 1][Iz + 1][2] - Qg / (S1*blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / blockFProps[Ix][Iy][Iz][BMU][1]);

							if ((wellf[i][1]) && (Pwf < wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								PIw = S1 * watRo*WAT_M_RO*relPerm[Ix][Iy][Iz][0] / watMu;
								PIo = S1 * blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / blockFProps[Ix][Iy][Iz][BMU][0];
								PIg = S1 * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / blockFProps[Ix][Iy][Iz][BMU][1];

								Qw = PIw * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][0]);
								Qo = PIo * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][1]);
								Qg = PIg * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][2]);

								if ((Qw > 0) || ((Qw - Qw) != 0)) {
									Qw = 0;
									PIw = 0;
								}
								if ((Qo > 0) || ((Qo - Qo) != 0)) {
									Qo = 0;
									PIo = 0;
								}
								if ((Qg > 0) || ((Qg - Qg) != 0)) {
									Qg = 0;
									PIg = 0;
								}
							}
						}

						else if ((welli[i][0] == 6) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {		//Constant Total Production Rate
							SSw = 0;
							SSo = 0;
							SSg = 0;
							SSo1 = 0;
							for (j = welli[i][3]; j <= welli[i][4]; j++) {
								S1 = ((relPerm[Ix][Iy][j][0] / watMu) + (relPerm[Ix][Iy][j][1] / blockFProps[Ix][Iy][j][BMU][0]) + (relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][j][BMU][1]));
								SSw += (relPerm[Ix][Iy][j][0] / watMu) / S1;
								SSo += (relPerm[Ix][Iy][j][1] / blockFProps[Ix][Iy][j][BMU][0]) / S1;
								SSg += (relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][j][BMU][1]) / S1;

								S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
								SSo1 += blockFProps[Ix][Iy][j][RO][0] * S2*relPerm[Ix][Iy][j][1] / blockFProps[Ix][Iy][Iz][BMU][0];

								S1 = ((frelPerm[Ix][Iy][j][0] / watMu) + (frelPerm[Ix][Iy][j][1] / fblockFProps[Ix][Iy][j][BMU][0]) + (frelPerm[Ix][Iy][j][2] / fblockFProps[Ix][Iy][j][BMU][1]));
								SSw += (frelPerm[Ix][Iy][j][0] / watMu) / S1;
								SSo += (frelPerm[Ix][Iy][j][1] / fblockFProps[Ix][Iy][j][BMU][0]) / S1;
								SSg += (frelPerm[Ix][Iy][j][2] / fblockFProps[Ix][Iy][j][BMU][1]) / S1;

								S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
								SSo1 += fblockFProps[Ix][Iy][j][RO][0] * S2*frelPerm[Ix][Iy][j][1] / fblockFProps[Ix][Iy][Iz][BMU][0];

							}
							QoP = SSo * wellf[i][0] / (SSw + SSo + SSg);

							S1 = gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][0] * perm[Ix][Iy][Iz][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
							if (SSo1) Qo = -S1 * QoP*blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / (blockFProps[Ix][Iy][Iz][BMU][0] * SSo1);
							Qw = Qo * relPerm[Ix][Iy][Iz][0] * watRo*WAT_M_RO*blockFProps[Ix][Iy][Iz][BMU][0] / (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * watMu);
							Qg = Qo * relPerm[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * blockFProps[Ix][Iy][Iz][BMU][0] / (relPerm[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * blockFProps[Ix][Iy][Iz][BMU][1]);


							//Re = 0.14*sqrt(sqrt(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0])*gridDim[Ix] * gridDim[Ix] + sqrt(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1])*gridDim[Nx + Iy] * gridDim[Nx + Iy]);
							//Re /= 0.5*(pow(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0], 0.25) + pow(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1], 0.25));
							//Re = Calc_Re(Ix, Iy, Iz, i);
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][1] * perm[Ix][Iy][Iz][0]) / (log(Re / wellf[i][3]) + wellf[i][2]);
							Pwf = P[Ix + 1][Iy + 1][Iz + 1][1] - (Qw + Qo + Qg) / (S1*(watRo*WAT_M_RO*relPerm[Ix][Iy][Iz][0] / watMu + blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / blockFProps[Ix][Iy][Iz][BMU][0] + blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / blockFProps[Ix][Iy][Iz][BMU][1]));

							if ((wellf[i][1]) && (Pwf < wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								PIw = S1 * watRo*WAT_M_RO*relPerm[Ix][Iy][Iz][0] / watMu;
								PIo = S1 * blockFProps[Ix][Iy][Iz][RO][0] * relPerm[Ix][Iy][Iz][1] / blockFProps[Ix][Iy][Iz][BMU][0];
								PIg = S1 * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / blockFProps[Ix][Iy][Iz][BMU][1];

								Qw = PIw * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][0]);
								Qo = PIo * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][1]);
								Qg = PIg * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][2]);

								if ((Qw > 0) || ((Qw - Qw) != 0)) {
									Qw = 0;
									PIw = 0;
								}
								if ((Qo > 0) || ((Qo - Qo) != 0)) {
									Qo = 0;
									PIo = 0;
								}
								if ((Qg > 0) || ((Qg - Qg) != 0)) {
									Qg = 0;
									PIg = 0;
								}
							}
						}

						else if ((welli[i][0] == 7) && (((fabs(simTime - wellf[i][4]) <= TSTEPIF) || (fabs(simTime - wellf[i][5]) <= TSTEPIF)) || ((simTime >= wellf[i][4]) && (simTime <= wellf[i][5])))) {			//Constant Water Injection Rate
							SSw = 0;
							for (j = welli[i][3]; j <= welli[i][4]; j++) {
								S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
								SSo1 += S2 * relPerm[Ix][Iy][j][0];
								S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
								SSo1 += S2 * frelPerm[Ix][Iy][j][0];
							}
							S1 = gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][0] * perm[Ix][Iy][Iz][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
							if (SSw) Qw = S1 * wellf[i][0] * relPerm[Ix][Iy][Iz][1] / SSw;

							//Re = 0.14*sqrt(sqrt(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0])*gridDim[Ix] * gridDim[Ix] + sqrt(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1])*gridDim[Nx + Iy] * gridDim[Nx + Iy]);
							//Re /= 0.5*(pow(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0], 0.25) + pow(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1], 0.25));
							//Re = Calc_Re(Ix, Iy, Iz, i);
							S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][1] * perm[Ix][Iy][Iz][0]) / (log(Re / wellf[i][3]) + wellf[i][2]);
							Pwf = P[Ix + 1][Iy + 1][Iz + 1][0] - Qw / (S1*watRo*WAT_M_RO * relPerm[Ix][Iy][Iz][1] / watMu);

							if ((wellf[i][1]) && (Pwf > wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								PIw = S1 * watRo*WAT_M_RO*relPerm[Ix][Iy][Iz][0] / watMu;
								Qw = PIw * (wellf[i][0] - P[Ix + 1][Iy + 1][Iz + 1][0]);

								if ((Qw < 0) || ((Qw - Qw) != 0)) {
									Qw = 0;
									PIw = 0;
								}
							}
						}

						else if ((welli[i][0] == 8) && (((fabs(simTime - wellf[i][Nc + 4]) <= TSTEPIF) || (fabs(simTime - wellf[i][Nc + 5]) <= TSTEPIF)) || ((simTime >= wellf[i][Nc + 4]) && (simTime <= wellf[i][Nc + 5])))) {			//Constant Gas Injection Rate
							for (j = 0; j < Nc; j++) IComp[j] = wellf[i][4 + j];
							FlashInjection(IComp, wellf[i][1], IOComp, IGComp, iOF, iGF, iOD, iGD, iOV, iGV);
							//S1 = 2 * SI_C*PI*gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][1] * perm[Ix][Iy][Iz][0]) / (log(Re / wellf[i][3]) + wellf[i][2]);
							if (Re <= wellf[i][3])
								Re += wellf[i][3];

							SSo1 = 0;
							for (j = welli[i][3]; j <= welli[i][4]; j++) {
								S2 = gridDim[Nx + Ny + j] * sqrt(perm[Ix][Iy][j][0] * perm[Ix][Iy][j][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);
								//SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*relPerm[Ix][Iy][j][2] / blockFProps[Ix][Iy][Iz][BMU][1];
								//SSo1 += blockFProps[Ix][Iy][j][RO][1] * S2*sgt[Nsgt-1][1] / blockFProps[Ix][Iy][Iz][BMU][1];
								SSo1 += S2;
								S2 = gridDim[Nx + Ny + j] * sqrt(fperm[Ix][Iy][j][0] * fperm[Ix][Iy][j][1]) / (log((wellf[i][3] + Re_f) / wellf[i][3]) + wellf[i][2]);
								//SSo1 += fblockFProps[Ix][Iy][j][RO][1] * S2*frelPerm[Ix][Iy][j][2] / fblockFProps[Ix][Iy][Iz][BMU][1];
								//SSo1 += fblockFProps[Ix][Iy][j][RO][1] * S2*sgt[Nsgt-1][1] / fblockFProps[Ix][Iy][Iz][BMU][1];
								SSo1 += S2;
							}
							S1 = gridDim[Nx + Ny + Iz] * sqrt(perm[Ix][Iy][Iz][0] * perm[Ix][Iy][Iz][1]) / (log(Re / wellf[i][3]) + wellf[i][2]);

							//if (SSo1) Qg = S1*wellf[i][0] * blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / (blockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
							//if (SSo1) Qg = S1*wellf[i][0] * blockFProps[Ix][Iy][Iz][RO][1] * sgt[Nsgt - 1][1] / (blockFProps[Ix][Iy][Iz][BMU][1] * SSo1);
							if (SSo1) Qg = S1 * wellf[i][0] / SSo1;
							if (SSo1) Qo = Qg * iOF / iGF;
							//Re = 0.14*sqrt(sqrt(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0])*gridDim[Ix] * gridDim[Ix] + sqrt(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1])*gridDim[Nx + Iy] * gridDim[Nx + Iy]);
							//Re /= 0.5*(pow(perm[Ix][Iy][Iz][1] / perm[Ix][Iy][Iz][0], 0.25) + pow(perm[Ix][Iy][Iz][0] / perm[Ix][Iy][Iz][1], 0.25));



							//Re = Calc_Re(Ix, Iy, Iz, i);

							//Pwf = P[Ix + 1][Iy + 1][Iz + 1][2] - Qg / (S1*blockFProps[Ix][Iy][Iz][RO][1] * relPerm[Ix][Iy][Iz][2] / blockFProps[Ix][Iy][Iz][BMU][1]);
							//Pwf = P[Ix + 1][Iy + 1][Iz + 1][2] - Qg / (S1*blockFProps[Ix][Iy][Iz][RO][1] * sgt[Nsgt - 1][1] / blockFProps[Ix][Iy][Iz][BMU][1]);
							Pwf = P[Ix + 1][Iy + 1][Iz + 1][2] - Qg / (S1*iGD * sgt[Nsgt - 1][1] / iGV);

							if ((wellf[i][1]) && (Pwf > wellf[i][1])) {
								TempWellCondition[i] = true;
							}
							else TempWellCondition[i] = false;
							if (WellCondition[i]) {
								PIg = S1 * iGD * sgt[Nsgt - 1][1] * iGF / iGV;
								Qg = PIg * (wellf[i][1] - P[Ix + 1][Iy + 1][Iz + 1][2]);
								//PIo = S1*iOD * swt[0][2]*iOF / iOV;
								PIo = PIg * iOF / iGF;
								Qo = PIo * (wellf[i][1] - P[Ix + 1][Iy + 1][Iz + 1][2]);

								if ((Qo < 0) || ((Qo - Qo) != 0)) {
									Qo = 0;
									PIo = 0;
								}
								if ((Qg < 0) || ((Qg - Qg) != 0)) {
									Qg = 0;
									PIg = 0;
								}
							}

							if (P[Ix + 1][Iy + 1][Iz + 1][1] > WELL_MAX_P) {
								Qw = 0;
								Qo = 0;
								Qg = 0;
								IOComp[0] = 0;
								IOComp[1] = 0;
								IGComp[0] = 0;
								IGComp[1] = 0;
								PIw = 0;
								PIo = 0;
								PIg = 0;
							}

							QgInjected = Qg;


							QgInj = Qg;

							iWell = i;
							gasInjStat = -1;

							Qginj += Qg + Qo;
						}


					}
					QwT += Qw;
					QoT += Qo;
					QgT += Qg;
				}




#pragma endregion

				if (BENo < (Nc - 1)) {

					i = BENo;

					LSide = (Vb / Dt)*(porpor*(comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * sat[Ix][Iy][Iz][1] + comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * sat[Ix][Iy][Iz][2]) - preProp[Ix][Iy][Iz][i]);
					RSide = comp[(Ix + transS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][0][0] * (P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) - comp[(Ix - 1 + transS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix][Iy + 1][Iz + 1][0][0] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);
					RSide += comp[Ix][(Iy + transS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][0][1] * (P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) - comp[Ix][(Iy - 1 + transS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy][Iz + 1][0][1] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);
					RSide += comp[Ix][Iy][(Iz + transS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][0][2] * (P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) - comp[Ix][Iy][(Iz - 1 + transS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz][0][2] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);
					RSide += comp[(Ix + transS[Ix + 1][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][1][0] * (P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) - comp[(Ix - 1 + transS[Ix][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * trans[Ix][Iy + 1][Iz + 1][1][0] * (P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);
					RSide += comp[Ix][(Iy + transS[Ix + 1][Iy + 1][Iz + 1][1][1])][Iz][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][1][1] * (P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) - comp[Ix][(Iy - 1 + transS[Ix + 1][Iy][Iz + 1][1][1])][Iz][i][1] * trans[Ix + 1][Iy][Iz + 1][1][1] * (P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);
					RSide += comp[Ix][Iy][(Iz + transS[Ix + 1][Iy + 1][Iz + 1][1][2])][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][1][2] * (P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) - comp[Ix][Iy][(Iz - 1 + transS[Ix + 1][Iy + 1][Iz][1][2])][i][1] * trans[Ix + 1][Iy + 1][Iz][1][2] * (P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);

					RSide += comp[(Ix + transS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][2][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - comp[(Ix - 1 + transS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix][Iy + 1][Iz + 1][2][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
					RSide += comp[Ix][(Iy + transS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][2][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - comp[Ix][(Iy - 1 + transS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy][Iz + 1][2][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
					RSide += comp[Ix][Iy][(Iz + transS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][2][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]) - comp[Ix][Iy][(Iz - 1 + transS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz][2][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
					RSide += comp[(Ix + transS[Ix + 1][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][3][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - comp[(Ix - 1 + transS[Ix][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * trans[Ix][Iy + 1][Iz + 1][3][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
					RSide += comp[Ix][(Iy + transS[Ix + 1][Iy + 1][Iz + 1][1][1])][Iz][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][3][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - comp[Ix][(Iy - 1 + transS[Ix + 1][Iy][Iz + 1][1][1])][Iz][i][1] * trans[Ix + 1][Iy][Iz + 1][3][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
					RSide += comp[Ix][Iy][(Iz + transS[Ix + 1][Iy + 1][Iz + 1][1][2])][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][3][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]) - comp[Ix][Iy][(Iz - 1 + transS[Ix + 1][Iy + 1][Iz][1][2])][i][1] * trans[Ix + 1][Iy + 1][Iz][3][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);

					////////////////////////////Transfer Function 

					//	if (comp[Ix][Iy][Iz][i][0] > fcomp[Ix][Iy][Iz][i][0]) f_m_diffusion[0] = diffusion[Ix][Iy][Iz][i][0];
					//else f_m_diffusion[0] = fdiffusion[Ix][Iy][Iz][i][0];

					//		if (comp[Ix][Iy][Iz][i][1] > fcomp[Ix][Iy][Iz][i][1]) f_m_diffusion[1] = diffusion[Ix][Iy][Iz][i][1];
					//	else f_m_diffusion[1] = fdiffusion[Ix][Iy][Iz][i][1];

					// Rside Tran func
					RSide += ZERO_CONV * SI_C *comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
					RSide += ZERO_CONV * SI_C *comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor) / (porpor + fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (1))//only Liq in Fracture & Matrix
						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (-1))//only Gas in Fracture & Matrix
						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0)) {
						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);

						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

					}

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);

						//RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * fporpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
					}

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (1)) {
						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);

						//RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * fporpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
					}

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1)) {
						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);

						//RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * fporpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);

						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
					}

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1)) {
						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);

						//RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * fporpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
					}

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0)) {
						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);

						//RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * fporpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][2] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);

						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][1] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
					}

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0)) {
						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

						RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * sat[Ix][Iy][Iz][2] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);

						//RSide += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * fporpor / tor[Ix][Iy][Iz] * fsat[Ix][Iy][Iz][1] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
					}
					//

					/////////////////////////////////////////

					if (iWell == (-1)) {
						gComp = comp[Ix][Iy][Iz][i][1];
						oComp = comp[Ix][Iy][Iz][i][0];
					}
					else {
						if (welli[iWell][0] == 3) {
							gComp = IGComp[i];
							oComp = IOComp[i];
						}
						else if (welli[iWell][0] == 8) {
							//gComp = wellf[iWell][i + 4];
							gComp = IGComp[i];
							oComp = IOComp[i];
						}
					}

					RSide += oComp * Qo + gComp * Qg;

					dLsidedp = (Vb / Dt)*(comp[Ix][Iy][Iz][i][0] * sat[Ix][Iy][Iz][1] * (blockFProps[Ix][Iy][Iz][RO][0] * dPordp + dE[Ix][Iy][Iz][Nc][0] * porpor) + comp[Ix][Iy][Iz][i][1] * sat[Ix][Iy][Iz][2] * (blockFProps[Ix][Iy][Iz][RO][1] * dPordp + dE[Ix][Iy][Iz][Nc][1] * porpor));
					dLsidedSo = (Vb / Dt)*(comp[Ix][Iy][Iz][i][0] * porpor*blockFProps[Ix][Iy][Iz][RO][0]);
					dLsidedSg = (Vb / Dt)*(comp[Ix][Iy][Iz][i][1] * porpor*blockFProps[Ix][Iy][Iz][RO][1]);

					dRsidefdp = 0;
					dRsidedp = 0;
					// transfer function dRsidedp + drsidefdp
					//moshtagh transfer Function jabejaie naft nesbat be feshar matrix
					dRsidedp += ZERO_CONV * SI_C * dE[Ix][Iy][Iz][Nc][0] * comp[Ix][Iy][Iz][i][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
					dRsidedp += ZERO_CONV * -SI_C * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor));
					dRsidedp += ZERO_CONV * -SI_C * (DiffVisco(Ix, Iy, Iz, Nc, 0) * porpor + dPordp * blockFProps[Ix][Iy][Iz][BMU][0]) * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor)*(blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) * (porpor + fporpor);
					dRsidedp += ZERO_CONV * SI_C * dPordp * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / (blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					//moshtagh transfer Function jabejaie gaz nesbat be feshar matrix
					dRsidedp += ZERO_CONV * SI_C * dE[Ix][Iy][Iz][Nc][1] * comp[Ix][Iy][Iz][i][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor) / (porpor + fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));
					dRsidedp += ZERO_CONV * -SI_C * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor) / (porpor + fporpor));
					dRsidedp += ZERO_CONV * -SI_C * (DiffVisco(Ix, Iy, Iz, Nc, 1) * porpor + dPordp * blockFProps[Ix][Iy][Iz][BMU][1]) * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor)*(blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1])) * (porpor + fporpor);
					dRsidedp += ZERO_CONV * SI_C * dPordp * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / (blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (1)) { // //moshtagh transfer Function nofuze oil-oil nesbat be feshar matrix 
						dRsidedp += ZERO_DIFF * dPordp * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
						dRsidedp += ZERO_DIFF * dE[Ix][Iy][Iz][Nc][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
						dRsidedp += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
					}

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (-1)) { // //moshtagh transfer Function nofuze gas-gas nesbat be feshar matrix 
						dRsidedp += ZERO_DIFF * dPordp * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
						dRsidedp += ZERO_DIFF * dE[Ix][Iy][Iz][Nc][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
						dRsidedp += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
					}

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0)) {
						dRsidedp += ZERO_DIFF * dPordp * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
						dRsidedp += ZERO_DIFF * dE[Ix][Iy][Iz][Nc][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
						dRsidedp += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);

						dRsidedp += ZERO_DIFF * dPordp * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
						dRsidedp += ZERO_DIFF * dE[Ix][Iy][Iz][Nc][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
						dRsidedp += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
					}

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
						dRsidedp += ZERO_DIFF * dPordp * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
						dRsidedp += ZERO_DIFF * dE[Ix][Iy][Iz][Nc][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
						dRsidedp += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
					}

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (1)) {
						dRsidedp += ZERO_DIFF * dPordp * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
						dRsidedp += ZERO_DIFF * dE[Ix][Iy][Iz][Nc][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
						dRsidedp += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
					}

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1)) {
						dRsidedp += ZERO_DIFF * dPordp * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
						dRsidedp += ZERO_DIFF * dE[Ix][Iy][Iz][Nc][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
						dRsidedp += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);

						dRsidedp += ZERO_DIFF * dPordp * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
						dRsidedp += ZERO_DIFF * dE[Ix][Iy][Iz][Nc][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
						dRsidedp += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
					}

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1)) {
						dRsidedp += ZERO_DIFF * dPordp * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
						dRsidedp += ZERO_DIFF * dE[Ix][Iy][Iz][Nc][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
						dRsidedp += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

						dRsidedp += ZERO_DIFF * dPordp * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
						dRsidedp += ZERO_DIFF * dE[Ix][Iy][Iz][Nc][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
						dRsidedp += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
					}

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0)) {
						dRsidedp += ZERO_DIFF * dPordp * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
						dRsidedp += ZERO_DIFF * dE[Ix][Iy][Iz][Nc][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
						dRsidedp += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);

						dRsidedp += ZERO_DIFF * dPordp * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
						dRsidedp += ZERO_DIFF * dE[Ix][Iy][Iz][Nc][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
						dRsidedp += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
					}

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0)) {
						dRsidedp += ZERO_DIFF * dPordp * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
						dRsidedp += ZERO_DIFF * dE[Ix][Iy][Iz][Nc][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
						dRsidedp += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

						dRsidedp += ZERO_DIFF * dPordp * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
						dRsidedp += ZERO_DIFF * dE[Ix][Iy][Iz][Nc][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
						dRsidedp += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, Nc, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
					}




					//moshtagh transfer Function jabejaie naft nesbat be feshar Fracture
					dRsidefdp += ZERO_CONV * SI_C * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor));
					dRsidefdp += ZERO_CONV * -SI_C * (fDiffVisco(Ix, Iy, Iz, Nc, 0) * fporpor + fdPordp * fblockFProps[Ix][Iy][Iz][BMU][0]) * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor)*(blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) * (porpor + fporpor);
					dRsidefdp += ZERO_CONV * SI_C * fdPordp * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / (blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					//moshtagh transfer Function jabejaie gaz nesbat be feshar Fracture
					dRsidefdp += ZERO_CONV * SI_C * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor) / (porpor + fporpor));
					dRsidefdp += ZERO_CONV * -SI_C * (fDiffVisco(Ix, Iy, Iz, Nc, 1) * fporpor + fdPordp * fblockFProps[Ix][Iy][Iz][BMU][1]) * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor)*(blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1])) * (porpor + fporpor);
					dRsidefdp += ZERO_CONV * SI_C * fdPordp * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / (blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));

/*
// 					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
// 						dRsidefdp += ZERO_DIFF * fdPordp * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
// 						dRsidefdp += ZERO_DIFF * fdE[Ix][Iy][Iz][Nc][1] * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
// 						dRsidefdp += ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, Nc, 1) * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
// 					}
// 
// 					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (1)) {
// 						dRsidefdp += ZERO_DIFF * fdPordp * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
// 						dRsidefdp += ZERO_DIFF * fdE[Ix][Iy][Iz][Nc][0] * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
// 						dRsidefdp += ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, Nc, 0) * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
// 					}
// 
// 					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1)) {
// 						dRsidefdp += ZERO_DIFF * fdPordp * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
// 						dRsidefdp += ZERO_DIFF * fdE[Ix][Iy][Iz][Nc][0] * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
// 						dRsidefdp += ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, Nc, 0) * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
// 					}
// 
// 					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0)) {
// 						dRsidefdp += ZERO_DIFF * fdPordp * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
// 						dRsidefdp += ZERO_DIFF * fdE[Ix][Iy][Iz][Nc][1] * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
// 						dRsidefdp += ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, Nc, 1) * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
// 					}
// 
// 					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1)) {
// 						dRsidefdp += ZERO_DIFF * fdPordp * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
// 						dRsidefdp += ZERO_DIFF * fdE[Ix][Iy][Iz][Nc][1] * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
// 						dRsidefdp += ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, Nc, 1) * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
// 					}
// 
// 					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0)) {
// 						dRsidefdp += ZERO_DIFF * fdPordp * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
// 						dRsidefdp += ZERO_DIFF * fdE[Ix][Iy][Iz][Nc][0] * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
// 						dRsidefdp += ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, Nc, 0) * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
// 					}
*/



					dRsidedp += comp[(Ix + transS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][0][0] + comp[(Ix - 1 + transS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix][Iy + 1][Iz + 1][0][0];
					dRsidedp += comp[Ix][(Iy + transS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][0][1] + comp[Ix][(Iy - 1 + transS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy][Iz + 1][0][1];
					dRsidedp += comp[Ix][Iy][(Iz + transS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][0][2] + comp[Ix][Iy][(Iz - 1 + transS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz][0][2];
					dRsidedp += comp[(Ix + transS[Ix + 1][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][1][0] + comp[(Ix - 1 + transS[Ix][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * trans[Ix][Iy + 1][Iz + 1][1][0];
					dRsidedp += comp[Ix][(Iy + transS[Ix + 1][Iy + 1][Iz + 1][1][1])][Iz][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][1][1] + comp[Ix][(Iy - 1 + transS[Ix + 1][Iy][Iz + 1][1][1])][Iz][i][1] * trans[Ix + 1][Iy][Iz + 1][1][1];
					dRsidedp += comp[Ix][Iy][(Iz + transS[Ix + 1][Iy + 1][Iz + 1][1][2])][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][1][2] + comp[Ix][Iy][(Iz - 1 + transS[Ix + 1][Iy + 1][Iz][1][2])][i][1] * trans[Ix + 1][Iy + 1][Iz][1][2];

					//jac[BLNo+Nc+i][BLNo+(2*Nc)]=PCoeff*(dLsidedp+dRsidedp);

					//jac[BLNo+Nc+i][BLNo+(2*Nc+2)]=dLsidedSo;
					if (phaseStat[Ix][Iy][Iz] == (-1)) dCoefl = 0;
					else dCoefl = 1;
					if (phaseStat[Ix][Iy][Iz] == 1) dCoefg = 0;
					else dCoefg = 1;

					dMul = DiffVisco(Ix, Iy, Iz, Nc, 0);
					dMug = DiffVisco(Ix, Iy, Iz, Nc, 1);
					dDiffdpl = DifDiffusion(Ix, Iy, Iz, i, Nc, 0);
					dDiffdpg = DifDiffusion(Ix, Iy, Iz, i, Nc, 1);

					dRsidedSw = 0;
					dRsidedSg = 0;
					dRsidedSo = 0;
					dRsidefdSw = 0;
					dRsidefdSo = 0;
					dRsidefdSg = 0;

					//Transfer function dRside saturation 
					// moshtagh transfer Function jabejaie naft nesbat be So Matrix
					dRsidedSo += ZERO_CONV * SI_C * f_m_drelperm[1][4] * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (1))
						dRsidedSo += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0))
						dRsidedSo += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (-1))
						dRsidedSo += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);

					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0)) {
						dRsidedSo += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
						dRsidedSo += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
					}
					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1))
						dRsidedSo += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1))
						dRsidedSo += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);


					// moshtagh transfer Function jabejaie naft nesbat be So Fracture
					dRsidefdSo += ZERO_CONV * SI_C * f_m_drelperm[1][9] * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

/*
// 					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (1))
// 						//dRsidefdSo += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * fporpor / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
// 
// 					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1))
// 						//dRsidefdSo += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * fporpor / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
// 
// 					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0))
// 						//dRsidefdSo += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * fporpor / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
// 
*/



					// moshtagh transfer Function jabejaie naft nesbat be Sg Matrix
					dRsidedSg += ZERO_CONV * SI_C * f_m_drelperm[1][2] * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					// moshtagh transfer Function jabejaie gaz nesbat be Sg Matrix
					dRsidedSg += ZERO_CONV * SI_C * f_m_drelperm[2][3] * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor) / (porpor + fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (-1))
						dRsidedSg += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0))
						dRsidedSg += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (1))
						dRsidedSg += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);

					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1))
						dRsidedSg += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

					if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0)) {
						dRsidedSg += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
						dRsidedSg += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * porpor / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
					}


					// moshtagh transfer Function jabejaie naft nesbat be Sg Fracture 
					dRsidefdSg += ZERO_CONV * SI_C * f_m_drelperm[1][7] * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					// moshtagh transfer Function jabejaie gaz nesbat be Sg Fracture
					dRsidefdSg += ZERO_CONV * SI_C * f_m_drelperm[2][8] * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor) / (porpor + fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));

/*
// 					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (-1))
// 						dRsidefdSg += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * fporpor / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
// 
// 					if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0))
// 						dRsidefdSg += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * fporpor / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
// 
// 					if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1))
// 						dRsidefdSg += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * fporpor / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
*/



					// moshtagh transfer Function jabejaie naft nesbat be Sw Matrix
					dRsidedSw += ZERO_CONV * SI_C * f_m_drelperm[1][1] * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);


					// moshtagh transfer Function jabejaie naft nesbat be Sw Fracture
					dRsidefdSw += ZERO_CONV * SI_C * f_m_drelperm[1][6] * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
					//



					if (Ix < (Nx - 1)) {
						if (phaseStat[Ix + 1][Iy][Iz]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[Iz*(Nx*Ny) + Iy * Nx + Ix + 1] - reCol2;

						dsw = comp[(Ix + transS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][4][0] * (P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) + comp[(Ix + transS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][6][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (transS[Ix + 1][Iy + 1][Iz + 1][0][0]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dsgo = comp[(Ix + transS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][8][0] * (P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) + comp[(Ix + transS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][9][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						dsgg = comp[(Ix + transS[Ix + 1][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][5][0] * (P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + comp[(Ix + transS[Ix + 1][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][7][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (transS[Ix + 1][Iy + 1][Iz + 1][0][0]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix + 1][Iy][Iz] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}

						if (transS[Ix + 1][Iy + 1][Iz + 1][1][0]) {
							Jac1Row[JRowIndex] += (phaseStat[Ix + 1][Iy][Iz] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;

						//oil to oil
						dso = comp[(Ix + transS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][10][0] * (P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) + comp[(Ix + transS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][11][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (transS[Ix + 1][Iy + 1][Iz + 1][0][0]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix + 1][Iy][Iz] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;
						//////////////////////////////////////////////////////////
						/////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (phaseStat[Ix + 1][Iy][Iz] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][RO][0] * gridDim[Ix + 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BMU][0] * gridDim[Ix + 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][0] * gridDim[Ix] * Makhraj - dMul * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix + 1][Iy][Iz][Nc][0] * gridDim[Ix + 1] * Coef*Makhraj - DiffVisco(Ix + 1, Iy, Iz, Nc, 0)*gridDim[Ix + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Ix] * (blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][Nc][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Ix + 1] * (blockFProps[Ix + 1][Iy][Iz][BGAM][0] * dE[Ix + 1][Iy][Iz][Nc][0] / blockFProps[Ix + 1][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BGAM][0] * gridDim[Ix + 1] * Coef) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

						if (transS[Ix + 1][Iy + 1][Iz + 1][0][0]) {
							dRsidedp -= comp[Ix + 1][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][1] * Moshtaq*(P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = (comp[Ix + 1][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][1] * Bmoshtaq)*(P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= comp[Ix + 1][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (comp[Ix + 1][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= (comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}

						porpor2 = porosity[Ix + 1][Iy][Iz] * (1 + cpor * (P[Ix + 2][Iy + 1][Iz + 1][1] - refP) + dcpor * (P[Ix + 2][Iy + 1][Iz + 1][1] - refP)*(P[Ix + 2][Iy + 1][Iz + 1][1] - refP));
						dPordp2 = porosity[Ix + 1][Iy][Iz] * (cpor + 2 * dcpor*(P[Ix + 2][Iy + 1][Iz + 1][1] - refP));


						if (comp[Ix + 1][Iy][Iz][i][0] > comp[Ix][Iy][Iz][i][0]) {
							DupStream = diffusion[Ix + 1][Iy][Iz][i][0];
							dDdp = 0;
							dDdp2 = DifDiffusion(Ix + 1, Iy, Iz, i, Nc, 0);
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][0];
							dDdp = dDiffdpl;
							dDdp2 = 0;
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix + 1][Iy][Iz] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = blockFProps[Ix + 1][Iy][Iz][RO][0] * gridDim[Ix + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] * dCoefl;
						AAd *= (sat[Ix + 1][Iy][Iz][1] * gridDim[Ix + 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Ix] * dCoefl) / (gridDim[Ix + 1] + gridDim[Ix]);
						BBd = tor[Ix + 1][Iy][Iz] * gridDim[Ix + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Ix] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz] / (gridDim[Ix + 1] + gridDim[Ix]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = comp[Ix + 1][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0];
						RSide += DTran * DeltaX;

						dAAddp = dE[Ix][Iy][Iz][Nc][0] * gridDim[Ix] * dCoefl;
						dAAddp2 = dE[Ix + 1][Iy][Iz][Nc][0] * gridDim[Ix + 1] * Coef;
						dBBddp = -dPordp * tor[Ix][Iy][Iz] * gridDim[Ix] * dCoefl / (porpor*porpor);
						dBBddp2 = -dPordp2 * tor[Ix + 1][Iy][Iz] * gridDim[Ix + 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefl) {
							dRsidedp += -NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}

						if (phaseStat[Ix + 1][Iy][Iz] == 1) Coef = 0;
						else Coef = 1;
						Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][RO][1] * gridDim[Ix + 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BMU][1] * gridDim[Ix + 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][1] * gridDim[Ix] * Makhraj - dMug * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix + 1][Iy][Iz][Nc][1] * gridDim[Ix + 1] * Coef*Makhraj - DiffVisco(Ix + 1, Iy, Iz, Nc, 1)*gridDim[Ix + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Ix] * (blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][Nc][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Ix + 1] * (blockFProps[Ix + 1][Iy][Iz][BGAM][1] * dE[Ix + 1][Iy][Iz][Nc][1] / blockFProps[Ix + 1][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BGAM][1] * gridDim[Ix + 1] * Coef) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

						if (transS[Ix + 1][Iy + 1][Iz + 1][1][0]) {
							dRsidedp -= comp[Ix + 1][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][2] * Moshtaq*(P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += (comp[Ix + 1][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][2] * Bmoshtaq)*(P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= comp[Ix + 1][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (comp[Ix + 1][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= (comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);

						}
						//////////////////////////////////////////////////////
						if (comp[Ix + 1][Iy][Iz][i][1] > comp[Ix][Iy][Iz][i][1]) {
							DupStream = diffusion[Ix + 1][Iy][Iz][i][1];
							dDdp = 0;
							dDdp2 = DifDiffusion(Ix + 1, Iy, Iz, i, Nc, 1);
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][1];
							dDdp = dDiffdpg;
							dDdp2 = 0;
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix + 1][Iy][Iz] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = blockFProps[Ix + 1][Iy][Iz][RO][1] * gridDim[Ix + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] * dCoefg;
						AAd *= (sat[Ix + 1][Iy][Iz][2] * gridDim[Ix + 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Ix] * dCoefg) / (gridDim[Ix + 1] + gridDim[Ix]);
						BBd = tor[Ix + 1][Iy][Iz] * gridDim[Ix + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Ix] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Nx+Iy]*gridDim[Nx+Ny+Iz]/(gridDim[Ix+1]+gridDim[Ix]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = comp[Ix + 1][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1];
						RSide += DTran * DeltaX;

						dAAddp = dE[Ix][Iy][Iz][Nc][1] * gridDim[Ix] * dCoefg;
						dAAddp2 = dE[Ix + 1][Iy][Iz][Nc][1] * gridDim[Ix + 1] * Coef;
						dBBddp = -dPordp * tor[Ix][Iy][Iz] * gridDim[Ix] * dCoefg / (porpor*porpor);
						dBBddp2 = -dPordp2 * tor[Ix + 1][Iy][Iz] * gridDim[Ix + 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefg) {
							dRsidedp += -NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}


						//////////////////////////////////////////////////////
						Jac1Row[JRowIndex] = PCoeff * (-comp[(Ix + transS[Ix + 1][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][0][0] - comp[(Ix + transS[Ix + 1][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][1][0] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;

					}

					if (Ix > 0) {
						if (phaseStat[Ix - 1][Iy][Iz]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[Iz*(Nx*Ny) + Iy * Nx + Ix - 1] - reCol2;

						dsw = -comp[(Ix - 1 + transS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix][Iy + 1][Iz + 1][4][0] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]) - comp[(Ix - 1 + transS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix][Iy + 1][Iz + 1][6][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						if (!transS[Ix][Iy + 1][Iz + 1][0][0]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dso = -comp[(Ix - 1 + transS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix][Iy + 1][Iz + 1][10][0] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]) - comp[(Ix - 1 + transS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix][Iy + 1][Iz + 1][11][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						if (!transS[Ix][Iy + 1][Iz + 1][0][0]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix - 1][Iy][Iz] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;

						dsgo = -comp[(Ix - 1 + transS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix][Iy + 1][Iz + 1][8][0] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]) - comp[(Ix - 1 + transS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix][Iy + 1][Iz + 1][9][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						dsgg = -comp[(Ix - 1 + transS[Ix][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * trans[Ix][Iy + 1][Iz + 1][5][0] * (P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]) - comp[(Ix - 1 + transS[Ix][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * trans[Ix][Iy + 1][Iz + 1][7][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						if (!transS[Ix][Iy + 1][Iz + 1][0][0]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix - 1][Iy][Iz] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}

						if (!transS[Ix][Iy + 1][Iz + 1][1][0]) {
							Jac1Row[JRowIndex] += (phaseStat[Ix - 1][Iy][Iz] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;
						/////////////////////////////////////////////////////////////
						////////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (phaseStat[Ix - 1][Iy][Iz] == (-1)) Coef = 0;
						else Coef = 1;
						Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][RO][0] * gridDim[Ix - 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][BMU][0] * gridDim[Ix - 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][0] * gridDim[Ix] * Makhraj - dMul * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix - 1][Iy][Iz][Nc][0] * gridDim[Ix - 1] * Coef*Makhraj - DiffVisco(Ix - 1, Iy, Iz, Nc, 0)*gridDim[Ix - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Ix] * (blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][Nc][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Ix - 1] * (blockFProps[Ix - 1][Iy][Iz][BGAM][0] * dE[Ix - 1][Iy][Iz][Nc][0] / blockFProps[Ix - 1][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][BGAM][0] * gridDim[Ix - 1] * Coef) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

						if (transS[Ix][Iy + 1][Iz + 1][0][0]) {
							dRsidedp += (comp[Ix][Iy][Iz][i][0] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);
							dBsidedp = -comp[Ix][Iy][Iz][i][0] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);

							dRsidedp += (comp[Ix][Iy][Iz][i][0] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1])*(Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
							dBsidedp -= comp[Ix][Iy][Iz][i][0] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp += comp[Ix - 1][Iy][Iz][i][0] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][1] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);
							dBsidedp = -(comp[Ix - 1][Iy][Iz][i][0] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][1] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);

							dRsidedp += comp[Ix - 1][Iy][Iz][i][0] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
							dBsidedp -= (comp[Ix - 1][Iy][Iz][i][0] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][1])*(Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						}

						porpor2 = porosity[Ix - 1][Iy][Iz] * (1 + cpor * (P[Ix][Iy + 1][Iz + 1][1] - refP) + dcpor * (P[Ix][Iy + 1][Iz + 1][1] - refP)*(P[Ix][Iy + 1][Iz + 1][1] - refP));
						dPordp2 = porosity[Ix - 1][Iy][Iz] * (cpor + 2 * dcpor*(P[Ix][Iy + 1][Iz + 1][1] - refP));


						if (comp[Ix - 1][Iy][Iz][i][0] > comp[Ix][Iy][Iz][i][0]) {
							DupStream = diffusion[Ix - 1][Iy][Iz][i][0];
							dDdp = 0;
							dDdp2 = DifDiffusion(Ix - 1, Iy, Iz, i, Nc, 0);
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][0];
							dDdp = dDiffdpl;
							dDdp2 = 0;
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix - 1][Iy][Iz] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = blockFProps[Ix - 1][Iy][Iz][RO][0] * gridDim[Ix - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] * dCoefl;
						AAd *= (sat[Ix - 1][Iy][Iz][1] * gridDim[Ix - 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Ix] * dCoefl) / (gridDim[Ix - 1] + gridDim[Ix]);
						BBd = tor[Ix - 1][Iy][Iz] * gridDim[Ix - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Ix] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz] / (gridDim[Ix - 1] + gridDim[Ix]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = comp[Ix][Iy][Iz][i][0] - comp[Ix - 1][Iy][Iz][i][0];
						RSide -= DTran * DeltaX;

						dAAddp = dE[Ix][Iy][Iz][Nc][0] * gridDim[Ix] * dCoefl;
						dAAddp2 = dE[Ix - 1][Iy][Iz][Nc][0] * gridDim[Ix - 1] * Coef;
						dBBddp = -dPordp * tor[Ix][Iy][Iz] * gridDim[Ix] * dCoefl / (porpor*porpor);
						dBBddp2 = -dPordp2 * tor[Ix - 1][Iy][Iz] * gridDim[Ix - 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefl) {
							dRsidedp += NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += -NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}

						if (phaseStat[Ix - 1][Iy][Iz] == 1) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][RO][1] * gridDim[Ix - 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][BMU][1] * gridDim[Ix - 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][1] * gridDim[Ix] * Makhraj - dMug * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix - 1][Iy][Iz][Nc][1] * gridDim[Ix - 1] * Coef*Makhraj - DiffVisco(Ix - 1, Iy, Iz, Nc, 1)*gridDim[Ix - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Ix] * (blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][Nc][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Ix - 1] * (blockFProps[Ix - 1][Iy][Iz][BGAM][1] * dE[Ix - 1][Iy][Iz][Nc][1] / blockFProps[Ix - 1][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][BGAM][1] * gridDim[Ix - 1] * Coef) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

						if (transS[Ix][Iy + 1][Iz + 1][1][0]) {
							dRsidedp += (comp[Ix][Iy][Iz][i][1] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);
							dBsidedp = -comp[Ix][Iy][Iz][i][1] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);

							dRsidedp += (comp[Ix][Iy][Iz][i][1] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
							dBsidedp -= comp[Ix][Iy][Iz][i][1] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp += comp[Ix - 1][Iy][Iz][i][1] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][2] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);
							dBsidedp = -(comp[Ix - 1][Iy][Iz][i][1] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][2] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);

							dRsidedp += comp[Ix - 1][Iy][Iz][i][1] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
							dBsidedp -= (comp[Ix - 1][Iy][Iz][i][1] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						}
						//////////////////////////////////////////////////////////////
						if (comp[Ix - 1][Iy][Iz][i][1] > comp[Ix][Iy][Iz][i][1]) {
							DupStream = diffusion[Ix - 1][Iy][Iz][i][1];
							dDdp = 0;
							dDdp2 = DifDiffusion(Ix - 1, Iy, Iz, i, Nc, 1);
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][1];
							dDdp = dDiffdpg;
							dDdp2 = 0;
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix - 1][Iy][Iz] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = blockFProps[Ix - 1][Iy][Iz][RO][1] * gridDim[Ix - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] * dCoefg;
						AAd *= (sat[Ix - 1][Iy][Iz][2] * gridDim[Ix - 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Ix] * dCoefg) / (gridDim[Ix - 1] + gridDim[Ix]);
						BBd = tor[Ix - 1][Iy][Iz] * gridDim[Ix - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Ix] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Nx+Iy]*gridDim[Nx+Ny+Iz]/(gridDim[Ix-1]+gridDim[Ix]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = comp[Ix][Iy][Iz][i][1] - comp[Ix - 1][Iy][Iz][i][1];
						RSide -= DTran * DeltaX;

						dAAddp = dE[Ix][Iy][Iz][Nc][1] * gridDim[Ix] * dCoefg;
						dAAddp2 = dE[Ix - 1][Iy][Iz][Nc][1] * gridDim[Ix - 1] * Coef;
						dBBddp = -dPordp * tor[Ix][Iy][Iz] * gridDim[Ix] * dCoefg / (porpor*porpor);
						dBBddp2 = -dPordp2 * tor[Ix - 1][Iy][Iz] * gridDim[Ix - 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefg) {
							dRsidedp += NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += -NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}

						///////////////////////////////////////////////////////////////
						Jac1Row[JRowIndex] = PCoeff * (-comp[(Ix - 1 + transS[Ix][Iy + 1][Iz + 1][0][0])][Iy][Iz][i][0] * trans[Ix][Iy + 1][Iz + 1][0][0] - comp[(Ix - 1 + transS[Ix][Iy + 1][Iz + 1][1][0])][Iy][Iz][i][1] * trans[Ix][Iy + 1][Iz + 1][1][0] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;
					}

					if (Iy < (Ny - 1)) {
						if (phaseStat[Ix][Iy + 1][Iz]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[Iz*(Nx*Ny) + (Iy + 1)*Nx + Ix] - reCol2;

						dsw = comp[Ix][(Iy + transS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][4][1] * (P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) + comp[Ix][(Iy + transS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][6][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (transS[Ix + 1][Iy + 1][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dso = comp[Ix][(Iy + transS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][10][1] * (P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) + comp[Ix][(Iy + transS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][11][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (transS[Ix + 1][Iy + 1][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix][Iy + 1][Iz] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;

						dsgo = comp[Ix][(Iy + transS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][8][1] * (P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) + comp[Ix][(Iy + transS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][9][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						dsgg = comp[Ix][(Iy + transS[Ix + 1][Iy + 1][Iz + 1][1][1])][Iz][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][5][1] * (P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + comp[Ix][(Iy + transS[Ix + 1][Iy + 1][Iz + 1][1][1])][Iz][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][7][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (transS[Ix + 1][Iy + 1][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix][Iy + 1][Iz] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}
						if (transS[Ix + 1][Iy + 1][Iz + 1][1][1]) {
							Jac1Row[JRowIndex] += (phaseStat[Ix][Iy + 1][Iz] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;
						//////////////////////////////////////////////////////////////////////////////
						/////////////////////////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (phaseStat[Ix][Iy + 1][Iz] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][RO][0] * gridDim[Nx + Iy + 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][BMU][0] * gridDim[Nx + Iy + 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Iy] * Makhraj - dMul * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix][Iy + 1][Iz][Nc][0] * gridDim[Nx + Iy + 1] * Coef*Makhraj - DiffVisco(Ix, Iy + 1, Iz, Nc, 0)*gridDim[Nx + Iy + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Iy] * (blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][Nc][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Iy + 1] * (blockFProps[Ix][Iy + 1][Iz][BGAM][0] * dE[Ix][Iy + 1][Iz][Nc][0] / blockFProps[Ix][Iy + 1][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][BGAM][0] * gridDim[Nx + Iy + 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

						if (transS[Ix + 1][Iy + 1][Iz + 1][0][1]) {
							dRsidedp -= comp[Ix][Iy + 1][Iz][i][0] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][1] * Moshtaq*(P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = (comp[Ix][Iy + 1][Iz][i][0] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][1] * Bmoshtaq)*(P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= comp[Ix][Iy + 1][Iz][i][0] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (comp[Ix][Iy + 1][Iz][i][0] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= (comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}

						porpor2 = porosity[Ix][Iy + 1][Iz] * (1 + cpor * (P[Ix + 1][Iy + 2][Iz + 1][1] - refP) + dcpor * (P[Ix + 1][Iy + 2][Iz + 1][1] - refP)*(P[Ix + 1][Iy + 2][Iz + 1][1] - refP));
						dPordp2 = porosity[Ix][Iy + 1][Iz] * (cpor + 2 * dcpor*(P[Ix + 1][Iy + 2][Iz + 1][1] - refP));
						if (comp[Ix][Iy + 1][Iz][i][0] > comp[Ix][Iy][Iz][i][0]) {
							DupStream = diffusion[Ix][Iy + 1][Iz][i][0];
							dDdp = 0;
							dDdp2 = DifDiffusion(Ix, Iy + 1, Iz, i, Nc, 0);
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][0];
							dDdp = dDiffdpl;
							dDdp2 = 0;
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix][Iy + 1][Iz] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = blockFProps[Ix][Iy + 1][Iz][RO][0] * gridDim[Nx + Iy + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] * dCoefl;
						AAd *= (sat[Ix][Iy + 1][Iz][1] * gridDim[Nx + Iy + 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Nx + Iy] * dCoefl) / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
						BBd = tor[Ix][Iy + 1][Iz] * gridDim[Nx + Iy + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Iy] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Ix] * gridDim[Nx + Ny + Iz] / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = comp[Ix][Iy + 1][Iz][i][0] - comp[Ix][Iy][Iz][i][0];
						RSide += DTran * DeltaX;

						dAAddp = dE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Iy] * dCoefl;
						dAAddp2 = dE[Ix][Iy + 1][Iz][Nc][0] * gridDim[Nx + Iy + 1] * Coef;
						dBBddp = -dPordp * tor[Ix][Iy][Iz] * gridDim[Nx + Iy] * dCoefl / (porpor*porpor);
						dBBddp2 = -dPordp2 * tor[Ix][Iy + 1][Iz] * gridDim[Nx + Iy + 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefl) {
							dRsidedp += -NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}

						if (phaseStat[Ix][Iy + 1][Iz] == 1) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][RO][1] * gridDim[Nx + Iy + 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][BMU][1] * gridDim[Nx + Iy + 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Iy] * Makhraj - dMug * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix][Iy + 1][Iz][Nc][1] * gridDim[Nx + Iy + 1] * Coef*Makhraj - DiffVisco(Ix, Iy + 1, Iz, Nc, 1)*gridDim[Nx + Iy + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = Coef * gridDim[Nx + Iy] * (blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][Nc][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);
						BmoshtaqGama = gridDim[Nx + Iy + 1] * (blockFProps[Ix][Iy + 1][Iz][BGAM][1] * dE[Ix][Iy + 1][Iz][Nc][1] / blockFProps[Ix][Iy + 1][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][BGAM][1] * gridDim[Nx + Iy + 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

						if (transS[Ix + 1][Iy + 1][Iz + 1][1][1]) {
							dRsidedp -= comp[Ix][Iy + 1][Iz][i][1] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][2] * Moshtaq*(P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += (comp[Ix][Iy + 1][Iz][i][1] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][2] * Bmoshtaq)*(P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= comp[Ix][Iy + 1][Iz][i][1] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (comp[Ix][Iy + 1][Iz][i][1] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= (comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}

						/////////////////////////////////////////////////////////////////////////////
						if (comp[Ix][Iy + 1][Iz][i][1] > comp[Ix][Iy][Iz][i][1]) {
							DupStream = diffusion[Ix][Iy + 1][Iz][i][1];
							dDdp = 0;
							dDdp2 = DifDiffusion(Ix, Iy + 1, Iz, i, Nc, 1);
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][1];
							dDdp = dDiffdpg;
							dDdp2 = 0;
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix][Iy + 1][Iz] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = blockFProps[Ix][Iy + 1][Iz][RO][1] * gridDim[Nx + Iy + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] * dCoefg;
						AAd *= (sat[Ix][Iy + 1][Iz][2] * gridDim[Nx + Iy + 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Nx + Iy] * dCoefg) / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
						BBd = tor[Ix][Iy + 1][Iz] * gridDim[Nx + Iy + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Iy] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Ix]*gridDim[Nx+Ny+Iz]/(gridDim[Nx+Iy+1]+gridDim[Nx+Iy]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = comp[Ix][Iy + 1][Iz][i][1] - comp[Ix][Iy][Iz][i][1];
						RSide += DTran * DeltaX;

						dAAddp = dE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Iy] * dCoefg;
						dAAddp2 = dE[Ix][Iy + 1][Iz][Nc][1] * gridDim[Nx + Iy + 1] * Coef;
						dBBddp = -dPordp * tor[Ix][Iy][Iz] * gridDim[Nx + Iy] * dCoefg / (porpor*porpor);
						dBBddp2 = -dPordp2 * tor[Ix][Iy + 1][Iz] * gridDim[Nx + Iy + 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefg) {
							dRsidedp += -NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}
						/////////////////////////////////////////////////////////////////////////////
						Jac1Row[JRowIndex] = PCoeff * (-comp[Ix][(Iy + transS[Ix + 1][Iy + 1][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][0][1] - comp[Ix][(Iy + transS[Ix + 1][Iy + 1][Iz + 1][1][1])][Iz][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][1][1] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;
					}

					if (Iy > 0) {
						if (phaseStat[Ix][Iy - 1][Iz]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[Iz*(Nx*Ny) + (Iy - 1)*Nx + Ix] - reCol2;

						dsw = -comp[Ix][(Iy - 1 + transS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy][Iz + 1][4][1] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]) - comp[Ix][(Iy - 1 + transS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy][Iz + 1][6][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						if (!transS[Ix + 1][Iy][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dso = -comp[Ix][(Iy - 1 + transS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy][Iz + 1][10][1] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]) - comp[Ix][(Iy - 1 + transS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy][Iz + 1][11][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						if (!transS[Ix + 1][Iy][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix][Iy - 1][Iz] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;

						dsgo = -comp[Ix][(Iy - 1 + transS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy][Iz + 1][8][1] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]) - comp[Ix][(Iy - 1 + transS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy][Iz + 1][9][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						dsgg = -comp[Ix][(Iy - 1 + transS[Ix + 1][Iy][Iz + 1][1][1])][Iz][i][1] * trans[Ix + 1][Iy][Iz + 1][5][1] * (P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]) - comp[Ix][(Iy - 1 + transS[Ix + 1][Iy][Iz + 1][1][1])][Iz][i][1] * trans[Ix + 1][Iy][Iz + 1][7][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						if (!transS[Ix + 1][Iy][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix][Iy - 1][Iz] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}
						if (!transS[Ix + 1][Iy][Iz + 1][1][1]) {
							Jac1Row[JRowIndex] += (phaseStat[Ix][Iy - 1][Iz] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;

						//////////////////////////////////////////////////////////////////
						/////////////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (phaseStat[Ix][Iy - 1][Iz] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][RO][0] * gridDim[Nx + Iy - 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][BMU][0] * gridDim[Nx + Iy - 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Iy] * Makhraj - dMul * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix][Iy - 1][Iz][Nc][0] * gridDim[Nx + Iy - 1] * Coef*Makhraj - DiffVisco(Ix, Iy - 1, Iz, Nc, 0)*gridDim[Nx + Iy - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Iy] * (blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][Nc][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Iy - 1] * (blockFProps[Ix][Iy - 1][Iz][BGAM][0] * dE[Ix][Iy - 1][Iz][Nc][0] / blockFProps[Ix][Iy - 1][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][BGAM][0] * gridDim[Nx + Iy - 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

						if (transS[Ix + 1][Iy][Iz + 1][0][1]) {
							dRsidedp += (comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);
							dBsidedp = -comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);

							dRsidedp += (comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][1])*(Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
							dBsidedp -= comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						}
						else {
							dRsidedp += comp[Ix][Iy - 1][Iz][i][0] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][1] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);
							dBsidedp = -(comp[Ix][Iy - 1][Iz][i][0] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][1] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);

							dRsidedp += comp[Ix][Iy - 1][Iz][i][0] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
							dBsidedp -= (comp[Ix][Iy - 1][Iz][i][0] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][1])*(Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						}

						porpor2 = porosity[Ix][Iy - 1][Iz] * (1 + cpor * (P[Ix + 1][Iy][Iz + 1][1] - refP) + dcpor * (P[Ix + 1][Iy][Iz + 1][1] - refP)*(P[Ix + 1][Iy][Iz + 1][1] - refP));
						dPordp2 = porosity[Ix][Iy - 1][Iz] * (cpor + 2 * dcpor*(P[Ix + 1][Iy][Iz + 1][1] - refP));
						if (comp[Ix][Iy - 1][Iz][i][0] > comp[Ix][Iy][Iz][i][0]) {
							DupStream = diffusion[Ix][Iy - 1][Iz][i][0];
							dDdp = 0;
							dDdp2 = DifDiffusion(Ix, Iy - 1, Iz, i, Nc, 0);
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][0];
							dDdp = dDiffdpl;
							dDdp2 = 0;
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix][Iy - 1][Iz] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = blockFProps[Ix][Iy - 1][Iz][RO][0] * gridDim[Nx + Iy - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] * dCoefl;
						AAd *= (sat[Ix][Iy - 1][Iz][1] * gridDim[Nx + Iy - 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Nx + Iy] * dCoefl) / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
						BBd = tor[Ix][Iy - 1][Iz] * gridDim[Nx + Iy - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Iy] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Ix] * gridDim[Nx + Ny + Iz] / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = comp[Ix][Iy][Iz][i][0] - comp[Ix][Iy - 1][Iz][i][0];
						RSide -= DTran * DeltaX;

						dAAddp = dE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Iy] * dCoefl;
						dAAddp2 = dE[Ix][Iy - 1][Iz][Nc][0] * gridDim[Nx + Iy - 1] * Coef;
						dBBddp = -dPordp * tor[Ix][Iy][Iz] * gridDim[Nx + Iy] * dCoefl / (porpor*porpor);
						dBBddp2 = -dPordp2 * tor[Ix][Iy - 1][Iz] * gridDim[Nx + Iy - 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefl) {
							dRsidedp += NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += -NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}

						if (phaseStat[Ix][Iy - 1][Iz] == 1) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][RO][1] * gridDim[Nx + Iy - 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][BMU][1] * gridDim[Nx + Iy - 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Iy] * Makhraj - dMug * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix][Iy - 1][Iz][Nc][1] * gridDim[Nx + Iy - 1] * Coef*Makhraj - DiffVisco(Ix, Iy - 1, Iz, Nc, 1)*gridDim[Nx + Iy - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Iy] * (blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][Nc][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Iy - 1] * (blockFProps[Ix][Iy - 1][Iz][BGAM][1] * dE[Ix][Iy - 1][Iz][Nc][1] / blockFProps[Ix][Iy - 1][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][BGAM][1] * gridDim[Nx + Iy - 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

						if (transS[Ix + 1][Iy][Iz + 1][1][1]) {
							dRsidedp += (comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);
							dBsidedp -= comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);

							dRsidedp += (comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
							dBsidedp -= comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						}
						else {
							dRsidedp += comp[Ix][Iy - 1][Iz][i][1] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][2] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);
							dBsidedp -= (comp[Ix][Iy - 1][Iz][i][1] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][2] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);

							dRsidedp += comp[Ix][Iy - 1][Iz][i][1] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
							dBsidedp -= (comp[Ix][Iy - 1][Iz][i][1] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						}

						///////////////////////////////////////////////////////////////////
						if (comp[Ix][Iy - 1][Iz][i][1] > comp[Ix][Iy][Iz][i][1]) {
							DupStream = diffusion[Ix][Iy - 1][Iz][i][1];
							dDdp = 0;
							dDdp2 = DifDiffusion(Ix, Iy - 1, Iz, i, Nc, 1);
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][1];
							dDdp = dDiffdpg;
							dDdp2 = 0;
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix][Iy - 1][Iz] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = blockFProps[Ix][Iy - 1][Iz][RO][1] * gridDim[Nx + Iy - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] * dCoefg;
						AAd *= (sat[Ix][Iy - 1][Iz][2] * gridDim[Nx + Iy - 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Nx + Iy] * dCoefg) / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
						BBd = tor[Ix][Iy - 1][Iz] * gridDim[Nx + Iy - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Iy] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Ix]*gridDim[Nx+Ny+Iz]/(gridDim[Nx+Iy-1]+gridDim[Nx+Iy]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = comp[Ix][Iy][Iz][i][1] - comp[Ix][Iy - 1][Iz][i][1];
						RSide -= DTran * DeltaX;

						dAAddp = dE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Iy] * dCoefg;
						dAAddp2 = dE[Ix][Iy - 1][Iz][Nc][1] * gridDim[Nx + Iy - 1] * Coef;
						dBBddp = -dPordp * tor[Ix][Iy][Iz] * gridDim[Nx + Iy] * dCoefg / (porpor*porpor);
						dBBddp2 = -dPordp2 * tor[Ix][Iy - 1][Iz] * gridDim[Nx + Iy - 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefg) {
							dRsidedp += NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += -NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}

						//////////////////////////////////////////////////////////////////
						Jac1Row[JRowIndex] = PCoeff * (-comp[Ix][(Iy - 1 + transS[Ix + 1][Iy][Iz + 1][0][1])][Iz][i][0] * trans[Ix + 1][Iy][Iz + 1][0][1] - comp[Ix][(Iy - 1 + transS[Ix + 1][Iy][Iz + 1][1][1])][Iz][i][1] * trans[Ix + 1][Iy][Iz + 1][1][1] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;
					}

					if (Iz < (Nz - 1)) {
						if (phaseStat[Ix][Iy][Iz + 1]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[(Iz + 1)*(Nx*Ny) + Iy * Nx + Ix] - reCol2;

						dsw = comp[Ix][Iy][(Iz + transS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][4][2] * (P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) + comp[Ix][Iy][(Iz + transS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][6][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (transS[Ix + 1][Iy + 1][Iz + 1][0][2]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dso = comp[Ix][Iy][(Iz + transS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][10][2] * (P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) + comp[Ix][Iy][(Iz + transS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][11][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (transS[Ix + 1][Iy + 1][Iz + 1][0][2]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix][Iy][Iz + 1] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;

						dsgo = comp[Ix][Iy][(Iz + transS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][8][2] * (P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) + comp[Ix][Iy][(Iz + transS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][9][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						dsgg = comp[Ix][Iy][(Iz + transS[Ix + 1][Iy + 1][Iz + 1][1][2])][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][5][2] * (P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + comp[Ix][Iy][(Iz + transS[Ix + 1][Iy + 1][Iz + 1][1][2])][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][7][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (transS[Ix + 1][Iy + 1][Iz + 1][0][2]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix][Iy][Iz + 1] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}
						if (transS[Ix + 1][Iy + 1][Iz + 1][1][2]) {
							Jac1Row[JRowIndex] += (phaseStat[Ix][Iy][Iz + 1] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;
						///////////////////////////////////////////////////////////////////////////
						////////////////////////////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (phaseStat[Ix][Iy][Iz + 1] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][RO][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][BMU][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Ny + Iz] * Makhraj - dMul * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix][Iy][Iz + 1][Nc][0] * gridDim[Nx + Ny + Iz + 1] * Coef*Makhraj - DiffVisco(Ix, Iy, Iz + 1, Nc, 0)*gridDim[Nx + Ny + Iz + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Ny + Iz] * (blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][Nc][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz + 1] * (blockFProps[Ix][Iy][Iz + 1][BGAM][0] * dE[Ix][Iy][Iz + 1][Nc][0] / blockFProps[Ix][Iy][Iz + 1][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][BGAM][0] * gridDim[Nx + Ny + Iz + 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

						if (transS[Ix + 1][Iy + 1][Iz + 1][0][2]) {
							dRsidedp -= comp[Ix][Iy][Iz + 1][i][0] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][1] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = (comp[Ix][Iy][Iz + 1][i][0] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][1] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= comp[Ix][Iy][Iz + 1][i][0] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (comp[Ix][Iy][Iz + 1][i][0] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= (comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}

						porpor2 = porosity[Ix][Iy][Iz + 1] * (1 + cpor * (P[Ix + 1][Iy + 1][Iz + 2][1] - refP) + dcpor * (P[Ix + 1][Iy + 1][Iz + 2][1] - refP)*(P[Ix + 1][Iy + 1][Iz + 2][1] - refP));
						dPordp2 = porosity[Ix][Iy][Iz + 1] * (cpor + 2 * dcpor*(P[Ix + 1][Iy + 1][Iz + 2][1] - refP));
						if (comp[Ix][Iy][Iz + 1][i][0] > comp[Ix][Iy][Iz][i][0]) {
							DupStream = diffusion[Ix][Iy][Iz + 1][i][0];
							dDdp = 0;
							dDdp2 = DifDiffusion(Ix, Iy, Iz + 1, i, Nc, 0);
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][0];
							dDdp = dDiffdpl;
							dDdp2 = 0;
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix][Iy][Iz + 1] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = blockFProps[Ix][Iy][Iz + 1][RO][0] * gridDim[Nx + Ny + Iz + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] * dCoefl;
						AAd *= (sat[Ix][Iy][Iz + 1][1] * gridDim[Nx + Ny + Iz + 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Nx + Ny + Iz] * dCoefl) / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
						BBd = tor[Ix][Iy][Iz + 1] * gridDim[Nx + Ny + Iz + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Ny + Iz] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Ix] * gridDim[Nx + Iy] / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = comp[Ix][Iy][Iz + 1][i][0] - comp[Ix][Iy][Iz][i][0];
						RSide += DTran * DeltaX;

						dAAddp = dE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Ny + Iz] * dCoefl;
						dAAddp2 = dE[Ix][Iy][Iz + 1][Nc][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
						dBBddp = -dPordp * tor[Ix][Iy][Iz] * gridDim[Nx + Ny + Iz] * dCoefl / (porpor*porpor);
						dBBddp2 = -dPordp2 * tor[Ix][Iy][Iz + 1] * gridDim[Nx + Ny + Iz + 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefl) {
							dRsidedp += -NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}

						if (phaseStat[Ix][Iy][Iz + 1] == 1) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][RO][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][BMU][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Ny + Iz] * Makhraj - dMug * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix][Iy][Iz + 1][Nc][1] * gridDim[Nx + Ny + Iz + 1] * Coef*Makhraj - DiffVisco(Ix, Iy, Iz + 1, Nc, 1)*gridDim[Nx + Ny + Iz + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Ny + Iz] * (blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][Nc][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz + 1] * (blockFProps[Ix][Iy][Iz + 1][BGAM][1] * dE[Ix][Iy][Iz + 1][Nc][1] / blockFProps[Ix][Iy][Iz + 1][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][BGAM][1] * gridDim[Nx + Ny + Iz + 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

						if (transS[Ix + 1][Iy + 1][Iz + 1][1][2]) {
							dRsidedp -= comp[Ix][Iy][Iz + 1][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][2] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += (comp[Ix][Iy][Iz + 1][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][2] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= comp[Ix][Iy][Iz + 1][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (comp[Ix][Iy][Iz + 1][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= (comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						///////////////////////////////////////////////////////////////////////////////
						if (comp[Ix][Iy][Iz + 1][i][1] > comp[Ix][Iy][Iz][i][1]) {
							DupStream = diffusion[Ix][Iy][Iz + 1][i][1];
							dDdp = 0;
							dDdp2 = DifDiffusion(Ix, Iy, Iz + 1, i, Nc, 1);
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][1];
							dDdp = dDiffdpg;
							dDdp2 = 0;
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix][Iy][Iz + 1] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = blockFProps[Ix][Iy][Iz + 1][RO][1] * gridDim[Nx + Ny + Iz + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] * dCoefg;
						AAd *= (sat[Ix][Iy][Iz + 1][2] * gridDim[Nx + Ny + Iz + 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Nx + Ny + Iz] * dCoefg) / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
						BBd = tor[Ix][Iy][Iz + 1] * gridDim[Nx + Ny + Iz + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Ny + Iz] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Ix]*gridDim[Nx+Iy]/(gridDim[Nx+Ny+Iz+1]+gridDim[Nx+Ny+Iz]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = comp[Ix][Iy][Iz + 1][i][1] - comp[Ix][Iy][Iz][i][1];
						RSide += DTran * DeltaX;

						dAAddp = dE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Ny + Iz] * dCoefg;
						dAAddp2 = dE[Ix][Iy][Iz + 1][Nc][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
						dBBddp = -dPordp * tor[Ix][Iy][Iz] * gridDim[Nx + Ny + Iz] * dCoefg / (porpor*porpor);
						dBBddp2 = -dPordp2 * tor[Ix][Iy][Iz + 1] * gridDim[Nx + Ny + Iz + 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefg) {
							dRsidedp += -NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}

						//////////////////////////////////////////////////////////////////////////////
						Jac1Row[JRowIndex] = PCoeff * (-comp[Ix][Iy][(Iz + transS[Ix + 1][Iy + 1][Iz + 1][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz + 1][0][2] - comp[Ix][Iy][(Iz + transS[Ix + 1][Iy + 1][Iz + 1][1][2])][i][1] * trans[Ix + 1][Iy + 1][Iz + 1][1][2] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;
					}

					if (Iz > 0) {
						if (phaseStat[Ix][Iy][Iz - 1]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[(Iz - 1)*(Nx*Ny) + Iy * Nx + Ix] - reCol2;

						dsw = -comp[Ix][Iy][(Iz - 1 + transS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz][4][2] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]) - comp[Ix][Iy][(Iz - 1 + transS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz][6][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						if (!transS[Ix + 1][Iy + 1][Iz][0][2]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dso = -comp[Ix][Iy][(Iz - 1 + transS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz][10][2] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]) - comp[Ix][Iy][(Iz - 1 + transS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz][11][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						if (!transS[Ix + 1][Iy + 1][Iz][0][2]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix][Iy][Iz - 1] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;

						dsgo = -comp[Ix][Iy][(Iz - 1 + transS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz][8][2] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]) - comp[Ix][Iy][(Iz - 1 + transS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz][9][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						dsgg = -comp[Ix][Iy][(Iz - 1 + transS[Ix + 1][Iy + 1][Iz][1][2])][i][1] * trans[Ix + 1][Iy + 1][Iz][5][2] * (P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]) - comp[Ix][Iy][(Iz - 1 + transS[Ix + 1][Iy + 1][Iz][1][2])][i][1] * trans[Ix + 1][Iy + 1][Iz][7][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						if (!transS[Ix + 1][Iy + 1][Iz][0][2]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix][Iy][Iz - 1] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}
						if (!transS[Ix + 1][Iy + 1][Iz][1][2]) {
							Jac1Row[JRowIndex] += (phaseStat[Ix][Iy][Iz - 1] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;

						///////////////////////////////////////////////////////////////
						///////////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (phaseStat[Ix][Iy][Iz - 1] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][RO][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][BMU][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Ny + Iz] * Makhraj - dMul * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix][Iy][Iz - 1][Nc][0] * gridDim[Nx + Ny + Iz - 1] * Coef*Makhraj - DiffVisco(Ix, Iy, Iz - 1, Nc, 0)*gridDim[Nx + Ny + Iz - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Ny + Iz] * (blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][Nc][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz - 1] * (blockFProps[Ix][Iy][Iz - 1][BGAM][0] * dE[Ix][Iy][Iz - 1][Nc][0] / blockFProps[Ix][Iy][Iz - 1][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][BGAM][0] * gridDim[Nx + Ny + Iz - 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

						if (transS[Ix + 1][Iy + 1][Iz][0][2]) {
							dRsidedp += (comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);
							dBsidedp = -comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);

							dRsidedp += (comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][1])*(Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							dBsidedp -= comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						}
						else {
							dRsidedp += comp[Ix][Iy][Iz - 1][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][1] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);
							dBsidedp = -(comp[Ix][Iy][Iz - 1][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][1] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);

							dRsidedp += comp[Ix][Iy][Iz - 1][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							dBsidedp -= (comp[Ix][Iy][Iz - 1][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][1])*(Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						}

						porpor2 = porosity[Ix][Iy][Iz - 1] * (1 + cpor * (P[Ix + 1][Iy + 1][Iz][1] - refP) + dcpor * (P[Ix + 1][Iy + 1][Iz][1] - refP)*(P[Ix + 1][Iy + 1][Iz][1] - refP));
						dPordp2 = porosity[Ix][Iy][Iz - 1] * (cpor + 2 * dcpor*(P[Ix + 1][Iy + 1][Iz][1] - refP));
						if (comp[Ix][Iy][Iz - 1][i][0] > comp[Ix][Iy][Iz][i][0]) {
							DupStream = diffusion[Ix][Iy][Iz - 1][i][0];
							dDdp = 0;
							dDdp2 = DifDiffusion(Ix, Iy, Iz - 1, i, Nc, 0);
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][0];
							dDdp = dDiffdpl;
							dDdp2 = 0;
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix][Iy][Iz - 1] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = blockFProps[Ix][Iy][Iz - 1][RO][0] * gridDim[Nx + Ny + Iz - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] * dCoefl;
						AAd *= (sat[Ix][Iy][Iz - 1][1] * gridDim[Nx + Ny + Iz - 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Nx + Ny + Iz] * dCoefl) / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
						BBd = tor[Ix][Iy][Iz - 1] * gridDim[Nx + Ny + Iz - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Ny + Iz] * dCoefl / porpor;
						MMd = AAd / BBd;
						NNd = 2 * gridDim[Ix] * gridDim[Nx + Iy] / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefl)) DTran = 0;
						DeltaX = comp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz - 1][i][0];
						RSide -= DTran * DeltaX;

						dAAddp = dE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Ny + Iz] * dCoefl;
						dAAddp2 = dE[Ix][Iy][Iz - 1][Nc][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
						dBBddp = -dPordp * tor[Ix][Iy][Iz] * gridDim[Nx + Ny + Iz] * dCoefl / (porpor*porpor);
						dBBddp2 = -dPordp2 * tor[Ix][Iy][Iz - 1] * gridDim[Nx + Ny + Iz - 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefl) {
							dRsidedp += NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += -NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}

						if (phaseStat[Ix][Iy][Iz - 1] == 1) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][RO][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][BMU][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Ny + Iz] * Makhraj - dMug * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix][Iy][Iz - 1][Nc][1] * gridDim[Nx + Ny + Iz - 1] * Coef*Makhraj - DiffVisco(Ix, Iy, Iz - 1, Nc, 1)*gridDim[Nx + Ny + Iz - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Ny + Iz] * (blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][Nc][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz - 1] * (blockFProps[Ix][Iy][Iz - 1][BGAM][1] * dE[Ix][Iy][Iz - 1][Nc][1] / blockFProps[Ix][Iy][Iz - 1][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][BGAM][1] * gridDim[Nx + Ny + Iz - 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

						if (transS[Ix + 1][Iy + 1][Iz][1][2]) {
							dRsidedp += (comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);
							dBsidedp -= comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);

							dRsidedp += (comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							dBsidedp -= comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						}
						else {
							dRsidedp += comp[Ix][Iy][Iz - 1][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][2] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);
							dBsidedp -= (comp[Ix][Iy][Iz - 1][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][2] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);

							dRsidedp += comp[Ix][Iy][Iz - 1][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							dBsidedp -= (comp[Ix][Iy][Iz - 1][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						}
						//////////////////////////////////////////////////////////////////
						if (comp[Ix][Iy][Iz - 1][i][1] > comp[Ix][Iy][Iz][i][1]) {
							DupStream = diffusion[Ix][Iy][Iz - 1][i][1];
							dDdp = 0;
							dDdp2 = DifDiffusion(Ix, Iy, Iz - 1, i, Nc, 1);
						}
						else {
							DupStream = diffusion[Ix][Iy][Iz][i][1];
							dDdp = dDiffdpg;
							dDdp2 = 0;
						}
						if ((porosity[Ix][Iy][Iz] < 1e-10) || (porosity[Ix][Iy][Iz - 1] < 1e-10)) {
							DupStream = 0;
							dDdp = 0;
							dDdp2 = 0;
						}
						AAd = blockFProps[Ix][Iy][Iz - 1][RO][1] * gridDim[Nx + Ny + Iz - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] * dCoefg;
						AAd *= (sat[Ix][Iy][Iz - 1][2] * gridDim[Nx + Ny + Iz - 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Nx + Ny + Iz] * dCoefg) / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
						BBd = tor[Ix][Iy][Iz - 1] * gridDim[Nx + Ny + Iz - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Ny + Iz] * dCoefg / porpor;
						MMd = AAd / BBd;
						//NNd=2*gridDim[Ix]*gridDim[Nx+Iy]/(gridDim[Nx+Ny+Iz-1]+gridDim[Nx+Ny+Iz]);
						DTran = MMd * NNd*DupStream;
						if ((!Coef) && (!dCoefg)) DTran = 0;
						DeltaX = comp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz - 1][i][1];
						RSide -= DTran * DeltaX;

						dAAddp = dE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Ny + Iz] * dCoefg;
						dAAddp2 = dE[Ix][Iy][Iz - 1][Nc][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
						dBBddp = -dPordp * tor[Ix][Iy][Iz] * gridDim[Nx + Ny + Iz] * dCoefg / (porpor*porpor);
						dBBddp2 = -dPordp2 * tor[Ix][Iy][Iz - 1] * gridDim[Nx + Ny + Iz - 1] * Coef / (porpor2*porpor2);
						dMMddp = (dAAddp*BBd - dBBddp * AAd) / (BBd*BBd);
						dMMddp2 = (dAAddp2*BBd - dBBddp2 * AAd) / (BBd*BBd);

						if (Coef && dCoefg) {
							dRsidedp += NNd * DeltaX*(MMd*dDdp + DupStream * dMMddp);
							dBsidedp += -NNd * DeltaX*(MMd*dDdp2 + DupStream * dMMddp2);
						}
						//////////////////////////////////////////////////////////////////
						Jac1Row[JRowIndex] = PCoeff * (-comp[Ix][Iy][(Iz - 1 + transS[Ix + 1][Iy + 1][Iz][0][2])][i][0] * trans[Ix + 1][Iy + 1][Iz][0][2] - comp[Ix][Iy][(Iz - 1 + transS[Ix + 1][Iy + 1][Iz][1][2])][i][1] * trans[Ix + 1][Iy + 1][Iz][1][2] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;
					}

					Jac1Row[JRowIndex] = PCoeff * (dLsidedp + dRsidedp + comp[Ix][Iy][Iz][i][0] * PIo + gComp * PIg);
					Jac1Col[JRowIndex] = jacCol + (2 * Nc) - reCol;
					JRowIndex++;


					if (phaseStat[Ix][Iy][Iz] != -1) {
						Jac1Row[JRowIndex] = -dRsidedSw;
						Jac1Col[JRowIndex] = jacCol + (2 * Nc + 1) - reCol;
						JRowIndex++;
						Jac1Row[JRowIndex] = dLsidedSo - dRsidedSo;
						Jac1Col[JRowIndex] = jacCol + (2 * Nc + 2) - reCol;
						JRowIndex++;
						//reCol1 = 0;
						reCol3 = 0;
					}
					else {
						//reCol1 = 2;
						reCol3 = 1;
					}

					if (phaseStat[Ix][Iy][Iz] != 1) {
						Jac1Row[JRowIndex] = dLsidedSg - dRsidedSg;
						Jac1Col[JRowIndex] = jacCol + (2 * Nc + 3) - reCol - reCol3;
						JRowIndex++;
					}
					/////////////////////////////////////////////////Sadeq///////////////////////////////////
					if (fphaseStat[Ix][Iy][Iz] == 1) {
						reColF1 = Nc;
						//reColF2
						//dRsidefdSo = 0;
						Jac1Row[JRowIndex] = dRsidefdSo;
						Jac1Col[JRowIndex] = FracEq + 2 * Nc + 2 - reColF1;
						JRowIndex++;
					}
					else if (fphaseStat[Ix][Iy][Iz] == (-1)) {
						reColF1 = Nc;
						//reColF2 = Nc;
						//dRsidefdSg = 0;
						Jac1Row[JRowIndex] = dRsidefdSg;
						Jac1Col[JRowIndex] = FracEq + 2 * Nc + 2 - reColF1;
						JRowIndex++;
					}
					else {
						reColF1 = 0;
						//reColF2 = 0;
						//dRsidefdSo = 0;
						Jac1Row[JRowIndex] = dRsidefdSo;
						Jac1Col[JRowIndex] = FracEq + 2 * Nc + 2 - reColF1;
						JRowIndex++;
						//dRsidefdSg = 0;
						Jac1Row[JRowIndex] = dRsidefdSg;
						Jac1Col[JRowIndex] = FracEq + 2 * Nc + 3 - reColF1;
						JRowIndex++;
					}
					//dRsidefdp = 0;
					Jac1Row[JRowIndex] = PCoeff * dRsidefdp;
					Jac1Col[JRowIndex] = FracEq + 2 * Nc - reColF1;
					JRowIndex++;
					//dRsidefdSw = 0;
					Jac1Row[JRowIndex] = dRsidefdSw;
					Jac1Col[JRowIndex] = FracEq + 2 * Nc + 1 - reColF1;
					JRowIndex++;
					////////////////////////sadeq/////////////////////////

					for (k = 0; k < Nc; k++) {
						dRsidedxl = 0;
						dRsidedxg = 0;
						dRsidefdxl = 0;
						dRsidefdxg = 0;


						dMul = DiffVisco(Ix, Iy, Iz, k, 0);
						dMug = DiffVisco(Ix, Iy, Iz, k, 1);
						dDiffdxl = DifDiffusion(Ix, Iy, Iz, i, k, 0);
						dDiffdxg = DifDiffusion(Ix, Iy, Iz, i, k, 1);

						if (k == i) {


							// Transfer function drside dxl dxg fdxl fdxg
							// moshtagh transfer Function jabejaie naft nesbat be xl Matrix
							dRsidedxl += ZERO_CONV * SI_C * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
							dRsidedxl += ZERO_CONV * SI_C * dE[Ix][Iy][Iz][k][0] * comp[Ix][Iy][Iz][i][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
							dRsidedxl += ZERO_CONV * -SI_C * DiffVisco(Ix, Iy, Iz, k, 0) * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] * porpor / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor)*(blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) * (porpor + fporpor);

							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (1)) {
								dRsidedxl += ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
								dRsidedxl += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								dRsidedxl += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsidedxl += ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
								dRsidedxl += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								dRsidedxl += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
							}

							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								dRsidedxl += ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
								dRsidedxl += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								dRsidedxl += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
							}

							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsidedxl += ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
								dRsidedxl += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								dRsidedxl += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);

								dRsidedxl += ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
								dRsidedxl += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								dRsidedxl += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1)) {
								dRsidedxl += ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
								dRsidedxl += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								dRsidedxl += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								dRsidedxl += ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
								dRsidedxl += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								dRsidedxl += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
							}



							// moshtagh transfer Function jabejaie naft nesbat be xl Fracture
							dRsidefdxl += ZERO_CONV * -SI_C * fDiffVisco(Ix, Iy, Iz, k, 0) * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] * fporpor / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor)*(blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) * (porpor + fporpor);

							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (1)) {
								dRsidefdxl += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsidefdxl += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
							}

/*
// 							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (1)) {
// 								dRsidefdxl += ZERO_DIFF * fdE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
// 								dRsidefdxl += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0];
// 								dRsidefdxl += ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
// 							}
*/

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1)) {
/*
// 								dRsidefdxl += ZERO_DIFF * fdE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
// 								dRsidefdxl += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0];
// 								dRsidefdxl += ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
*/

								dRsidefdxl += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
							}

							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsidefdxl += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
							}

/*
// 							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0)) {
// 								dRsidefdxl += ZERO_DIFF * fdE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
// 								dRsidefdxl += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0];
// 								dRsidefdxl += ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
// 							}
*/



							// moshtagh transfer Function jabejaie gaz nesbat be xg Matrix
							dRsidedxg += ZERO_CONV * SI_C * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor) / (porpor + fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));
							dRsidedxg += ZERO_CONV * SI_C * dE[Ix][Iy][Iz][k][1] * comp[Ix][Iy][Iz][i][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor) / (porpor + fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));
							dRsidedxg += ZERO_CONV * -SI_C * DiffVisco(Ix, Iy, Iz, k, 1) * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] * porpor / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor)*(blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1])) * (porpor + fporpor);

							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								dRsidedxg += ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
								dRsidedxg += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								dRsidedxg += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsidedxg += ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
								dRsidedxg += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								dRsidedxg += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
							}

							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (1)) {
								dRsidedxg += ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
								dRsidedxg += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								dRsidedxg += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
							}


							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1)) {
								dRsidedxg += ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
								dRsidedxg += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								dRsidedxg += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								dRsidedxg += ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
								dRsidedxg += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								dRsidedxg += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
							}

							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsidedxg += ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
								dRsidedxg += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								dRsidedxg += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

								dRsidedxg += ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
								dRsidedxg += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								dRsidedxg += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
							}




							// moshtagh transfer Function jabejaie gaz nesbat be xg Fracture
							dRsidefdxg += ZERO_CONV * -SI_C * fDiffVisco(Ix, Iy, Iz, k, 1) * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] * fporpor / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor)*(blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1])) * (porpor + fporpor);

							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								dRsidefdxg += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsidefdxg += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
							}

/*
// 							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
// 								dRsidefdxg += ZERO_DIFF * fdE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
// 								dRsidefdxg += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1];
// 								dRsidefdxg += ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
// 							}
*/

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								dRsidefdxg += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];

/*
// 								dRsidefdxg += ZERO_DIFF * fdE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
// 								dRsidefdxg += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1];
// 								dRsidefdxg += ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
*/
							}

/*
// 							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0)) {
// 								dRsidefdxg += ZERO_DIFF * fdE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
// 								dRsidefdxg += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1];
// 								dRsidefdxg += ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
// 							}
// 
// 							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0)) {
// 								dRsidefdxg += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
// 							}
// 							//
*/


							dLsidedxl = blockFProps[Ix][Iy][Iz][RO][0] + comp[Ix][Iy][Iz][i][0] * dE[Ix][Iy][Iz][k][0];
							dLsidedxg = blockFProps[Ix][Iy][Iz][RO][1] + comp[Ix][Iy][Iz][i][1] * dE[Ix][Iy][Iz][k][1];
							if (iWell != (-1)) {
								dQdxl = 0;
								dQdxg = 0;
							}
							else {
								dQdxl = Qo;
								dQdxg = Qg;
							}

							if (Ix < (Nx - 1)) {
								if (phaseStat[Ix + 1][Iy][Iz] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][RO][0] * gridDim[Ix + 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BMU][0] * gridDim[Ix + 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][0] * gridDim[Ix] * Makhraj - dMul * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix + 1][Iy][Iz][k][0] * gridDim[Ix + 1] * Coef*Makhraj - DiffVisco(Ix + 1, Iy, Iz, k, 0)*gridDim[Ix + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Ix] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][k][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Ix + 1] * (G_ACCG*blockFProps[Ix + 1][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix + 1][Iy][Iz][BGAM][0] * dE[Ix + 1][Iy][Iz][k][0] / blockFProps[Ix + 1][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BGAM][0] * gridDim[Ix + 1] * Coef) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

								if (transS[Ix + 1][Iy + 1][Iz + 1][0][0]) {
									dRsidedxl += comp[Ix + 1][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][1] * Moshtaq*(P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = (trans[Ix + 1][Iy + 1][Iz + 1][0][0] + comp[Ix + 1][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][1] * Bmoshtaq)*(P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

									//dRsidedxl+=comp[Ix+1][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxl+=(trans[Ix+1][Iy+1][Iz+1][2][0]+comp[Ix+1][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}
								else {
									dRsidedxl += (trans[Ix + 1][Iy + 1][Iz + 1][0][0] + comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

									//dRsidedxl+=(trans[Ix+1][Iy+1][Iz+1][2][0]+comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxl+=comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}

								porpor2 = porosity[Ix + 1][Iy][Iz] * (1 + cpor * (P[Ix + 2][Iy + 1][Iz + 1][1] - refP) + dcpor * (P[Ix + 2][Iy + 1][Iz + 1][1] - refP)*(P[Ix + 2][Iy + 1][Iz + 1][1] - refP));

								if (comp[Ix + 1][Iy][Iz][i][0] > comp[Ix][Iy][Iz][i][0]) {
									DupStream = diffusion[Ix + 1][Iy][Iz][i][0];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix + 1, Iy, Iz, i, k, 0);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix + 1][Iy][Iz][RO][0] * gridDim[Ix + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] * dCoefl;
								AAd *= (sat[Ix + 1][Iy][Iz][1] * gridDim[Ix + 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Ix] * dCoefl) / (gridDim[Ix + 1] + gridDim[Ix]);
								BBd = tor[Ix + 1][Iy][Iz] * gridDim[Ix + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Ix] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz] / (gridDim[Ix + 1] + gridDim[Ix]);
								DeltaX = comp[Ix + 1][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0];

								dAAddx = dE[Ix][Iy][Iz][k][0] * gridDim[Ix] * dCoefl;
								dAAddx2 = dE[Ix + 1][Iy][Iz][k][0] * gridDim[Ix + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								mBLNo = preConRow[Iz*(Nx*Ny) + Iy * Nx + Ix + 1];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;



								if (phaseStat[Ix + 1][Iy][Iz] == 1) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][RO][1] * gridDim[Ix + 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BMU][1] * gridDim[Ix + 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][1] * gridDim[Ix] * Makhraj - dMug * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix + 1][Iy][Iz][k][1] * gridDim[Ix + 1] * Coef*Makhraj - DiffVisco(Ix + 1, Iy, Iz, k, 1)*gridDim[Ix + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Ix] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][k][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Ix + 1] * (G_ACCG*blockFProps[Ix + 1][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix + 1][Iy][Iz][BGAM][1] * dE[Ix + 1][Iy][Iz][k][1] / blockFProps[Ix + 1][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BGAM][1] * gridDim[Ix + 1] * Coef) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

								if (transS[Ix + 1][Iy + 1][Iz + 1][1][0]) {
									dRsidedxg += comp[Ix + 1][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][2] * Moshtaq*(P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = (trans[Ix + 1][Iy + 1][Iz + 1][1][0] + comp[Ix + 1][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][2] * Bmoshtaq)*(P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

									//dRsidedxg+=comp[Ix+1][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxg+=(trans[Ix+1][Iy+1][Iz+1][3][0]+comp[Ix+1][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}
								else {
									dRsidedxg += (trans[Ix + 1][Iy + 1][Iz + 1][1][0] + comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

									//dRsidedxg+=(trans[Ix+1][Iy+1][Iz+1][3][0]+comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxg+=comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);

								}

								if (comp[Ix + 1][Iy][Iz][i][1] > comp[Ix][Iy][Iz][i][1]) {
									DupStream = diffusion[Ix + 1][Iy][Iz][i][1];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix + 1, Iy, Iz, i, k, 1);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix + 1][Iy][Iz][RO][1] * gridDim[Ix + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] * dCoefg;
								AAd *= (sat[Ix + 1][Iy][Iz][2] * gridDim[Ix + 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Ix] * dCoefg) / (gridDim[Ix + 1] + gridDim[Ix]);
								BBd = tor[Ix + 1][Iy][Iz] * gridDim[Ix + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Ix] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Nx+Iy]*gridDim[Nx+Ny+Iz]/(gridDim[Ix+1]+gridDim[Ix]);
								DeltaX = comp[Ix + 1][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1];

								dAAddx = dE[Ix][Iy][Iz][k][1] * gridDim[Ix] * dCoefg;
								dAAddx2 = dE[Ix + 1][Iy][Iz][k][1] * gridDim[Ix + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								if (phaseStat[Ix + 1][Iy][Iz]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;


							}

							if (Ix > 0) {
								if (phaseStat[Ix - 1][Iy][Iz] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][RO][0] * gridDim[Ix - 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][BMU][0] * gridDim[Ix - 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][0] * gridDim[Ix] * Makhraj - dMul * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix - 1][Iy][Iz][k][0] * gridDim[Ix - 1] * Coef*Makhraj - DiffVisco(Ix - 1, Iy, Iz, k, 0)*gridDim[Ix - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Ix] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][k][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Ix - 1] * (G_ACCG*blockFProps[Ix - 1][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix - 1][Iy][Iz][BGAM][0] * dE[Ix - 1][Iy][Iz][k][0] / blockFProps[Ix - 1][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][BGAM][0] * gridDim[Ix - 1] * Coef) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

								if (transS[Ix][Iy + 1][Iz + 1][0][0]) {
									dRsidedxl -= (trans[Ix][Iy + 1][Iz + 1][0][0] + comp[Ix][Iy][Iz][i][0] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);
									dBsidedxl = -comp[Ix][Iy][Iz][i][0] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);

									//dRsidedxl-=(trans[Ix][Iy+1][Iz+1][2][0]+comp[Ix][Iy][Iz][i][0]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1])*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
									//dBsidedxl-=comp[Ix][Iy][Iz][i][0]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								}
								else {
									dRsidedxl -= comp[Ix - 1][Iy][Iz][i][0] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][1] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);
									dBsidedxl = -(trans[Ix][Iy + 1][Iz + 1][0][0] + comp[Ix - 1][Iy][Iz][i][0] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][1] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);

									//dRsidedxl-=comp[Ix-1][Iy][Iz][i][0]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
									//dBsidedxl-=(trans[Ix][Iy+1][Iz+1][2][0]+comp[Ix-1][Iy][Iz][i][0]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][1])*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								}

								porpor2 = porosity[Ix - 1][Iy][Iz] * (1 + cpor * (P[Ix][Iy + 1][Iz + 1][1] - refP) + dcpor * (P[Ix][Iy + 1][Iz + 1][1] - refP)*(P[Ix][Iy + 1][Iz + 1][1] - refP));

								if (comp[Ix - 1][Iy][Iz][i][0] > comp[Ix][Iy][Iz][i][0]) {
									DupStream = diffusion[Ix - 1][Iy][Iz][i][0];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix - 1, Iy, Iz, i, k, 0);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix - 1][Iy][Iz][RO][0] * gridDim[Ix - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] * dCoefl;
								AAd *= (sat[Ix - 1][Iy][Iz][1] * gridDim[Ix - 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Ix] * dCoefl) / (gridDim[Ix - 1] + gridDim[Ix]);
								BBd = tor[Ix - 1][Iy][Iz] * gridDim[Ix - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Ix] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz] / (gridDim[Ix - 1] + gridDim[Ix]);
								DeltaX = comp[Ix - 1][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0];

								dAAddx = dE[Ix][Iy][Iz][k][0] * gridDim[Ix] * dCoefl;
								dAAddx2 = dE[Ix - 1][Iy][Iz][k][0] * gridDim[Ix - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += -NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += -NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								mBLNo = preConRow[Iz*(Nx*Ny) + Iy * Nx + Ix - 1];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;


								if (phaseStat[Ix - 1][Iy][Iz] == 1) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][RO][1] * gridDim[Ix - 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][BMU][1] * gridDim[Ix - 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][1] * gridDim[Ix] * Makhraj - dMug * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix - 1][Iy][Iz][k][1] * gridDim[Ix - 1] * Coef*Makhraj - DiffVisco(Ix - 1, Iy, Iz, k, 1)*gridDim[Ix - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Ix] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][k][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);
								BmoshtaqGama = gridDim[Ix - 1] * (G_ACCG*blockFProps[Ix - 1][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix - 1][Iy][Iz][BGAM][1] * dE[Ix - 1][Iy][Iz][k][1] / blockFProps[Ix - 1][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][BGAM][1] * gridDim[Ix - 1] * Coef) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

								if (transS[Ix][Iy + 1][Iz + 1][1][0]) {
									dRsidedxg -= (trans[Ix][Iy + 1][Iz + 1][1][0] + comp[Ix][Iy][Iz][i][1] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);
									dBsidedxg = -comp[Ix][Iy][Iz][i][1] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);

									//dRsidedxg-=(trans[Ix][Iy+1][Iz+1][3][0]+comp[Ix][Iy][Iz][i][1]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
									//dBsidedxg-=comp[Ix][Iy][Iz][i][1]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								}
								else {
									dRsidedxg -= comp[Ix - 1][Iy][Iz][i][1] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][2] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);
									dBsidedxg = -(trans[Ix][Iy + 1][Iz + 1][1][0] + comp[Ix - 1][Iy][Iz][i][1] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][2] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);

									//dRsidedxg-=comp[Ix-1][Iy][Iz][i][1]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
									//dBsidedxg-=(trans[Ix][Iy+1][Iz+1][3][0]+comp[Ix-1][Iy][Iz][i][1]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								}


								if (comp[Ix - 1][Iy][Iz][i][1] > comp[Ix][Iy][Iz][i][1]) {
									DupStream = diffusion[Ix - 1][Iy][Iz][i][1];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix - 1, Iy, Iz, i, k, 1);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix - 1][Iy][Iz][RO][1] * gridDim[Ix - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] * dCoefg;
								AAd *= (sat[Ix - 1][Iy][Iz][2] * gridDim[Ix - 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Ix] * dCoefg) / (gridDim[Ix - 1] + gridDim[Ix]);
								BBd = tor[Ix - 1][Iy][Iz] * gridDim[Ix - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Ix] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Nx+Iy]*gridDim[Nx+Ny+Iz]/(gridDim[Ix-1]+gridDim[Ix]);
								DeltaX = comp[Ix - 1][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1];

								dAAddx = dE[Ix][Iy][Iz][k][1] * gridDim[Ix] * dCoefg;
								dAAddx2 = dE[Ix - 1][Iy][Iz][k][1] * gridDim[Ix - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += -NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += -NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}


								if (phaseStat[Ix - 1][Iy][Iz]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;

							}

							if (Iy < (Ny - 1)) {
								if (phaseStat[Ix][Iy + 1][Iz] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][RO][0] * gridDim[Nx + Iy + 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][BMU][0] * gridDim[Nx + Iy + 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][0] * gridDim[Nx + Iy] * Makhraj - dMul * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix][Iy + 1][Iz][k][0] * gridDim[Nx + Iy + 1] * Coef*Makhraj - DiffVisco(Ix, Iy + 1, Iz, k, 0)*gridDim[Nx + Iy + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][k][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Iy + 1] * (G_ACCG*blockFProps[Ix][Iy + 1][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy + 1][Iz][BGAM][0] * dE[Ix][Iy + 1][Iz][k][0] / blockFProps[Ix][Iy + 1][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][BGAM][0] * gridDim[Nx + Iy + 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

								if (transS[Ix + 1][Iy + 1][Iz + 1][0][1]) {
									dRsidedxl += comp[Ix][Iy + 1][Iz][i][0] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][1] * Moshtaq*(P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = (trans[Ix + 1][Iy + 1][Iz + 1][0][1] + comp[Ix][Iy + 1][Iz][i][0] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][1] * Bmoshtaq)*(P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

									//dRsidedxl+=comp[Ix][Iy+1][Iz][i][0]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxl+=(trans[Ix+1][Iy+1][Iz+1][2][1]+comp[Ix][Iy+1][Iz][i][0]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}
								else {
									dRsidedxl += (trans[Ix + 1][Iy + 1][Iz + 1][0][1] + comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

									//dRsidedxl+=(trans[Ix+1][Iy+1][Iz+1][2][1]+comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxl+=comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}

								porpor2 = porosity[Ix][Iy + 1][Iz] * (1 + cpor * (P[Ix + 1][Iy + 2][Iz + 1][1] - refP) + dcpor * (P[Ix + 1][Iy + 2][Iz + 1][1] - refP)*(P[Ix + 1][Iy + 2][Iz + 1][1] - refP));
								if (comp[Ix][Iy + 1][Iz][i][0] > comp[Ix][Iy][Iz][i][0]) {
									DupStream = diffusion[Ix][Iy + 1][Iz][i][0];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix, Iy + 1, Iz, i, k, 0);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix][Iy + 1][Iz][RO][0] * gridDim[Nx + Iy + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] * dCoefl;
								AAd *= (sat[Ix][Iy + 1][Iz][1] * gridDim[Nx + Iy + 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Nx + Iy] * dCoefl) / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
								BBd = tor[Ix][Iy + 1][Iz] * gridDim[Nx + Iy + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Iy] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Ix] * gridDim[Nx + Ny + Iz] / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
								DeltaX = comp[Ix][Iy + 1][Iz][i][0] - comp[Ix][Iy][Iz][i][0];

								dAAddx = dE[Ix][Iy][Iz][k][0] * gridDim[Nx + Iy] * dCoefl;
								dAAddx2 = dE[Ix][Iy + 1][Iz][k][0] * gridDim[Nx + Iy + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								mBLNo = preConRow[Iz*(Nx*Ny) + (Iy + 1)*Nx + Ix];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;


								if (phaseStat[Ix][Iy + 1][Iz] == 1) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][RO][1] * gridDim[Nx + Iy + 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][BMU][1] * gridDim[Nx + Iy + 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][1] * gridDim[Nx + Iy] * Makhraj - dMug * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix][Iy + 1][Iz][k][1] * gridDim[Nx + Iy + 1] * Coef*Makhraj - DiffVisco(Ix, Iy + 1, Iz, k, 1)*gridDim[Nx + Iy + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][k][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Iy + 1] * (G_ACCG*blockFProps[Ix][Iy + 1][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy + 1][Iz][BGAM][1] * dE[Ix][Iy + 1][Iz][k][1] / blockFProps[Ix][Iy + 1][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][BGAM][1] * gridDim[Nx + Iy + 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

								if (transS[Ix + 1][Iy + 1][Iz + 1][1][1]) {
									dRsidedxg += comp[Ix][Iy + 1][Iz][i][1] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][2] * Moshtaq*(P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = (trans[Ix + 1][Iy + 1][Iz + 1][1][1] + comp[Ix][Iy + 1][Iz][i][1] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][2] * Bmoshtaq)*(P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

									//dRsidedxg+=comp[Ix][Iy+1][Iz][i][1]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxg+=(trans[Ix+1][Iy+1][Iz+1][3][1]+comp[Ix][Iy+1][Iz][i][1]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}
								else {
									dRsidedxg += (trans[Ix + 1][Iy + 1][Iz + 1][1][1] + comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

									//dRsidedxg+=(trans[Ix+1][Iy+1][Iz+1][3][1]+comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxg+=comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);

								}

								if (comp[Ix][Iy + 1][Iz][i][1] > comp[Ix][Iy][Iz][i][1]) {
									DupStream = diffusion[Ix][Iy + 1][Iz][i][1];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix, Iy + 1, Iz, i, k, 1);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix][Iy + 1][Iz][RO][1] * gridDim[Nx + Iy + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] * dCoefg;
								AAd *= (sat[Ix][Iy + 1][Iz][2] * gridDim[Nx + Iy + 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Nx + Iy] * dCoefg) / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
								BBd = tor[Ix][Iy + 1][Iz] * gridDim[Nx + Iy + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Iy] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Ix]*gridDim[Nx+Ny+Iz]/(gridDim[Nx+Iy+1]+gridDim[Nx+Iy]);
								DeltaX = comp[Ix][Iy + 1][Iz][i][1] - comp[Ix][Iy][Iz][i][1];

								dAAddx = dE[Ix][Iy][Iz][k][1] * gridDim[Nx + Iy] * dCoefg;
								dAAddx2 = dE[Ix][Iy + 1][Iz][k][1] * gridDim[Nx + Iy + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								if (phaseStat[Ix][Iy + 1][Iz]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;
							}

							if (Iy > 0) {
								if (phaseStat[Ix][Iy - 1][Iz] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][RO][0] * gridDim[Nx + Iy - 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][BMU][0] * gridDim[Nx + Iy - 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][0] * gridDim[Nx + Iy] * Makhraj - dMul * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix][Iy - 1][Iz][k][0] * gridDim[Nx + Iy - 1] * Coef*Makhraj - DiffVisco(Ix, Iy - 1, Iz, k, 0)*gridDim[Nx + Iy - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][k][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Iy - 1] * (G_ACCG*blockFProps[Ix][Iy - 1][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy - 1][Iz][BGAM][0] * dE[Ix][Iy - 1][Iz][k][0] / blockFProps[Ix][Iy - 1][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][BGAM][0] * gridDim[Nx + Iy - 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

								if (transS[Ix + 1][Iy][Iz + 1][0][1]) {
									dRsidedxl -= (trans[Ix + 1][Iy][Iz + 1][0][1] + comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);
									dBsidedxl = -comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);

									//dRsidedxl-=(trans[Ix+1][Iy][Iz+1][2][1]+comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][1])*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
									//dBsidedxl-=comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								}
								else {
									dRsidedxl -= comp[Ix][Iy - 1][Iz][i][0] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][1] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);
									dBsidedxl = -(trans[Ix + 1][Iy][Iz + 1][0][1] + comp[Ix][Iy - 1][Iz][i][0] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][1] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);

									//dRsidedxl-=comp[Ix][Iy-1][Iz][i][0]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
									//dBsidedxl-=(trans[Ix+1][Iy][Iz+1][2][1]+comp[Ix][Iy-1][Iz][i][0]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][1])*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								}

								porpor2 = porosity[Ix][Iy - 1][Iz] * (1 + cpor * (P[Ix + 1][Iy][Iz + 1][1] - refP) + dcpor * (P[Ix + 1][Iy][Iz + 1][1] - refP)*(P[Ix + 1][Iy][Iz + 1][1] - refP));
								if (comp[Ix][Iy - 1][Iz][i][0] > comp[Ix][Iy][Iz][i][0]) {
									DupStream = diffusion[Ix][Iy - 1][Iz][i][0];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix, Iy - 1, Iz, i, k, 0);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix][Iy - 1][Iz][RO][0] * gridDim[Nx + Iy - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] * dCoefl;
								AAd *= (sat[Ix][Iy - 1][Iz][1] * gridDim[Nx + Iy - 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Nx + Iy] * dCoefl) / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
								BBd = tor[Ix][Iy - 1][Iz] * gridDim[Nx + Iy - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Iy] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Ix] * gridDim[Nx + Ny + Iz] / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
								DeltaX = comp[Ix][Iy - 1][Iz][i][0] - comp[Ix][Iy][Iz][i][0];

								dAAddx = dE[Ix][Iy][Iz][k][0] * gridDim[Nx + Iy] * dCoefl;
								dAAddx2 = dE[Ix][Iy - 1][Iz][k][0] * gridDim[Nx + Iy - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += -NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += -NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								mBLNo = preConRow[Iz*(Nx*Ny) + (Iy - 1)*Nx + Ix];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;


								if (phaseStat[Ix][Iy - 1][Iz] == 1) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][RO][1] * gridDim[Nx + Iy - 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][BMU][1] * gridDim[Nx + Iy - 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][1] * gridDim[Nx + Iy] * Makhraj - dMug * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix][Iy - 1][Iz][k][1] * gridDim[Nx + Iy - 1] * Coef*Makhraj - DiffVisco(Ix, Iy - 1, Iz, k, 1)*gridDim[Nx + Iy - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][k][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Iy - 1] * (G_ACCG*blockFProps[Ix][Iy - 1][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy - 1][Iz][BGAM][1] * dE[Ix][Iy - 1][Iz][k][1] / blockFProps[Ix][Iy - 1][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][BGAM][1] * gridDim[Nx + Iy - 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

								if (transS[Ix + 1][Iy][Iz + 1][1][1]) {
									dRsidedxg -= (trans[Ix + 1][Iy][Iz + 1][1][1] + comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);
									dBsidedxg = -comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);

									//dRsidedxg-=(trans[Ix+1][Iy][Iz+1][3][1]+comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
									//dBsidedxg-=comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								}
								else {
									dRsidedxg -= comp[Ix][Iy - 1][Iz][i][1] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][2] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);
									dBsidedxg = -(trans[Ix + 1][Iy][Iz + 1][1][1] + comp[Ix][Iy - 1][Iz][i][1] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][2] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);

									//dRsidedxg-=comp[Ix][Iy-1][Iz][i][1]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
									//dBsidedxg-=(trans[Ix+1][Iy][Iz+1][3][1]+comp[Ix][Iy-1][Iz][i][1]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								}

								if (comp[Ix][Iy - 1][Iz][i][1] > comp[Ix][Iy][Iz][i][1]) {
									DupStream = diffusion[Ix][Iy - 1][Iz][i][1];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix, Iy - 1, Iz, i, k, 1);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix][Iy - 1][Iz][RO][1] * gridDim[Nx + Iy - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] * dCoefg;
								AAd *= (sat[Ix][Iy - 1][Iz][2] * gridDim[Nx + Iy - 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Nx + Iy] * dCoefg) / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
								BBd = tor[Ix][Iy - 1][Iz] * gridDim[Nx + Iy - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Iy] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Ix]*gridDim[Nx+Ny+Iz]/(gridDim[Nx+Iy-1]+gridDim[Nx+Iy]);
								DeltaX = comp[Ix][Iy - 1][Iz][i][1] - comp[Ix][Iy][Iz][i][1];

								dAAddx = dE[Ix][Iy][Iz][k][1] * gridDim[Nx + Iy] * dCoefg;
								dAAddx2 = dE[Ix][Iy - 1][Iz][k][1] * gridDim[Nx + Iy - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += -NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += -NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}



								if (phaseStat[Ix][Iy - 1][Iz]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;
							}

							if (Iz < (Nz - 1)) {
								if (phaseStat[Ix][Iy][Iz + 1] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][RO][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][BMU][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][0] * gridDim[Nx + Ny + Iz] * Makhraj - dMul * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix][Iy][Iz + 1][k][0] * gridDim[Nx + Ny + Iz + 1] * Coef*Makhraj - DiffVisco(Ix, Iy, Iz + 1, k, 0)*gridDim[Nx + Ny + Iz + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][k][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz + 1] * (G_ACCG*blockFProps[Ix][Iy][Iz + 1][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz + 1][BGAM][0] * dE[Ix][Iy][Iz + 1][k][0] / blockFProps[Ix][Iy][Iz + 1][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][BGAM][0] * gridDim[Nx + Ny + Iz + 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

								if (transS[Ix + 1][Iy + 1][Iz + 1][0][2]) {
									dRsidedxl += comp[Ix][Iy][Iz + 1][i][0] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][1] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = (trans[Ix + 1][Iy + 1][Iz + 1][0][2] + comp[Ix][Iy][Iz + 1][i][0] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][1] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

									dRsidedxl += comp[Ix][Iy][Iz + 1][i][0] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz + 1][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
									dBsidedxl += (trans[Ix + 1][Iy + 1][Iz + 1][2][2] + comp[Ix][Iy][Iz + 1][i][0] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
								}
								else {
									dRsidedxl += (trans[Ix + 1][Iy + 1][Iz + 1][0][2] + comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

									dRsidedxl += (trans[Ix + 1][Iy + 1][Iz + 1][2][2] + comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
									dBsidedxl += comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
								}

								porpor2 = porosity[Ix][Iy][Iz + 1] * (1 + cpor * (P[Ix + 1][Iy + 1][Iz + 2][1] - refP) + dcpor * (P[Ix + 1][Iy + 1][Iz + 2][1] - refP)*(P[Ix + 1][Iy + 1][Iz + 2][1] - refP));
								if (comp[Ix][Iy][Iz + 1][i][0] > comp[Ix][Iy][Iz][i][0]) {
									DupStream = diffusion[Ix][Iy][Iz + 1][i][0];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix, Iy, Iz + 1, i, k, 0);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix][Iy][Iz + 1][RO][0] * gridDim[Nx + Ny + Iz + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] * dCoefl;
								AAd *= (sat[Ix][Iy][Iz + 1][1] * gridDim[Nx + Ny + Iz + 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Nx + Ny + Iz] * dCoefl) / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
								BBd = tor[Ix][Iy][Iz + 1] * gridDim[Nx + Ny + Iz + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Ny + Iz] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Ix] * gridDim[Nx + Iy] / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
								DeltaX = comp[Ix][Iy][Iz + 1][i][0] - comp[Ix][Iy][Iz][i][0];

								dAAddx = dE[Ix][Iy][Iz][k][0] * gridDim[Nx + Ny + Iz] * dCoefl;
								dAAddx2 = dE[Ix][Iy][Iz + 1][k][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								mBLNo = preConRow[(Iz + 1)*(Nx*Ny) + Iy * Nx + Ix];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;


								if (phaseStat[Ix][Iy][Iz + 1] == 1) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][RO][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][BMU][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][1] * gridDim[Nx + Ny + Iz] * Makhraj - dMug * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix][Iy][Iz + 1][k][1] * gridDim[Nx + Ny + Iz + 1] * Coef*Makhraj - DiffVisco(Ix, Iy, Iz + 1, k, 1)*gridDim[Nx + Ny + Iz + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][k][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz + 1] * (G_ACCG*blockFProps[Ix][Iy][Iz + 1][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz + 1][BGAM][1] * dE[Ix][Iy][Iz + 1][k][1] / blockFProps[Ix][Iy][Iz + 1][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][BGAM][1] * gridDim[Nx + Ny + Iz + 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

								if (transS[Ix + 1][Iy + 1][Iz + 1][1][2]) {
									dRsidedxg += comp[Ix][Iy][Iz + 1][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][2] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = (trans[Ix + 1][Iy + 1][Iz + 1][1][2] + comp[Ix][Iy][Iz + 1][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][2] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

									dRsidedxg += comp[Ix][Iy][Iz + 1][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
									dBsidedxg += (trans[Ix + 1][Iy + 1][Iz + 1][3][2] + comp[Ix][Iy][Iz + 1][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
								}
								else {
									dRsidedxg += (trans[Ix + 1][Iy + 1][Iz + 1][1][2] + comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

									dRsidedxg += (trans[Ix + 1][Iy + 1][Iz + 1][3][2] + comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
									dBsidedxg += comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);

								}

								if (comp[Ix][Iy][Iz + 1][i][1] > comp[Ix][Iy][Iz][i][1]) {
									DupStream = diffusion[Ix][Iy][Iz + 1][i][1];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix, Iy, Iz + 1, i, k, 1);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix][Iy][Iz + 1][RO][1] * gridDim[Nx + Ny + Iz + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] * dCoefg;
								AAd *= (sat[Ix][Iy][Iz + 1][2] * gridDim[Nx + Ny + Iz + 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Nx + Ny + Iz] * dCoefg) / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
								BBd = tor[Ix][Iy][Iz + 1] * gridDim[Nx + Ny + Iz + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Ny + Iz] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Ix]*gridDim[Nx+Iy]/(gridDim[Nx+Ny+Iz+1]+gridDim[Nx+Ny+Iz]);
								DeltaX = comp[Ix][Iy][Iz + 1][i][1] - comp[Ix][Iy][Iz][i][1];

								dAAddx = dE[Ix][Iy][Iz][k][1] * gridDim[Nx + Ny + Iz] * dCoefg;
								dAAddx2 = dE[Ix][Iy][Iz + 1][k][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}


								if (phaseStat[Ix][Iy][Iz + 1]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;
							}

							if (Iz > 0) {
								if (phaseStat[Ix][Iy][Iz - 1] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][RO][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][BMU][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][0] * gridDim[Nx + Ny + Iz] * Makhraj - dMul * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix][Iy][Iz - 1][k][0] * gridDim[Nx + Ny + Iz - 1] * Coef*Makhraj - DiffVisco(Ix, Iy, Iz - 1, k, 0)*gridDim[Nx + Ny + Iz - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][k][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz - 1] * (G_ACCG*blockFProps[Ix][Iy][Iz - 1][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz - 1][BGAM][0] * dE[Ix][Iy][Iz - 1][k][0] / blockFProps[Ix][Iy][Iz - 1][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][BGAM][0] * gridDim[Nx + Ny + Iz - 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

								if (transS[Ix + 1][Iy + 1][Iz][0][2]) {
									dRsidedxl -= (trans[Ix + 1][Iy + 1][Iz][0][2] + comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);
									dBsidedxl = -comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);

									dRsidedxl -= (trans[Ix + 1][Iy + 1][Iz][2][2] + comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
									dBsidedxl -= comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								}
								else {
									dRsidedxl -= comp[Ix][Iy][Iz - 1][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][1] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);
									dBsidedxl = -(trans[Ix + 1][Iy + 1][Iz][0][2] + comp[Ix][Iy][Iz - 1][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][1] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);

									dRsidedxl -= comp[Ix][Iy][Iz - 1][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
									dBsidedxl -= (trans[Ix + 1][Iy + 1][Iz][2][2] + comp[Ix][Iy][Iz - 1][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								}

								porpor2 = porosity[Ix][Iy][Iz - 1] * (1 + cpor * (P[Ix + 1][Iy + 1][Iz][1] - refP) + dcpor * (P[Ix + 1][Iy + 1][Iz][1] - refP)*(P[Ix + 1][Iy + 1][Iz][1] - refP));
								if (comp[Ix][Iy][Iz - 1][i][0] > comp[Ix][Iy][Iz][i][0]) {
									DupStream = diffusion[Ix][Iy][Iz - 1][i][0];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix, Iy, Iz - 1, i, k, 0);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix][Iy][Iz - 1][RO][0] * gridDim[Nx + Ny + Iz - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] * dCoefl;
								AAd *= (sat[Ix][Iy][Iz - 1][1] * gridDim[Nx + Ny + Iz - 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Nx + Ny + Iz] * dCoefl) / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
								BBd = tor[Ix][Iy][Iz - 1] * gridDim[Nx + Ny + Iz - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Ny + Iz] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Ix] * gridDim[Nx + Iy] / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
								DeltaX = comp[Ix][Iy][Iz - 1][i][0] - comp[Ix][Iy][Iz][i][0];

								dAAddx = dE[Ix][Iy][Iz][k][0] * gridDim[Nx + Ny + Iz] * dCoefl;
								dAAddx2 = dE[Ix][Iy][Iz - 1][k][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += -NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += -NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								mBLNo = preConRow[(Iz - 1)*(Nx*Ny) + Iy * Nx + Ix];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;


								if (phaseStat[Ix][Iy][Iz - 1] == 1) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][RO][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][BMU][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][1] * gridDim[Nx + Ny + Iz] * Makhraj - dMug * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix][Iy][Iz - 1][k][1] * gridDim[Nx + Ny + Iz - 1] * Coef*Makhraj - DiffVisco(Ix, Iy, Iz - 1, k, 1)*gridDim[Nx + Ny + Iz - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][k][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz - 1] * (G_ACCG*blockFProps[Ix][Iy][Iz - 1][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz - 1][BGAM][1] * dE[Ix][Iy][Iz - 1][k][1] / blockFProps[Ix][Iy][Iz - 1][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][BGAM][1] * gridDim[Nx + Ny + Iz - 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

								if (transS[Ix + 1][Iy + 1][Iz][1][2]) {
									dRsidedxg -= (trans[Ix + 1][Iy + 1][Iz][1][2] + comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);
									dBsidedxg = -comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);

									dRsidedxg -= (trans[Ix + 1][Iy + 1][Iz][3][2] + comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
									dBsidedxg -= comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								}
								else {
									dRsidedxg -= comp[Ix][Iy][Iz - 1][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][2] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);
									dBsidedxg = -(trans[Ix + 1][Iy + 1][Iz][1][2] + comp[Ix][Iy][Iz - 1][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][2] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);

									dRsidedxg -= comp[Ix][Iy][Iz - 1][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
									dBsidedxg -= (trans[Ix + 1][Iy + 1][Iz][3][2] + comp[Ix][Iy][Iz - 1][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								}

								if (comp[Ix][Iy][Iz - 1][i][1] > comp[Ix][Iy][Iz][i][1]) {
									DupStream = diffusion[Ix][Iy][Iz - 1][i][1];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix, Iy, Iz - 1, i, k, 1);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix][Iy][Iz - 1][RO][1] * gridDim[Nx + Ny + Iz - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] * dCoefg;
								AAd *= (sat[Ix][Iy][Iz - 1][2] * gridDim[Nx + Ny + Iz - 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Nx + Ny + Iz] * dCoefg) / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
								BBd = tor[Ix][Iy][Iz - 1] * gridDim[Nx + Ny + Iz - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Ny + Iz] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Ix]*gridDim[Nx+Iy]/(gridDim[Nx+Ny+Iz-1]+gridDim[Nx+Ny+Iz]);
								DeltaX = comp[Ix][Iy][Iz - 1][i][1] - comp[Ix][Iy][Iz][i][1];

								dAAddx = dE[Ix][Iy][Iz][k][1] * gridDim[Nx + Ny + Iz] * dCoefg;
								dAAddx2 = dE[Ix][Iy][Iz - 1][k][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += -NNd * (-MMd * DupStream + dDdx * MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += -NNd * (MMd*DupStream + dDdx2 * MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}


								if (phaseStat[Ix][Iy][Iz - 1]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;
							}

							/////////////////////////////////////////////////Sadeq//k=i/////////////////////////////////
							if (fphaseStat[Ix][Iy][Iz] == 1) {
								//dRsidefdxl = 0;
								Jac1Row[JRowIndex] = dRsidefdxl;
								Jac1Col[JRowIndex] = FracEq + k;
								JRowIndex++;
							}
							else if (fphaseStat[Ix][Iy][Iz] == (-1)) {
								//dRsidefdxg = 0;
								Jac1Row[JRowIndex] = dRsidefdxg;
								Jac1Col[JRowIndex] = FracEq + k;
								JRowIndex++;
							}
							else {
								//dRsidefdxl = 0;
								Jac1Row[JRowIndex] = dRsidefdxl;
								Jac1Col[JRowIndex] = FracEq + k;
								JRowIndex++;
								//dRsidefdxg = 0;
								Jac1Row[JRowIndex] = dRsidefdxg;
								Jac1Col[JRowIndex] = FracEq + Nc + k;
								JRowIndex++;
							}
							////////////////////////sadeq/////////////////////////
						}
						else {
							dRsidedxl = 0;
							dRsidedxg = 0;
							dRsidefdxl = 0;
							dRsidefdxg = 0;
							// Transfer function drside dxl dxg fdxl fdxg
							// moshtagh transfer Function jabejaie naft nesbat be xl Matrix
							//dRsidedxl += ZERO_CONV * SI_C * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
							dRsidedxl += ZERO_CONV * SI_C * dE[Ix][Iy][Iz][k][0] * comp[Ix][Iy][Iz][i][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
							dRsidedxl += ZERO_CONV * -SI_C * DiffVisco(Ix, Iy, Iz, k, 0) * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] * porpor / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor)*(blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) * (porpor + fporpor);

							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (1)) {
								dRsidedxl += ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
								//dRsidedxl += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								dRsidedxl += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsidedxl += ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
								//dRsidedxl += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								dRsidedxl += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
							}

							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								dRsidedxl += ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
								//dRsidedxl += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								dRsidedxl += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
							}

							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsidedxl += ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
								//dRsidedxl += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								dRsidedxl += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);

								dRsidedxl += ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
								//dRsidedxl += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								dRsidedxl += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1)) {
								dRsidedxl += ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
								//dRsidedxl += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								dRsidedxl += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0]);
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								dRsidedxl += ZERO_DIFF * dE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
								//dRsidedxl += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
								dRsidedxl += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * (EdgeComp[i][0] - comp[Ix][Iy][Iz][i][0]);
							}



							// moshtagh transfer Function jabejaie naft nesbat be xl Fracture
							dRsidefdxl += ZERO_CONV * -SI_C * fDiffVisco(Ix, Iy, Iz, k, 0) * comp[Ix][Iy][Iz][i][0] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] * fporpor / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor)*(blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) * (porpor + fporpor);

/*
// 							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (1)) {
// 								//dRsidefdxl += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
// 							}
// 
// 							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0)) {
// 								//dRsidefdxl += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
// 							}
// 
// 							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (1)) {
// 								dRsidefdxl += ZERO_DIFF * fdE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
// 								//dRsidefdxl += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0];
// 								dRsidefdxl += ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
// 							}
// 
// 							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1)) {
// 								dRsidefdxl += ZERO_DIFF * fdE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
// 								//dRsidefdxl += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0];
// 								dRsidefdxl += ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
// 
// 								//dRsidefdxl += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
// 							}
// 
// 							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0)) {
// 								//dRsidefdxl += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][1] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][0] * diffusion[Ix][Iy][Iz][i][0];
// 							}
// 
// 							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0)) {
// 								dRsidefdxl += ZERO_DIFF * fdE[Ix][Iy][Iz][k][0] * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
// 								//dRsidefdxl += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * fdiffusion[Ix][Iy][Iz][i][0];
// 								dRsidefdxl += ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 0) * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][1] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][0] * (fcomp[Ix][Iy][Iz][i][0] - EdgeComp[i][0]);
// 							}
*/



							// moshtagh transfer Function jabejaie gaz nesbat be xg Matrix
							//dRsidedxg += ZERO_CONV * SI_C * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor) / (porpor + fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));
							dRsidedxg += ZERO_CONV * SI_C * dE[Ix][Iy][Iz][k][1] * comp[Ix][Iy][Iz][i][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor) / (porpor + fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));
							dRsidedxg += ZERO_CONV * -SI_C * DiffVisco(Ix, Iy, Iz, k, 1) * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] * porpor / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor)*(blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1])) * (porpor + fporpor);

							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								dRsidedxg += ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
								//dRsidedxg += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								dRsidedxg += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsidedxg += ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
								//dRsidedxg += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								dRsidedxg += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
							}

							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (1)) {
								dRsidedxg += ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
								//dRsidedxg += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								dRsidedxg += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
							}


							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (1)) {
								dRsidedxg += ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
								//dRsidedxg += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								dRsidedxg += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
							}

							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1)) {
								dRsidedxg += ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
								//dRsidedxg += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								dRsidedxg += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
							}

							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0)) {
								dRsidedxg += ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);
								//dRsidedxg += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								dRsidedxg += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1]);

								dRsidedxg += ZERO_DIFF * dE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * diffusion[Ix][Iy][Iz][i][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
								//dRsidedxg += ZERO_DIFF * -ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
								dRsidedxg += ZERO_DIFF * DifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * (EdgeComp[i][1] - comp[Ix][Iy][Iz][i][1]);
							}




							// moshtagh transfer Function jabejaie gaz nesbat be xg Fracture
							dRsidefdxg += ZERO_CONV * -SI_C * fDiffVisco(Ix, Iy, Iz, k, 1) * comp[Ix][Iy][Iz][i][1] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] * fporpor / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor)*(blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1])) * (porpor + fporpor);

/*
// 							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
// 								//dRsidefdxg += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
// 							}
// 
// 							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (0)) {
// 								//dRsidefdxg += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
// 							}
// 
// 							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (-1)) {
// 								dRsidefdxg += ZERO_DIFF * fdE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
// 								//dRsidefdxg += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1];
// 								dRsidefdxg += ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
// 							}
// 
// 							if (phaseStat[Ix][Iy][Iz] == (0) && fphaseStat[Ix][Iy][Iz] == (-1)) {
// 								//dRsidefdxg += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
// 
// 								dRsidefdxg += ZERO_DIFF * fdE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
// 								//dRsidefdxg += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1];
// 								dRsidefdxg += ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
// 							}
// 
// 							if (phaseStat[Ix][Iy][Iz] == (1) && fphaseStat[Ix][Iy][Iz] == (0)) {
// 								dRsidefdxg += ZERO_DIFF * fdE[Ix][Iy][Iz][k][1] * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fdiffusion[Ix][Iy][Iz][i][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
// 								//dRsidefdxg += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * fdiffusion[Ix][Iy][Iz][i][1];
// 								dRsidefdxg += ZERO_DIFF * fDifDiffusion(Ix, Iy, Iz, i, k, 1) * ShapeFactor_1(Ix, Iy, Iz) * fsat[Ix][Iy][Iz][2] * fporpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * fblockFProps[Ix][Iy][Iz][RO][1] * (fcomp[Ix][Iy][Iz][i][1] - EdgeComp[i][1]);
// 							}
// 
// 							if (phaseStat[Ix][Iy][Iz] == (-1) && fphaseStat[Ix][Iy][Iz] == (0)) {
// 								//dRsidefdxg += ZERO_DIFF * ShapeFactor_1(Ix, Iy, Iz) * sat[Ix][Iy][Iz][2] * porpor *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / tor[Ix][Iy][Iz] * blockFProps[Ix][Iy][Iz][RO][1] * diffusion[Ix][Iy][Iz][i][1];
// 							}
// 							//
*/


							dLsidedxl = comp[Ix][Iy][Iz][i][0] * dE[Ix][Iy][Iz][k][0];
							dLsidedxg = comp[Ix][Iy][Iz][i][1] * dE[Ix][Iy][Iz][k][1];
							dQdxl = 0;
							dQdxg = 0;



							if (Ix < (Nx - 1)) {
								if (phaseStat[Ix + 1][Iy][Iz] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][RO][0] * gridDim[Ix + 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BMU][0] * gridDim[Ix + 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][0] * gridDim[Ix] * Makhraj - dMul * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix + 1][Iy][Iz][k][0] * gridDim[Ix + 1] * Coef*Makhraj - DiffVisco(Ix + 1, Iy, Iz, k, 0)*gridDim[Ix + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Ix] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][k][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Ix + 1] * (G_ACCG*blockFProps[Ix + 1][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix + 1][Iy][Iz][BGAM][0] * dE[Ix + 1][Iy][Iz][k][0] / blockFProps[Ix + 1][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BGAM][0] * gridDim[Ix + 1] * Coef) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

								if (transS[Ix + 1][Iy + 1][Iz + 1][0][0]) {
									dRsidedxl += comp[Ix + 1][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][1] * Moshtaq*(P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = (comp[Ix + 1][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][1] * Bmoshtaq)*(P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

									//dRsidedxl+=comp[Ix+1][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxl+=(comp[Ix+1][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}
								else {
									dRsidedxl += (comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

									//dRsidedxl+=(comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxl+=comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}

								porpor2 = porosity[Ix + 1][Iy][Iz] * (1 + cpor * (P[Ix + 2][Iy + 1][Iz + 1][1] - refP) + dcpor * (P[Ix + 2][Iy + 1][Iz + 1][1] - refP)*(P[Ix + 2][Iy + 1][Iz + 1][1] - refP));

								if (comp[Ix + 1][Iy][Iz][i][0] > comp[Ix][Iy][Iz][i][0]) {
									DupStream = diffusion[Ix + 1][Iy][Iz][i][0];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix + 1, Iy, Iz, i, k, 0);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix + 1][Iy][Iz][RO][0] * gridDim[Ix + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] * dCoefl;
								AAd *= (sat[Ix + 1][Iy][Iz][1] * gridDim[Ix + 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Ix] * dCoefl) / (gridDim[Ix + 1] + gridDim[Ix]);
								BBd = tor[Ix + 1][Iy][Iz] * gridDim[Ix + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Ix] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz] / (gridDim[Ix + 1] + gridDim[Ix]);
								DeltaX = comp[Ix + 1][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0];

								dAAddx = dE[Ix][Iy][Iz][k][0] * gridDim[Ix] * dCoefl;
								dAAddx2 = dE[Ix + 1][Iy][Iz][k][0] * gridDim[Ix + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								mBLNo = preConRow[Iz*(Nx*Ny) + Iy * Nx + Ix + 1];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;


								if (phaseStat[Ix + 1][Iy][Iz] == 1) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][RO][1] * gridDim[Ix + 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BMU][1] * gridDim[Ix + 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][1] * gridDim[Ix] * Makhraj - dMug * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix + 1][Iy][Iz][k][1] * gridDim[Ix + 1] * Coef*Makhraj - DiffVisco(Ix + 1, Iy, Iz, k, 1)*gridDim[Ix + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Ix] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][k][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Ix + 1] * (G_ACCG*blockFProps[Ix + 1][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix + 1][Iy][Iz][BGAM][1] * dE[Ix + 1][Iy][Iz][k][1] / blockFProps[Ix + 1][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BGAM][1] * gridDim[Ix + 1] * Coef) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

								if (transS[Ix + 1][Iy + 1][Iz + 1][1][0]) {
									dRsidedxg += comp[Ix + 1][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][2] * Moshtaq*(P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = (comp[Ix + 1][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][2] * Bmoshtaq)*(P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

									//dRsidedxg+=comp[Ix+1][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxg+=(comp[Ix+1][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}
								else {
									dRsidedxg += (comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

									//dRsidedxg+=(comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxg+=comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);

								}

								if (comp[Ix + 1][Iy][Iz][i][1] > comp[Ix][Iy][Iz][i][1]) {
									DupStream = diffusion[Ix + 1][Iy][Iz][i][1];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix + 1, Iy, Iz, i, k, 1);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix + 1][Iy][Iz][RO][1] * gridDim[Ix + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] * dCoefg;
								AAd *= (sat[Ix + 1][Iy][Iz][2] * gridDim[Ix + 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Ix] * dCoefg) / (gridDim[Ix + 1] + gridDim[Ix]);
								BBd = tor[Ix + 1][Iy][Iz] * gridDim[Ix + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Ix] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Nx+Iy]*gridDim[Nx+Ny+Iz]/(gridDim[Ix+1]+gridDim[Ix]);
								DeltaX = comp[Ix + 1][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1];

								dAAddx = dE[Ix][Iy][Iz][k][1] * gridDim[Ix] * dCoefg;
								dAAddx2 = dE[Ix + 1][Iy][Iz][k][1] * gridDim[Ix + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}


								if (phaseStat[Ix + 1][Iy][Iz]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;
							}

							if (Ix > 0) {
								if (phaseStat[Ix - 1][Iy][Iz] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][RO][0] * gridDim[Ix - 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][BMU][0] * gridDim[Ix - 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][0] * gridDim[Ix] * Makhraj - dMul * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix - 1][Iy][Iz][k][0] * gridDim[Ix - 1] * Coef*Makhraj - DiffVisco(Ix - 1, Iy, Iz, k, 0)*gridDim[Ix - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Ix] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][k][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Ix - 1] * (G_ACCG*blockFProps[Ix - 1][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix - 1][Iy][Iz][BGAM][0] * dE[Ix - 1][Iy][Iz][k][0] / blockFProps[Ix - 1][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][BGAM][0] * gridDim[Ix - 1] * Coef) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

								if (transS[Ix][Iy + 1][Iz + 1][0][0]) {
									dRsidedxl -= (comp[Ix][Iy][Iz][i][0] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);
									dBsidedxl = -comp[Ix][Iy][Iz][i][0] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);

									//dRsidedxl-=(comp[Ix][Iy][Iz][i][0]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1])*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
									//dBsidedxl-=comp[Ix][Iy][Iz][i][0]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								}
								else {
									dRsidedxl -= comp[Ix - 1][Iy][Iz][i][0] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][1] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);
									dBsidedxl = -(comp[Ix - 1][Iy][Iz][i][0] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][1] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);

									//dRsidedxl-=comp[Ix-1][Iy][Iz][i][0]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
									//dBsidedxl-=(comp[Ix-1][Iy][Iz][i][0]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][1])*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								}

								porpor2 = porosity[Ix - 1][Iy][Iz] * (1 + cpor * (P[Ix][Iy + 1][Iz + 1][1] - refP) + dcpor * (P[Ix][Iy + 1][Iz + 1][1] - refP)*(P[Ix][Iy + 1][Iz + 1][1] - refP));

								if (comp[Ix - 1][Iy][Iz][i][0] > comp[Ix][Iy][Iz][i][0]) {
									DupStream = diffusion[Ix - 1][Iy][Iz][i][0];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix - 1, Iy, Iz, i, k, 0);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix - 1][Iy][Iz][RO][0] * gridDim[Ix - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] * dCoefl;
								AAd *= (sat[Ix - 1][Iy][Iz][1] * gridDim[Ix - 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Ix] * dCoefl) / (gridDim[Ix - 1] + gridDim[Ix]);
								BBd = tor[Ix - 1][Iy][Iz] * gridDim[Ix - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Ix] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz] / (gridDim[Ix - 1] + gridDim[Ix]);
								DeltaX = comp[Ix - 1][Iy][Iz][i][0] - comp[Ix][Iy][Iz][i][0];

								dAAddx = dE[Ix][Iy][Iz][k][0] * gridDim[Ix] * dCoefl;
								dAAddx2 = dE[Ix - 1][Iy][Iz][k][0] * gridDim[Ix - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += -NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += -NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}


								mBLNo = preConRow[Iz*(Nx*Ny) + Iy * Nx + Ix - 1];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;


								if (phaseStat[Ix - 1][Iy][Iz]) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][RO][1] * gridDim[Ix - 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][BMU][1] * gridDim[Ix - 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][1] * gridDim[Ix] * Makhraj - dMug * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix - 1][Iy][Iz][k][1] * gridDim[Ix - 1] * Coef*Makhraj - DiffVisco(Ix - 1, Iy, Iz, k, 1)*gridDim[Ix - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Ix] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][k][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Ix - 1] * (G_ACCG*blockFProps[Ix - 1][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix - 1][Iy][Iz][BGAM][1] * dE[Ix - 1][Iy][Iz][k][1] / blockFProps[Ix - 1][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][BGAM][1] * gridDim[Ix - 1] * Coef) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

								if (transS[Ix][Iy + 1][Iz + 1][1][0]) {
									dRsidedxg -= (comp[Ix][Iy][Iz][i][1] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);
									dBsidedxg = -comp[Ix][Iy][Iz][i][1] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);

									//dRsidedxg-=(comp[Ix][Iy][Iz][i][1]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
									//dBsidedxg-=comp[Ix][Iy][Iz][i][1]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								}
								else {
									dRsidedxg -= comp[Ix - 1][Iy][Iz][i][1] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][2] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);
									dBsidedxg = -(comp[Ix - 1][Iy][Iz][i][1] * IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][2] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);

									//dRsidedxg-=comp[Ix-1][Iy][Iz][i][1]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
									//dBsidedxg-=(comp[Ix-1][Iy][Iz][i][1]*IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								}

								if (comp[Ix - 1][Iy][Iz][i][1] > comp[Ix][Iy][Iz][i][1]) {
									DupStream = diffusion[Ix - 1][Iy][Iz][i][1];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix - 1, Iy, Iz, i, k, 1);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix - 1][Iy][Iz][RO][1] * gridDim[Ix - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] * dCoefg;
								AAd *= (sat[Ix - 1][Iy][Iz][2] * gridDim[Ix - 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Ix] * dCoefg) / (gridDim[Ix - 1] + gridDim[Ix]);
								BBd = tor[Ix - 1][Iy][Iz] * gridDim[Ix - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Ix] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Nx+Iy]*gridDim[Nx+Ny+Iz]/(gridDim[Ix-1]+gridDim[Ix]);
								DeltaX = comp[Ix - 1][Iy][Iz][i][1] - comp[Ix][Iy][Iz][i][1];

								dAAddx = dE[Ix][Iy][Iz][k][1] * gridDim[Ix] * dCoefg;
								dAAddx2 = dE[Ix - 1][Iy][Iz][k][1] * gridDim[Ix - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += -NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += -NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}


								if (phaseStat[Ix - 1][Iy][Iz]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;
							}

							if (Iy < (Ny - 1)) {
								if (phaseStat[Ix][Iy + 1][Iz] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][RO][0] * gridDim[Nx + Iy + 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][BMU][0] * gridDim[Nx + Iy + 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][0] * gridDim[Nx + Iy] * Makhraj - dMul * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix][Iy + 1][Iz][k][0] * gridDim[Nx + Iy + 1] * Coef*Makhraj - DiffVisco(Ix, Iy + 1, Iz, k, 0)*gridDim[Nx + Iy + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][k][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Iy + 1] * (G_ACCG*blockFProps[Ix][Iy + 1][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy + 1][Iz][BGAM][0] * dE[Ix][Iy + 1][Iz][k][0] / blockFProps[Ix][Iy + 1][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][BGAM][0] * gridDim[Nx + Iy + 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

								if (transS[Ix + 1][Iy + 1][Iz + 1][0][1]) {
									dRsidedxl += comp[Ix][Iy + 1][Iz][i][0] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][1] * Moshtaq*(P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = (comp[Ix][Iy + 1][Iz][i][0] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][1] * Bmoshtaq)*(P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

									//dRsidedxl+=comp[Ix][Iy+1][Iz][i][0]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxl+=(comp[Ix][Iy+1][Iz][i][0]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}
								else {
									dRsidedxl += (comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

									//dRsidedxl+=(comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxl+=comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}

								porpor2 = porosity[Ix][Iy + 1][Iz] * (1 + cpor * (P[Ix + 1][Iy + 2][Iz + 1][1] - refP) + dcpor * (P[Ix + 1][Iy + 2][Iz + 1][1] - refP)*(P[Ix + 1][Iy + 2][Iz + 1][1] - refP));
								if (comp[Ix][Iy + 1][Iz][i][0] > comp[Ix][Iy][Iz][i][0]) {
									DupStream = diffusion[Ix][Iy + 1][Iz][i][0];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix, Iy + 1, Iz, i, k, 0);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix][Iy + 1][Iz][RO][0] * gridDim[Nx + Iy + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] * dCoefl;
								AAd *= (sat[Ix][Iy + 1][Iz][1] * gridDim[Nx + Iy + 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Nx + Iy] * dCoefl) / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
								BBd = tor[Ix][Iy + 1][Iz] * gridDim[Nx + Iy + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Iy] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Ix] * gridDim[Nx + Ny + Iz] / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
								DeltaX = comp[Ix][Iy + 1][Iz][i][0] - comp[Ix][Iy][Iz][i][0];

								dAAddx = dE[Ix][Iy][Iz][k][0] * gridDim[Nx + Iy] * dCoefl;
								dAAddx2 = dE[Ix][Iy + 1][Iz][k][0] * gridDim[Nx + Iy + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}


								mBLNo = preConRow[Iz*(Nx*Ny) + (Iy + 1)*Nx + Ix];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;


								if (phaseStat[Ix][Iy + 1][Iz] == 1) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][RO][1] * gridDim[Nx + Iy + 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][BMU][1] * gridDim[Nx + Iy + 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][1] * gridDim[Nx + Iy] * Makhraj - dMug * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix][Iy + 1][Iz][k][1] * gridDim[Nx + Iy + 1] * Coef*Makhraj - DiffVisco(Ix, Iy + 1, Iz, k, 1)*gridDim[Nx + Iy + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][k][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Iy + 1] * (G_ACCG*blockFProps[Ix][Iy + 1][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy + 1][Iz][BGAM][1] * dE[Ix][Iy + 1][Iz][k][1] / blockFProps[Ix][Iy + 1][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][BGAM][1] * gridDim[Nx + Iy + 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

								if (transS[Ix + 1][Iy + 1][Iz + 1][1][1]) {
									dRsidedxg += comp[Ix][Iy + 1][Iz][i][1] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][2] * Moshtaq*(P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = (comp[Ix][Iy + 1][Iz][i][1] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][2] * Bmoshtaq)*(P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

									//dRsidedxg+=comp[Ix][Iy+1][Iz][i][1]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxg+=(comp[Ix][Iy+1][Iz][i][1]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								}
								else {
									dRsidedxg += (comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

									//dRsidedxg+=(comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
									//dBsidedxg+=comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);

								}

								if (comp[Ix][Iy + 1][Iz][i][1] > comp[Ix][Iy][Iz][i][1]) {
									DupStream = diffusion[Ix][Iy + 1][Iz][i][1];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix, Iy + 1, Iz, i, k, 1);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix][Iy + 1][Iz][RO][1] * gridDim[Nx + Iy + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] * dCoefg;
								AAd *= (sat[Ix][Iy + 1][Iz][2] * gridDim[Nx + Iy + 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Nx + Iy] * dCoefg) / (gridDim[Nx + Iy + 1] + gridDim[Nx + Iy]);
								BBd = tor[Ix][Iy + 1][Iz] * gridDim[Nx + Iy + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Iy] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Ix]*gridDim[Nx+Ny+Iz]/(gridDim[Nx+Iy+1]+gridDim[Nx+Iy]);
								DeltaX = comp[Ix][Iy + 1][Iz][i][1] - comp[Ix][Iy][Iz][i][1];

								dAAddx = dE[Ix][Iy][Iz][k][1] * gridDim[Nx + Iy] * dCoefg;
								dAAddx2 = dE[Ix][Iy + 1][Iz][k][1] * gridDim[Nx + Iy + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								if (phaseStat[Ix][Iy + 1][Iz]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;
							}

							if (Iy > 0) {
								if (phaseStat[Ix][Iy - 1][Iz] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][RO][0] * gridDim[Nx + Iy - 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][BMU][0] * gridDim[Nx + Iy - 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][0] * gridDim[Nx + Iy] * Makhraj - dMul * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix][Iy - 1][Iz][k][0] * gridDim[Nx + Iy - 1] * Coef*Makhraj - DiffVisco(Ix, Iy - 1, Iz, k, 0)*gridDim[Nx + Iy - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][k][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Iy - 1] * (G_ACCG*blockFProps[Ix][Iy - 1][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy - 1][Iz][BGAM][0] * dE[Ix][Iy - 1][Iz][k][0] / blockFProps[Ix][Iy - 1][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][BGAM][0] * gridDim[Nx + Iy - 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

								if (transS[Ix + 1][Iy][Iz + 1][0][1]) {
									dRsidedxl -= (comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);
									dBsidedxl = -comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);

									//dRsidedxl-=(comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][1])*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
									//dBsidedxl-=comp[Ix][Iy][Iz][i][0]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								}
								else {
									dRsidedxl -= comp[Ix][Iy - 1][Iz][i][0] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][1] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);
									dBsidedxl = -(comp[Ix][Iy - 1][Iz][i][0] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][1] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);

									//dRsidedxl-=comp[Ix][Iy-1][Iz][i][0]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
									//dBsidedxl-=(comp[Ix][Iy-1][Iz][i][0]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][1])*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								}

								porpor2 = porosity[Ix][Iy - 1][Iz] * (1 + cpor * (P[Ix + 1][Iy][Iz + 1][1] - refP) + dcpor * (P[Ix + 1][Iy][Iz + 1][1] - refP)*(P[Ix + 1][Iy][Iz + 1][1] - refP));
								if (comp[Ix][Iy - 1][Iz][i][0] > comp[Ix][Iy][Iz][i][0]) {
									DupStream = diffusion[Ix][Iy - 1][Iz][i][0];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix, Iy - 1, Iz, i, k, 0);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix][Iy - 1][Iz][RO][0] * gridDim[Nx + Iy - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] * dCoefl;
								AAd *= (sat[Ix][Iy - 1][Iz][1] * gridDim[Nx + Iy - 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Nx + Iy] * dCoefl) / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
								BBd = tor[Ix][Iy - 1][Iz] * gridDim[Nx + Iy - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Iy] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Ix] * gridDim[Nx + Ny + Iz] / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
								DeltaX = comp[Ix][Iy - 1][Iz][i][0] - comp[Ix][Iy][Iz][i][0];

								dAAddx = dE[Ix][Iy][Iz][k][0] * gridDim[Nx + Iy] * dCoefl;
								dAAddx2 = dE[Ix][Iy - 1][Iz][k][0] * gridDim[Nx + Iy - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += -NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += -NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}


								mBLNo = preConRow[Iz*(Nx*Ny) + (Iy - 1)*Nx + Ix];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;


								if (phaseStat[Ix][Iy - 1][Iz] == 1) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][RO][1] * gridDim[Nx + Iy - 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][BMU][1] * gridDim[Nx + Iy - 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][1] * gridDim[Nx + Iy] * Makhraj - dMug * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix][Iy - 1][Iz][k][1] * gridDim[Nx + Iy - 1] * Coef*Makhraj - DiffVisco(Ix, Iy - 1, Iz, k, 1)*gridDim[Nx + Iy - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][k][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Iy - 1] * (G_ACCG*blockFProps[Ix][Iy - 1][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy - 1][Iz][BGAM][1] * dE[Ix][Iy - 1][Iz][k][1] / blockFProps[Ix][Iy - 1][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][BGAM][1] * gridDim[Nx + Iy - 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

								if (transS[Ix + 1][Iy][Iz + 1][1][1]) {
									dRsidedxg -= (comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);
									dBsidedxg = -comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);

									//dRsidedxg-=(comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
									//dBsidedxg-=comp[Ix][Iy][Iz][i][1]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								}
								else {
									dRsidedxg -= comp[Ix][Iy - 1][Iz][i][1] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][2] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);
									dBsidedxg = -(comp[Ix][Iy - 1][Iz][i][1] * IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][2] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);

									//dRsidedxg-=comp[Ix][Iy-1][Iz][i][1]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
									//dBsidedxg-=(comp[Ix][Iy-1][Iz][i][1]*IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								}

								if (comp[Ix][Iy - 1][Iz][i][1] > comp[Ix][Iy][Iz][i][1]) {
									DupStream = diffusion[Ix][Iy - 1][Iz][i][1];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix, Iy - 1, Iz, i, k, 1);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix][Iy - 1][Iz][RO][1] * gridDim[Nx + Iy - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] * dCoefg;
								AAd *= (sat[Ix][Iy - 1][Iz][2] * gridDim[Nx + Iy - 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Nx + Iy] * dCoefg) / (gridDim[Nx + Iy - 1] + gridDim[Nx + Iy]);
								BBd = tor[Ix][Iy - 1][Iz] * gridDim[Nx + Iy - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Iy] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Ix]*gridDim[Nx+Ny+Iz]/(gridDim[Nx+Iy-1]+gridDim[Nx+Iy]);
								DeltaX = comp[Ix][Iy - 1][Iz][i][1] - comp[Ix][Iy][Iz][i][1];

								dAAddx = dE[Ix][Iy][Iz][k][1] * gridDim[Nx + Iy] * dCoefg;
								dAAddx2 = dE[Ix][Iy - 1][Iz][k][1] * gridDim[Nx + Iy - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += -NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += -NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}


								if (phaseStat[Ix][Iy - 1][Iz]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;
							}

							if (Iz < (Nz - 1)) {
								if (phaseStat[Ix][Iy][Iz + 1] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][RO][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][BMU][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][0] * gridDim[Nx + Ny + Iz] * Makhraj - dMul * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix][Iy][Iz + 1][k][0] * gridDim[Nx + Ny + Iz + 1] * Coef*Makhraj - DiffVisco(Ix, Iy, Iz + 1, k, 0)*gridDim[Nx + Ny + Iz + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][k][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz + 1] * (G_ACCG*blockFProps[Ix][Iy][Iz + 1][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz + 1][BGAM][0] * dE[Ix][Iy][Iz + 1][k][0] / blockFProps[Ix][Iy][Iz + 1][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][BGAM][0] * gridDim[Nx + Ny + Iz + 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

								if (transS[Ix + 1][Iy + 1][Iz + 1][0][2]) {
									dRsidedxl += comp[Ix][Iy][Iz + 1][i][0] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][1] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = (comp[Ix][Iy][Iz + 1][i][0] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][1] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

									dRsidedxl += comp[Ix][Iy][Iz + 1][i][0] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
									dBsidedxl += (comp[Ix][Iy][Iz + 1][i][0] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
								}
								else {
									dRsidedxl += (comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
									dBsidedxl = comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

									dRsidedxl += (comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
									dBsidedxl += comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
								}

								porpor2 = porosity[Ix][Iy][Iz + 1] * (1 + cpor * (P[Ix + 1][Iy + 1][Iz + 2][1] - refP) + dcpor * (P[Ix + 1][Iy + 1][Iz + 2][1] - refP)*(P[Ix + 1][Iy + 1][Iz + 2][1] - refP));
								if (comp[Ix][Iy][Iz + 1][i][0] > comp[Ix][Iy][Iz][i][0]) {
									DupStream = diffusion[Ix][Iy][Iz + 1][i][0];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix, Iy, Iz + 1, i, k, 0);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix][Iy][Iz + 1][RO][0] * gridDim[Nx + Ny + Iz + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] * dCoefl;
								AAd *= (sat[Ix][Iy][Iz + 1][1] * gridDim[Nx + Ny + Iz + 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Nx + Ny + Iz] * dCoefl) / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
								BBd = tor[Ix][Iy][Iz + 1] * gridDim[Nx + Ny + Iz + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Ny + Iz] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Ix] * gridDim[Nx + Iy] / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
								DeltaX = comp[Ix][Iy][Iz + 1][i][0] - comp[Ix][Iy][Iz][i][0];

								dAAddx = dE[Ix][Iy][Iz][k][0] * gridDim[Nx + Ny + Iz] * dCoefl;
								dAAddx2 = dE[Ix][Iy][Iz + 1][k][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								mBLNo = preConRow[(Iz + 1)*(Nx*Ny) + Iy * Nx + Ix];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;


								if (phaseStat[Ix][Iy][Iz + 1] == 1) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][RO][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][BMU][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][1] * gridDim[Nx + Ny + Iz] * Makhraj - dMug * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix][Iy][Iz + 1][k][1] * gridDim[Nx + Ny + Iz + 1] * Coef*Makhraj - DiffVisco(Ix, Iy, Iz + 1, k, 1)*gridDim[Nx + Ny + Iz + 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][k][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz + 1] * (G_ACCG*blockFProps[Ix][Iy][Iz + 1][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz + 1][BGAM][1] * dE[Ix][Iy][Iz + 1][k][1] / blockFProps[Ix][Iy][Iz + 1][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][BGAM][1] * gridDim[Nx + Ny + Iz + 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

								if (transS[Ix + 1][Iy + 1][Iz + 1][1][2]) {
									dRsidedxg += comp[Ix][Iy][Iz + 1][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][2] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = (comp[Ix][Iy][Iz + 1][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][2] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

									dRsidedxg += comp[Ix][Iy][Iz + 1][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
									dBsidedxg += (comp[Ix][Iy][Iz + 1][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
								}
								else {
									dRsidedxg += (comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
									dBsidedxg = comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

									dRsidedxg += (comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
									dBsidedxg += comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);

								}

								if (comp[Ix][Iy][Iz + 1][i][1] > comp[Ix][Iy][Iz][i][1]) {
									DupStream = diffusion[Ix][Iy][Iz + 1][i][1];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix, Iy, Iz + 1, i, k, 1);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix][Iy][Iz + 1][RO][1] * gridDim[Nx + Ny + Iz + 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] * dCoefg;
								AAd *= (sat[Ix][Iy][Iz + 1][2] * gridDim[Nx + Ny + Iz + 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Nx + Ny + Iz] * dCoefg) / (gridDim[Nx + Ny + Iz + 1] + gridDim[Nx + Ny + Iz]);
								BBd = tor[Ix][Iy][Iz + 1] * gridDim[Nx + Ny + Iz + 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Ny + Iz] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Ix]*gridDim[Nx+Iy]/(gridDim[Nx+Ny+Iz+1]+gridDim[Nx+Ny+Iz]);
								DeltaX = comp[Ix][Iy][Iz + 1][i][1] - comp[Ix][Iy][Iz][i][1];

								dAAddx = dE[Ix][Iy][Iz][k][1] * gridDim[Nx + Ny + Iz] * dCoefg;
								dAAddx2 = dE[Ix][Iy][Iz + 1][k][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}


								if (phaseStat[Ix][Iy][Iz + 1]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;
							}

							if (Iz > 0) {
								if (phaseStat[Ix][Iy][Iz - 1] == (-1)) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][RO][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][BMU][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][0] * gridDim[Nx + Ny + Iz] * Makhraj - dMul * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix][Iy][Iz - 1][k][0] * gridDim[Nx + Ny + Iz - 1] * Coef*Makhraj - DiffVisco(Ix, Iy, Iz - 1, k, 0)*gridDim[Nx + Ny + Iz - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][k][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz - 1] * (G_ACCG*blockFProps[Ix][Iy][Iz - 1][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz - 1][BGAM][0] * dE[Ix][Iy][Iz - 1][k][0] / blockFProps[Ix][Iy][Iz - 1][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][BGAM][0] * gridDim[Nx + Ny + Iz - 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

								if (transS[Ix + 1][Iy + 1][Iz][0][2]) {
									dRsidedxl -= (comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);
									dBsidedxl = -comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);

									dRsidedxl -= (comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][1])*(Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
									dBsidedxl -= comp[Ix][Iy][Iz][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								}
								else {
									dRsidedxl -= comp[Ix][Iy][Iz - 1][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][1] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);
									dBsidedxl = -(comp[Ix][Iy][Iz - 1][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][1] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);

									dRsidedxl -= -comp[Ix][Iy][Iz - 1][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
									dBsidedxl -= -(comp[Ix][Iy][Iz - 1][i][0] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][1])*(Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								}

								porpor2 = porosity[Ix][Iy][Iz - 1] * (1 + cpor * (P[Ix + 1][Iy + 1][Iz][1] - refP) + dcpor * (P[Ix + 1][Iy + 1][Iz][1] - refP)*(P[Ix + 1][Iy + 1][Iz][1] - refP));
								if (comp[Ix][Iy][Iz - 1][i][0] > comp[Ix][Iy][Iz][i][0]) {
									DupStream = diffusion[Ix][Iy][Iz - 1][i][0];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix, Iy, Iz - 1, i, k, 0);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][0];
									dDdx = dDiffdxl;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix][Iy][Iz - 1][RO][0] * gridDim[Nx + Ny + Iz - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] * dCoefl;
								AAd *= (sat[Ix][Iy][Iz - 1][1] * gridDim[Nx + Ny + Iz - 1] * Coef + sat[Ix][Iy][Iz][1] * gridDim[Nx + Ny + Iz] * dCoefl) / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
								BBd = tor[Ix][Iy][Iz - 1] * gridDim[Nx + Ny + Iz - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Ny + Iz] * dCoefl / porpor;
								MMd = AAd / BBd;
								NNd = 2 * gridDim[Ix] * gridDim[Nx + Iy] / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
								DeltaX = comp[Ix][Iy][Iz - 1][i][0] - comp[Ix][Iy][Iz][i][0];

								dAAddx = dE[Ix][Iy][Iz][k][0] * gridDim[Nx + Ny + Iz] * dCoefl;
								dAAddx2 = dE[Ix][Iy][Iz - 1][k][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefl) {
									dRsidedxl += -NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxl += -NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}

								mBLNo = preConRow[(Iz - 1)*(Nx*Ny) + Iy * Nx + Ix];
								Jac1Row[JRowIndex] = -dBsidedxl * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo + k;
								JRowIndex++;


								if (phaseStat[Ix][Iy][Iz - 1] == 1) Coef = 0;
								else Coef = 1;

								Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][RO][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
								Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][BMU][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
								Moshtaq = (dE[Ix][Iy][Iz][k][1] * gridDim[Nx + Ny + Iz] * Makhraj - dMug * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
								Bmoshtaq = (dE[Ix][Iy][Iz - 1][k][1] * gridDim[Nx + Ny + Iz - 1] * Coef*Makhraj - DiffVisco(Ix, Iy, Iz - 1, k, 1)*gridDim[Nx + Ny + Iz - 1] * Coef*Surat) / (Makhraj*Makhraj);

								MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][k][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);
								BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz - 1] * (G_ACCG*blockFProps[Ix][Iy][Iz - 1][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz - 1][BGAM][1] * dE[Ix][Iy][Iz - 1][k][1] / blockFProps[Ix][Iy][Iz - 1][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

								tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][BGAM][1] * gridDim[Nx + Ny + Iz - 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

								if (transS[Ix + 1][Iy + 1][Iz][1][2]) {
									dRsidedxg -= (comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);
									dBsidedxg = -comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);

									dRsidedxg -= (comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
									dBsidedxg -= comp[Ix][Iy][Iz][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								}
								else {
									dRsidedxg -= comp[Ix][Iy][Iz - 1][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][2] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);
									dBsidedxg = -(comp[Ix][Iy][Iz - 1][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][2] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);

									dRsidedxg -= comp[Ix][Iy][Iz - 1][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
									dBsidedxg -= (comp[Ix][Iy][Iz - 1][i][1] * IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								}

								if (comp[Ix][Iy][Iz - 1][i][1] > comp[Ix][Iy][Iz][i][1]) {
									DupStream = diffusion[Ix][Iy][Iz - 1][i][1];
									dDdx = 0;
									dDdx2 = DifDiffusion(Ix, Iy, Iz - 1, i, k, 1);
								}
								else {
									DupStream = diffusion[Ix][Iy][Iz][i][1];
									dDdx = dDiffdxg;
									dDdx2 = 0;
								}
								AAd = blockFProps[Ix][Iy][Iz - 1][RO][1] * gridDim[Nx + Ny + Iz - 1] * Coef + blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] * dCoefg;
								AAd *= (sat[Ix][Iy][Iz - 1][2] * gridDim[Nx + Ny + Iz - 1] * Coef + sat[Ix][Iy][Iz][2] * gridDim[Nx + Ny + Iz] * dCoefg) / (gridDim[Nx + Ny + Iz - 1] + gridDim[Nx + Ny + Iz]);
								BBd = tor[Ix][Iy][Iz - 1] * gridDim[Nx + Ny + Iz - 1] * Coef / porpor2 + tor[Ix][Iy][Iz] * gridDim[Nx + Ny + Iz] * dCoefg / porpor;
								MMd = AAd / BBd;
								//NNd=2*gridDim[Ix]*gridDim[Nx+Iy]/(gridDim[Nx+Ny+Iz-1]+gridDim[Nx+Ny+Iz]);
								DeltaX = comp[Ix][Iy][Iz - 1][i][1] - comp[Ix][Iy][Iz][i][1];

								dAAddx = dE[Ix][Iy][Iz][k][1] * gridDim[Nx + Ny + Iz] * dCoefg;
								dAAddx2 = dE[Ix][Iy][Iz - 1][k][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
								dMMddx = dAAddx / BBd;
								dMMddx2 = dAAddx2 / BBd;

								if (Coef && dCoefg) {
									dRsidedxg += -NNd * (dDdx*MMd*DeltaX + dMMddx * DupStream*DeltaX);
									dBsidedxg += -NNd * (dDdx2*MMd*DeltaX + dMMddx2 * DupStream*DeltaX);
								}



								if (phaseStat[Ix][Iy][Iz - 1]) reCol2 = Nc;
								else reCol2 = 0;
								Jac1Row[JRowIndex] = -dBsidedxg * Coef;
								//Jac1Row[JRowIndex]=0;
								Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
								JRowIndex++;
							}

							/////////////////////////////////////////////////Sadeq//k!=i/////////////////////////////////
							if (fphaseStat[Ix][Iy][Iz] == 1) {
								//dRsidefdxl = 0;
								Jac1Row[JRowIndex] = dRsidefdxl;
								Jac1Col[JRowIndex] = FracEq + k;
								JRowIndex++;
							}
							else if (fphaseStat[Ix][Iy][Iz] == (-1)) {
								//dRsidefdxg = 0;
								Jac1Row[JRowIndex] = dRsidefdxg;
								Jac1Col[JRowIndex] = FracEq + k;
								JRowIndex++;
							}
							else {
								//dRsidefdxl = 0;
								Jac1Row[JRowIndex] = dRsidefdxl;
								Jac1Col[JRowIndex] = FracEq + k;
								JRowIndex++;
								//dRsidefdxg = 0;
								Jac1Row[JRowIndex] = dRsidefdxg;
								Jac1Col[JRowIndex] = FracEq + Nc + k;
								JRowIndex++;
							}
							////////////////////////sadeq/////////////////////////
						}
						//jac[BLNo+Nc+i][BLNo+k]=(Vb/Dt)*porpor*sat[Ix][Iy][Iz][1]*dLsidedxl-dQdxl;
						if (phaseStat[Ix][Iy][Iz] != -1) {
							Jac1Row[JRowIndex] = (Vb / Dt)*porpor*sat[Ix][Iy][Iz][1] * dLsidedxl - dQdxl - dRsidedxl;
							//Jac1Row[JRowIndex]=(Vb/Dt)*porpor*sat[Ix][Iy][Iz][1]*dLsidedxl-dQdxl;
							Jac1Col[JRowIndex] = jacCol + k;
							JRowIndex++;
						}

						//jac[BLNo+Nc+i][BLNo+Nc+k]=(Vb/Dt)*porpor*sat[Ix][Iy][Iz][2]*dLsidedxg-dQdxg;
						if (phaseStat[Ix][Iy][Iz] != 1) {
							Jac1Row[JRowIndex] = (Vb / Dt)*porpor*sat[Ix][Iy][Iz][2] * dLsidedxg - dQdxg - dRsidedxg;
							//Jac1Row[JRowIndex]=(Vb/Dt)*porpor*sat[Ix][Iy][Iz][2]*dLsidedxg-dQdxg;
							Jac1Col[JRowIndex] = jacCol + Nc + k - reCol;
							JRowIndex++;
						}

					}


				}
				else if (BENo < (Nc)) {

					LSide = (Vb / Dt)*(porpor*(blockFProps[Ix][Iy][Iz][RO][0] * sat[Ix][Iy][Iz][1] + blockFProps[Ix][Iy][Iz][RO][1] * sat[Ix][Iy][Iz][2]) - preProp[Ix][Iy][Iz][Nc - 1]);
					RSide = trans[Ix + 1][Iy + 1][Iz + 1][0][0] * (P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) - trans[Ix][Iy + 1][Iz + 1][0][0] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);
					RSide += trans[Ix + 1][Iy + 1][Iz + 1][0][1] * (P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) - trans[Ix + 1][Iy][Iz + 1][0][1] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);
					RSide += trans[Ix + 1][Iy + 1][Iz + 1][0][2] * (P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) - trans[Ix + 1][Iy + 1][Iz][0][2] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);
					RSide += trans[Ix + 1][Iy + 1][Iz + 1][1][0] * (P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) - trans[Ix][Iy + 1][Iz + 1][1][0] * (P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);
					RSide += trans[Ix + 1][Iy + 1][Iz + 1][1][1] * (P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) - trans[Ix + 1][Iy][Iz + 1][1][1] * (P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);
					RSide += trans[Ix + 1][Iy + 1][Iz + 1][1][2] * (P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) - trans[Ix + 1][Iy + 1][Iz][1][2] * (P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);

					RSide += trans[Ix + 1][Iy + 1][Iz + 1][2][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - trans[Ix][Iy + 1][Iz + 1][2][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
					RSide += trans[Ix + 1][Iy + 1][Iz + 1][2][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - trans[Ix + 1][Iy][Iz + 1][2][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
					RSide += trans[Ix + 1][Iy + 1][Iz + 1][2][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]) - trans[Ix + 1][Iy + 1][Iz][2][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
					RSide += trans[Ix + 1][Iy + 1][Iz + 1][3][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - trans[Ix][Iy + 1][Iz + 1][3][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
					RSide += trans[Ix + 1][Iy + 1][Iz + 1][3][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - trans[Ix + 1][Iy][Iz + 1][3][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
					RSide += trans[Ix + 1][Iy + 1][Iz + 1][3][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]) - trans[Ix + 1][Iy + 1][Iz][3][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);

					////////////////////////////Transfer Function


					RSide += ZERO_CONV * SI_C * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
					RSide += ZERO_CONV * SI_C * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) *(gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor) / (porpor + fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));

					//////////////////////
					RSide += Qo + Qg;


					dLsidedp = (Vb / Dt)*(sat[Ix][Iy][Iz][1] * (blockFProps[Ix][Iy][Iz][RO][0] * dPordp + dE[Ix][Iy][Iz][Nc][0] * porpor) + sat[Ix][Iy][Iz][2] * (blockFProps[Ix][Iy][Iz][RO][1] * dPordp + dE[Ix][Iy][Iz][Nc][1] * porpor));
					dLsidedSo = (Vb / Dt)*(porpor*blockFProps[Ix][Iy][Iz][RO][0]);
					dLsidedSg = (Vb / Dt)*(porpor*blockFProps[Ix][Iy][Iz][RO][1]);

					dRsidefdp = 0;
					dRsidedp = 0;
					// Transfer Function dRside dp fdp
					//moshtagh transfer Function jabejaie naft nesbat be feshar matrix
					dRsidedp += ZERO_CONV * SI_C * dE[Ix][Iy][Iz][Nc][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
					dRsidedp += ZERO_CONV * -SI_C * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor));
					dRsidedp += ZERO_CONV * -SI_C * (DiffVisco(Ix, Iy, Iz, Nc, 0) * porpor + dPordp * blockFProps[Ix][Iy][Iz][BMU][0]) * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor)*(blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) * (porpor + fporpor);
					dRsidedp += ZERO_CONV * SI_C * dPordp * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / (blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					//moshtagh transfer Function jabejaie gaz nesbat be feshar matrix
					dRsidedp += ZERO_CONV * SI_C * dE[Ix][Iy][Iz][Nc][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor) / (porpor + fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));
					dRsidedp += ZERO_CONV * -SI_C * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor) / (porpor + fporpor));
					dRsidedp += ZERO_CONV * -SI_C * (DiffVisco(Ix, Iy, Iz, Nc, 1) * porpor + dPordp * blockFProps[Ix][Iy][Iz][BMU][1]) * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor)*(blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1])) * (porpor + fporpor);
					dRsidedp += ZERO_CONV * SI_C * dPordp * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / (blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));

					//moshtagh transfer Function jabejaie naft nesbat be feshar Fracture
					dRsidefdp += ZERO_CONV * SI_C * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor));
					dRsidefdp += ZERO_CONV * -SI_C * (fDiffVisco(Ix, Iy, Iz, Nc, 0) * fporpor + fdPordp * fblockFProps[Ix][Iy][Iz][BMU][0]) * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor)*(blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) * (porpor + fporpor);
					dRsidefdp += ZERO_CONV * SI_C * fdPordp * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / (blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					//moshtagh transfer Function jabejaie gaz nesbat be feshar Fracture
					dRsidefdp += ZERO_CONV * SI_C * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor) / (porpor + fporpor));
					dRsidefdp += ZERO_CONV * -SI_C * (fDiffVisco(Ix, Iy, Iz, Nc, 1) * fporpor + fdPordp * fblockFProps[Ix][Iy][Iz][BMU][1]) * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor)*(blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1])) * (porpor + fporpor);
					dRsidefdp += ZERO_CONV * SI_C * fdPordp * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / (blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));
					//


					dRsidedp += trans[Ix + 1][Iy + 1][Iz + 1][0][0] + trans[Ix][Iy + 1][Iz + 1][0][0];
					dRsidedp += trans[Ix + 1][Iy + 1][Iz + 1][0][1] + trans[Ix + 1][Iy][Iz + 1][0][1];
					dRsidedp += trans[Ix + 1][Iy + 1][Iz + 1][0][2] + trans[Ix + 1][Iy + 1][Iz][0][2];
					dRsidedp += trans[Ix + 1][Iy + 1][Iz + 1][1][0] + trans[Ix][Iy + 1][Iz + 1][1][0];
					dRsidedp += trans[Ix + 1][Iy + 1][Iz + 1][1][1] + trans[Ix + 1][Iy][Iz + 1][1][1];
					dRsidedp += trans[Ix + 1][Iy + 1][Iz + 1][1][2] + trans[Ix + 1][Iy + 1][Iz][1][2];

					//jac[BLNo+2*Nc-1][BLNo+(2*Nc)]=PCoeff*(dLsidedp+dRsidedp);
					dMul = DiffVisco(Ix, Iy, Iz, Nc, 0);
					dMug = DiffVisco(Ix, Iy, Iz, Nc, 1);

					dRsidedSw = 0;
					dRsidedSg = 0;
					dRsidedSo = 0;
					dRsidefdSo = 0;
					dRsidefdSg = 0;
					dRsidefdSw = 0;

					//Transfer Function dRside satuaration 
					// moshtagh transfer Function jabejaie naft nesbat be So Matrix
					dRsidedSo += ZERO_CONV * SI_C * f_m_drelperm[1][4] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					// moshtagh transfer Function jabejaie naft nesbat be So Fracture
					dRsidefdSo += ZERO_CONV * SI_C * f_m_drelperm[1][9] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					// moshtagh transfer Function jabejaie naft nesbat be Sg Matrix
					dRsidedSg += ZERO_CONV * SI_C * f_m_drelperm[1][2] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					// moshtagh transfer Function jabejaie gaz nesbat be Sg Matrix
					dRsidedSg += ZERO_CONV * SI_C * f_m_drelperm[2][3] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor) / (porpor + fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));

					// moshtagh transfer Function jabejaie naft nesbat be Sg Fracture 
					dRsidefdSg += ZERO_CONV * SI_C * f_m_drelperm[1][7] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					// moshtagh transfer Function jabejaie gaz nesbat be Sg Fracture
					dRsidefdSg += ZERO_CONV * SI_C * f_m_drelperm[2][8] * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor) / (porpor + fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));

					// moshtagh transfer Function jabejaie naft nesbat be Sw Matrix
					dRsidedSw += ZERO_CONV * SI_C * f_m_drelperm[1][1] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

					// moshtagh transfer Function jabejaie naft nesbat be Sw Fracture
					dRsidefdSw += ZERO_CONV * SI_C * f_m_drelperm[1][6] * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
					//


					if (Ix < (Nx - 1)) {
						if (phaseStat[Ix + 1][Iy][Iz]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[Iz*(Nx*Ny) + Iy * Nx + Ix + 1] - reCol2;

						dsw = trans[Ix + 1][Iy + 1][Iz + 1][4][0] * (P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) + trans[Ix + 1][Iy + 1][Iz + 1][6][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (transS[Ix + 1][Iy + 1][Iz + 1][0][0]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dso = trans[Ix + 1][Iy + 1][Iz + 1][10][0] * (P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) + trans[Ix + 1][Iy + 1][Iz + 1][11][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (transS[Ix + 1][Iy + 1][Iz + 1][0][0]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix + 1][Iy][Iz] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;

						dsgo = trans[Ix + 1][Iy + 1][Iz + 1][8][0] * (P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) + trans[Ix + 1][Iy + 1][Iz + 1][9][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						dsgg = trans[Ix + 1][Iy + 1][Iz + 1][5][0] * (P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + trans[Ix + 1][Iy + 1][Iz + 1][7][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (transS[Ix + 1][Iy + 1][Iz + 1][0][0]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix + 1][Iy][Iz] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}
						if (transS[Ix + 1][Iy + 1][Iz + 1][1][0]) {
							Jac1Row[JRowIndex] += (phaseStat[Ix + 1][Iy][Iz] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;
						///////////////////////////////////////////////////////////////////
						//////////////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (phaseStat[Ix + 1][Iy][Iz] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][RO][0] * gridDim[Ix + 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BMU][0] * gridDim[Ix + 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][0] * gridDim[Ix] * Makhraj - dMul * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix + 1][Iy][Iz][Nc][0] * gridDim[Ix + 1] * Coef*Makhraj - DiffVisco(Ix + 1, Iy, Iz, Nc, 0)*gridDim[Ix + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Ix] * (blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][Nc][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Ix + 1] * (blockFProps[Ix + 1][Iy][Iz][BGAM][0] * dE[Ix + 1][Iy][Iz][Nc][0] / blockFProps[Ix + 1][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BGAM][0] * gridDim[Ix + 1] * Coef) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

						if (transS[Ix + 1][Iy + 1][Iz + 1][0][0]) {
							dRsidedp -= IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][1] * Moshtaq*(P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = (IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][1] * Bmoshtaq)*(P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= (IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}

						if (phaseStat[Ix + 1][Iy][Iz] == 1) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][RO][1] * gridDim[Ix + 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BMU][1] * gridDim[Ix + 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][1] * gridDim[Ix] * Makhraj - dMug * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix + 1][Iy][Iz][Nc][1] * gridDim[Ix + 1] * Coef*Makhraj - DiffVisco(Ix + 1, Iy, Iz, Nc, 1)*gridDim[Ix + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Ix] * (blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][Nc][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Ix + 1] * (blockFProps[Ix + 1][Iy][Iz][BGAM][1] * dE[Ix + 1][Iy][Iz][Nc][1] / blockFProps[Ix + 1][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BGAM][1] * gridDim[Ix + 1] * Coef) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

						if (transS[Ix + 1][Iy + 1][Iz + 1][1][0]) {
							dRsidedp -= IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][2] * Moshtaq*(P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += (IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][2] * Bmoshtaq)*(P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= (IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);

						}
						////////////////////////////////////////////////////////////////////
						////////////////////////////////////////////////////////////////////
						Jac1Row[JRowIndex] = PCoeff * (-trans[Ix + 1][Iy + 1][Iz + 1][0][0] - trans[Ix + 1][Iy + 1][Iz + 1][1][0] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;
					}

					if (Ix > 0) {
						if (phaseStat[Ix - 1][Iy][Iz]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[Iz*(Nx*Ny) + Iy * Nx + Ix - 1] - reCol2;

						dsw = -trans[Ix][Iy + 1][Iz + 1][4][0] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]) - trans[Ix][Iy + 1][Iz + 1][6][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						if (!transS[Ix][Iy + 1][Iz + 1][0][0]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dso = -trans[Ix][Iy + 1][Iz + 1][10][0] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]) - trans[Ix][Iy + 1][Iz + 1][11][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						if (!transS[Ix][Iy + 1][Iz + 1][0][0]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix - 1][Iy][Iz] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;

						dsgo = -trans[Ix][Iy + 1][Iz + 1][8][0] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]) - trans[Ix][Iy + 1][Iz + 1][9][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						dsgg = -trans[Ix][Iy + 1][Iz + 1][5][0] * (P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]) - trans[Ix][Iy + 1][Iz + 1][7][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						if (!transS[Ix][Iy + 1][Iz + 1][0][0]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix - 1][Iy][Iz] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}
						if (!transS[Ix][Iy + 1][Iz + 1][1][0]) {
							Jac1Row[JRowIndex] += (phaseStat[Ix - 1][Iy][Iz] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;
						////////////////////////////////////////////////////////
						//////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (phaseStat[Ix - 1][Iy][Iz] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][RO][0] * gridDim[Ix - 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][BMU][0] * gridDim[Ix - 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][0] * gridDim[Ix] * Makhraj - dMul * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix - 1][Iy][Iz][Nc][0] * gridDim[Ix - 1] * Coef*Makhraj - DiffVisco(Ix - 1, Iy, Iz, Nc, 0)*gridDim[Ix - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Ix] * (blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][Nc][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Ix - 1] * (blockFProps[Ix - 1][Iy][Iz][BGAM][0] * dE[Ix - 1][Iy][Iz][Nc][0] / blockFProps[Ix - 1][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][BGAM][0] * gridDim[Ix - 1] * Coef) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

						if (transS[Ix][Iy + 1][Iz + 1][0][0]) {
							dRsidedp += (IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);
							dBsidedp = -IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);

							dRsidedp += (IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1])*(Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
							dBsidedp -= IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp += IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][1] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);
							dBsidedp = -(IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][1] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);

							dRsidedp += IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
							dBsidedp -= (IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][1])*(Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						}

						if (phaseStat[Ix - 1][Iy][Iz] == 1) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][RO][1] * gridDim[Ix - 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][BMU][1] * gridDim[Ix - 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][1] * gridDim[Ix] * Makhraj - dMug * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix - 1][Iy][Iz][Nc][1] * gridDim[Ix - 1] * Coef*Makhraj - DiffVisco(Ix - 1, Iy, Iz, Nc, 1)*gridDim[Ix - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Ix] * (blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][Nc][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Ix - 1] * (blockFProps[Ix - 1][Iy][Iz][BGAM][1] * dE[Ix - 1][Iy][Iz][Nc][1] / blockFProps[Ix - 1][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][BGAM][1] * gridDim[Ix - 1] * Coef) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

						if (transS[Ix][Iy + 1][Iz + 1][1][0]) {
							dRsidedp += (IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);
							dBsidedp -= IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);

							dRsidedp += (IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
							dBsidedp -= IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp += IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][2] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);
							dBsidedp -= (IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][2] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);

							dRsidedp += IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
							dBsidedp -= (IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						}
						///////////////////////////////////////////////////////////
						///////////////////////////////////////////////////////////
						Jac1Row[JRowIndex] = PCoeff * (-trans[Ix][Iy + 1][Iz + 1][0][0] - trans[Ix][Iy + 1][Iz + 1][1][0] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;
					}


					if (Iy < (Ny - 1)) {
						if (phaseStat[Ix][Iy + 1][Iz]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[Iz*(Nx*Ny) + (Iy + 1)*Nx + Ix] - reCol2;

						dsw = trans[Ix + 1][Iy + 1][Iz + 1][4][1] * (P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) + trans[Ix + 1][Iy + 1][Iz + 1][6][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (transS[Ix + 1][Iy + 1][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dso = trans[Ix + 1][Iy + 1][Iz + 1][10][1] * (P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) + trans[Ix + 1][Iy + 1][Iz + 1][11][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (transS[Ix + 1][Iy + 1][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix][Iy + 1][Iz] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;

						dsgo = trans[Ix + 1][Iy + 1][Iz + 1][8][1] * (P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) + trans[Ix + 1][Iy + 1][Iz + 1][9][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						dsgg = trans[Ix + 1][Iy + 1][Iz + 1][5][1] * (P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + trans[Ix + 1][Iy + 1][Iz + 1][7][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (transS[Ix + 1][Iy + 1][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix][Iy + 1][Iz] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}
						if (transS[Ix + 1][Iy + 1][Iz + 1][1][1]) {
							Jac1Row[JRowIndex] += (phaseStat[Ix][Iy + 1][Iz] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;
						//////////////////////////////////////////////////////////////////////////////
						/////////////////////////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (phaseStat[Ix][Iy + 1][Iz] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][RO][0] * gridDim[Nx + Iy + 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][BMU][0] * gridDim[Nx + Iy + 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Iy] * Makhraj - dMul * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix][Iy + 1][Iz][Nc][0] * gridDim[Nx + Iy + 1] * Coef*Makhraj - DiffVisco(Ix, Iy + 1, Iz, Nc, 0)*gridDim[Nx + Iy + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Iy] * (blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][Nc][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Iy + 1] * (blockFProps[Ix][Iy + 1][Iz][BGAM][0] * dE[Ix][Iy + 1][Iz][Nc][0] / blockFProps[Ix][Iy + 1][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][BGAM][0] * gridDim[Nx + Iy + 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

						if (transS[Ix + 1][Iy + 1][Iz + 1][0][1]) {
							dRsidedp -= IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][1] * Moshtaq*(P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = (IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][1] * Bmoshtaq)*(P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= (IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}

						if (phaseStat[Ix][Iy + 1][Iz] == 1) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][RO][1] * gridDim[Nx + Iy + 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][BMU][1] * gridDim[Nx + Iy + 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Iy] * Makhraj - dMug * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix][Iy + 1][Iz][Nc][1] * gridDim[Nx + Iy + 1] * Coef*Makhraj - DiffVisco(Ix, Iy + 1, Iz, Nc, 1)*gridDim[Nx + Iy + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Iy] * (blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][Nc][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Iy + 1] * (blockFProps[Ix][Iy + 1][Iz][BGAM][1] * dE[Ix][Iy + 1][Iz][Nc][1] / blockFProps[Ix][Iy + 1][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][BGAM][1] * gridDim[Nx + Iy + 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

						if (transS[Ix + 1][Iy + 1][Iz + 1][1][1]) {
							dRsidedp -= IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][2] * Moshtaq*(P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += (IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][2] * Bmoshtaq)*(P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= (IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}

						/////////////////////////////////////////////////////////////////////////////
						/////////////////////////////////////////////////////////////////////////////
						Jac1Row[JRowIndex] = PCoeff * (-trans[Ix + 1][Iy + 1][Iz + 1][0][1] - trans[Ix + 1][Iy + 1][Iz + 1][1][1] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;
					}
					if (Iy > 0) {
						if (phaseStat[Ix][Iy - 1][Iz]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[Iz*(Nx*Ny) + (Iy - 1)*Nx + Ix + 1] - reCol2;

						dsw = -trans[Ix + 1][Iy][Iz + 1][4][1] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]) - trans[Ix + 1][Iy][Iz + 1][6][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						if (!transS[Ix + 1][Iy][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dso = -trans[Ix + 1][Iy][Iz + 1][10][1] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]) - trans[Ix + 1][Iy][Iz + 1][11][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						if (!transS[Ix + 1][Iy][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix][Iy - 1][Iz] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;

						dsgo = -trans[Ix + 1][Iy][Iz + 1][8][1] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]) - trans[Ix + 1][Iy][Iz + 1][9][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						dsgg = -trans[Ix + 1][Iy][Iz + 1][5][1] * (P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]) - trans[Ix + 1][Iy][Iz + 1][7][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						if (!transS[Ix + 1][Iy][Iz + 1][0][1]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix][Iy - 1][Iz] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}
						if (!transS[Ix + 1][Iy][Iz + 1][1][1]) {
							Jac1Row[JRowIndex] += (phaseStat[Ix][Iy - 1][Iz] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;


						//////////////////////////////////////////////////////////////////
						/////////////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (phaseStat[Ix][Iy - 1][Iz] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][RO][0] * gridDim[Nx + Iy - 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][BMU][0] * gridDim[Nx + Iy - 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Iy] * Makhraj - dMul * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix][Iy - 1][Iz][Nc][0] * gridDim[Nx + Iy - 1] * Coef*Makhraj - DiffVisco(Ix, Iy - 1, Iz, Nc, 0)*gridDim[Nx + Iy - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Iy] * (blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][Nc][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Iy - 1] * (blockFProps[Ix][Iy - 1][Iz][BGAM][0] * dE[Ix][Iy - 1][Iz][Nc][0] / blockFProps[Ix][Iy - 1][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][BGAM][0] * gridDim[Nx + Iy - 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

						if (transS[Ix + 1][Iy][Iz + 1][0][1]) {
							dRsidedp += (IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);
							dBsidedp = -IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);

							dRsidedp += (IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][1])*(Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
							dBsidedp -= IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						}
						else {
							dRsidedp += IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][1] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);
							dBsidedp = -(IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][1] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);

							dRsidedp += IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
							dBsidedp = -(IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][1])*(Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						}

						if (phaseStat[Ix][Iy - 1][Iz] == 1) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][RO][1] * gridDim[Nx + Iy - 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][BMU][1] * gridDim[Nx + Iy - 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Iy] * Makhraj - dMug * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix][Iy - 1][Iz][Nc][1] * gridDim[Nx + Iy - 1] * Coef*Makhraj - DiffVisco(Ix, Iy - 1, Iz, Nc, 1)*gridDim[Nx + Iy - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Iy] * (blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][Nc][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Iy - 1] * (blockFProps[Ix][Iy - 1][Iz][BGAM][1] * dE[Ix][Iy - 1][Iz][Nc][1] / blockFProps[Ix][Iy - 1][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][BGAM][1] * gridDim[Nx + Iy - 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

						if (transS[Ix + 1][Iy][Iz + 1][1][1]) {
							dRsidedp += (IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);
							dBsidedp -= IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);

							dRsidedp += (IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
							dBsidedp -= IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						}
						else {
							dRsidedp += IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][2] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);
							dBsidedp = -(IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][2] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);

							dRsidedp += IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
							dBsidedp -= (IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						}
						///////////////////////////////////////////////////////////////////
						//////////////////////////////////////////////////////////////////
						Jac1Row[JRowIndex] = PCoeff * (-trans[Ix + 1][Iy][Iz + 1][0][1] - trans[Ix + 1][Iy][Iz + 1][1][1] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;
					}

					if (Iz < (Nz - 1)) {
						if (phaseStat[Ix][Iy][Iz + 1]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[(Iz + 1)*(Nx*Ny) + Iy * Nx + Ix] - reCol2;

						dsw = trans[Ix + 1][Iy + 1][Iz + 1][4][2] * (P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) + trans[Ix + 1][Iy + 1][Iz + 1][6][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (transS[Ix + 1][Iy + 1][Iz + 1][0][2]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dso = trans[Ix + 1][Iy + 1][Iz + 1][10][2] * (P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) + trans[Ix + 1][Iy + 1][Iz + 1][11][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (transS[Ix + 1][Iy + 1][Iz + 1][0][2]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix][Iy][Iz + 1] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;

						dsgo = trans[Ix + 1][Iy + 1][Iz + 1][8][2] * (P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) + trans[Ix + 1][Iy + 1][Iz + 1][9][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						dsgg = trans[Ix + 1][Iy + 1][Iz + 1][5][2] * (P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + trans[Ix + 1][Iy + 1][Iz + 1][7][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (transS[Ix + 1][Iy + 1][Iz + 1][0][2]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix][Iy][Iz + 1] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}
						if (transS[Ix + 1][Iy + 1][Iz + 1][1][2]) {
							Jac1Row[JRowIndex] += (phaseStat[Ix][Iy][Iz + 1] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;
						///////////////////////////////////////////////////////////////////////////
						////////////////////////////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (phaseStat[Ix][Iy][Iz + 1] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][RO][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][BMU][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Ny + Iz] * Makhraj - dMul * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix][Iy][Iz + 1][Nc][0] * gridDim[Nx + Ny + Iz + 1] * Coef*Makhraj - DiffVisco(Ix, Iy, Iz + 1, Nc, 0)*gridDim[Nx + Ny + Iz + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Ny + Iz] * (blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][Nc][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz + 1] * (blockFProps[Ix][Iy][Iz + 1][BGAM][0] * dE[Ix][Iy][Iz + 1][Nc][0] / blockFProps[Ix][Iy][Iz + 1][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][BGAM][0] * gridDim[Nx + Ny + Iz + 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

						if (transS[Ix + 1][Iy + 1][Iz + 1][0][2]) {
							dRsidedp -= IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][1] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = (IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][1] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
							dBsidedp = IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

							dRsidedp -= (IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}

						if (phaseStat[Ix][Iy][Iz + 1] == 1) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][RO][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][BMU][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Ny + Iz] * Makhraj - dMug * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix][Iy][Iz + 1][Nc][1] * gridDim[Nx + Ny + Iz + 1] * Coef*Makhraj - DiffVisco(Ix, Iy, Iz + 1, Nc, 1)*gridDim[Nx + Ny + Iz + 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Ny + Iz] * (blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][Nc][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz + 1] * (blockFProps[Ix][Iy][Iz + 1][BGAM][1] * dE[Ix][Iy][Iz + 1][Nc][1] / blockFProps[Ix][Iy][Iz + 1][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][BGAM][1] * gridDim[Nx + Ny + Iz + 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

						if (transS[Ix + 1][Iy + 1][Iz + 1][1][2]) {
							dRsidedp -= IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][2] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += (IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][2] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += (IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						else {
							dRsidedp -= (IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
							dBsidedp += IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

							dRsidedp -= (IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							dBsidedp += IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						}
						///////////////////////////////////////////////////////////////////////////////
						//////////////////////////////////////////////////////////////////////////////

						Jac1Row[JRowIndex] = PCoeff * (-trans[Ix + 1][Iy + 1][Iz + 1][0][2] - trans[Ix + 1][Iy + 1][Iz + 1][1][2] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;
					}

					if (Iz > 0) {
						if (phaseStat[Ix][Iy][Iz - 1]) {
							reCol2 = Nc;
							reCol4 = 1;
						}
						else {
							reCol2 = 0;
							reCol4 = 0;
						}
						mBLNo = preConRow[(Iz - 1)*(Nx*Ny) + Iy * Nx + Ix + 1] - reCol2;

						dsw = -trans[Ix + 1][Iy + 1][Iz][4][2] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]) - trans[Ix + 1][Iy + 1][Iz][6][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						if (!transS[Ix + 1][Iy + 1][Iz][0][2]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;

						dso = -trans[Ix + 1][Iy + 1][Iz][10][2] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]) - trans[Ix + 1][Iy + 1][Iz][11][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						if (!transS[Ix + 1][Iy + 1][Iz][0][2]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix][Iy][Iz - 1] == (-1)) ? 0 : dso;
						}
						else {
							dRsidedSo += dso;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 2;
						JRowIndex++;

						dsgo = -trans[Ix + 1][Iy + 1][Iz][8][2] * (P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]) - trans[Ix + 1][Iy + 1][Iz][9][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						dsgg = -trans[Ix + 1][Iy + 1][Iz][5][2] * (P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]) - trans[Ix + 1][Iy + 1][Iz][7][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						if (!transS[Ix + 1][Iy + 1][Iz][0][2]) {
							Jac1Row[JRowIndex] = (phaseStat[Ix][Iy][Iz - 1] == 1) ? 0 : dsgo;
						}
						else {
							dRsidedSg += dsgo;
							Jac1Row[JRowIndex] = 0;
						}
						if (!transS[Ix + 1][Iy + 1][Iz][1][2]) {
							Jac1Row[JRowIndex] += (phaseStat[Ix][Iy][Iz - 1] == 1) ? 0 : dsgg;
						}
						else {
							dRsidedSg += dsgg;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 3 - reCol4;
						JRowIndex++;
						///////////////////////////////////////////////////////////////
						///////////////////////////////////////////////////////////////
						dBsidedp = 0;
						if (phaseStat[Ix][Iy][Iz - 1] == (-1)) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][RO][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][BMU][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][0] * gridDim[Nx + Ny + Iz] * Makhraj - dMul * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix][Iy][Iz - 1][Nc][0] * gridDim[Nx + Ny + Iz - 1] * Coef*Makhraj - DiffVisco(Ix, Iy, Iz - 1, Nc, 0)*gridDim[Nx + Ny + Iz - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Ny + Iz] * (blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][Nc][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz - 1] * (blockFProps[Ix][Iy][Iz - 1][BGAM][0] * dE[Ix][Iy][Iz - 1][Nc][0] / blockFProps[Ix][Iy][Iz - 1][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][BGAM][0] * gridDim[Nx + Ny + Iz - 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

						if (transS[Ix + 1][Iy + 1][Iz][0][2]) {
							dRsidedp += (IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);
							dBsidedp = -IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);

							dRsidedp += (IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][1])*(Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							dBsidedp -= IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						}
						else {
							dRsidedp += IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][1] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);
							dBsidedp = -(IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][1] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);

							dRsidedp += IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							dBsidedp -= (IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][1])*(Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						}

						if (phaseStat[Ix][Iy][Iz - 1] == 1) Coef = 0;
						else Coef = 1;

						Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][RO][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
						Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][BMU][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
						Moshtaq = (dE[Ix][Iy][Iz][Nc][1] * gridDim[Nx + Ny + Iz] * Makhraj - dMug * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
						Bmoshtaq = (dE[Ix][Iy][Iz - 1][Nc][1] * gridDim[Nx + Ny + Iz - 1] * Coef*Makhraj - DiffVisco(Ix, Iy, Iz - 1, Nc, 1)*gridDim[Nx + Ny + Iz - 1] * Coef*Surat) / (Makhraj*Makhraj);

						MoshtaqGama = gridDim[Nx + Ny + Iz] * (blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][Nc][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);
						BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz - 1] * (blockFProps[Ix][Iy][Iz - 1][BGAM][1] * dE[Ix][Iy][Iz - 1][Nc][1] / blockFProps[Ix][Iy][Iz - 1][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

						tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][BGAM][1] * gridDim[Nx + Ny + Iz - 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

						if (transS[Ix + 1][Iy + 1][Iz][1][2]) {
							dRsidedp += (IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);
							dBsidedp -= IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);

							dRsidedp += (IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							dBsidedp -= IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						}
						else {
							dRsidedp += IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][2] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);
							dBsidedp -= (IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][2] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);

							dRsidedp += IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							dBsidedp -= (IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						}
						//////////////////////////////////////////////////////////////////
						//////////////////////////////////////////////////////////////////
						Jac1Row[JRowIndex] = PCoeff * (-trans[Ix + 1][Iy + 1][Iz][0][2] - trans[Ix + 1][Iy + 1][Iz][1][2] - dBsidedp);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;
					}

					Jac1Row[JRowIndex] = PCoeff * (dLsidedp + dRsidedp + PIo + PIg);
					Jac1Col[JRowIndex] = jacCol + (2 * Nc) - reCol;
					JRowIndex++;

					if (phaseStat[Ix][Iy][Iz] != -1) {
						Jac1Row[JRowIndex] = -dRsidedSw;
						Jac1Col[JRowIndex] = jacCol + (2 * Nc + 1) - reCol;
						JRowIndex++;

						Jac1Row[JRowIndex] = dLsidedSo - dRsidedSo;
						Jac1Col[JRowIndex] = jacCol + (2 * Nc + 2) - reCol;
						JRowIndex++;
					}

					if (phaseStat[Ix][Iy][Iz] != 1) {
						Jac1Row[JRowIndex] = dLsidedSg - dRsidedSg;
						Jac1Col[JRowIndex] = jacCol + (2 * Nc + 3) - reCol - reCol3;
						JRowIndex++;
					}
					//////////////////////////////////////////////

					/////////////////////////////////////////////////Sadeq///////////////////////////////////
					if (fphaseStat[Ix][Iy][Iz] == 1) {
						//dRsidefdSo = 0;
						Jac1Row[JRowIndex] = dRsidefdSo;
						Jac1Col[JRowIndex] = FracEq + 2 * Nc + 2 - reColF1;
						JRowIndex++;
					}
					else if (fphaseStat[Ix][Iy][Iz] == (-1)) {
						//dRsidefdSg = 0;
						Jac1Row[JRowIndex] = dRsidefdSg;
						Jac1Col[JRowIndex] = FracEq + 2 * Nc + 2 - reColF1;
						JRowIndex++;
					}
					else {
						//dRsidefdSo = 0;
						Jac1Row[JRowIndex] = dRsidefdSo;
						Jac1Col[JRowIndex] = FracEq + 2 * Nc + 2 - reColF1;
						JRowIndex++;
						//dRsidefdSg = 0;
						Jac1Row[JRowIndex] = dRsidefdSg;
						Jac1Col[JRowIndex] = FracEq + 2 * Nc + 3 - reColF1;
						JRowIndex++;
					}
					//dRsidefdp = 0;
					Jac1Row[JRowIndex] = PCoeff * dRsidefdp;
					Jac1Col[JRowIndex] = FracEq + 2 * Nc - reColF1;
					JRowIndex++;
					//dRsidefdSw = 0;
					Jac1Row[JRowIndex] = dRsidefdSw;
					Jac1Col[JRowIndex] = FracEq + 2 * Nc + 1 - reColF1;
					JRowIndex++;
					////////////////////////sadeq/////////////////////////


					for (k = 0; k < Nc; k++) {
						dRsidedxl = 0;
						dRsidedxg = 0;
						dRsidefdxl = 0;
						dRsidefdxg = 0;

						dLsidedxl = dE[Ix][Iy][Iz][k][0];
						dLsidedxg = dE[Ix][Iy][Iz][k][1];
						dQdxl = 0;
						dQdxg = 0;

						dMul = DiffVisco(Ix, Iy, Iz, k, 0);
						dMug = DiffVisco(Ix, Iy, Iz, k, 1);

						//Transfer Function dRside dxl dxg
						// moshtagh transfer Function jabejaie naft nesbat be xl Matrix
						dRsidedxl += ZERO_CONV * SI_C * dE[Ix][Iy][Iz][k][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor) / (porpor + fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
						dRsidedxl += ZERO_CONV * -SI_C * DiffVisco(Ix, Iy, Iz, k, 0) * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] * porpor / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor)*(blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) * (porpor + fporpor);

						// moshtagh transfer Function jabejaie naft nesbat be xl Fracture
						dRsidefdxl += ZERO_CONV * -SI_C * fDiffVisco(Ix, Iy, Iz, k, 0) * blockFProps[Ix][Iy][Iz][RO][0] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[1] * fporpor / ((blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor)*(blockFProps[Ix][Iy][Iz][BMU][0] * porpor + fblockFProps[Ix][Iy][Iz][BMU][0] * fporpor)) * (fP[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]) * (porpor + fporpor);

						// moshtagh transfer Function jabejaie gaz nesbat be xg Matrix
						dRsidedxg += ZERO_CONV * SI_C * dE[Ix][Iy][Iz][k][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor) / (porpor + fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1]));
						dRsidedxg += ZERO_CONV * -SI_C * DiffVisco(Ix, Iy, Iz, k, 1) * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] * porpor / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor)*(blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1])) * (porpor + fporpor);

						// moshtagh transfer Function jabejaie gaz nesbat be xg Fracture
						dRsidefdxg += ZERO_CONV * -SI_C * fDiffVisco(Ix, Iy, Iz, k, 1) * blockFProps[Ix][Iy][Iz][RO][1] * ShapeFactor_2(Ix, Iy, Iz) * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) * f_m_relperm[2] * fporpor / ((blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor)*(blockFProps[Ix][Iy][Iz][BMU][1] * porpor + fblockFProps[Ix][Iy][Iz][BMU][1] * fporpor)) * ((fP[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]) + (fblockFProps[Ix][Iy][Iz][BLOCK_PC][1] - blockFProps[Ix][Iy][Iz][BLOCK_PC][1])) * (porpor + fporpor);
						//

						if (Ix < (Nx - 1)) {
							if (phaseStat[Ix + 1][Iy][Iz] == (-1)) Coef = 0;
							else Coef = 1;

							Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][RO][0] * gridDim[Ix + 1] * Coef;
							Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BMU][0] * gridDim[Ix + 1] * Coef;
							Moshtaq = (dE[Ix][Iy][Iz][k][0] * gridDim[Ix] * Makhraj - dMul * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (dE[Ix + 1][Iy][Iz][k][0] * gridDim[Ix + 1] * Coef*Makhraj - DiffVisco(Ix + 1, Iy, Iz, k, 0)*gridDim[Ix + 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Ix] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][k][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Ix + 1] * (G_ACCG*blockFProps[Ix + 1][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix + 1][Iy][Iz][BGAM][0] * dE[Ix + 1][Iy][Iz][k][0] / blockFProps[Ix + 1][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

							tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BGAM][0] * gridDim[Ix + 1] * Coef) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

							if (transS[Ix + 1][Iy + 1][Iz + 1][0][0]) {
								dRsidedxl += IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][1] * Moshtaq*(P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
								dBsidedxl = (IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][1] * Bmoshtaq)*(P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

								//dRsidedxl+=IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								//dBsidedxl+=(IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
							}
							else {
								dRsidedxl += (IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
								dBsidedxl = IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 2][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

								//dRsidedxl+=(IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								//dBsidedxl+=IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
							}

							mBLNo = preConRow[Iz*(Nx*Ny) + Iy * Nx + Ix + 1];
							Jac1Row[JRowIndex] = -dBsidedxl * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo + k;
							JRowIndex++;


							if (phaseStat[Ix + 1][Iy][Iz] == 1) Coef = 0;
							else Coef = 1;

							Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][RO][1] * gridDim[Ix + 1] * Coef;
							Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BMU][1] * gridDim[Ix + 1] * Coef;
							Moshtaq = (dE[Ix][Iy][Iz][k][1] * gridDim[Ix] * Makhraj - dMug * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (dE[Ix + 1][Iy][Iz][k][1] * gridDim[Ix + 1] * Coef*Makhraj - DiffVisco(Ix + 1, Iy, Iz, k, 1)*gridDim[Ix + 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Ix] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][k][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Ix + 1] * (G_ACCG*blockFProps[Ix + 1][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix + 1][Iy][Iz][BGAM][1] * dE[Ix + 1][Iy][Iz][k][1] / blockFProps[Ix + 1][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

							tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Ix] + blockFProps[Ix + 1][Iy][Iz][BGAM][1] * gridDim[Ix + 1] * Coef) / (gridDim[Ix] + gridDim[Ix + 1] * Coef);

							if (transS[Ix + 1][Iy + 1][Iz + 1][1][0]) {
								dRsidedxg += IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][2] * Moshtaq*(P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
								dBsidedxg = (IFTran[Ix][Iy][Iz][0] * relPerm[Ix + 1][Iy][Iz][2] * Bmoshtaq)*(P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

								//dRsidedxg+=IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								//dBsidedxg+=(IFTran[Ix][Iy][Iz][0]*relPerm[Ix+1][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
							}
							else {
								dRsidedxg += (IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
								dBsidedxg = IFTran[Ix][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 2][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

								//dRsidedxg+=(IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								//dBsidedxg+=IFTran[Ix][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+2][Iy+1][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);

							}

							if (phaseStat[Ix + 1][Iy][Iz]) reCol2 = Nc;
							else reCol2 = 0;
							Jac1Row[JRowIndex] = -dBsidedxg * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
							JRowIndex++;
						}

						if (Ix > 0) {
							if (phaseStat[Ix - 1][Iy][Iz] == (-1)) Coef = 0;
							else Coef = 1;

							Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][RO][0] * gridDim[Ix - 1] * Coef;
							Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][BMU][0] * gridDim[Ix - 1] * Coef;
							Moshtaq = (dE[Ix][Iy][Iz][k][0] * gridDim[Ix] * Makhraj - dMul * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (dE[Ix - 1][Iy][Iz][k][0] * gridDim[Ix - 1] * Coef*Makhraj - DiffVisco(Ix - 1, Iy, Iz, k, 0)*gridDim[Ix - 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Ix] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][k][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Ix - 1] * (G_ACCG*blockFProps[Ix - 1][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix - 1][Iy][Iz][BGAM][0] * dE[Ix - 1][Iy][Iz][k][0] / blockFProps[Ix - 1][Iy][Iz][RO][0]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

							tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][BGAM][0] * gridDim[Ix - 1] * Coef) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

							if (transS[Ix][Iy + 1][Iz + 1][0][0]) {
								dRsidedxl -= (IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);
								dBsidedxl = -IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);

								//dRsidedxl-=(IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1])*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								//dBsidedxl-=IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
							}
							else {
								dRsidedxl -= IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][1] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);
								dBsidedxl = -(IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][1] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix][Iy + 1][Iz + 1][1]);

								//dRsidedxl-=IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								//dBsidedxl-=(IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][1])*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
							}

							mBLNo = preConRow[Iz*(Nx*Ny) + Iy * Nx + Ix - 1];
							Jac1Row[JRowIndex] = -dBsidedxl * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo + k;
							JRowIndex++;


							if (phaseStat[Ix - 1][Iy][Iz] == 1) Coef = 0;
							else Coef = 1;

							Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][RO][1] * gridDim[Ix - 1] * Coef;
							Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][BMU][1] * gridDim[Ix - 1] * Coef;
							Moshtaq = (dE[Ix][Iy][Iz][k][1] * gridDim[Ix] * Makhraj - dMug * gridDim[Ix] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (dE[Ix - 1][Iy][Iz][k][1] * gridDim[Ix - 1] * Coef*Makhraj - DiffVisco(Ix - 1, Iy, Iz, k, 1)*gridDim[Ix - 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Ix] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][k][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Ix - 1] * (G_ACCG*blockFProps[Ix - 1][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix - 1][Iy][Iz][BGAM][1] * dE[Ix - 1][Iy][Iz][k][1] / blockFProps[Ix - 1][Iy][Iz][RO][1]) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

							tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Ix] + blockFProps[Ix - 1][Iy][Iz][BGAM][1] * gridDim[Ix - 1] * Coef) / (gridDim[Ix] + gridDim[Ix - 1] * Coef);

							if (transS[Ix][Iy + 1][Iz + 1][1][0]) {
								dRsidedxg -= (IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);
								dBsidedxg = -IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);

								//dRsidedxg-=(IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								//dBsidedxg-=IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
							}
							else {
								dRsidedxg -= IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][2] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);
								dBsidedxg = -(IFTran[Ix - 1][Iy][Iz][0] * relPerm[Ix - 1][Iy][Iz][2] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix][Iy + 1][Iz + 1][2]);

								//dRsidedxg-=IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
								//dBsidedxg-=(IFTran[Ix-1][Iy][Iz][0]*relPerm[Ix-1][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix][Iy+1][Iz+1]);
							}


							if (phaseStat[Ix - 1][Iy][Iz]) reCol2 = Nc;
							else reCol2 = 0;
							Jac1Row[JRowIndex] = -dBsidedxg * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
							JRowIndex++;
						}

						if (Iy < (Ny - 1)) {
							if (phaseStat[Ix][Iy + 1][Iz] == (-1)) Coef = 0;
							else Coef = 1;

							Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][RO][0] * gridDim[Nx + Iy + 1] * Coef;
							Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][BMU][0] * gridDim[Nx + Iy + 1] * Coef;
							Moshtaq = (dE[Ix][Iy][Iz][k][0] * gridDim[Nx + Iy] * Makhraj - dMul * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (dE[Ix][Iy + 1][Iz][k][0] * gridDim[Nx + Iy + 1] * Coef*Makhraj - DiffVisco(Ix, Iy + 1, Iz, k, 0)*gridDim[Nx + Iy + 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][k][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Nx + Iy + 1] * (G_ACCG*blockFProps[Ix][Iy + 1][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy + 1][Iz][BGAM][0] * dE[Ix][Iy + 1][Iz][k][0] / blockFProps[Ix][Iy + 1][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

							tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][BGAM][0] * gridDim[Nx + Iy + 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

							if (transS[Ix + 1][Iy + 1][Iz + 1][0][1]) {
								dRsidedxl += IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][1] * Moshtaq*(P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
								dBsidedxl = (IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][1] * Bmoshtaq)*(P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

								//dRsidedxl+=IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								//dBsidedxl+=(IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
							}
							else {
								dRsidedxl += (IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
								dBsidedxl = IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 2][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

								//dRsidedxl+=(IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								//dBsidedxl+=IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
							}

							mBLNo = preConRow[Iz*(Nx*Ny) + (Iy + 1)*Nx + Ix];
							Jac1Row[JRowIndex] = -dBsidedxl * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo + k;
							JRowIndex++;


							if (phaseStat[Ix][Iy + 1][Iz] == 1) Coef = 0;
							else Coef = 1;

							Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][RO][1] * gridDim[Nx + Iy + 1] * Coef;
							Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][BMU][1] * gridDim[Nx + Iy + 1] * Coef;
							Moshtaq = (dE[Ix][Iy][Iz][k][1] * gridDim[Nx + Iy] * Makhraj - dMug * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (dE[Ix][Iy + 1][Iz][k][1] * gridDim[Nx + Iy + 1] * Coef*Makhraj - DiffVisco(Ix, Iy + 1, Iz, k, 1)*gridDim[Nx + Iy + 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][k][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Nx + Iy + 1] * (G_ACCG*blockFProps[Ix][Iy + 1][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy + 1][Iz][BGAM][1] * dE[Ix][Iy + 1][Iz][k][1] / blockFProps[Ix][Iy + 1][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

							tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy + 1][Iz][BGAM][1] * gridDim[Nx + Iy + 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy + 1] * Coef);

							if (transS[Ix + 1][Iy + 1][Iz + 1][1][1]) {
								dRsidedxg += IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][2] * Moshtaq*(P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
								dBsidedxg = (IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy + 1][Iz][2] * Bmoshtaq)*(P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

								//dRsidedxg+=IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								//dBsidedxg+=(IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy+1][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
							}
							else {
								dRsidedxg += (IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
								dBsidedxg = IFTran[Ix][Iy][Iz][1] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 2][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

								//dRsidedxg+=(IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);
								//dBsidedxg+=IFTran[Ix][Iy][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+2][Iz+1]-blockH[Ix+1][Iy+1][Iz+1]);

							}

							if (phaseStat[Ix][Iy + 1][Iz]) reCol2 = Nc;
							else reCol2 = 0;
							Jac1Row[JRowIndex] = -dBsidedxg * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
							JRowIndex++;
						}

						if (Iy > 0) {
							if (phaseStat[Ix][Iy - 1][Iz] == (-1)) Coef = 0;
							else Coef = 1;

							Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][RO][0] * gridDim[Nx + Iy - 1] * Coef;
							Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][BMU][0] * gridDim[Nx + Iy - 1] * Coef;
							Moshtaq = (dE[Ix][Iy][Iz][k][0] * gridDim[Nx + Iy] * Makhraj - dMul * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (dE[Ix][Iy - 1][Iz][k][0] * gridDim[Nx + Iy - 1] * Coef*Makhraj - DiffVisco(Ix, Iy - 1, Iz, k, 0)*gridDim[Nx + Iy - 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][k][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Nx + Iy - 1] * (G_ACCG*blockFProps[Ix][Iy - 1][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy - 1][Iz][BGAM][0] * dE[Ix][Iy - 1][Iz][k][0] / blockFProps[Ix][Iy - 1][Iz][RO][0]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

							tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][BGAM][0] * gridDim[Nx + Iy - 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

							if (transS[Ix + 1][Iy][Iz + 1][0][1]) {
								dRsidedxl -= (IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);
								dBsidedxl = -IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);

								//dRsidedxl-=(IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][1])*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								//dBsidedxl-=IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][1]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
							}
							else {
								dRsidedxl -= IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][1] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);
								dBsidedxl = -(IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][1] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy][Iz + 1][1]);

								//dRsidedxl-=IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][1]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								//dBsidedxl-=(IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][1])*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
							}

							mBLNo = preConRow[Iz*(Nx*Ny) + (Iy - 1)*Nx + Ix];
							Jac1Row[JRowIndex] = -dBsidedxl * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo + k;
							JRowIndex++;


							if (phaseStat[Ix][Iy - 1][Iz] == 1) Coef = 0;
							else Coef = 1;

							Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][RO][1] * gridDim[Nx + Iy - 1] * Coef;
							Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][BMU][1] * gridDim[Nx + Iy - 1] * Coef;
							Moshtaq = (dE[Ix][Iy][Iz][k][1] * gridDim[Nx + Iy] * Makhraj - dMug * gridDim[Nx + Iy] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (dE[Ix][Iy - 1][Iz][k][1] * gridDim[Nx + Iy - 1] * Coef*Makhraj - DiffVisco(Ix, Iy - 1, Iz, k, 1)*gridDim[Nx + Iy - 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Nx + Iy] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][k][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Nx + Iy - 1] * (G_ACCG*blockFProps[Ix][Iy - 1][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy - 1][Iz][BGAM][1] * dE[Ix][Iy - 1][Iz][k][1] / blockFProps[Ix][Iy - 1][Iz][RO][1]) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

							tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Iy] + blockFProps[Ix][Iy - 1][Iz][BGAM][1] * gridDim[Nx + Iy - 1] * Coef) / (gridDim[Nx + Iy] + gridDim[Nx + Iy - 1] * Coef);

							if (transS[Ix + 1][Iy][Iz + 1][1][1]) {
								dRsidedxg -= (IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);
								dBsidedxg = -IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);

								//dRsidedxg-=(IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								//dBsidedxg-=IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
							}
							else {
								dRsidedxg -= IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][2] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);
								dBsidedxg = -(IFTran[Ix][Iy - 1][Iz][1] * relPerm[Ix][Iy - 1][Iz][2] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy][Iz + 1][2]);

								//dRsidedxg-=IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][2]*(Bmoshtaq*tempdx+BmoshtaqGama*Surat/Makhraj)*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
								//dBsidedxg-=(IFTran[Ix][Iy-1][Iz][1]*relPerm[Ix][Iy-1][Iz][2]*(Moshtaq*tempdx+MoshtaqGama*Surat/Makhraj))*(blockH[Ix+1][Iy+1][Iz+1]-blockH[Ix+1][Iy][Iz+1]);
							}


							if (phaseStat[Ix][Iy - 1][Iz]) reCol2 = Nc;
							else reCol2 = 0;
							Jac1Row[JRowIndex] = -dBsidedxg * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
							JRowIndex++;
						}

						if (Iz < (Nz - 1)) {
							if (phaseStat[Ix][Iy][Iz + 1] == (-1)) Coef = 0;
							else Coef = 1;

							Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][RO][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
							Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][BMU][0] * gridDim[Nx + Ny + Iz + 1] * Coef;
							Moshtaq = (dE[Ix][Iy][Iz][k][0] * gridDim[Nx + Ny + Iz] * Makhraj - dMul * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (dE[Ix][Iy][Iz + 1][k][0] * gridDim[Nx + Ny + Iz + 1] * Coef*Makhraj - DiffVisco(Ix, Iy, Iz + 1, k, 0)*gridDim[Nx + Ny + Iz + 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][k][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz + 1] * (G_ACCG*blockFProps[Ix][Iy][Iz + 1][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz + 1][BGAM][0] * dE[Ix][Iy][Iz + 1][k][0] / blockFProps[Ix][Iy][Iz + 1][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

							tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][BGAM][0] * gridDim[Nx + Ny + Iz + 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

							if (transS[Ix + 1][Iy + 1][Iz + 1][0][2]) {
								dRsidedxl += IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][1] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
								dBsidedxl = (IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][1] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

								dRsidedxl += IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
								dBsidedxl += (IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							}
							else {
								dRsidedxl += (IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);
								dBsidedxl = IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 2][1] - P[Ix + 1][Iy + 1][Iz + 1][1]);

								dRsidedxl += (IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
								dBsidedxl += IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							}

							mBLNo = preConRow[(Iz + 1)*(Nx*Ny) + Iy * Nx + Ix];
							Jac1Row[JRowIndex] = -dBsidedxl * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo + k;
							JRowIndex++;


							if (phaseStat[Ix][Iy][Iz + 1] == 1) Coef = 0;
							else Coef = 1;

							Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][RO][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
							Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][BMU][1] * gridDim[Nx + Ny + Iz + 1] * Coef;
							Moshtaq = (dE[Ix][Iy][Iz][k][1] * gridDim[Nx + Ny + Iz] * Makhraj - dMug * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (dE[Ix][Iy][Iz + 1][k][1] * gridDim[Nx + Ny + Iz + 1] * Coef*Makhraj - DiffVisco(Ix, Iy, Iz + 1, k, 1)*gridDim[Nx + Ny + Iz + 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][k][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz + 1] * (G_ACCG*blockFProps[Ix][Iy][Iz + 1][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz + 1][BGAM][1] * dE[Ix][Iy][Iz + 1][k][1] / blockFProps[Ix][Iy][Iz + 1][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

							tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz + 1][BGAM][1] * gridDim[Nx + Ny + Iz + 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz + 1] * Coef);

							if (transS[Ix + 1][Iy + 1][Iz + 1][1][2]) {
								dRsidedxg += IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][2] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
								dBsidedxg = (IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][2] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

								dRsidedxg += IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
								dBsidedxg += (IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz + 1][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
							}
							else {
								dRsidedxg += (IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);
								dBsidedxg = IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 2][2] - P[Ix + 1][Iy + 1][Iz + 1][2]);

								dRsidedxg += (IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
								dBsidedxg += IFTran[Ix][Iy][Iz][2] * relPerm[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);

							}

							if (phaseStat[Ix][Iy][Iz + 1]) reCol2 = Nc;
							else reCol2 = 0;
							Jac1Row[JRowIndex] = -dBsidedxg * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
							JRowIndex++;
						}

						if (Iz > 0) {
							if (phaseStat[Ix][Iy][Iz - 1] == (-1)) Coef = 0;
							else Coef = 1;

							Surat = blockFProps[Ix][Iy][Iz][RO][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][RO][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
							Makhraj = blockFProps[Ix][Iy][Iz][BMU][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][BMU][0] * gridDim[Nx + Ny + Iz - 1] * Coef;
							Moshtaq = (dE[Ix][Iy][Iz][k][0] * gridDim[Nx + Ny + Iz] * Makhraj - dMul * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (dE[Ix][Iy][Iz - 1][k][0] * gridDim[Nx + Ny + Iz - 1] * Coef*Makhraj - DiffVisco(Ix, Iy, Iz - 1, k, 0)*gridDim[Nx + Ny + Iz - 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][0] * dE[Ix][Iy][Iz][k][0] / blockFProps[Ix][Iy][Iz][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz - 1] * (G_ACCG*blockFProps[Ix][Iy][Iz - 1][RO][0] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz - 1][BGAM][0] * dE[Ix][Iy][Iz - 1][k][0] / blockFProps[Ix][Iy][Iz - 1][RO][0]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

							tempdx = (blockFProps[Ix][Iy][Iz][BGAM][0] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][BGAM][0] * gridDim[Nx + Ny + Iz - 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

							if (transS[Ix + 1][Iy + 1][Iz][0][2]) {
								dRsidedxl -= (IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][1] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);
								dBsidedxl = -IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][1] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);

								dRsidedxl -= (IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][1])*(Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								dBsidedxl -= IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][1] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							}
							else {
								dRsidedxl -= IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][1] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);
								dBsidedxl = -(IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][1] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][1] - P[Ix + 1][Iy + 1][Iz][1]);

								dRsidedxl -= IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][1] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								dBsidedxl -= (IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][1])*(Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							}

							mBLNo = preConRow[(Iz - 1)*(Nx*Ny) + Iy * Nx + Ix];
							Jac1Row[JRowIndex] = -dBsidedxl * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo + k;
							JRowIndex++;


							if (phaseStat[Ix][Iy][Iz - 1] == 1) Coef = 0;
							else Coef = 1;

							Surat = blockFProps[Ix][Iy][Iz][RO][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][RO][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
							Makhraj = blockFProps[Ix][Iy][Iz][BMU][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][BMU][1] * gridDim[Nx + Ny + Iz - 1] * Coef;
							Moshtaq = (dE[Ix][Iy][Iz][k][1] * gridDim[Nx + Ny + Iz] * Makhraj - dMug * gridDim[Nx + Ny + Iz] * Surat) / (Makhraj*Makhraj);
							Bmoshtaq = (dE[Ix][Iy][Iz - 1][k][1] * gridDim[Nx + Ny + Iz - 1] * Coef*Makhraj - DiffVisco(Ix, Iy, Iz - 1, k, 1)*gridDim[Nx + Ny + Iz - 1] * Coef*Surat) / (Makhraj*Makhraj);

							MoshtaqGama = gridDim[Nx + Ny + Iz] * (G_ACCG*blockFProps[Ix][Iy][Iz][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz][BGAM][1] * dE[Ix][Iy][Iz][k][1] / blockFProps[Ix][Iy][Iz][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);
							BmoshtaqGama = Coef * gridDim[Nx + Ny + Iz - 1] * (G_ACCG*blockFProps[Ix][Iy][Iz - 1][RO][1] * fluidProp[k][MW] + blockFProps[Ix][Iy][Iz - 1][BGAM][1] * dE[Ix][Iy][Iz - 1][k][1] / blockFProps[Ix][Iy][Iz - 1][RO][1]) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

							tempdx = (blockFProps[Ix][Iy][Iz][BGAM][1] * gridDim[Nx + Ny + Iz] + blockFProps[Ix][Iy][Iz - 1][BGAM][1] * gridDim[Nx + Ny + Iz - 1] * Coef) / (gridDim[Nx + Ny + Iz] + gridDim[Nx + Ny + Iz - 1] * Coef);

							if (transS[Ix + 1][Iy + 1][Iz][1][2]) {
								dRsidedxg -= (IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][2] * Moshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);
								dBsidedxg = -IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][2] * Bmoshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);

								dRsidedxg -= (IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								dBsidedxg -= IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							}
							else {
								dRsidedxg -= IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][2] * Moshtaq*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);
								dBsidedxg = -(IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][2] * Bmoshtaq)*(P[Ix + 1][Iy + 1][Iz + 1][2] - P[Ix + 1][Iy + 1][Iz][2]);

								dRsidedxg -= IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][2] * (Bmoshtaq*tempdx + BmoshtaqGama * Surat / Makhraj)*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
								dBsidedxg -= (IFTran[Ix][Iy][Iz - 1][2] * relPerm[Ix][Iy][Iz - 1][2] * (Moshtaq*tempdx + MoshtaqGama * Surat / Makhraj))*(blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
							}


							if (phaseStat[Ix][Iy][Iz - 1]) reCol2 = Nc;
							else reCol2 = 0;
							Jac1Row[JRowIndex] = -dBsidedxg * Coef;
							//Jac1Row[JRowIndex]=0;
							Jac1Col[JRowIndex] = mBLNo - reCol2 + k + Nc;
							JRowIndex++;
						}
						//jac[BLNo+2*Nc-1][BLNo+k]=(Vb/Dt)*porpor*sat[Ix][Iy][Iz][1]*dE[Ix][Iy][Iz][k][0];
						if (phaseStat[Ix][Iy][Iz] != -1) {
							Jac1Row[JRowIndex] = (Vb / Dt)*porpor*sat[Ix][Iy][Iz][1] * dE[Ix][Iy][Iz][k][0] - dRsidedxl;
							//Jac1Row[JRowIndex]=(Vb/Dt)*porpor*sat[Ix][Iy][Iz][1]*dE[Ix][Iy][Iz][k][0];
							Jac1Col[JRowIndex] = jacCol + k;
							JRowIndex++;
						}

						//jac[BLNo+2*Nc-1][BLNo+Nc+k]=(Vb/Dt)*porpor*sat[Ix][Iy][Iz][2]*dE[Ix][Iy][Iz][k][1];
						if (phaseStat[Ix][Iy][Iz] != 1) {
							//Jac1Row[JRowIndex]=(Vb/Dt)*porpor*sat[Ix][Iy][Iz][2]*dE[Ix][Iy][Iz][k][1];
							Jac1Row[JRowIndex] = (Vb / Dt)*porpor*sat[Ix][Iy][Iz][2] * dE[Ix][Iy][Iz][k][1] - dRsidedxg;
							Jac1Col[JRowIndex] = jacCol + Nc + k - reCol;
							JRowIndex++;
						}

						/////////////////////////////////////////////////Sadeq///////////////////////////////////
						if (fphaseStat[Ix][Iy][Iz] == 1) {
							//dRsidefdxl = 0;
							Jac1Row[JRowIndex] = dRsidefdxl;
							Jac1Col[JRowIndex] = FracEq + k;
							JRowIndex++;
						}
						else if (fphaseStat[Ix][Iy][Iz] == (-1)) {
							//dRsidefdxg = 0;
							Jac1Row[JRowIndex] = dRsidefdxg;
							Jac1Col[JRowIndex] = FracEq + k;
							JRowIndex++;
						}
						else {
							//dRsidefdxl = 0;
							Jac1Row[JRowIndex] = dRsidefdxl;
							Jac1Col[JRowIndex] = FracEq + k;
							JRowIndex++;
							//dRsidefdxg = 0;
							Jac1Row[JRowIndex] = dRsidefdxg;
							Jac1Col[JRowIndex] = FracEq + Nc + k;
							JRowIndex++;
						}
						////////////////////////sadeq/////////////////////////
					}
					//MatSetValues(Petsc_B, 1, &RowNO, JRowIndex, Jac1Col, Jac1Row, INSERT_VALUES);

				}
				else {

					LSide = (Vb / Dt)*(porpor*watRo*WAT_M_RO*sat[Ix][Iy][Iz][0] - preProp[Ix][Iy][Iz][Nc]);
					RSide = Wtran[Ix + 1][Iy + 1][Iz + 1][0] * (P[Ix + 2][Iy + 1][Iz + 1][0] - P[Ix + 1][Iy + 1][Iz + 1][0]) - Wtran[Ix][Iy + 1][Iz + 1][0] * (P[Ix + 1][Iy + 1][Iz + 1][0] - P[Ix][Iy + 1][Iz + 1][0]);
					RSide += Wtran[Ix + 1][Iy + 1][Iz + 1][1] * (P[Ix + 1][Iy + 2][Iz + 1][0] - P[Ix + 1][Iy + 1][Iz + 1][0]) - Wtran[Ix + 1][Iy][Iz + 1][1] * (P[Ix + 1][Iy + 1][Iz + 1][0] - P[Ix + 1][Iy][Iz + 1][0]);
					RSide += Wtran[Ix + 1][Iy + 1][Iz + 1][2] * (P[Ix + 1][Iy + 1][Iz + 2][0] - P[Ix + 1][Iy + 1][Iz + 1][0]) - Wtran[Ix + 1][Iy + 1][Iz][2] * (P[Ix + 1][Iy + 1][Iz + 1][0] - P[Ix + 1][Iy + 1][Iz][0]);

					RSide += G_ACC * watRo*Wtran[Ix + 1][Iy + 1][Iz + 1][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - G_ACC * watRo*Wtran[Ix][Iy + 1][Iz + 1][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
					RSide += G_ACC * watRo*Wtran[Ix + 1][Iy + 1][Iz + 1][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]) - G_ACC * watRo*Wtran[Ix + 1][Iy][Iz + 1][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
					RSide += G_ACC * watRo*Wtran[Ix + 1][Iy + 1][Iz + 1][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]) - G_ACC * watRo*Wtran[Ix + 1][Iy + 1][Iz][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);

					/////////////////////////////Transfer Function


					RSide += ZERO_CONV * SI_C* watRo *WAT_M_RO * ShapeFactor_2(Ix, Iy, Iz) * f_m_relperm[0] / watMu * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) *((fP[Ix + 1][Iy + 1][Iz + 1][0] - P[Ix + 1][Iy + 1][Iz + 1][0]) + (blockFProps[Ix][Iy][Iz][BLOCK_PC][0] - fblockFProps[Ix][Iy][Iz][BLOCK_PC][0]));

					////////////////////////////////////////////
					RSide += Qw;


					dLsidedp = (Vb / Dt)*watRo*WAT_M_RO*sat[Ix][Iy][Iz][0] * dPordp;
					dLsidedSw = (Vb / Dt)*(porpor*watRo*WAT_M_RO);


					dRsidedp = 0;
					dRsidefdp = 0;

					// Transfer Function dRside dp fdp
					dRsidedp = ZERO_CONV * -SI_C * watRo *WAT_M_RO * ShapeFactor_2(Ix, Iy, Iz) * f_m_relperm[0] / watMu * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]);
					dRsidefdp = ZERO_CONV * SI_C * watRo *WAT_M_RO * ShapeFactor_2(Ix, Iy, Iz) * f_m_relperm[0] / watMu * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]);


					dRsidedp += Wtran[Ix + 1][Iy + 1][Iz + 1][0] + Wtran[Ix][Iy + 1][Iz + 1][0];
					dRsidedp += Wtran[Ix + 1][Iy + 1][Iz + 1][1] + Wtran[Ix + 1][Iy][Iz + 1][1];
					dRsidedp += Wtran[Ix + 1][Iy + 1][Iz + 1][2] + Wtran[Ix + 1][Iy + 1][Iz][2];


					//jac[BLNo+2*Nc][BLNo+(2*Nc)]=PCoeff*(dLsidedp+dRsidedp);
					Jac1Row[JRowIndex] = PCoeff * (dLsidedp + dRsidedp + PIw);
					Jac1Col[JRowIndex] = jacCol + (2 * Nc) - reCol;
					JRowIndex++;

					//jac[BLNo+2*Nc][BLNo+(2*Nc+1)]=dLsidedSw;

					dRsidedSw = 0;
					dRsidefdSw = 0;

					// Transfer function drside dsw
					dRsidedSw += ZERO_CONV * SI_C *WAT_M_RO* f_m_drelperm[1][0] * watRo * ShapeFactor_2(Ix, Iy, Iz) / watMu * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) *((fP[Ix + 1][Iy + 1][Iz + 1][0] - P[Ix + 1][Iy + 1][Iz + 1][0]) + (blockFProps[Ix][Iy][Iz][BLOCK_PC][0] - fblockFProps[Ix][Iy][Iz][BLOCK_PC][0]));
					dRsidefdSw += ZERO_CONV * SI_C *WAT_M_RO* f_m_drelperm[1][5] * watRo * ShapeFactor_2(Ix, Iy, Iz) / watMu * (gridDim[Ix] * gridDim[Nx + Iy] * gridDim[Nx + Ny + Iz]) *((fP[Ix + 1][Iy + 1][Iz + 1][0] - P[Ix + 1][Iy + 1][Iz + 1][0]) + (blockFProps[Ix][Iy][Iz][BLOCK_PC][0] - fblockFProps[Ix][Iy][Iz][BLOCK_PC][0]));


					if (Ix < (Nx - 1)) {
						if (phaseStat[Ix + 1][Iy][Iz]) reCol2 = Nc;
						else reCol2 = 0;
						mBLNo = preConRow[Iz*(Nx*Ny) + Iy * Nx + Ix + 1] - reCol2;
						Jac1Row[JRowIndex] = PCoeff * (-Wtran[Ix + 1][Iy + 1][Iz + 1][0]);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;

						dsw = dWtran[Ix + 1][Iy + 1][Iz + 1][0] * (P[Ix + 2][Iy + 1][Iz + 1][0] - P[Ix + 1][Iy + 1][Iz + 1][0]) + G_ACC * watRo*dWtran[Ix + 1][Iy + 1][Iz + 1][0] * (blockH[Ix + 2][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (transS[Ix + 1][Iy + 1][Iz + 1][2][0]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;
					}
					if (Ix > 0) {
						if (phaseStat[Ix - 1][Iy][Iz]) reCol2 = Nc;
						else reCol2 = 0;
						mBLNo = preConRow[Iz*(Nx*Ny) + Iy * Nx + Ix - 1] - reCol2;
						Jac1Row[JRowIndex] = PCoeff * (-Wtran[Ix][Iy + 1][Iz + 1][0]);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;

						dsw = -dWtran[Ix][Iy + 1][Iz + 1][0] * (P[Ix + 1][Iy + 1][Iz + 1][0] - P[Ix][Iy + 1][Iz + 1][0]) - G_ACC * watRo*dWtran[Ix][Iy + 1][Iz + 1][0] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix][Iy + 1][Iz + 1]);
						if (!transS[Ix][Iy + 1][Iz + 1][2][0]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;
					}


					if (Iy < (Ny - 1)) {
						if (phaseStat[Ix][Iy + 1][Iz]) reCol2 = Nc;
						else reCol2 = 0;
						mBLNo = preConRow[Iz*(Nx*Ny) + (Iy + 1)*Nx + Ix] - reCol2;
						Jac1Row[JRowIndex] = PCoeff * (-Wtran[Ix + 1][Iy + 1][Iz + 1][1]);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;

						dsw = dWtran[Ix + 1][Iy + 1][Iz + 1][1] * (P[Ix + 1][Iy + 2][Iz + 1][0] - P[Ix + 1][Iy + 1][Iz + 1][0]) + G_ACC * watRo*dWtran[Ix + 1][Iy + 1][Iz + 1][1] * (blockH[Ix + 1][Iy + 2][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (transS[Ix + 1][Iy + 1][Iz + 1][2][1]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;
					}
					if (Iy > 0) {
						if (phaseStat[Ix][Iy - 1][Iz]) reCol2 = Nc;
						else reCol2 = 0;
						mBLNo = preConRow[Iz*(Nx*Ny) + (Iy - 1)*Nx + Ix] - reCol2;
						Jac1Row[JRowIndex] = PCoeff * (-Wtran[Ix + 1][Iy][Iz + 1][1]);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;

						dsw = -dWtran[Ix + 1][Iy][Iz + 1][1] * (P[Ix + 1][Iy + 1][Iz + 1][0] - P[Ix + 1][Iy][Iz + 1][0]) - G_ACC * watRo*dWtran[Ix + 1][Iy][Iz + 1][1] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy][Iz + 1]);
						if (!transS[Ix + 1][Iy][Iz + 1][2][1]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;
					}


					if (Iz < (Nz - 1)) {
						if (phaseStat[Ix][Iy][Iz + 1]) reCol2 = Nc;
						else reCol2 = 0;
						mBLNo = preConRow[(Iz + 1)*(Nx*Ny) + Iy * Nx + Ix] - reCol2;
						Jac1Row[JRowIndex] = PCoeff * (-Wtran[Ix + 1][Iy + 1][Iz + 1][2]);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;

						dsw = dWtran[Ix + 1][Iy + 1][Iz + 1][2] * (P[Ix + 1][Iy + 1][Iz + 2][0] - P[Ix + 1][Iy + 1][Iz + 1][0]) + G_ACC * watRo*dWtran[Ix + 1][Iy + 1][Iz + 1][2] * (blockH[Ix + 1][Iy + 1][Iz + 2] - blockH[Ix + 1][Iy + 1][Iz + 1]);
						if (transS[Ix + 1][Iy + 1][Iz + 1][2][2]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;
					}
					if (Iz > 0) {
						if (phaseStat[Ix][Iy][Iz - 1]) reCol2 = Nc;
						else reCol2 = 0;
						mBLNo = preConRow[(Iz - 1)*(Nx*Ny) + Iy * Nx + Ix] - reCol2;
						Jac1Row[JRowIndex] = PCoeff * (-Wtran[Ix + 1][Iy + 1][Iz][2]);
						Jac1Col[JRowIndex] = mBLNo + (2 * Nc);
						JRowIndex++;

						dsw = -dWtran[Ix + 1][Iy + 1][Iz][2] * (P[Ix + 1][Iy + 1][Iz + 1][0] - P[Ix + 1][Iy + 1][Iz][0]) - G_ACC * watRo*dWtran[Ix + 1][Iy + 1][Iz][2] * (blockH[Ix + 1][Iy + 1][Iz + 1] - blockH[Ix + 1][Iy + 1][Iz]);
						if (!transS[Ix + 1][Iy + 1][Iz][2][2]) {
							Jac1Row[JRowIndex] = dsw;
						}
						else {
							dRsidedSw += dsw;
							Jac1Row[JRowIndex] = 0;
						}
						Jac1Col[JRowIndex] = mBLNo + 2 * Nc + 1;
						JRowIndex++;
					}

					Jac1Row[JRowIndex] = dLsidedSw - dRsidedSw;
					Jac1Col[JRowIndex] = jacCol + (2 * Nc + 1) - reCol;
					JRowIndex++;

					/////////////////////////////////////////////////Sadeq///////////////////////////////////
					//dRsidefdp = 0;
					Jac1Row[JRowIndex] = PCoeff * dRsidefdp;
					Jac1Col[JRowIndex] = FracEq + 2 * Nc - reColF1;
					JRowIndex++;
					//dRsidefdSw = 0;
					Jac1Row[JRowIndex] = dRsidefdSw;
					Jac1Col[JRowIndex] = FracEq + 2 * Nc + 1 - reColF1;
					JRowIndex++;
					////////////////////////sadeq/////////////////////////



				}

			}

			else if (BENo < (Nc + 2)) {
				Sxl = 0;

				for (i = 0; i < Nc; i++) {
					Sxl += comp[Ix][Iy][Iz][i][0];

					Jac1Row[JRowIndex] = 1;
					Jac1Col[JRowIndex] = jacCol + i;
					JRowIndex++;
				}
			}
			else if (BENo < (Nc + 3)) {
				Jac1Row[JRowIndex] = 1;
				Jac1Col[JRowIndex] = jacCol + 2 * Nc + 1 - reCol;
				JRowIndex++;

				Jac1Row[JRowIndex] = 1;
				Jac1Col[JRowIndex] = jacCol + 2 * Nc + 2 - reCol;
				JRowIndex++;
			}
			else {
				std::cout << Ix << '\t' << Iy << '\t' << Iz << '\t' << BENo << "\tMatrix phase stat: " << phaseStat[Ix][Iy][Iz] << std::endl;

				TerM("Global Index Error!");
			}

			break;
		}
	}

	/*AllZero = true;
	for (i = 0; i < MatrixSize; i++) {
		if (Jac1Row[i]) {
			AllZero = false;
			break;
		}
	}*/

	//if (AllZero) {
	if (((IsFracture) && (fporosity[Ix][Iy][Iz]<1e-10)) || ((!(IsFracture)) && (porosity[Ix][Iy][Iz]<1e-10))) {
		Jac1Row[0] = 1;
		Jac1Col[0] = RowNO;
		JRowIndex = 1;
	}


#ifdef USE_MKL_SOLVER	
	for (i = 0; i < MatrixSize; i++) MKLCoefMatrix[i*MatrixSize + RowNO] = 0;
	for (i = 0; i < JRowIndex; i++) {
		//MKLCoefMatrix[RowNO*MatrixSize + Jac1Col[i]] += Jac1Row[i];
		MKLCoefMatrix[MatrixSize*Jac1Col[i] + RowNO] += Jac1Row[i];
	}	
#else
	ierr = MatSetValues(Petsc_B, 1, &RowNO, JRowIndex, Jac1Col, Jac1Row, ADD_VALUES);
	CHKERRQ(ierr);

	ierr = VecRestoreArrayRead(Petsc_x, (const PetscScalar **)(&LocalX));
	CHKERRQ(ierr);
#endif

	return 0;
}
